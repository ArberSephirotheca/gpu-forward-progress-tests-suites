#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, exp(0.0), 0.0, 0.0)), float(mat3x2(float(vec4(injectionSwitch.y, exp(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), true)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), false || (true && (false)))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) | _GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (~ (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | uvec3(0u, 0u, 0u)))) + (_GLF_IDENTITY((gl_WorkGroupSize), uvec3(1u, 1u, 1u) * ((gl_WorkGroupSize)))))), gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 0u), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), 1u))))), (false ? _GLF_FUZZED((subgroup_size % uvec3(6549u, 148248u, 158466u))) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u), min((gl_WorkGroupSize) ^ _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 1u * (5u))) << 0u)), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))), ((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))) - uvec4(0u, 0u, 0u, 0u)), (~ _GLF_IDENTITY((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)))), 0u), 1u))), ((~ (uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), (true ? (gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u) : _GLF_FUZZED(uvec3(105539u, 199u, 149514u)))))), 1u)))) - uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u)))), clamp(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u), min((gl_WorkGroupSize) ^ _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), min(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), clamp(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), max(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ _GLF_IDENTITY((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), 0u), 1u))), ((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))) - uvec4(0u, 0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u), min(_GLF_IDENTITY((gl_WorkGroupSize) ^ _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))), ((gl_WorkGroupSize) ^ _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))), (max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u)))) ^ 0u))), uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) | (uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - (0u ^ 0u))) ^ 0u), uint(5u))), min(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - (0u ^ 0u))) ^ 0u), uint(5u))), min((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - (0u ^ 0u))) ^ 0u), uint(5u))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - (0u ^ 0u))) ^ 0u), uint(5u))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - (0u ^ 0u))) ^ 0u), uint(5u))))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 0u, 0u) | (uvec3(0u, 0u, 0u)))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(uvec4(uvec3(1u, 1u, 1u), 1u)))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ _GLF_IDENTITY((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))), ((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)) | 0u), _GLF_IDENTITY(1u, uint(uint(1u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u)) | 0u), _GLF_IDENTITY(1u, uint(uint(1u))))) << uvec2(0u, 0u)))), 0u), 1u)))) - uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u), min(_GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize))) ^ _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) | ((0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) | (uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ _GLF_IDENTITY((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))), ((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))) - uvec4(0u, 0u, 0u, 0u)))), clamp(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), (true ? ~ (_GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(subgroup_size)))))) >> 0u), 0u, 0u), min((gl_WorkGroupSize) ^ _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (true ? uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(uvec4(122907u, 182826u, 108280u, 41169u)))), _GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ _GLF_IDENTITY((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), clamp(uvec3(0u, 1u, 1u), uvec3(0u, 1u, 1u), uvec3(0u, 1u, 1u)))), (true ? uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), clamp(uvec3(0u, 1u, 1u), uvec3(0u, 1u, 1u), uvec3(0u, 1u, 1u)))) : _GLF_FUZZED(num_workgroup))))), 1u))), (_GLF_IDENTITY((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))), ((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))) ^ (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)))) - uvec4(0u, 0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u), min((gl_WorkGroupSize) ^ _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ _GLF_IDENTITY((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))), ((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u), min((gl_WorkGroupSize) ^ _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (0u))))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))))))) | (uvec4(0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), max(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ _GLF_IDENTITY((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))), ((~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))) - uvec4(0u, 0u, 0u, 0u)))))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u), _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u)) << uvec3(0u, 0u, 0u), ((uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u)) << uvec3(0u, 0u, 0u)) | ((uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u)) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))), 1u), ~ (~ (uvec4(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) | (0u))), 0u), 1u))))))))))), max(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), 1u))))), (false ? _GLF_FUZZED((subgroup_size % uvec3(6549u, 148248u, 158466u))) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u)) >> uvec3(0u, 0u, 0u)), 1u)), (_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (0u) / 1u)) >> 0u), 0u), 1u)), (~ _GLF_IDENTITY((uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), ((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u)) | (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), max(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), ((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u)) - uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u))))), 1u)), ((uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), ((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u)) | (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), max((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), (gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u))))), 1u))) >> uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u))) | (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))) | (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))))), ((_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | 0u)) << 0u) : _GLF_FUZZED(num_workgroup))) >> 0u), 0u), 1u)), clamp((uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | 0u)) << 0u) : _GLF_FUZZED(num_workgroup))) >> 0u), 0u), 1u)), (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | 0u)) << 0u) : _GLF_FUZZED(num_workgroup))) >> 0u), 0u), 1u)), (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) | 0u)) << 0u) : _GLF_FUZZED(num_workgroup))) >> 0u), 0u), 1u)))), (_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))) ^ uvec4(0u, 0u, 0u, 0u))) | (~ (uvec4((gl_WorkGroupSize) ^ _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), min(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), clamp(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u))))), 1u))))) | (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u)))))) | ((_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))), clamp(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))), uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))), uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))))))), (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))) ^ uvec4(0u, 0u, 0u, 0u))) | (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))), clamp(_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))) ^ uvec4(0u, 0u, 0u, 0u))) | (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))), _GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))) ^ uvec4(0u, 0u, 0u, 0u))) | (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))) ^ uvec4(0u, 0u, 0u, 0u))) | (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))), (_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (_GLF_IDENTITY(~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)), (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))) ^ uvec4(0u, 0u, 0u, 0u))) | (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))) ^ uvec4(0u, 0u, 0u, 0u))))) | (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(0u), uvec4(0u))))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u), _GLF_IDENTITY(min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(uvec3(min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))), 1u), ~ (~ (uvec4((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))), min(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 1u * (gl_WorkGroupSize[2]))))) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), max(~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), ~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))))), 0u), 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 1u * (gl_WorkGroupSize[2]))))) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), max(~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), ~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))))), 0u), 1u)))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 1u * (gl_WorkGroupSize[2]))))) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), max(~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), ~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))))), 0u), 1u))))) >> uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 1u * (gl_WorkGroupSize[2]))))) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), max(~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), ~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))))), 0u), 1u))))))), 0u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u), max(uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u), uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), 1u), _GLF_IDENTITY(~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), 1u))), ~ (~ (_GLF_IDENTITY(~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), 1u))), (~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), 1u)))) ^ uvec4(0u, 0u, 0u, 0u))))))), (false ? _GLF_FUZZED((subgroup_size % _GLF_IDENTITY(uvec3(6549u, 148248u, 158466u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(6549u, 148248u, 158466u), min(uvec3(6549u, 148248u, 158466u), uvec3(6549u, 148248u, 158466u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(6549u, 148248u, 158466u), min(uvec3(6549u, 148248u, 158466u), uvec3(6549u, 148248u, 158466u))), uvec3(uvec3(_GLF_IDENTITY(uvec3(6549u, 148248u, 158466u), min(uvec3(6549u, 148248u, 158466u), uvec3(6549u, 148248u, 158466u))))))) >> uvec3(0u, 0u, 0u)))))) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))))), uvec3(0u, 0u, 0u) | (uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u)))))))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(121399u) : 0u))), (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u))), 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))))), uvec3(0u, 0u, 0u) | (uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u)))))))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(121399u) : 0u))), (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u))), 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))))), uvec3(0u, 0u, 0u) | (uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u)))))))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(121399u) : 0u))), (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u))), 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))))))) ^ uvec3(0u, 0u, 0u))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))))), uvec3(0u, 0u, 0u) | (uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u)))))))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(121399u) : 0u))), (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u))), 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))))), uvec3(0u, 0u, 0u) | (uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u)))))))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(121399u) : 0u))), (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u))), 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))))))) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))))), uvec3(0u, 0u, 0u) | (uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u)))))))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(121399u) : 0u))), (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u))), 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))))), uvec3(0u, 0u, 0u) | (uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u)))))))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(121399u) : 0u))), (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u))), 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))))))) ^ uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))))), uvec3(0u, 0u, 0u) | (uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u)))))))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(121399u) : 0u))), (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u))), 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u)))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u))))), uvec3(0u, 0u, 0u) | (uvec3(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(3u), uint(3u)))))))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(121399u) : 0u))), (_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) | ((gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u))), 0u, 0u))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> 0u), 0u), 1u))))))))) ^ uvec3(0u, 0u, 0u)))))))))), (true ? _GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), 1u))))), (false ? _GLF_FUZZED((subgroup_size % uvec3(6549u, 148248u, 158466u))) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, _GLF_IDENTITY(0u, (0u) >> 0u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, _GLF_IDENTITY(0u, (0u) >> 0u)), (uvec3(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (0u) - 0u)))) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) >> _GLF_IDENTITY(0u, max(0u, 0u))), 0u), 1u))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(4u), uvec4(4u))) >> _GLF_IDENTITY(uvec4(4u), uvec4(4u))) * (uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u))), ~ (~ (uvec4((gl_WorkGroupSize) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, min((0u) / 1u, (0u) / 1u)))) >> 0u), 0u), 1u)))), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4((_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(32759u, (_GLF_IDENTITY(32759u, (false ? _GLF_FUZZED(num_workgroup) : 32759u))) - 0u), 93383u, 42820u)) : gl_WorkGroupSize))) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, min((0u) / 1u, (0u) / 1u)))) >> 0u), 0u), 1u)))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), min((gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), 1u), ~ (~ (uvec4(_GLF_IDENTITY((gl_WorkGroupSize), uvec3(1u, 1u, 1u) * ((gl_WorkGroupSize))) ^ uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, min((0u) / 1u, (0u) / 1u)))) >> 0u), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, min((0u) / 1u, (0u) / 1u)))) >> 0u)))), 0u), 1u))))))))))))) : _GLF_FUZZED(uvec3(109643u, 112451u, 139132u))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) / _GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(float(-2314))), bool(false))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((vec2(-5843.9362, 49.96).s * 1386.0213)), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-209.560)), bvec2(true, false))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false), false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0), (true ? vec4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0) : _GLF_FUZZED(vec4(85.53, -81.55, 820.743, 1.5))))), min(vec2(_GLF_IDENTITY(vec4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0), (true ? vec4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0) : _GLF_FUZZED(vec4(85.53, -81.55, 820.743, 1.5))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), 0.0, 1.0), (true ? vec4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0) : _GLF_FUZZED(vec4(85.53, -81.55, 820.743, 1.5))))), (vec2(_GLF_IDENTITY(vec4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0), (true ? vec4(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0) : _GLF_FUZZED(vec4(85.53, -81.55, 820.743, 1.5)))))) * mat2(1.0)))))).y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false, true))), bool(bvec2(_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false, true))), ((bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, false, true)))) || false), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(877.892)), vec2(_GLF_FUZZED(-5.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.8, 6.5)))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.8, 6.5)))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.8, 6.5)))).x > injectionSwitch.y)))) || false)) || false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))), (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))) || false)), bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.1), _GLF_FUZZED(-6.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(floor(vec2(-87.34, -75.26))) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(1.0))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-968.984)))))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_IDENTITY(false, bool(bool(false))) || ((_GLF_DEAD(false)))), _GLF_IDENTITY((! (_GLF_DEAD(false))) && true, _GLF_IDENTITY(bool(bvec2((! (_GLF_DEAD(false))) && true, false)), false || (bool(bvec2((! (_GLF_DEAD(false))) && true, false))))))) && true))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(2), uint(2))), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), true && (_GLF_DEAD(false)))) || false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec4(((false)), false, false, true)), ! (! (bool(bvec4(((false)), false, false, true))))))), ! (! (! (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec4(((false)), false, false, true)), ! (! (bool(bvec4(((false)), false, false, true))))))))))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(4017.0485), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-677.929)), bvec2(true, false))))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), (bool(bvec4(_GLF_DEAD(false), true, true, true))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), ! (! (bool(bvec3((false), false, true))))))) || false))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), ! (! (bool(bvec3((false), false, true))))))) || false))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), bool(bvec2(! ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), ! (! (bool(bvec3((false), false, true))))))) || false))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), true))))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), ! (! (bool(bvec3((false), false, true))))))) || false))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), ! (! (bool(bvec3((false), false, true))))))) || false))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), bool(bvec2(! ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), ! (! (bool(bvec3((false), false, true))))))) || false))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), true))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), bool(bool(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[1])).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), min((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) / 1.0) / 1.0)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-5.6, -3.9, -9.0, -77.36, -21.05, 709.087, 2.2, -7.3) * vec4(-9.8, 1942.2914, -443.545, 7.7))) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)))) > injectionSwitch.y))) || false)))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
