#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false, true, false)))))
      barrier();
    }
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), max(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) << 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (_GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) / _GLF_IDENTITY(1u, (1u) | (0u & 39012u)))) | (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))))) * 1u);
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) * _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(1u, 1u * (1u)) * (workgroup_id))) << 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, false || (true)))), (! ((_GLF_IDENTITY(true, false || (true))))) && true)))) ? workgroup_base : _GLF_FUZZED(subgroup_id)))) << 0u) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 1u, 1u, 1u)), min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id)), min(subgroup_local_id, subgroup_local_id)), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id)), min(subgroup_local_id, subgroup_local_id)), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id)), min(subgroup_local_id, subgroup_local_id)), 1u, 1u, 1u)) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id)), min(subgroup_local_id, subgroup_local_id)), 1u, 1u, 1u)))) - (_GLF_IDENTITY((uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u) ^ uvec4(1u, 1u, 1u, 1u)), min((uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u) ^ uvec4(1u, 1u, 1u, 1u)), (uvec4(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u) ^ uvec4(1u, 1u, 1u, 1u)))) << _GLF_IDENTITY(uvec4(8u), uvec4(8u))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))), clamp(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))))))))) - 0u) + 1) % subgroup_size, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ (0u | 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) - 0), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) - 0)) | 0u), 0u | (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) - 0)))) | (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) - 0))), (subgroup_local_id + 1) | (subgroup_local_id + 1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), clamp(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) / 1u))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u)), 0u, 0u, 1u))))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))) - 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, 0u)))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, 0u)))))))), subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(5), int(5))) | (1))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4(min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), subgroup_local_id + 1), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), (uint(uvec4(min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), subgroup_local_id + 1), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u))) | (_GLF_IDENTITY(uint(uvec4(min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), subgroup_local_id + 1), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u)), ~ (~ (uint(uvec4(min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), subgroup_local_id + 1), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) | (subgroup_local_id + 1))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), 0u ^ (0u | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))) ^ 0u)))))), (~ ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), (subgroup_local_id + 1) | (subgroup_local_id + 1))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) | 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec4(subgroup_local_id + 1, 0u, 1u, 0u)))))) + 0u)))) | (subgroup_local_id + 1)), subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (subgroup_local_id + 1)), subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), min(_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))), _GLF_IDENTITY(~ (subgroup_local_id), max(~ (subgroup_local_id), ~ (subgroup_local_id))))), 0u | (_GLF_IDENTITY(~ (subgroup_local_id), max(~ (subgroup_local_id), ~ (subgroup_local_id))))))) + _GLF_IDENTITY(1, int(int(1))), (subgroup_local_id + 1) | (subgroup_local_id + 1))))))))))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) + 0u) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_size)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), max(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), _GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (~ (1)), ~ (~ (1)))), ~ (~ (1))))), subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (true ? (~ (1)) : _GLF_FUZZED(findMSB(workgroup_size)))))))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) / 1u)) | 0u)), ((subgroup_local_id + 1) % subgroup_size) + 0u))))));
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-770.941) : injectionSwitch.x))) + determinant(mat2(0.0, 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-770.941) : injectionSwitch.x))) + determinant(mat2(0.0, 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), false, true))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))))))), false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) / vec2(1.0, 1.0))).x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)), mix(vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[0], clamp((mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[0], (mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[0], (mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[0])), (mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[1]), vec2(_GLF_FUZZED(55.96), _GLF_FUZZED(67.61)), bvec2(false, false)))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(528.170) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))) - tan(vec2(0.0, 0.0)))).y), bool(true)))))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)), mix(vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[0], clamp((mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[0], (mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[0], (mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[0])), (mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[1]), vec2(_GLF_FUZZED(55.96), _GLF_FUZZED(67.61)), bvec2(false, false)))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(528.170) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))) - tan(vec2(0.0, 0.0)))).y), bool(true)))))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)), mix(vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[0], clamp((mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[0], (mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[0], (mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[0])), (mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))[1]), vec2(_GLF_FUZZED(55.96), _GLF_FUZZED(67.61)), bvec2(false, false)))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-933.914), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(528.170) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))).y, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(-933.914), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), bvec2(true, false))) - tan(vec2(0.0, 0.0)))).y), bool(true)))))))))))))) && true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))).x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_DEAD(false)), false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(bool(_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (! ((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(bool(_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(bool(_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))) || false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(bool(_GLF_DEAD(false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(bool(_GLF_DEAD(false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.12)), float(injectionSwitch.y), bool(true))))), false, true))), _GLF_IDENTITY(false || (! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false || (! (_GLF_DEAD(false))), bool(bvec4(false || (! (_GLF_DEAD(false))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(false || (! (_GLF_DEAD(false))), bool(bvec4(false || (! (_GLF_DEAD(false))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (bool(bool(bool(bvec3(_GLF_IDENTITY(false || (! (_GLF_DEAD(false))), bool(bvec4(false || (! (_GLF_DEAD(false))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false), (bool(bool(bool(bvec3(_GLF_IDENTITY(false || (! (_GLF_DEAD(false))), bool(bvec4(false || (! (_GLF_DEAD(false))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true)))), true, false, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)), true, false, false)))) || false) || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) / (1 & 1))))), ((_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) / (1 & 1)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) / (1 & 1))))), max((_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) / (1 & 1))))), (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) / (1 & 1))))))))) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | 0), _GLF_IDENTITY(64, (64) | 0), 64)), 64, 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * 1), clamp(64, 64, 64))) << 0), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, tan(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))).y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))), false)), bool(bool(bool(bvec2(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))), false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) ^ _GLF_IDENTITY(0, 0 | (0))), 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(ivec4(56041, -49877, -72552, 4868)[2]) : 4)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
}
