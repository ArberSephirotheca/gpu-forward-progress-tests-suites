#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), bool(bvec3(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), false, false)))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), clamp(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(4609.1850)), bool(false))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), (_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5986.7714))), max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), float(mat4x3(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), float(mat4x3(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), float(mat4x3(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(refract((uvec2(179858u, 26142u) , -377.427), 7.4, 4677.0005)) : 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), float(mat3x2(_GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), float(mat4x3(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0, 0.0)), (float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), float(mat4x3(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), float(mat3x2(_GLF_IDENTITY(max(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, 1.0)), float(mat4x3(max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0))), 1.0, 0.0))) / _GLF_IDENTITY(1.0, (1.0) / 1.0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), float(mat4x3(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), float(mat4x3(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(refract((uvec2(179858u, 26142u) , -377.427), 7.4, 4677.0005)) : 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), float(mat3x2(_GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), float(mat4x3(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0, 0.0)), (float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), float(mat4x3(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), float(mat3x2(_GLF_IDENTITY(max(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, 1.0)), float(mat4x3(max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0))), 1.0, 0.0))) / _GLF_IDENTITY(1.0, (1.0) / 1.0))))) - 0.0) + 0.0)))))), min(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.7), _GLF_FUZZED(9.7)), bvec2(false, false))), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), float(mat4x3(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), float(mat4x3(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0)))))), vec4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), float(mat4x3(max(clamp(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0), clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0))) * 1.0, clamp((_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0))) * 1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0))) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0))) * 1.0, ((_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0))) * 1.0) / 1.0))))))))))))))) / vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, tan(0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, 1.0, 0.0))), 0.0))), (_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, tan(0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, abs(0.0)), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, 1.0, 0.0))), 0.0)))) - 0.0), injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)))), vec2(vec4(injectionSwitch, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) ? _GLF_FUZZED(vec2(-1.7, -1.1)) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-0.3)), vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)), 1.0, exp(0.0), exp(0.0), 1.0, 1.0, 1.0)))))), ((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(vec2(-1.7, -1.1)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.3)), vec2(_GLF_FUZZED(8.4), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))), false, true)))))))) - vec2(0.0, 0.0)), 1.0, exp(0.0), exp(0.0), 1.0, 1.0, 1.0))))))) - vec2(0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(59.68))), 0.0)), 0.0)), sqrt(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(59.68))), 0.0)), 0.0))), max((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(59.68))), 0.0)), 0.0))), (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(59.68))), 0.0)), 0.0))))))))), min(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9623.2810, -9751.2625), (true ? vec2(-9623.2810, -9751.2625) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - log(vec2(1.0, 1.0))), 1.0, 1.0)))), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0))), (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))))), 1.0)), (vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))))), 1.0))) + vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(5026.5647, min(5026.5647, _GLF_IDENTITY(5026.5647, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 5026.5647 : _GLF_FUZZED(-837.716)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(round(-18.66)) : _GLF_IDENTITY(1.0, (1.0) * 1.0))), (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 1.0)) : _GLF_FUZZED(5026.5647))))), 1.0)), max(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(5026.5647, min(5026.5647, _GLF_IDENTITY(5026.5647, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 5026.5647 : _GLF_FUZZED(-837.716)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(round(-18.66)) : _GLF_IDENTITY(1.0, (1.0) * 1.0))), (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 1.0)) : _GLF_FUZZED(5026.5647))))), 1.0)), vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(5026.5647, min(5026.5647, _GLF_IDENTITY(5026.5647, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 5026.5647 : _GLF_FUZZED(-837.716)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(round(-18.66)) : _GLF_IDENTITY(1.0, (1.0) * 1.0))), (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 1.0)) : _GLF_FUZZED(5026.5647))))), 1.0)))), (vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(5026.5647, (false ? _GLF_FUZZED(88.07) : _GLF_IDENTITY(5026.5647, clamp(5026.5647, 5026.5647, 5026.5647))))), (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(5026.5647, (false ? _GLF_FUZZED(88.07) : _GLF_IDENTITY(5026.5647, clamp(5026.5647, 5026.5647, 5026.5647)))))) + _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), float(mat4x3(min(1.0, 1.0), sqrt(0.0), 0.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 1.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(5026.5647, (_GLF_IDENTITY(5026.5647, (true ? _GLF_IDENTITY(5026.5647, max(5026.5647, 5026.5647)) : _GLF_FUZZED(78.25)))) * 1.0)))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))))), 1.0))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))))), 1.0)), (vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))))), 1.0))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), min(1.0, 1.0), min(1.0, 1.0)))) : _GLF_FUZZED(5026.5647))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647)), mix(float(_GLF_FUZZED(113.047)), float((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))))), 1.0)), (vec2(vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)) : _GLF_FUZZED(5026.5647))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0), (true ? mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-24.46, 621.062, 1.4, 5.6, -2296.1687, 2.3)))))))), (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(5026.5647, mix(float(_GLF_FUZZED(1.3)), float(5026.5647), bool(true)))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))))), 1.0))) + vec2(0.0, 0.0)))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mix(vec2((vec2(vec4(injectionSwitch, 1.0, 1.0)))[0], _GLF_FUZZED(0.6)), vec2(_GLF_FUZZED(float(false)), _GLF_IDENTITY((vec2(vec4(injectionSwitch, 1.0, 1.0)))[1], mix(float(_GLF_FUZZED(7438.0564)), float((vec2(vec4(injectionSwitch, 1.0, 1.0)))[1]), bool(true)))), bvec2(false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(608.172)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), min(vec2(vec4(injectionSwitch, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), 1.0)), vec2(vec4(injectionSwitch, 1.0, 1.0)))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(1.0, float(mat2x4(1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(2106.4295), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(2106.4295), float(mat2x4(true ? (_GLF_IDENTITY(1.0, min(1.0, 1.0))) : _GLF_FUZZED(2106.4295), 0.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0)))) / 1.0))) + 0.0)), _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(2106.4295))) + _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, (0.0) - 0.0))))))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(2106.4295))) + 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(2106.4295))) + 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))))))), min(vec2(vec4(injectionSwitch, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(5026.5647))), 1.0)), vec2(vec4(injectionSwitch, 1.0, 1.0))))) * sqrt(vec2(1.0, 1.0)))) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5120.2202) : 1.0)), 1.0)), 1.0, 0.0, 1.0, 0.0)))))).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))) || false, ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) || false), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) || false), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) || false), false)))))) || false))) || false) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), true && ((! _GLF_IDENTITY((false), false || ((false)))))))))) && true)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), mix(float(_GLF_FUZZED(1010.2024)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0)))), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
                {
                }
               else
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))))))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(false, true, true))), false, true), true))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), true, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(false, true, true))), false, true), true))), true))), false))))))))))
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))));
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))))));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-9704.6716))), injectionSwitch[1])).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, log(1.0)), vec3(1.0, 0.0, sin(0.0))), dot(vec3(1.0, 0.0, log(1.0)), vec3(1.0, 0.0, sin(0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, log(1.0)), vec3(1.0, 0.0, sin(0.0))), dot(vec3(1.0, 0.0, log(1.0)), vec3(1.0, 0.0, sin(0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))[0], (vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, log(1.0)), vec3(1.0, 0.0, sin(0.0))), dot(vec3(1.0, 0.0, log(1.0)), vec3(1.0, 0.0, sin(0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-5.9), _GLF_FUZZED(-5712.5306)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), injectionSwitch)))).x > injectionSwitch.y)))))) && true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, true))) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, abs(0.0), 1.0, log(1.0), 0.0, 0.0, cos(0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), tan(0.0))), max(float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, abs(0.0), 1.0, log(1.0), 0.0, 0.0, cos(0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), tan(0.0))), _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, abs(0.0), 1.0, log(1.0), 0.0, 0.0, cos(0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), tan(0.0))), clamp(float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, abs(0.0), 1.0, log(1.0), 0.0, 0.0, cos(0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), tan(0.0))), float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, abs(0.0), 1.0, log(1.0), 0.0, 0.0, cos(0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), tan(0.0))), float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, abs(0.0), 1.0, log(1.0), 0.0, 0.0, cos(0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), tan(0.0)))))))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY((1 | 0), 0 ^ ((1 | 0))), ((1 | 0)) | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(int(0))))) : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1)), clamp(int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1)), int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1)), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1)), (int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1))) - 0)))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0)), (~ (~ ((_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(183)), 1 * ((true ? 0 : _GLF_FUZZED(183)))))) ^ 0))) >> 0)))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(183), ~ (~ (_GLF_FUZZED(183))))))) ^ 0, _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (true ? _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 | (0)), 0)) : _GLF_IDENTITY(_GLF_FUZZED(183), _GLF_IDENTITY(int(ivec2(_GLF_FUZZED(183), int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec2(_GLF_FUZZED(183), int(_GLF_ONE(1.0, injectionSwitch.y))))) | (int(ivec2(_GLF_FUZZED(183), int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) ^ 0, 0, 0, 1)), clamp(int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1)), int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1)), int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(0, (_GLF_IDENTITY(true, (true) && true) ? 0 : _GLF_FUZZED(183)))) ^ 0)), (~ (~ ((_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(183)), 1 * ((true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(183), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (_GLF_FUZZED(183)))))))) ^ 0))) >> 0))))), true && (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(183), ~ (~ (_GLF_FUZZED(183))))))) ^ 0, _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (true ? _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 | (0)), 0)) : _GLF_IDENTITY(_GLF_FUZZED(183), _GLF_IDENTITY(int(ivec2(_GLF_FUZZED(183), int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec2(_GLF_FUZZED(183), int(_GLF_ONE(1.0, injectionSwitch.y))))) | (int(ivec2(_GLF_FUZZED(183), int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) ^ 0, 0, 0, 1)), clamp(int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1)), int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1)), int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(0, (_GLF_IDENTITY(true, (true) && true) ? 0 : _GLF_FUZZED(183)))) ^ 0)), (~ (~ ((_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(183)), 1 * ((true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(183), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (_GLF_FUZZED(183)))))))) ^ 0))) >> 0))))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(183), ~ (~ (_GLF_FUZZED(183))))))) ^ 0, _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (true ? _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 | (0)), 0)) : _GLF_IDENTITY(_GLF_FUZZED(183), _GLF_IDENTITY(int(ivec2(_GLF_FUZZED(183), int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec2(_GLF_FUZZED(183), int(_GLF_ONE(1.0, injectionSwitch.y))))) | (int(ivec2(_GLF_FUZZED(183), int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) ^ 0, 0, 0, 1)), clamp(int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1)), int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1)), int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(0, (_GLF_IDENTITY(true, (true) && true) ? 0 : _GLF_FUZZED(183)))) ^ 0)), (~ (~ ((_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(183)), 1 * ((true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(183), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (_GLF_FUZZED(183)))))))) ^ 0))) >> 0))))))), (bool(bool((_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(183), ~ (~ (_GLF_FUZZED(183))))))) ^ 0, _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (true ? _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 | (0)), 0)) : _GLF_IDENTITY(_GLF_FUZZED(183), _GLF_IDENTITY(int(ivec2(_GLF_FUZZED(183), int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec2(_GLF_FUZZED(183), int(_GLF_ONE(1.0, injectionSwitch.y))))) | (int(ivec2(_GLF_FUZZED(183), int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) ^ 0, 0, 0, 1)), clamp(int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1)), int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1)), int(ivec4((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(183)))) ^ 0, 0, 0, 1))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(0, (_GLF_IDENTITY(true, (true) && true) ? 0 : _GLF_FUZZED(183)))) ^ 0)), (~ (~ ((_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(183)), 1 * ((true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(183), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (_GLF_FUZZED(183)))))))) ^ 0))) >> 0)))))))) || false)))))); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_injected_loop_counter != 1))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))) / 1u), workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), workgroup_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), ((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), ((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id)))) / 1u), 0u | (_GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), ((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id)))) / 1u)))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), ((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id)))) / 1u))), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))))))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u) : _GLF_FUZZED(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))), (false ? _GLF_FUZZED(num_workgroup) : (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), ~ (~ (clamp(subgroup_size, subgroup_size, subgroup_size))))), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)) / 1u) >> 0u) : _GLF_FUZZED(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))))), ((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id)))) / 1u), (true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (subgroup_size), (subgroup_size))) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) >> (1u ^ 1u))))))))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) / (1u | 1u)), min(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id)))) / 1u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(_GLF_IDENTITY(max(subgroup_size, workgroup_id), uint(uvec4(max(subgroup_size, workgroup_id), 1u, 0u, 0u))))), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))))))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec2((subgroup_size), 0u)), clamp(uint(uvec2((subgroup_size), 0u)), uint(uvec2((subgroup_size), 0u)), uint(uvec2((subgroup_size), 0u))))) >> 0u) : _GLF_FUZZED(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) >> 0u) : _GLF_FUZZED(_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)), 0u + (max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))))))), max((false ? _GLF_FUZZED(num_workgroup) : (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) >> 0u) : _GLF_FUZZED(_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)), 0u + (max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))))))), (false ? _GLF_FUZZED(num_workgroup) : (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) >> 0u) : _GLF_FUZZED(_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)), 0u + (max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))))))))), ((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id)))) / 1u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) >> (1u ^ 1u))))))))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) / (1u | 1u)), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), ((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id)))) / 1u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))))))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) >> 0u) : _GLF_IDENTITY(_GLF_FUZZED(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), (_GLF_FUZZED(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) >> 0u) : _GLF_IDENTITY(_GLF_FUZZED(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))), (_GLF_FUZZED(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))) + 0u)) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY((subgroup_size) >> 0u, min(_GLF_IDENTITY((subgroup_size) >> 0u, min((subgroup_size) >> 0u, (subgroup_size) >> 0u)), _GLF_IDENTITY((subgroup_size) >> 0u, 0u | ((subgroup_size) >> 0u))))) : _GLF_FUZZED(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))))), ((true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((subgroup_size) >> 0u))) : _GLF_FUZZED(_GLF_IDENTITY(max(subgroup_size, workgroup_id), (max(subgroup_size, workgroup_id)) << 0u)))) / _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 1u))), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, workgroup_id))), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(max(subgroup_size, _GLF_IDENTITY(workgroup_id, (workgroup_id) >> (1u ^ 1u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))) / (1u | 1u)))) + subgroup_local_id) - (0u << _GLF_IDENTITY(uint(0u), uint(0u))));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) * (1u & 1u))) | 0u, ((_GLF_IDENTITY(subgroup_id, (subgroup_id) * (1u & 1u))) | 0u) << 0u)) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size) ^ 0u)), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size) ^ 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size) ^ 0u))) | 0u)))) : _GLF_FUZZED(virtual_gid)))))) | 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, 1 * (1))])))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))), true), false), bvec3(bvec4(bvec3(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bvec4(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))))), true, false, true))))), false))) || false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), true))))))), false)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) || false)))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))))), true, false, true))))), false))) || false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), true))))))), false)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) || false)))) || false)), ! (! (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))))), true, false, true))))), false))) || false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), true))))))), false)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) || false)))) || false)))))) && true))))))), true, false, true)), bool(bvec3(bool(bvec4(bool((_GLF_IDENTITY(false, false || (false)))), true, false, true)), true, false)))))), true), false), true)))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), (! (_GLF_IDENTITY(false, false || (false)))) || false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), true), false), bvec3(bvec4(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), true), false), true))))))), bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), (! (_GLF_IDENTITY(false, false || (false)))) || false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), true), false), bvec3(bvec4(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), true), false), true)))))))), (bool((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), (! (_GLF_IDENTITY(false, false || (false)))) || false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), true), false), bvec3(bvec4(bvec3(bvec2(! (_GLF_IDENTITY(false, false || (false))), true), false), true))))))))) || false))) && true))))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(48.15), _GLF_FUZZED(_GLF_IDENTITY((58.43 + -1.8), sqrt(0.0) + (_GLF_IDENTITY((58.43 + -1.8), max((58.43 + -1.8), (58.43 + -1.8))))))), (false ? _GLF_FUZZED(vec2(6.0, 9822.4579)) : vec2(_GLF_FUZZED(48.15), _GLF_FUZZED(_GLF_IDENTITY((58.43 + -1.8), sqrt(0.0) + (_GLF_IDENTITY((58.43 + -1.8), max((58.43 + -1.8), (58.43 + -1.8))))))))), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(6.7, -0.9) - 3480.3437)))))[1]), bvec2(true, true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))) || false))))))
      barrier();
    }
   else
    {
    }
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-75.88, (-75.88) - 0.0)) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, true, false))), true))))) ? _GLF_FUZZED(-75.88) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6204.9271), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1481.8986)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y)), true, false, false)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-75.88) : injectionSwitch.x)) > injectionSwitch.y)), true, false, false)))), _GLF_IDENTITY(bool(bvec4((! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-75.88) : injectionSwitch.x)) > injectionSwitch.y)), true, false, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4((! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-75.88) : injectionSwitch.x)) > injectionSwitch.y)), true, false, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! _GLF_IDENTITY((! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-75.88) : injectionSwitch.x)) > injectionSwitch.y)), true, false, false)))), ! (! (_GLF_IDENTITY((! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-75.88) : injectionSwitch.x)) > injectionSwitch.y)), true, false, false)))), bool(bvec4((! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-75.88) : injectionSwitch.x)) > injectionSwitch.y)), true, false, false)))), false, true, true)))))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(3.9, -80.95)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))) | (_injected_loop_counter)) != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 barrier();
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = (1 ^ _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, (1) >> 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))) && true)))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(30592) : int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(mix(_injected_loop_counter, _injected_loop_counter, (mat2(1.2, 9211.3490, -2682.2713, 9.4) != mat2(1.8, 5211.6251, 6093.0439, -877.840)))) : _injected_loop_counter ++)))
      {
       do
        {
         atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))))) ^ _GLF_IDENTITY((4), ((_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), 4)))))) ^ 0)), 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), min(_GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0)))), int(int(0)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(~ (~ (uint(2))), _GLF_IDENTITY((~ (~ (uint(2)))), 0u ^ ((~ (~ (uint(2)))))) / 1u)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | (0 << _GLF_IDENTITY(int(1), int(1)))) >> _GLF_IDENTITY(int(3), int(3)))))), ((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | (0 << _GLF_IDENTITY(int(1), int(1)))) >> _GLF_IDENTITY(int(3), int(3))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | (0 << _GLF_IDENTITY(int(1), int(1)))) >> _GLF_IDENTITY(int(3), int(3)))))))))))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(22424))), 4);
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
}
