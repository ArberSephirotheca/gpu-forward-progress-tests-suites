#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 ivec2 _f0;
 ivec4 _f1;
 mat2x4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 uvec2 _f1;
 vec2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 uvec3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
 int _f1;
 float _f2;
 bvec2 _f3;
 uvec4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_8 {
 int _f0;
 mat2x3 _f1;
 vec2 _f2;
 ivec2 _f3;
 vec3 _f4;
 mat4 _f5;
 float _f6;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 mat3 _f1;
 int _f2;
 float _f3;
 uint _f4;
 ivec3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 float _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
 _GLF_struct_12 _f6;
} ;

struct _GLF_struct_5 {
 bool _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 vec3 _f1;
 ivec2 _f2;
 bool _f3;
 mat3 _f4;
 mat2x3 _f5;
 _GLF_struct_5 _f6;
} ;

struct _GLF_struct_3 {
 uint _f0;
 mat2 _f1;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 bool _f1;
 vec2 _f2;
 uint _f3;
 bvec2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 uint _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_1 _f0;
 _GLF_struct_4 _f1;
 uint workgroup_id;
 mat3 _f2;
 _GLF_struct_6 _f3;
 vec2 _f4;
 _GLF_struct_13 _f5;
 uvec3 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), false, true)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), (! (_GLF_DEAD(false))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-232.040), _GLF_FUZZED(-8504.6880)), bvec2(false, false))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false))))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << (105639u & 0u))) ^ _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u), ((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))) | 0u)) | 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(injectionSwitch)) : injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(injectionSwitch)) : injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(injectionSwitch)) : injectionSwitch)).x, (false ? _GLF_FUZZED(639.773) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(injectionSwitch)) : injectionSwitch)).x))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(injectionSwitch)) : injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(trunc(injectionSwitch)) : injectionSwitch)).x : _GLF_FUZZED(329.140))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_1(_GLF_struct_0(mat4x2(1.0))), _GLF_struct_4(_GLF_struct_2(vec4(1.0), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true))), vec2(1.0), 1u, bvec2(true), mat2(1.0)), mat4x2(1.0), mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1u, _GLF_struct_3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) / 1u)) << 0u), mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)))), gl_WorkGroupID.x, mat3(1.0), _GLF_struct_6(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), 1)))), 1, 1)), (_GLF_IDENTITY(int(ivec3(1, _GLF_IDENTITY(1, ~ (~ (1))), 1)), ~ _GLF_IDENTITY((~ (int(ivec3(1, 1, 1)))), ((~ (int(ivec3(1, 1, 1))))) * (1 & 1)))) ^ 0))), vec3(1.0), ivec2(1), true, _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-1081.7618), max(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, 0.0, 1.0))), 1.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(vec2(6.1, 6.0).s))), 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(max(0.0, 0.0), max(0.0, 0.0)))), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(max(0.0, 0.0), max(0.0, 0.0)))), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, 0.0, 1.0))), 1.0))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, 0.0, 1.0))), 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))[0], _GLF_FUZZED(float(-78772))), vec2(_GLF_FUZZED(64.56), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(vec4(_GLF_FUZZED(-1081.7618), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-1081.7618), float(_GLF_IDENTITY(vec4(_GLF_FUZZED(-1081.7618), 0.0, 0.0, 1.0), (true ? _GLF_IDENTITY(vec4(_GLF_FUZZED(-1081.7618), 0.0, 0.0, 1.0), mix(vec4(_GLF_FUZZED(15.31), _GLF_IDENTITY((vec4(_GLF_FUZZED(-1081.7618), 0.0, 0.0, 1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) ^ 0)], clamp((vec4(_GLF_FUZZED(-1081.7618), 0.0, 0.0, 1.0))[1], (vec4(_GLF_FUZZED(-1081.7618), 0.0, 0.0, 1.0))[1], (vec4(_GLF_FUZZED(-1081.7618), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))[1])), _GLF_FUZZED(-34.25), _GLF_FUZZED(7.3)), vec4((vec4(_GLF_FUZZED(-1081.7618), 0.0, 0.0, 1.0))[0], _GLF_FUZZED(-559.894), (vec4(_GLF_FUZZED(-1081.7618), 0.0, 0.0, 1.0))[2], (vec4(_GLF_FUZZED(-1081.7618), 0.0, 0.0, 1.0))[3]), bvec4(true, false, true, true))) : _GLF_FUZZED((64.51 - vec4(-4.2, -99.07, -80.86, 3.8))))))), 1.0))))))), _GLF_FUZZED(-1081.7618))) : 1.0)), 1.0, 1.0)), mat2x3(1.0), _GLF_struct_5(true, bvec2(true))), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_13(_GLF_struct_7(vec4(1.0), mat3(1.0), 1, 1.0, 1u, _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)) / ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0)) + (ivec4(1, 0, 0, 0))))), 1, 1), min(_GLF_IDENTITY((ivec3(1)) / _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(_GLF_IDENTITY(0, (0) | (0)), 0, 0, 0) | ivec4(0, 0, 0, 0)) + (ivec4(1, 0, 0, 0))))), 1, 1), (true ? ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(0, 0, _GLF_IDENTITY(0, int(ivec2(0, 0))), 0) | ivec4(0, 0, 0, 0)) + (ivec4(1, 0, 0, 0))))), 1, 1) : _GLF_FUZZED(ivec3(23501, 71506, -33152)))), (_GLF_IDENTITY((ivec3(1)) / ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) + 0)) | ivec4(0, 0, 0, 0)) + (ivec4(1, 0, 0, 0))))), 1, 1), ivec3(0, 0, 0) + ((ivec3(1)) / ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))) ^ 0)) << _GLF_IDENTITY(0, (0) / 1)), _GLF_IDENTITY(0, (0) / (1 ^ 0)), 0, 0), _GLF_IDENTITY((ivec4(0, 0, 0, 0) | ivec4(0, 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 ^ (0)), 0)), 0)), 0)) + (ivec4(1, 0, 0, 0)), max((ivec4(0, 0, 0, 0) | ivec4(0, 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 ^ (0)), 0)), 0)), 0)) + (ivec4(1, 0, 0, 0)), (ivec4(0, 0, 0, 0) | ivec4(0, 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 ^ (0)), 0)), 0)), 0)) + (ivec4(1, 0, 0, 0))))))), 1, 1)))) | ivec3(0, 0, 0)), (ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(87215))))) / ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) - 0))) + (ivec4(1, 0, 0, 0))))), 1, 1)))), bvec3(true)), _GLF_struct_8(1, mat2x3(1.0), vec2(1.0), ivec2(1), vec3(1.0), mat4(1.0), 1.0), _GLF_struct_9(uvec4(1u), 1, 1.0, _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, false || (true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))))), uvec4(1u), ivec2(1)), 1.0, _GLF_struct_10(mat3(1.0), uvec3(1u), bvec4(true)), _GLF_struct_11(bvec4(true), uvec2(1u), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(vec4(vec2(1.0), 0.0, 0.0)), _GLF_IDENTITY(vec2(mat2x4(vec2(vec4(vec2(1.0), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), max(vec2(mat2x4(vec2(vec4(vec2(1.0), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat2x4(vec2(vec4(vec2(1.0), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))), vec3(1.0)), _GLF_struct_12(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(_GLF_IDENTITY(ivec4(clamp(1, 1, 1), 0, 1, 0), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(clamp(1, 1, 1), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-94547) : 0)))), 1, 0), min(_GLF_IDENTITY(ivec4(clamp(1, 1, 1), 0, 1, 0), (_GLF_IDENTITY(ivec4(clamp(1, 1, 1), 0, _GLF_IDENTITY(1, min(1, 1)), 0), clamp(ivec4(clamp(1, 1, 1), 0, 1, 0), ivec4(clamp(1, 1, 1), 0, 1, 0), _GLF_IDENTITY(ivec4(clamp(1, 1, 1), 0, 1, 0), (ivec4(clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1), 0, 1, 0)) ^ (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(3), ivec4(3))))))) / ivec4(1, 1, 1, 1)), ivec4(clamp(1, 1, 1), 0, 1, 0))))))))), ivec4(_GLF_IDENTITY(1, min(1, 1))), mat2x4(1.0), vec4(1.0))), uvec3(_GLF_IDENTITY(1u, ~ (~ (1u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- vec4(-2277.4983, 7165.8445, 1.3, -7079.8106).b))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_14.workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), cos(0.0), 1.0)), 1.0, 1.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), cos(0.0), 1.0)), 1.0, 1.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, min(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.2)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1819.4076)), float(injectionSwitch.y), bool(true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true), false))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(529.790)), bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec3(0, 0, 0))))), 0, 0))) + 0)], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8035.3135, 8.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), false || (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false)), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false))))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.1, 8.0)))).y)))) || false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), clamp(clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-34.57)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), injectionSwitch)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) || _GLF_IDENTITY(false, ! (! (false)))))), true), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-56.71))), 1.0))) / 1.0))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), min(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), min(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), min(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 1.0))))))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), min(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-3987.0935))), abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0))))))).x, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), min(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))), 0.0, 0.0)), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, abs(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-75.82)), float(1.0), bool(true))), max(1.0, 1.0))), 0.0, 1.0))))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0)), min(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), 0.0, 1.0))))))).x), float(_GLF_FUZZED(-8963.1360)), bool(_GLF_IDENTITY(false, (false) || false)))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(831.730), _GLF_FUZZED(_GLF_IDENTITY(-7238.6146, float(mat2(_GLF_IDENTITY(-7238.6146, 1.0 * (-7238.6146)), sqrt(log(1.0)), 1.0, 0.0))))), bvec2(false, false))).y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)) : _GLF_FUZZED(max(float(true), -9511.3429))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + abs(vec2(0.0, 0.0))).x > injectionSwitch.y)) || false), false, _GLF_IDENTITY(true, false || (true))), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-410.937)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), uint(uvec3(uint(_GLF_IDENTITY(1, 0 | (1))), 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(-5349)), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4))), clamp(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(true ? ~ (4) : _GLF_FUZZED(-5349), (_GLF_IDENTITY(true ? ~ (4) : _GLF_FUZZED(-5349), ~ (~ (true ? ~ (4) : _GLF_FUZZED(-5349))))) | (true ? ~ (4) : _GLF_FUZZED(-5349)))), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4))), _GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(-5349)), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4))), _GLF_IDENTITY(~ _GLF_IDENTITY((4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (4) : _GLF_FUZZED(60223))), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(-5349)), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4)))))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(-5349)), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4))), clamp(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(true ? ~ (4) : _GLF_FUZZED(-5349), (_GLF_IDENTITY(true ? ~ (4) : _GLF_FUZZED(-5349), ~ (~ (true ? ~ (4) : _GLF_FUZZED(-5349))))) | (true ? ~ (4) : _GLF_FUZZED(-5349)))), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4))), _GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(-5349)), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4))), _GLF_IDENTITY(~ _GLF_IDENTITY((4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (4) : _GLF_FUZZED(60223))), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(-5349)), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4))))))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(-5349)), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4))), clamp(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(true ? ~ (4) : _GLF_FUZZED(-5349), (_GLF_IDENTITY(true ? ~ (4) : _GLF_FUZZED(-5349), ~ (~ (true ? ~ (4) : _GLF_FUZZED(-5349))))) | (true ? ~ (4) : _GLF_FUZZED(-5349)))), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4))), _GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(-5349)), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4))), _GLF_IDENTITY(~ _GLF_IDENTITY((4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (4) : _GLF_FUZZED(60223))), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(-5349)), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4)))))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(-5349)), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4))), clamp(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(true ? ~ (4) : _GLF_FUZZED(-5349), (_GLF_IDENTITY(true ? ~ (4) : _GLF_FUZZED(-5349), ~ (~ (true ? ~ (4) : _GLF_FUZZED(-5349))))) | (true ? ~ (4) : _GLF_FUZZED(-5349)))), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4))), _GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(-5349)), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4))), _GLF_IDENTITY(~ _GLF_IDENTITY((4), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (4) : _GLF_FUZZED(60223), int(ivec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (4) : _GLF_FUZZED(60223), int(int(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (4) : _GLF_FUZZED(60223)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((true ? ~ (4) : _GLF_FUZZED(-5349)), ((true ? ~ (4) : _GLF_FUZZED(-5349))) | ((true ? ~ (4) : _GLF_FUZZED(-5349)))))) | (~ (4)))))))))) - 0), (4) | (4)), 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(739.463)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), 1.0, 1.0, 1.0))).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (true && (injectionSwitch.x > injectionSwitch.y)), false, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, tan(0.0), cos(0.0), 1.0, 0.0)), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, tan(0.0), cos(0.0), 1.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, tan(0.0), cos(0.0), 1.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, tan(0.0), cos(0.0), 1.0, 0.0))))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(739.463)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), 1.0, 1.0, 1.0))).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(9749.3749, -74.29, -78.58)[0]) : injectionSwitch.x)) > injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), true, false, false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)), true)))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), (! (false)) && true))))))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), bvec2(true, false))), injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(8.5))) > injectionSwitch.y)))) && true), false, true))), true, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(bool(bvec3(false, false, true)), true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, (false) && true), true)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.82, 99.71)) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_DEAD(false))), false)), (bool(bvec2(bool(bool(_GLF_DEAD(false))), false))) || false), ! (_GLF_IDENTITY(! (bool(bvec2(bool(bool(_GLF_DEAD(false))), false))), _GLF_IDENTITY((! (bool(bvec2(bool(bool(_GLF_DEAD(false))), false)))) || false, (_GLF_IDENTITY((! (bool(bvec2(bool(bool(_GLF_DEAD(false))), false)))) || false, ! (! (_GLF_IDENTITY((! (bool(bvec2(bool(bool(_GLF_DEAD(false))), false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && ((! (bool(bvec2(bool(bool(_GLF_DEAD(false))), false)))))) || false)))) || false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false))))), true, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))), 1.0)), dot(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec2(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.0)), bool(false))), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0))), 0.0, 0.0, cos(log(1.0)), abs(1.0), _GLF_IDENTITY(1.0, (1.0) / abs(1.0)), 1.0, 1.0)))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) || false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.0)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(true)))), vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)), injectionSwitch.y)))))), false || (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 1.0), (true ? vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 1.0) : _GLF_FUZZED(vec3(-4.6, -4341.4895, -8.2)))), min(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (false ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), 1.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))), bool(bool(bool(bvec4(false, false, true, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))), false, true, true))))), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true), bool(bvec4(! (_GLF_IDENTITY(false, true && (false))), false, true, true))))))))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
