#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) || false)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])), (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true, true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true, true))), false, false, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, false))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, false))), true, true), false))), true))))) && true)) || false))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(74.08)), float(injectionSwitch.x), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-28.41), _GLF_FUZZED(vec4(1.6, -7.4, -1006.7096, 4.1).y)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-28.41), _GLF_FUZZED(vec4(1.6, -7.4, -1006.7096, 4.1).y)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-28.41), _GLF_FUZZED(vec4(1.6, -7.4, -1006.7096, 4.1).y)), bvec2(false, false))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-160.844)), vec2(_GLF_FUZZED(6.0), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true, false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) && true)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3457.1804) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)), injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3808.4061)), bool(false))))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(24.14))), 1.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7173.9927)))))), (true ? mat3x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(24.14))), 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(4.1, 6.7, -0.2, 6692.0261, 17.36, 6.5, 721.232, 2963.7804, 5287.7210, -5.0, 0.4, 92.66))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)) * (injectionSwitch)), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)).y : _GLF_FUZZED(atanh(-2049.6057))), 1.0 * ((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))))) * (injectionSwitch)).y : _GLF_FUZZED(atanh(-2049.6057))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false), true, false))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(1.1, 46.63)))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))) || false)), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))) || false))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false), true, false, false))), false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))) || false)), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))) || false))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false), true, false, false))), false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))) || false)), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))) || false))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false), true, false, false))), false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))) || false)), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))) || false))))), true)), bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false), true, false, false))), false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))) || false)), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))) || false))))), true))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))))) || false)), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) || false)))))), bool(bvec2(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))) || false)), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))), false))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (injectionSwitch)), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.4) : 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) * (injectionSwitch)).y : _GLF_FUZZED(atanh(-2049.6057))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat2(0.0, 0.0, 1.0, 0.0)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(143.855)) : injectionSwitch)), injectionSwitch)).y), false, true, false))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))) || false)), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false)))))))) || false))))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), false, false), bvec3(bvec3(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), false, false))))), true && (bool(_GLF_IDENTITY(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), false, false), bvec3(bvec3(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), false, false)))))))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false, true, false))))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)))))))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.9)), bool(false)))), false, true, false))))) || false)), (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)))))))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.9)), bool(false)))), false, true, false))))) || false))) && true)))))))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 1.0, 1.0)), (true ? float(mat2(1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(5963.6260)))), 1.0))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))))) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-1375.8059), _GLF_FUZZED(-6.6)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)) - vec2(0.0, 0.0))), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)))[0], clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)))[0])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)))), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y : _GLF_FUZZED(atanh(-2049.6057))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))) || false), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(sqrt(vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y), false, true, false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))) || _GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat2x3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(2.3)), vec2(_GLF_FUZZED(16.59), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], mix(float(_GLF_FUZZED(-9.5)), float((max(injectionSwitch, injectionSwitch))[1]), bool(true)))), bvec2(false, true))), 0.0, 1.0, 1.0, 1.0)))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))) || false)), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((-7.4 * float(false)))), max(_GLF_IDENTITY(float(_GLF_FUZZED((-7.4 * float(false)))), max(_GLF_IDENTITY(float(_GLF_FUZZED((-7.4 * float(false)))), (float(_GLF_FUZZED((-7.4 * float(false))))) / 1.0), _GLF_IDENTITY(float(_GLF_FUZZED((-7.4 * float(false)))), (float(_GLF_FUZZED((-7.4 * float(false))))) + 0.0))), _GLF_IDENTITY(float(_GLF_FUZZED((-7.4 * float(false)))), _GLF_IDENTITY((float(_GLF_FUZZED((-7.4 * float(false))))) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), float(_GLF_IDENTITY(mat2x3((float(_GLF_FUZZED((-7.4 * float(false))))) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0), (true ? mat2x3((float(_GLF_FUZZED((-7.4 * float(false))))) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(9497.7595, -1.3, 3.7, 2.4, 9.0, 95.55))))))))), bool(_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y)))))))) || false)), false, true, false))))) || false))))), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec2(2.7, -8.0).g)), bool(false)))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, abs(0.0), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0), 0.0)))[0], min((vec2(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0), 0.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0), 0.0)))[0])), _GLF_FUZZED(766.606)), vec2(_GLF_FUZZED(-9.3), _GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 0.0, abs(0.0), 0.0)))[1], max((vec2(mat3x2(injectionSwitch, 1.0, 0.0, abs(0.0), 0.0)))[1], (vec2(mat3x2(injectionSwitch, 1.0, 0.0, abs(0.0), 0.0)))[1]))), bvec2(false, true)))))).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), false, true, false)))), (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(99.61, -524.065))))))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0) * (injectionSwitch))), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(99.61, -524.065))))))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false)))), false, false)), ! (! (bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(99.61, -524.065))))))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_IDENTITY(bool(bvec3(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), false, true)), true && (bool(bvec3(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), false, true))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))) || false)), (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x > injectionSwitch.y), false, true, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), ! (! (_GLF_IDENTITY(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), false || (bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))))), bool(bvec3(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), false, true))))), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), false, true, false))), bool(bvec3(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_IDENTITY(false, true && (false)), true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(false, bool(bool(false))), true, false)))) || false))) || false))) && true))))))))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id))))))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id)))))))) / 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * workgroup_id), 0u | (~ (workgroup_size * workgroup_id))), ~ _GLF_IDENTITY((~ (~ (workgroup_size * workgroup_id))), _GLF_IDENTITY(((~ (~ (workgroup_size * workgroup_id)))) >> 0u, (((~ (~ (workgroup_size * workgroup_id)))) >> 0u) / 1u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), true && (! (false)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, length(0.0) + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), true && (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec2(bool(bvec4(false, true, false, true)), true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, determinant(mat4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), min(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), _GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), min(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), _GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b))), mix(float(_GLF_FUZZED(6.9)), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), min(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), _GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b)))), bool(true))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0))), 1.0, 0.0, 0.0, 1.0)), min(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), min(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), _GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b))), mix(float(_GLF_FUZZED(6.9)), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), min(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), _GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b)))), bool(true))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0))), 1.0, 0.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), min(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), _GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b))), mix(float(_GLF_FUZZED(6.9)), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), min(_GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b), _GLF_FUZZED(vec3(-2.6, -0.7, 6311.0056).b)))), bool(true))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0))), 1.0, 0.0, 0.0, 1.0)))))), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) || (false)), false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)) || (false))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))), workgroup_base)) + subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid), 0u | (true ? _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))), workgroup_base)) + subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), 0u ^ (uint(uint(subgroup_local_id + 1)))))) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size))))), ((~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), 0u ^ (uint(uint(subgroup_local_id + 1)))))) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u) < subgroup_size))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), bool(bvec2(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), bool(bvec2(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), bool(bvec2(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), false)))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u) < subgroup_size))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), bool(bvec2(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), bool(bvec2(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), bool(bvec2(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u) < subgroup_size))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), bool(bvec2(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), bool(bvec2(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), bool(bvec2(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), false)))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u) < subgroup_size))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), bool(bvec2(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), bool(bvec2(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))), true && ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), bool(bvec2(true && (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), false))))))))))))) && true), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, abs(0.0), determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(1.0))), 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, abs(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((8029.6215 - -3579.3026))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))))), 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))), 0.0, sqrt(1.0))), 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-89.08)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))))), (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-89.08)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_IDENTITY(_GLF_FUZZED(-89.08), (false ? _GLF_FUZZED(0.9) : _GLF_FUZZED(-89.08)))), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)) : _GLF_FUZZED(69.11))))))) / 1.0), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(-8.7), (vec2(mat3x4(injectionSwitch, abs(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((8029.6215 - -3579.3026))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))))), 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))), 0.0, sqrt(1.0))), 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-89.08)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))))), (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-89.08)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_IDENTITY(_GLF_FUZZED(-89.08), (false ? _GLF_FUZZED(0.9) : _GLF_FUZZED(-89.08)))), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)) : _GLF_FUZZED(69.11))))))) / 1.0), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0)))[1]), vec2((vec2(mat3x4(injectionSwitch, abs(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((8029.6215 - -3579.3026))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))))), 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))), 0.0, sqrt(1.0))), 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-89.08)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))))), (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-89.08)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_IDENTITY(_GLF_FUZZED(-89.08), (false ? _GLF_FUZZED(0.9) : _GLF_FUZZED(-89.08)))), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true)) : _GLF_FUZZED(69.11))))))) / 1.0), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(-8.9)), bvec2(true, false))), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, abs(0.0), determinant(mat4(1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, round(length(normalize(1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, tan(0.0), 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(6.0)), float(sqrt(1.0)), bool(true))))), 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0)), (vec2(mat3x4(injectionSwitch, abs(0.0), determinant(mat4(1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, round(length(normalize(1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, tan(0.0), 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(6.0)), float(sqrt(1.0)), bool(true))))), 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0))) + vec2(0.0, 0.0)), vec2(mat3x4(injectionSwitch, abs(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(1.0))), 1.0, 0.0, _GLF_IDENTITY(cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0), mix(vec3((vec3(cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0))[0], _GLF_FUZZED(-11.55), (vec3(cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0))[2]), vec3(_GLF_FUZZED(-926.269), (vec3(cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0))[1], _GLF_FUZZED(-9.0)), bvec3(false, true, false)))), max(float(_GLF_IDENTITY(vec3(cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0), mix(vec3((vec3(cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0))[0], _GLF_FUZZED(-11.55), (vec3(cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0))[2]), vec3(_GLF_FUZZED(-926.269), (vec3(cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0))[1], _GLF_FUZZED(-9.0)), bvec3(false, true, false)))), float(_GLF_IDENTITY(vec3(cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0), mix(vec3((vec3(cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0))[0], _GLF_FUZZED(-11.55), (vec3(cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0))[2]), vec3(_GLF_FUZZED(-926.269), (vec3(cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), 0.0, 1.0))[1], _GLF_FUZZED(-9.0)), bvec3(false, true, false))))))), 1.0, 1.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(clamp(-711.777, (mat3x2(-603.600, -50.71, 471.185, -9.8, 0.9, -4.7) , 9.0), mix(-3.3, -0.1, false)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-551.045)), bool(false)))) / 1.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7327.0430)), float(injectionSwitch.y), bool(true))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0)), injectionSwitch)).x, (injectionSwitch.x) - 0.0) < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-425.985)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, sqrt(0.0), 1.0, 1.0, sqrt(0.0), 1.0)), min(vec2(mat2x4(injectionSwitch, 1.0, sqrt(0.0), 1.0, 1.0, sqrt(0.0), 1.0)), vec2(mat2x4(injectionSwitch, 1.0, sqrt(0.0), 1.0, 1.0, sqrt(0.0), 1.0))))).x > injectionSwitch.y))))
      return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(subgroup_id) : uint(2))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))).x > injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))).x > injectionSwitch.y))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], uint(2), _GLF_IDENTITY(4, 0 ^ (4)), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false, true)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), ! (! (false))), true, false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
}
