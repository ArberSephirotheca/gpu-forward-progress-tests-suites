#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0), max((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)))).y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY(1u, (0u | 0u) + (1u))))).x) ^ (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0)))) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch, 1.0))), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))))).x < injectionSwitch.y)) && (false))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, (0u) / 1u) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (subgroup_size)))), (subgroup_id * subgroup_size) ^ 0u) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp((_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u ^ (_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u * (uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) - 0u), 0u | (uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u | (uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u | (uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u | (uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), min((_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (uint(_GLF_IDENTITY(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(0u, 0u) | (uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))))) ^ 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)))), (true ? _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))), subgroup_id)), subgroup_id)) * subgroup_size : _GLF_FUZZED(virtual_gid))) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 0u, 1u)), min(uint(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 0u, 1u)), uint(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 0u, 1u)))))) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / 1u))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))))) + (((subgroup_local_id + 1) % subgroup_size))), max(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) << 0u) * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), uint(_GLF_IDENTITY(uvec2(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 1u), (uvec2(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 1u)) ^ uvec2(0u, 0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))) * (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-65720) : _GLF_IDENTITY(1, 0 | (1))))))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), true, true))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       else
        {
        }
       barrier();
      }
    }
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(76494))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 else
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(int(3), 1, 1, 1), max(ivec4(int(3), 1, 1, 1), ivec4(int(3), 1, 1, 1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))))), false), true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))))), false), true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))))), false), true, true))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(round(length(normalize(1.0))), _GLF_IDENTITY(float(mat2x3(round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 0.0)), (true ? float(mat2x3(round(length(normalize(1.0))), 0.0, 1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-8.9)))), 1.0, sqrt(0.0), _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(-370.446) : abs(1.0))), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) * 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), sqrt(0.0), abs(1.0), 0.0)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(913.873, 1.5).x), _GLF_FUZZED(-5738.5532)), bvec2(false, false))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(round(length(normalize(1.0))), float(mat4x3(round(length(normalize(1.0))), 0.0, 0.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), log(1.0), 1.0, 0.0, abs(0.0), 0.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) - 0.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(fract(9.5)) : 1.0))), 0.0))))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) - 0.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(round(length(normalize(1.0))), (true ? round(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), length(normalize(1.0))))) : _GLF_FUZZED(4.7))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))) / 1.0)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.1) : _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.6) : 0.0))), abs(1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3746.1536))))), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))))), false), true, true)))))))))) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(round(length(normalize(1.0))), (false ? _GLF_FUZZED(length(vec4(0.0, -1.3, -2229.0693, -96.24))) : round(length(normalize(1.0))))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(float(mat4(sqrt(0.0), 0.0, 0.0, round(length(normalize(1.0))), 0.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0)), 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-6.4)), float(float(mat4(sqrt(0.0), 0.0, 0.0, round(length(normalize(1.0))), 0.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0)), 0.0, 1.0, 0.0))), bool(true)))), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(determinant(mat4(-4.1, -410.055, 4.1, 8.7, -6.9, -3464.2258, -2.4, 9.5, 832.665, -170.262, -1180.2708, -54.22, 3.3, -82.81, -0.2, -589.814))) : abs(1.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0))))))))), (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))))) && true))), true)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(round(length(normalize(1.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(length(vec4(0.0, -1.3, -2229.0693, -96.24))), mix(float(_GLF_FUZZED(float(51761u))), float(_GLF_IDENTITY(_GLF_FUZZED(length(vec4(0.0, -1.3, -2229.0693, -96.24))), mix(float(_GLF_FUZZED(671.042)), float(_GLF_FUZZED(length(vec4(0.0, -1.3, -2229.0693, -96.24)))), bool(true)))), bool(true))) : round(length(normalize(1.0))))), 1.0, sqrt(0.0), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8320.5712) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.4) : 1.0)))), sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(_GLF_IDENTITY(length(normalize(1.0)), float(vec2(_GLF_IDENTITY(length(normalize(1.0)), float(mat3x2(length(normalize(1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))), 1.0)))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), false, true)))))), true && (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(sqrt(0.0), (true ? sqrt(0.0) : _GLF_FUZZED(-7042.4894))), abs(1.0), 0.0)), clamp(float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)), float(mat3x2(injectionSwitch.y, round(length(_GLF_IDENTITY(normalize(1.0), (false ? _GLF_FUZZED((-7.4 * 1.7)) : normalize(1.0))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0), _GLF_IDENTITY(abs(1.0), float(mat4(abs(1.0), 1.0, 0.0, cos(0.0), 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0))), 0.0)), float(mat3x2(injectionSwitch.y, round(length(normalize(1.0))), 1.0, sqrt(0.0), abs(1.0), 0.0)))))))), true))))))))))
      {
       do
        {
         return;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     int i = 0;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, min(_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, (false ? _GLF_FUZZED(i) : 2) / 1)))), false ? _GLF_FUZZED(i) : 2))))), clamp(~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, min(_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, (false ? _GLF_FUZZED(i) : 2) / 1)))), false ? _GLF_FUZZED(i) : 2))))), ~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, min(_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, (false ? _GLF_FUZZED(i) : 2) / 1)))), false ? _GLF_FUZZED(i) : 2))))), ~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, min(_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, (false ? _GLF_FUZZED(i) : 2) / 1)))), false ? _GLF_FUZZED(i) : 2))))))))), max(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2))))), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), clamp(~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), ~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), ~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2))))), clamp(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), 1, 1), clamp(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), 1, 1), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), 1, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), 1, 1), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), 1, 1)) ^ ivec3(0, 0, 0))))), (true ? int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), 1, 1), clamp(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), 1, 1), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), 1, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), 1, 1), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), 1, 1)) ^ ivec3(0, 0, 0))))) : _GLF_FUZZED(-23835))))))), _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, (_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, max(false ? _GLF_FUZZED(i) : 2, false ? _GLF_FUZZED(i) : 2))) ^ 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))), (~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2))))) * 1)), min(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2))))), _GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2))), max((_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2))), (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(i) : 2)))))))))))) ^ (1 ^ 1))))))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))))) ? 4 : _GLF_FUZZED(-38983))));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
