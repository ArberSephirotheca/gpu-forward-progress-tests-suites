#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5.1 * -881.673))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec4(_injected_loop_counter < 1, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, length(0.0), 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y))), (true ? vec2(mat4(injectionSwitch, 0.0, length(0.0), 0.0, sin(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-48.78) : 0.0)), 0.0, 0.0)), abs(0.0), sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 + (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u);
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), 1))) < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) - 0.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))) + 0.0))), _GLF_IDENTITY(0, max(0, 0)) | (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4(_GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, cos(0.0), log(1.0), 0.0, round(length(normalize(vec2(1.0, 1.0))))))))))))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), bool(bvec4(! ((_GLF_DEAD(false)) && true), false, true, true))))), true, false, false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(0.0, 0.0, abs(0.0))), dot(vec3(1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), float(vec2(sqrt(1.0), 1.0)))), vec3(0.0, 0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))))), mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(0.0, 0.0, abs(0.0))), mix(float(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(0.0, 0.0, abs(0.0)))), float(_GLF_FUZZED(707.886)), bool(false))), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(0.0, 0.0, abs(0.0))))))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED((+ -801.489))), float(sqrt(1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec3(0.0, 0.0, abs(0.0))), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(0.0, 0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))))), mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(0.0, 0.0, abs(0.0))), clamp(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(0.0, 0.0, abs(0.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(0.0, 0.0, abs(0.0))), (true ? dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(0.0, 0.0, abs(0.0))) : _GLF_FUZZED((110.709 + 21.49)))), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(0.0, 0.0, abs(0.0))))), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(0.0, 0.0, abs(0.0))))))))).y)))))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.9)), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(determinant(mat4(40.46, 2786.7092, 111.823, 2204.5433, -76.25, 99.57, 7.7, -3.9, 45.66, -74.22, 8.3, 80.84, -2635.5411, -644.135, _GLF_IDENTITY(-8725.6572, float(vec3(-8725.6572, 0.0, 0.0))), 5.5))) : float(injectionSwitch.y))), bool(true)))), float(_GLF_FUZZED(31.67)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(9.7, _GLF_IDENTITY(float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), clamp(float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), _GLF_IDENTITY(float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), clamp(float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)))))))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), min((false ? _GLF_FUZZED(_GLF_IDENTITY(9.7, _GLF_IDENTITY(float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), clamp(float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), _GLF_IDENTITY(float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), clamp(float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)))))))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), (false ? _GLF_FUZZED(_GLF_IDENTITY(9.7, _GLF_IDENTITY(float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), clamp(float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), _GLF_IDENTITY(float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), clamp(float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)), float(mat4x3(9.7, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, sin(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0)))))))) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true))))
      barrier();
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   do
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(int(0), max(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (false) || false))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, ! (! (false)))))), (false) || false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))).y))))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))) && true));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(mat2(1.0) * (min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))), min(mat2(1.0) * (min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))), mat2(1.0) * (min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (_GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), clamp((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), max((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))) / vec2(1.0, 1.0)))))) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)).y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + _GLF_IDENTITY(subgroup_base, uint(uint(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) ^ 0u) + _GLF_IDENTITY(subgroup_base, uint(uint(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))) : _GLF_FUZZED(clamp(workgroup_base, workgroup_size, (subgroup_local_id & subgroup_local_id))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) ^ 0)), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0))), injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) != (_GLF_IDENTITY(0, (0) >> 0) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if((_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), uvec2(0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) << uvec2(0u, _GLF_IDENTITY(0u, 0u + (0u)))), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(subgroup_local_id % 2, 1u))))), max(uvec2(subgroup_local_id % 2, 1u), uvec2(subgroup_local_id % 2, 1u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u))) | 0u), 1u) * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | _GLF_IDENTITY(_GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), clamp((uvec2(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) - (0u | 0u)), 1u)), (uvec2(subgroup_local_id % 2, 1u)), _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), ((uvec2(subgroup_local_id % 2, 1u))) << uvec2(0u, 0u)))), ((_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), uvec2(uvec2(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), uvec2(1u, 1u) * (uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) + 0), 1u)))))))) / uvec2(1u, 1u))))), max(uvec2(subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(92652))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) >> _GLF_IDENTITY(0, (0) >> 0)))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u), 0u | (subgroup_local_id % 2)))))), 1u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), min(_GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), min((uvec2(subgroup_local_id % 2, 1u)), (uvec2(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u), 1u)))), _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), (_GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), ((uvec2(subgroup_local_id % 2, 1u))) - uvec2(0u, 0u))) * uvec2(1u, 1u))))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) % 2, 1u), uvec2(subgroup_local_id % 2, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), clamp(uvec2(subgroup_local_id % 2, 1u), uvec2(subgroup_local_id % 2, 1u), uvec2(subgroup_local_id % 2, 1u)))) | (uvec2(subgroup_local_id % 2, 1u))), (uvec2(112485u, 128054u) & _GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (0u) / 1u)))), 0u))), (uvec2(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (0u) / 1u)))), 0u)))) | uvec2(0u, 0u))) + (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % 2, 1u * (subgroup_local_id % 2)), subgroup_local_id % 2)), 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 1u))) % 2, 1u))))), _GLF_IDENTITY(max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) % 2) >> ((_GLF_IDENTITY(197230u & 195319u, uint(uint(_GLF_IDENTITY(197230u & 195319u, (true ? _GLF_IDENTITY(197230u & 195319u, ~ (~ (197230u & 195319u))) : _GLF_FUZZED(workgroup_size))))))) & 0u)))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))), 1u)), (max(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> ((197230u & 195319u) & 0u)), uint(uint(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> ((197230u & 195319u) & 0u))))))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))), (_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))) | (_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))), 1u))) - uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6999.1872)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_ZERO(0.0, injectionSwitch.x)))))))), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u))) | 0u), 1u), uvec2(uvec2(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u))) | 0u), 1u)))) * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, ~ (~ (2))))), 1u), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), ((uvec2(subgroup_local_id % 2, 1u))) / uvec2(1u, 1u))))), max(uvec2(subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(92652))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) >> _GLF_IDENTITY(0, (0) >> 0)))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), min(~ (subgroup_local_id), ~ (subgroup_local_id))), (~ (subgroup_local_id)) << 0u))) % 2) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))), ((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(0u | (subgroup_local_id % 2), 0u ^ (0u | (subgroup_local_id % 2)))))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), 1u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (_GLF_IDENTITY(uvec2(112485u, 128054u), _GLF_IDENTITY(uvec2(uvec2(uvec2(112485u, 128054u))), ~ (_GLF_IDENTITY(~ (uvec2(uvec2(uvec2(112485u, 128054u)))), (~ (uvec2(uvec2(uvec2(112485u, 128054u))))) | uvec2(0u, 0u))))) & uvec2(0u, 0u)) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 0u, 0u)), (uint(uvec3(subgroup_local_id, 0u, 0u))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) | (2)), 1u), (true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 0u, 0u)), (uint(uvec3(subgroup_local_id, 0u, 0u))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) | (2)), 1u), uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 0u, 0u)), (uint(uvec3(subgroup_local_id, 0u, 0u))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) | (2)), 1u)))) : _GLF_FUZZED(uvec2(11746u, 13119u)))), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(subgroup_local_id % 2, 1u))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) % 2, 1u), uvec2(subgroup_local_id % 2, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, _GLF_IDENTITY(1u, (1u) + 0u)), _GLF_IDENTITY((uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) / (1 | 0)), 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), 1u))) % 2, 1u)))), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u))) ^ ((uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) / (1 | 0)), 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), 1u))) % 2, 1u))))))), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> ((_GLF_IDENTITY(197230u, max(197230u, 197230u)) & 195319u) & 0u)))), 1u), (uvec2(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> ((_GLF_IDENTITY(197230u, max(197230u, 197230u)) & 195319u) & 0u)))), 1u)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> ((_GLF_IDENTITY(197230u, max(197230u, 197230u)) & 195319u) & 0u)))), 1u), (uvec2(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> ((_GLF_IDENTITY(197230u, max(197230u, 197230u)) & 195319u) & 0u)))), 1u)) | (uvec2(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> ((_GLF_IDENTITY(197230u, max(197230u, 197230u)) & 195319u) & 0u)))), 1u))))), uvec2(_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))), 1u))))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u))) | 0u), 1u) * _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) * uvec2(1u, 1u)), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), ((uvec2(subgroup_local_id % 2, 1u))) / uvec2(1u, 1u))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(92652))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) >> _GLF_IDENTITY(0, (0) >> 0)))), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(92652))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) >> _GLF_IDENTITY(0, (0) >> 0)))), ~ (~ (subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(92652))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) >> _GLF_IDENTITY(0, (0) >> 0)))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)))))), 1u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(subgroup_local_id % 2, 1u))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) % 2, 1u), uvec2(subgroup_local_id % 2, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(112485u, _GLF_IDENTITY(128054u, 0u ^ (128054u))) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 1u, 1u))) % 2, 1u))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> ((197230u & 195319u) & 0u)))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))), 1u))))))), max((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) * uvec2(1u, 1u)), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), ((uvec2(subgroup_local_id % 2, 1u))) / uvec2(1u, 1u))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(92652))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) >> _GLF_IDENTITY(0, (0) >> 0)))), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(92652))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) >> _GLF_IDENTITY(0, (0) >> 0)))), ~ (~ (subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(92652))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) >> _GLF_IDENTITY(0, (0) >> 0)))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)))))), 1u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(subgroup_local_id % 2, 1u))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) % 2, 1u), uvec2(subgroup_local_id % 2, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(112485u, _GLF_IDENTITY(128054u, 0u ^ (128054u))) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 1u, 1u))) % 2, 1u))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> ((197230u & 195319u) & 0u)))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))), 1u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) * uvec2(1u, 1u)), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), ((uvec2(subgroup_local_id % 2, 1u))) / uvec2(1u, 1u))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(92652))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) >> _GLF_IDENTITY(0, (0) >> 0)))), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(92652))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) >> _GLF_IDENTITY(0, (0) >> 0)))), ~ (~ (subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(92652))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) >> _GLF_IDENTITY(0, (0) >> 0)))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)))))), 1u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(subgroup_local_id % 2, 1u))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) % 2, 1u), uvec2(subgroup_local_id % 2, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(112485u, _GLF_IDENTITY(128054u, 0u ^ (128054u))) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 1u, 1u))) % 2, 1u))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> ((197230u & 195319u) & 0u)))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))), 1u))))))))), (uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u))) | 0u), 1u) * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), ((uvec2(subgroup_local_id % 2, 1u))) / uvec2(1u, 1u))))), max(uvec2(subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(92652))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) >> _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0))), clamp((_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY(0, 0 | (0))), (_GLF_IDENTITY(0, 0 | (0))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) ^ 0u), _GLF_IDENTITY(1u, (1u) * 1u), 1u)), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))))), uvec2(_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) % 2, (subgroup_local_id % 2) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) % 2, 0u | (subgroup_local_id % 2)))))), 1u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u)) | (subgroup_local_id % 2)))), _GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (1u))), _GLF_IDENTITY((uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) - (0 << _GLF_IDENTITY(int(5), int(5)))), 1u), (uvec2(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : subgroup_local_id)))) % 2, 1u)) | (uvec2(subgroup_local_id % 2, 1u)))), (_GLF_IDENTITY((uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(subgroup_local_id % 2, 1u)))), uvec2(uvec4((_GLF_IDENTITY(uvec2(112485u, 128054u), (uvec2(112485u, 128054u)) ^ uvec2(0u, 0u)) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), 1u)))), 0u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), min(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), max(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) % 2, 1u), uvec2(subgroup_local_id % 2, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_base) : 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 1u))), (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 1u)))) | 0u) % 2, 1u))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> ((197230u & 195319u) & 0u)))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))), 1u)))))))) - uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((1u), uint(uvec4((1u), 1u, 0u, 0u))))) | 0u), 1u) * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(subgroup_local_id % 2, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(workgroup_id))), 1u))))))))), _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)) | _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), ((uvec2(subgroup_local_id % 2, 1u))) / uvec2(1u, 1u)), max(_GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)) | _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), ((uvec2(subgroup_local_id % 2, 1u))) / uvec2(1u, 1u)), ((uvec2(subgroup_local_id % 2, 1u)) | _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), ((uvec2(subgroup_local_id % 2, 1u))) / uvec2(1u, 1u))) - uvec2(0u, 0u)), (uvec2(subgroup_local_id % 2, 1u)) | _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), ((uvec2(subgroup_local_id % 2, 1u))) / uvec2(1u, 1u))))))), max(uvec2(subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(92652))), _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), 0 | (_GLF_IDENTITY(2, (2) | (2))))) - 0)) >> _GLF_IDENTITY(0, (0) >> 0)))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) - 0u)) / 1u)))), max(subgroup_local_id % 2, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | 0u)) << 0u), (subgroup_local_id % 2) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) | (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)))))))), 1u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(112485u, 128054u) & uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) ^ 0u))) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (true ? _GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), uvec2(0u, 0u) ^ (uvec2(subgroup_local_id % 2, 1u))) : _GLF_FUZZED(uvec2(124751u, 61547u)))), _GLF_IDENTITY((uvec2(subgroup_local_id % 2, 1u)), uvec2(uvec3((uvec2(subgroup_local_id % 2, 1u)), 1u))) | (uvec2(subgroup_local_id % 2, 1u))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-780.412) : 0.0)), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)) | (subgroup_local_id)) % 2, 1u), uvec2(subgroup_local_id % 2, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % 2, 1u), (uvec2(112485u, 128054u) & uvec2(0u, 0u)) + (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) % 2, 1u), (uvec2(subgroup_local_id % 2, 1u)) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), uint(uvec3(subgroup_local_id, 1u, 1u))) % 2, 1u))))), max(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> ((197230u & 195319u) & 0u)))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))), 1u)))))))))))))) == 0)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, log(1.0), 0.0, 1.0))).y)))), ! (! (bool(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), false)))) || false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-1808.5035)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y) && true), false, false, false))))))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(443.623), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.5)), bvec2(true, false))).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-1808.5035)), float(injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), ! (! (bool(true)))))), injectionSwitch[1])).y) && true), false, false, false)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(443.623), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(443.623), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(443.623), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(443.623), (injectionSwitch)[1])) - vec2(0.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.5)), bvec2(true, _GLF_IDENTITY(false, true && (false))))).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-1808.5035)), float(injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), ! (! (bool(true)))))), injectionSwitch[1])).y) && true), false, false, false)))))))))))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((8548.0765))), _GLF_IDENTITY(vec2(_GLF_FUZZED(76.43), (injectionSwitch)[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_FUZZED(76.43), (injectionSwitch)[1])), min(mat2(1.0) * (vec2(_GLF_FUZZED(76.43), (injectionSwitch)[1])), mat2(1.0) * (vec2(_GLF_FUZZED(76.43), (injectionSwitch)[1]))))), bvec2(false, true))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((8548.0765))), _GLF_IDENTITY(vec2(_GLF_FUZZED(76.43), (injectionSwitch)[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_FUZZED(76.43), (injectionSwitch)[1])), min(mat2(1.0) * (vec2(_GLF_FUZZED(76.43), (injectionSwitch)[1])), mat2(1.0) * (vec2(_GLF_FUZZED(76.43), (injectionSwitch)[1]))))), bvec2(false, true))).y))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                }
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY((2) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | ((2) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(_injected_loop_counter))))), 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u)], uint(2), 4, _GLF_IDENTITY(64, int(ivec4(64, 0, 0, 1))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), max(0 | (4), 0 | _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), 1 * ((4))), _GLF_IDENTITY((4), 0 | ((4)))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, (4) | (4)), 4, _GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (0 ^ (4)) | 0)))))));
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(97.09)), float(injectionSwitch.y), bool(true)))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)) && (injectionSwitch.x > injectionSwitch.y)) || false))))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false)))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false)))), false)))))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), true, true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), false, false))))), false)))), _GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) && true));
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0)))) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0)), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec3(8452.5047, 8.5, -54.37)[1]) : _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), clamp(float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0)))), vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((0.3))), bool(false))))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))), (false ? _GLF_FUZZED(56.55) : float(mat2x4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) - 0.0)), determinant(mat4(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-715.831)), bool(false))), 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), vec3(1.0, 1.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), max(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7543.5532) : 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), clamp(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), (true ? mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0) : _GLF_FUZZED(mat4(0.6, 0.7, -8.2, 3.3, 1072.1153, -8.6, -3.1, -44.77, -882.730, -487.930, -70.85, 28.65, -3938.9437, -8.0, -3493.1460, -8.6))))), max(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, abs(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))), (true ? _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, abs(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))), clamp(float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, abs(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))), float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, abs(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))), float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, abs(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))))) : _GLF_FUZZED(dot(vec4(-31.71, -8.5, 62.81, 586.933), vec4(519.405, 2.9, 6.0, -0.1)))))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))))))))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.6) : 0.0))))), 1.0, 1.0)), 0.0, exp(0.0), abs(0.0), tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
