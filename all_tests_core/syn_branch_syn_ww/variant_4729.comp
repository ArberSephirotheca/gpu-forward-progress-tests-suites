#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), true && ((injectionSwitch.x < injectionSwitch.y)))), true))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) + abs(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) + abs(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))))[0], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) + abs(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(22.79)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), bool(bvec3(_GLF_IDENTITY(true && (! (false)), false || (true && (! (false)))), true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(96347u, 33027u, 31299u)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(96347u, 33027u, 31299u)))), (false ? _GLF_FUZZED(uvec3(88223u, 28745u, 151372u)) : _GLF_IDENTITY(~ (gl_WorkGroupSize), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(96347u, 33027u, 31299u))))))) | uvec3(0u, 0u, 0u))), ((~ (gl_WorkGroupSize))) | ((~ (gl_WorkGroupSize)))))) * uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(true ? workgroup_id : _GLF_FUZZED(subgroup_local_id), min(true ? workgroup_id : _GLF_FUZZED(subgroup_local_id), true ? workgroup_id : _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u), (uvec2(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)) | (uvec2(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)), clamp(_GLF_IDENTITY((true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)), max((true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)), (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)))), (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)), _GLF_IDENTITY((true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)), (true ? (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)) : _GLF_FUZZED(100429u)))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(198739u))), 0u ^ (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) ^ 0u) | (workgroup_size), (_GLF_IDENTITY((workgroup_size) | (workgroup_size), ((workgroup_size) | (workgroup_size)) | ((workgroup_size) | (workgroup_size)))) | (_GLF_IDENTITY((workgroup_size) | (workgroup_size), uint(uvec4((workgroup_size) | (workgroup_size), 0u, 1u, 1u))))))) : subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) ^ 0u) | (workgroup_size), (_GLF_IDENTITY((workgroup_size) | (workgroup_size), ((workgroup_size) | (workgroup_size)) | ((workgroup_size) | (workgroup_size)))) | (_GLF_IDENTITY((workgroup_size) | (workgroup_size), uint(uvec4((workgroup_size) | (workgroup_size), 0u, 1u, 1u))))))) : subgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 0u)), (uint(uvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) ^ 0u) | (workgroup_size), (_GLF_IDENTITY((workgroup_size) | (workgroup_size), ((workgroup_size) | (workgroup_size)) | ((workgroup_size) | (workgroup_size)))) | (_GLF_IDENTITY((workgroup_size) | (workgroup_size), uint(uvec4((workgroup_size) | (workgroup_size), 0u, 1u, 1u))))))) : subgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 0u))) | (uint(uvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) ^ 0u) | (workgroup_size), (_GLF_IDENTITY((workgroup_size) | (workgroup_size), ((workgroup_size) | (workgroup_size)) | ((workgroup_size) | (workgroup_size)))) | (_GLF_IDENTITY((workgroup_size) | (workgroup_size), uint(uvec4((workgroup_size) | (workgroup_size), 0u, 1u, 1u))))))) : subgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u, 0u)))))))), _GLF_IDENTITY(max((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-299.541, -542.151)) : injectionSwitch)).y)) ? _GLF_FUZZED(workgroup_size) : subgroup_id), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(workgroup_size) : subgroup_id), min((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u))))), 0u ^ (_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u))))))) | (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), max(uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), _GLF_IDENTITY(uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), 0u + (uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))))))))))))) : subgroup_id), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))).y)) ? _GLF_FUZZED(workgroup_size) : subgroup_id, max(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))), mat3x2(mat3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))), (mat3x2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))) * mat3(1.0)))))))).y)) ? _GLF_FUZZED(workgroup_size) : subgroup_id, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch), vec2(mat4x2(false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch), determinant(mat4(1.0, sqrt(1.0), 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, 1.0))))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))).y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))))))))), _GLF_IDENTITY((max((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-299.541, -542.151)) : injectionSwitch)).y)) ? _GLF_FUZZED(workgroup_size) : subgroup_id), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(workgroup_size) : subgroup_id), min((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u))))))) | (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u))), (uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))) ^ uvec3(0u, 0u, 0u))))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u))))), (_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u)))))) | 0u)))))) : subgroup_id), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), max(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(vec2((_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))[0], (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))[1]), vec2(_GLF_FUZZED(175.374), _GLF_FUZZED(-354.614)), bvec2(false, false)))))).y)) ? _GLF_FUZZED(workgroup_size) : subgroup_id, max(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))).y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch)), vec2(mat2((false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch)), 0.0, log(1.0))))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch)), vec2(mat2((false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch)), 0.0, log(1.0))))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))).y)) && true)) ? _GLF_FUZZED(workgroup_size) : subgroup_id))))))) / 1u, (true ? (max((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-299.541, -542.151)) : injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-299.541, -542.151)) : injectionSwitch)).y)), false)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-299.541, -542.151)) : injectionSwitch)).y)), false))))) ? _GLF_FUZZED(workgroup_size) : subgroup_id), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(workgroup_size) : subgroup_id), min((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), 0u, _GLF_IDENTITY(1u, max(1u, 1u)))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u))))))) | (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u))), (uvec3(workgroup_size, 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), max(1u, 1u)))) ^ uvec3(0u, 0u, 0u))))), 0u | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(1u, max(1u, 1u))))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : workgroup_size)), 0u, _GLF_IDENTITY(1u, max(1u, 1u)))), max(uint(uvec3(_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : workgroup_size)), 0u, _GLF_IDENTITY(1u, max(1u, 1u)))), uint(uvec3(_GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : workgroup_size)), 0u, _GLF_IDENTITY(1u, max(1u, 1u)))))))) | 0u)))))) : subgroup_id), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), max(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(vec2((_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))[0], (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))[1]), vec2(_GLF_FUZZED(175.374), _GLF_FUZZED(-354.614)), bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), false)))))).y)) ? _GLF_FUZZED(workgroup_size) : subgroup_id, max(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))).y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch)), vec2(mat2((false ? _GLF_FUZZED(cosh(injectionSwitch)) : _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) * exp(vec2(0.0, 0.0)))), 0.0, log(1.0))))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch)), vec2(mat2((false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch)), 0.0, log(1.0)))), (false ? _GLF_FUZZED((uvec2(43763u, 134294u) , sqrt(injectionSwitch))) : _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch), (false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch)) + vec2(0.0, 0.0))), vec2(mat2((false ? _GLF_FUZZED(cosh(injectionSwitch)) : (injectionSwitch)), 0.0, _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0))))))) * mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(1.0, 1.0)))).y)) && true)) ? _GLF_FUZZED(workgroup_size) : subgroup_id))))))) / 1u : _GLF_FUZZED(subgroup_id)))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (0 << _GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) | (1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1))) | 0)) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) | (_GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) >> 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3180.5676) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(1.8)))) / 1.0)), float(_GLF_FUZZED(vec4(1.0, -5.5, -7.6, 8222.6630).w)), bool(false)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3180.5676) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(1.8)))) / 1.0)), float(_GLF_FUZZED(vec4(1.0, -5.5, -7.6, 8222.6630).w)), bool(false))))), float(_GLF_FUZZED(-639.479)), bool(false))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), ~ (~ (subgroup_local_id))) + 1), _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), max((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id))))), max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)))))) + 0u))) + 1), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id))))), max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)))))) + 0u))) + 1) : _GLF_FUZZED(workgroup_size))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id))), ~ (~ (subgroup_local_id))) + 1), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(1195u) : 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) * 1u)) + 1), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), ~ (~ (subgroup_local_id))) + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), ~ (~ (subgroup_local_id))) + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) + 0u)))), (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id))), ~ (~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id), max(_GLF_IDENTITY(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id), 0u + (clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id))), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id))), min(~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), subgroup_local_id)), subgroup_local_id))), ~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)), subgroup_local_id)), subgroup_local_id))), clamp((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)), subgroup_local_id)), subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)), subgroup_local_id)), subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)), subgroup_local_id)), subgroup_local_id))))))), ~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id))))))) + 1)))))) + 0u))) % subgroup_size, ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u))))) + 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), false), true)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1091.0491) : injectionSwitch.y))), float(_GLF_FUZZED(-9473.4844)), bool(false)), (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y) - 0.0), injectionSwitch.y)), (false ? _GLF_FUZZED(-1091.0491) : injectionSwitch.y))), float(_GLF_FUZZED(-9473.4844)), bool(false))) - 0.0)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true, false)))) || false)) && true))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), min(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), float(vec3(injectionSwitch.y, tan(0.0), 1.0)))))), true && (_GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), min(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), float(vec3(injectionSwitch.y, tan(0.0), 1.0)))))), true && (_GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), min(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), float(vec3(injectionSwitch.y, tan(0.0), 1.0)))))), ! (! (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), min(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), float(vec3(injectionSwitch.y, tan(0.0), 1.0))))))))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), min(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), float(vec3(injectionSwitch.y, tan(0.0), 1.0)))))), true && (_GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), min(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), float(vec3(injectionSwitch.y, tan(0.0), 1.0)))))), true && (_GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), min(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), float(vec3(injectionSwitch.y, tan(0.0), 1.0)))))), ! (! (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), min(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), float(vec3(injectionSwitch.y, tan(0.0), 1.0))))))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))) + vec2(0.0, 0.0)).y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))) + vec2(0.0, 0.0)).y, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), cos(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))) + vec2(0.0, 0.0)).y, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), cos(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))) + vec2(0.0, 0.0)).y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))) + vec2(0.0, 0.0)).y, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), cos(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))) + vec2(0.0, 0.0)).y, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), cos(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))))))
  return;
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) - (0u ^ 0u)))], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), min(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(-66718) : (1))), (1))) >> 0)), clamp(uint(1), uint(1), uint(_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(4, (4) << 0), 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) | (4)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x))) / abs(1.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, false, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, false, false)), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, (_GLF_IDENTITY((0), _GLF_IDENTITY(((0)) | (_GLF_IDENTITY((0), ((0)) | ((0)))), (((0)) | (_GLF_IDENTITY((0), ((0)) | ((0))))) >> 0)) << 0) >> 0)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))), true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))), true)))))), (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))), true))))))) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(ceil(vec2(9.4, 8.8)), (ceil(vec2(9.4, 8.8))) * mat2(1.0))) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_DEAD(false))) && true, _GLF_IDENTITY(bool(bool(((_GLF_DEAD(false))) && true)), bool(bvec2(bool(bool(((_GLF_DEAD(false))) && true)), false))))), ! (! (! (_GLF_IDENTITY(((_GLF_DEAD(false))) && true, _GLF_IDENTITY(bool(bool(((_GLF_DEAD(false))) && true)), bool(bvec2(bool(bool(((_GLF_DEAD(false))) && true)), false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.7)), bool(false)))))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(2), int(2))) + (4)));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! _GLF_IDENTITY((false), false || ((false)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, tan(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)) + (injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) || false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-7987.2155)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(mix(float(_GLF_FUZZED(-7987.2155)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(27.72), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0)))) - vec2(0.0, 0.0)))).y))))), float(_GLF_FUZZED(-1.9)), bool(false)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.7)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(float(mat4(mix(float(_GLF_FUZZED(-3.7)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), abs(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(tan(0.0)), 0.0, 1.0)), 1.0 * (_GLF_IDENTITY(float(mat4(mix(float(_GLF_FUZZED(-3.7)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), abs(1.0), 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), tan(0.0), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, abs(tan(0.0)), 0.0, 1.0)), (float(mat4(mix(float(_GLF_FUZZED(-3.7)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), abs(1.0), 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), tan(0.0), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, abs(tan(0.0)), 0.0, 1.0))) - 0.0))))) > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (4) << 0), 4), (min(4, 4)) | 0)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
}
