#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))), bool(true))) > injectionSwitch.y))), false, false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), false, false)), bool(bvec4(bool(bvec3(! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))), false, false)), false, true, false)))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))), bool(true))) > injectionSwitch.y))), false, false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), false, false)), bool(bvec4(bool(bvec3(! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))), false, false)), false, true, false)))))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))), bool(true))) > injectionSwitch.y))), false, false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), false, false)), bool(bvec4(bool(bvec3(! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))), false, false)), false, true, false)))))), true, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -7028.1137))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (true ? _GLF_IDENTITY(gl_WorkGroupID.x, 1u * (gl_WorkGroupID.x)) : _GLF_FUZZED(num_workgroup))), clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), gl_WorkGroupID))) | uvec3(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 1u * (0u)))))), 0u, 0u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) / 1.0))), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), gl_WorkGroupID))) | uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), uint(_GLF_IDENTITY(uvec3(max(0u, 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(max(0u, 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec3(max(0u, 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u, 0u))), (_GLF_IDENTITY((gl_WorkGroupID), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupID)), ~ (~ (_GLF_IDENTITY(~ ((gl_WorkGroupID)), clamp(_GLF_IDENTITY(~ ((gl_WorkGroupID)), (~ ((gl_WorkGroupID))) | (~ ((gl_WorkGroupID)))), ~ ((gl_WorkGroupID)), ~ ((gl_WorkGroupID))))))))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, 0 + (2))])), gl_WorkGroupID))) | uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) + 0u)) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), 0u, 0u)))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7871.8652 + -4.7)), _GLF_FUZZED((- (+ 36.03)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(vec3((injectionSwitch)[0], 0.0, 0.0), (vec3((injectionSwitch)[0], 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)))), (injectionSwitch)[1]), bvec2(true, true))).y), _GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec3(2, 0, 1)))) / _GLF_IDENTITY(1, clamp(1, 1, 1))), 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(ivec3(-87991, -73852, 50725)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), int(ivec3(2, 0, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)))))) / 1), 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), int(ivec3(2, 0, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)))))) / 1), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) >> (ivec3(0, 0, 0) | ivec3(0, 0, 0)))))))])), gl_WorkGroupID))) | uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)))), (~ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupID[1])), gl_WorkGroupID[2])), gl_WorkGroupID))) | uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), 0u | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u, 0u))))) | (~ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(1, int(ivec2(1, 1)))], gl_WorkGroupID[2])), gl_WorkGroupID))) | uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)))))))), (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) / 1u))), gl_WorkGroupID))) | uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)))) >> uvec3(0u, 0u, 0u))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)))).x, _GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ ((gl_WorkGroupID.x)))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)))).x, _GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ ((gl_WorkGroupID.x)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)))).x, _GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ ((gl_WorkGroupID.x)))) << 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(90.65)), vec2(_GLF_FUZZED(5.8), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) - vec2(0.0, 0.0)), (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY((bool(bool((false)))), false || ((bool(bool((false)))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-4775.2709 + (-41.81 / -1.0)))), float(injectionSwitch.y), bool(true))))), false || _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(mix(8059.0261, clamp(-9.9, -26.13, -285.125), -2.3)) : injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-18.82))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) || false)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))), (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false))) || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), true && (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), true && (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))))))))))), (bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), true && (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))))))))) && true))), bool(bvec4(bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(true, ! (! (true))) && (bool((false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), true && _GLF_IDENTITY((_GLF_IDENTITY(bool((false)), (bool((false))) && true)), ((bool((false)))) && true))), bool(bool(bool(_GLF_IDENTITY(bool((false)), true && _GLF_IDENTITY((bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))), ((bool((false)))) && true)))))), bool(bvec4(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && (false)))), (bool((_GLF_IDENTITY(false, true && (false))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (bool((false))))), bool(bvec4(bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(true, ! (! (true))) && (bool((false))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, false))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), true && _GLF_IDENTITY((bool((false))), true && ((bool((false))))))), bool(bvec4(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), (bool((false))) && true), (_GLF_IDENTITY(bool((false)), (bool((false))) && true)) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-727.313) : injectionSwitch.y))))))), false, false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), true && _GLF_IDENTITY((bool((false))), true && ((bool((false)))))), (_GLF_IDENTITY(bool((false)), true && _GLF_IDENTITY((bool((false))), true && ((bool((false))))))) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(bool((false)), (bool((false))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(bool((false)), (bool((false))) && true))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)) && (_GLF_IDENTITY(bool((false)), (bool((false))) && true))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false, false)), bool(bvec4(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(bool((false)), (bool((false))) && true))), true && (_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(bool((false)), (bool((false))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.1, -8.2)))).y)))), false, false)), true, false, false))))))))))) || false))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) || (bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(true && (bool((false))), (true && (bool((false)))) && true))))), bool(bvec4(bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9833.5342)), vec2(_GLF_FUZZED(-6350.9284), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(false, ! (! (false))), false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))), bool(bvec4(bool(_GLF_IDENTITY(bool((false)), true && _GLF_IDENTITY((bool((false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((bool((false)))), bool(bool(! ((bool((false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((bool((false)))), bool(bool(! ((bool((false)))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool((false)))), false || (((bool((false)))))), bool(bool(! ((bool((false)))))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((bool((false)))), bool(bool(! ((bool((false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((bool((false)))), bool(bool(! ((bool((false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((bool((false)))), bool(bool(! ((bool((false))))))), bool(bvec2(_GLF_IDENTITY(! ((bool((false)))), bool(bool(! ((bool((false))))))), true))))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(true && (bool((false))), true && (true && (bool((false)))))), false || (_GLF_IDENTITY(bool((false)), true && (bool(_GLF_IDENTITY((false), bool(bvec3((false), true, false))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true)), true && (bool((false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), true && (bool((false))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(true && (bool((false))), true && (true && (bool((false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(true && (bool((false))), true && (true && (bool((false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false, false)))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), true && (bool(_GLF_IDENTITY((false), ! (! ((false)))))))), bool(bvec4(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(bool(false))))), true && (bool((false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, true, false)))) || false)) && true))) || false)))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, true && (true))))), bool(bvec4(bool(bool(_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, true && (true))))), true, false, true)))) && true)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! _GLF_IDENTITY((false), true && ((false)))), bool(bvec4(false || (! (false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.7)), float(injectionSwitch.y), bool(true)))) * 1.0))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), _GLF_IDENTITY(false || (! (false)), bool(bvec3(_GLF_IDENTITY(false || (! (false)), true && (false || (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), false, true), bvec3(bvec4(bvec3((! (false)), false, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec4(bvec3((! (false)), false, true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec4(bvec3((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6106.4186)), bool(false))))) || (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), true, false))))))))), false, true), false)))))))) && true)))) && true, bool(bool((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (false)), false, true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec3(bvec3((! (false)), false, true)))), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, true), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, true), false))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, true), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, true), false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, true), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, true), false))))))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec4(bvec3((! (false)), false, true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))))))) && true), false, true), false)))))))) && true)))) && true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), _GLF_IDENTITY(false || (! (false)), bool(bvec3(_GLF_IDENTITY(false || (! (false)), true && (false || (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(false, ! (! (false))) || (bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), false, true), bvec3(bvec4(bvec3((! (false)), false, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec4(bvec3((! (false)), false, true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec4(bvec3((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6106.4186)), bool(false))))) || (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), true, false))))))))), false, true), false)))))))) && true)))) && true, bool(bool((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (false)), false, true), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec3(bvec3((! (false)), false, true)))), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, true), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, true), false))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, true), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, true), false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, true), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3((! (false)), false, true), false))))))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec4(bvec3((! (false)), false, true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))))))) && true), false, true), false)))))))) && true)))) && true)))), true), false, true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (true) || false), false), true)))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.2), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-21299)))) / 1)]), vec2((injectionSwitch)[0], _GLF_FUZZED((277.584 - (570.201 - -76.07)))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))) + 1, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, ((subgroup_local_id) << 0u) >> 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ivec2(0, 0) | (ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(1, 1))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) >> 0u)) | 0u)) << 0u) + 1)) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), false)))))))) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1))), (1) / _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3)))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), 1 * (1 << _GLF_IDENTITY(int(3), int(3))))))) | (((1 << _GLF_IDENTITY(int(3), int(3))))))) ^ 0)), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, (false ? _GLF_FUZZED(findMSB(36050)) : 3)))))))) | ((1 << _GLF_IDENTITY(int(3), int(3))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | ((1 << _GLF_IDENTITY(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))), min(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | (3)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, clamp(3, 3, 3)))), 0 + (_GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (true ? 1 << _GLF_IDENTITY(int(3), int(3)) : _GLF_FUZZED(393)))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, max(3, 3)))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-83690))) << _GLF_IDENTITY(int(3), int(3))) - 0), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), clamp(1 << _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (1 << _GLF_IDENTITY(int(3), int(3))))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), min(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3))))))))), (int(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), _GLF_IDENTITY(int(3), max(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0)))), (1 << _GLF_IDENTITY(int(3), int(3))) - _GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0)), min(int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0)), int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))))) << _GLF_IDENTITY(int(3), int(3)))))) >> 0)))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) << (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)) | 0, 0 | ((int(6)) | 0))))))))) | (1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), int(3))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, 0 + (3))))) << 0))))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) | (_GLF_IDENTITY(1, (1) ^ 0))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))) - 0)))), 1, 0), max(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(4671) : 3)), 3))), (~ (_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(4671) : 3)), 3)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(4671) : 3)), 3))), (~ (_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(4671) : 3)), 3)))) - 0)))))), _GLF_IDENTITY(int(3), 0 | (int(3)))))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(-52676) : int(3)))) - 0)), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, 1 * (3))) << 0))))) | ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (0 | (0 ^ 0)) | (int(3))), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3)))), 0 ^ (((1 << _GLF_IDENTITY(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, min(3, 3))), int(3), _GLF_IDENTITY(int(3), (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(3), (int(3)) >> 0)))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | ((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)) << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), ~ (~ (int(3))))) * 1)) / 1), int(3)))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (true ? 3 : _GLF_FUZZED(_GLF_IDENTITY(45971, (true ? 45971 : _GLF_FUZZED(24413))))))), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(-67612) : (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, 1 * (3))), (false ? _GLF_FUZZED(bitfieldExtract(25513, (-38802 * 87574), -874)) : int(_GLF_IDENTITY(3, 1 * (3))))))) / 1)))), (true ? 1 << _GLF_IDENTITY(int(3), int(3)) : _GLF_FUZZED(abs(int(-7278.9789)))))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) * 1), int(3))))), _GLF_IDENTITY(1, int(int(1))), 0), ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3)))), (((1 << _GLF_IDENTITY(int(3), int(3))))) | (((1 << _GLF_IDENTITY(int(3), int(3)))))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-67612), (_GLF_IDENTITY(_GLF_FUZZED(-67612), (_GLF_FUZZED(-67612)) | (_GLF_FUZZED(-67612)))) >> (1 ^ 1)) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1)))), 1)) << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0))) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71843) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0))), _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)))))), (true ? ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)))))) : _GLF_FUZZED(-74946))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(28367) : 3))))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0)), int(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, max(3, 3)))))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3)))), (((1 << _GLF_IDENTITY(int(3), int(3))))) | (((1 << _GLF_IDENTITY(int(3), int(3)))))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-67612), (_GLF_IDENTITY(_GLF_FUZZED(-67612), (_GLF_FUZZED(-67612)) | (_GLF_FUZZED(-67612)))) >> (1 ^ 1)) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1)))), 1)) << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0))) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71843) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0))), _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)))))), (true ? ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)))))) : _GLF_FUZZED(-74946))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(28367) : 3))))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0)), int(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, max(3, 3)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3)))), (((1 << _GLF_IDENTITY(int(3), int(3))))) | (((1 << _GLF_IDENTITY(int(3), int(3)))))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-67612), (_GLF_IDENTITY(_GLF_FUZZED(-67612), (_GLF_FUZZED(-67612)) | (_GLF_FUZZED(-67612)))) >> (1 ^ 1)) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1)))), 1)) << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0))) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71843) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0))), _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)))))), (true ? ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)))))) : _GLF_FUZZED(-74946))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(28367) : 3))))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0)), int(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, max(3, 3)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3)))), (((1 << _GLF_IDENTITY(int(3), int(3))))) | (((1 << _GLF_IDENTITY(int(3), int(3)))))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-67612), (_GLF_IDENTITY(_GLF_FUZZED(-67612), (_GLF_FUZZED(-67612)) | (_GLF_FUZZED(-67612)))) >> (1 ^ 1)) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1)))), 1)) << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0))) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71843) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0))), _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)))))), (true ? ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)))))) : _GLF_FUZZED(-74946))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(28367) : 3))))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0)), int(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, max(3, 3)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3)))), (((1 << _GLF_IDENTITY(int(3), int(3))))) | (((1 << _GLF_IDENTITY(int(3), int(3)))))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-67612), (_GLF_IDENTITY(_GLF_FUZZED(-67612), (_GLF_FUZZED(-67612)) | (_GLF_FUZZED(-67612)))) >> (1 ^ 1)) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1)))), 1)) << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0))) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71843) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0))), _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)))))), (true ? ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)))))) : _GLF_FUZZED(-74946))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(28367) : 3))))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0)), int(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, max(3, 3))))))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(3), int(3)))), (((1 << _GLF_IDENTITY(int(3), int(3))))) | (((1 << _GLF_IDENTITY(int(3), int(3)))))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-67612), (_GLF_IDENTITY(_GLF_FUZZED(-67612), (_GLF_FUZZED(-67612)) | (_GLF_FUZZED(-67612)))) >> (1 ^ 1)) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) | ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1)))), 1)) << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0))) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71843) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0))), _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)))))), (true ? ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) / 1)))))) : _GLF_FUZZED(-74946))) | ((1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(28367) : 3))))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-67612) : (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0)), int(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, max(3, 3))))))))))))))) << 0))), 1, 0))))))), 4, 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) * determinant(mat3(abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) - 0.0)) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(vec2(128.935, 50.94)))).x > injectionSwitch.y))) || false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)))))))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0))) < injectionSwitch.y)) && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), ! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), bool(bool((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))))))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(63.17))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), 4, 4)), int(ivec2(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), 4, 4)), 1))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), 4, 4))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), 4, _GLF_IDENTITY(4, 0 | (4))))), (false ? _GLF_FUZZED(14168) : (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), 4, 4)))))) << 0) - 0));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true)))) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), true)), false)))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, determinant(mat4(abs(0.0), 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(0.0))), 1.0))), (false ? _GLF_FUZZED(228.597) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (! (! (_GLF_IDENTITY(false, false || (false))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), bvec3(bvec3(bvec3(bvec2(true, true), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, true, false))), bool(bvec4(! (bool(bvec4(true, false, true, false))), true, true, false)))))), bool(bool((_GLF_IDENTITY(false, (false) || false)) && true)))), true, false))))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))) && true), true, true, true))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
