#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), float(_GLF_FUZZED(5.9)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true))))), (bool(bvec4(false, false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true)), bool(bvec2(false, false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (bool(bvec4(false, false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true)), bool(bvec2(false, false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (bool(bvec4(false, false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true)), bool(bvec2(false, false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (bool(bvec4(false, false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true)), bool(bvec2(false, false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (bool(bvec4(false, false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true)), _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))) && true)))))), true, true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), (bool((false))) && true))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).y)) && (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), true, _GLF_IDENTITY(true, bool(bool(true))), true)), true && (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)), true, true, true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7790.5754)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(14.87) : injectionSwitch.y))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(-931.611)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec4(gl_NumWorkGroups.x, 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) / uvec4(1u, 1u, 1u, 1u)), (_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec4(gl_NumWorkGroups.x, 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5538.8630)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-591.613)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), max(_GLF_IDENTITY((workgroup_size * workgroup_id), _GLF_IDENTITY((true ? (workgroup_size * workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(atomicExchange(subgroup_local_id, workgroup_size)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size), (max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) >> 0u)) : _GLF_FUZZED(workgroup_size))))), uint(uvec4(_GLF_IDENTITY((true ? (workgroup_size * workgroup_id) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size)))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size))))) | (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | _GLF_IDENTITY((workgroup_size), ((workgroup_size)) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), workgroup_size)) : _GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | _GLF_IDENTITY((workgroup_size), ((workgroup_size)) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), workgroup_size)) : _GLF_FUZZED(workgroup_size))))))))), ((true ? (workgroup_size * workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size)), clamp((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size)), ~ (~ ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size)), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u | (workgroup_size), min(0u | (workgroup_size), _GLF_IDENTITY(0u | (workgroup_size), (true ? 0u | (workgroup_size) : _GLF_FUZZED(subgroup_local_id)))))), workgroup_size)) : _GLF_FUZZED(workgroup_size)))), uint(uint(uint(uint((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u | (workgroup_size), min(0u | (workgroup_size), _GLF_IDENTITY(0u | (workgroup_size), (true ? 0u | (workgroup_size) : _GLF_FUZZED(subgroup_local_id)))))), workgroup_size)) : _GLF_FUZZED(workgroup_size)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size)), clamp((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size)), ~ (~ ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true, false))), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u))), workgroup_size)) : _GLF_FUZZED(workgroup_size)), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u | (workgroup_size), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (0u | (workgroup_size))), min(0u | (workgroup_size), _GLF_IDENTITY(0u | (workgroup_size), (true ? 0u | (workgroup_size) : _GLF_FUZZED(subgroup_local_id)))))), workgroup_size)) : _GLF_FUZZED(workgroup_size)))), uint(uint(uint(uint((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u | (workgroup_size), _GLF_IDENTITY(min(0u | (workgroup_size), _GLF_IDENTITY(0u | (workgroup_size), (true ? 0u | (workgroup_size) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(0u | (workgroup_size), _GLF_IDENTITY(0u | (workgroup_size), (true ? 0u | (workgroup_size) : _GLF_FUZZED(subgroup_local_id)))) : _GLF_FUZZED(subgroup_id))))), workgroup_size)) : _GLF_FUZZED(workgroup_size))))))))))) / 1u)))))))) - 0u), 0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))), (workgroup_size * workgroup_id))), (_GLF_IDENTITY((workgroup_size * workgroup_id), max(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), _GLF_IDENTITY((true ? (workgroup_size * workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size))))), uint(uvec4(_GLF_IDENTITY((true ? (workgroup_size * workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size), (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size), (max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) * 1u)) / 1u)) : _GLF_FUZZED(workgroup_size)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size), (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size), (max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) * 1u)) / 1u)) : _GLF_FUZZED(workgroup_size))) | 0u)))), ((true ? (workgroup_size * workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size)))))) - 0u), 0u, 0u, 0u)))), (_GLF_IDENTITY((workgroup_size * workgroup_id), _GLF_IDENTITY((true ? (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size))))), uint(uvec4(_GLF_IDENTITY((true ? (workgroup_size * workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size), (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size), (max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) * 1u)) / 1u)) : _GLF_FUZZED(workgroup_size))))), ((true ? (workgroup_size * workgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) : _GLF_FUZZED(workgroup_size)))))) - 0u), 0u, 0u, 0u))))) | 0u), (workgroup_size * workgroup_id)))) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), workgroup_id))) << 0u)) / 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ((_GLF_IDENTITY(true, (true) && true))) || false))) && true) && (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.3, 0.8)) : injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + subgroup_base, ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | 0u) ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true) ? subgroup_local_id : _GLF_FUZZED(workgroup_id)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.8) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) && true), false, true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)) * (1u & 1u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.4))), 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(540.364, -1.3, 4121.9122, -17.72)) : _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.4))), 1.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.4))), 1.0, 0.0, 0.0))))))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1710.1727)), bool(false))))) ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)) * (1u & 1u), 1u * ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u)) * (1u & 1u))) : _GLF_FUZZED((subgroup_base --))))), 0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(3u, (3u) | (3u)))))))), _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u, 1u * (_GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u, clamp(((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u, ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_base), _GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uint(subgroup_base), min(_GLF_IDENTITY(uint(subgroup_base), 0u + (uint(subgroup_base))), uint(subgroup_base))))), 0u | (workgroup_base + subgroup_base))), uint(uint(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u | (workgroup_base + subgroup_base)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uint(subgroup_base), min(_GLF_IDENTITY(uint(subgroup_base), 0u + (uint(subgroup_base))), uint(subgroup_base))))), 0u | (workgroup_base + subgroup_base))), uint(uint(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u | (workgroup_base + subgroup_base)))))), (_GLF_IDENTITY(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uint(subgroup_base), min(_GLF_IDENTITY(uint(subgroup_base), 0u + (uint(subgroup_base))), uint(subgroup_base))))), 0u | (workgroup_base + subgroup_base))), uint(uint(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u | (workgroup_base + subgroup_base))))))) | 0u)))))), 1u, 0u)), (uint(uvec3(~ (workgroup_base + subgroup_base), 1u, 0u))) >> 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 0u, 1u, 0u))), 0u)))) - (0u | 0u))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u | (workgroup_base + _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), subgroup_base))))))), 0u | (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), _GLF_IDENTITY(0u | (workgroup_base + subgroup_base), (_GLF_IDENTITY(0u | (workgroup_base + subgroup_base), (_GLF_IDENTITY(0u | (workgroup_base + subgroup_base), ~ (~ (0u | (workgroup_base + subgroup_base))))) | 0u)) | (0u | (workgroup_base + subgroup_base))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u | (workgroup_base + subgroup_base))))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base, workgroup_base)) + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u | (workgroup_base + subgroup_base)))))))) + 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u | (workgroup_base + subgroup_base))))), clamp(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u | (workgroup_base + subgroup_base))))), ~ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u | (workgroup_base + subgroup_base))), ~ (~ (max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u | (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base))) | (subgroup_base)))))))))), ~ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base))))), 0u | _GLF_IDENTITY((workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((workgroup_base + subgroup_base), (true ? (workgroup_base + subgroup_base) : _GLF_FUZZED(workgroup_id))), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base)))))))))) >> 0u), 1u, 0u)), (uint(uvec3(~ (workgroup_base + subgroup_base), 1u, 0u))) >> 0u))), ((_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec2(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 0u)), 1u, 0u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) ^ 0u))))) - (0u | 0u))), _GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u | (workgroup_base + subgroup_base))))), 1u, 0u)), (uint(uvec3(~ (workgroup_base + subgroup_base), 1u, 0u))) >> 0u)))) ^ 0u)) | ((_GLF_IDENTITY(~ (workgroup_base + subgroup_base), _GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), 0u | (workgroup_base + subgroup_base))))), 1u, 0u)), (uint(uvec3(~ (workgroup_base + subgroup_base), 1u, 0u))) >> 0u)))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0)) : _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(4, max(4, 4)));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-1.6 * 84.11)), _GLF_FUZZED(80.20)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), false, true, false))), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(vec4(-24.26, 61.83, -7052.3531, _GLF_IDENTITY(-91.09, (-91.09) - log(1.0))).z)), float(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))), bool(true))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false), true))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false), true))), false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) >> (_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 1, 1))) ^ 0)), 2))), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false))))))), false)), false || (bool(bvec2(false, false)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || _GLF_IDENTITY((bool(bvec2(false, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false, true)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec3((bool(bvec2(false, false))), false, false))), bool(bvec4((bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), true, false, true))))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), true))), true)))), true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), true))), true)))), true, false, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), true))), true)))), true, false, true))), true, true)), (bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), true))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))), false || (bool(_GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec4((bool(bvec2(false, false))), true, false, true)))))))), false, true), true))), true)))), true, false, true))), true, true))) || false))) || false))))))))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5544.2342 * 1485.8309))), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7443.3401)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7443.3401)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7443.3401)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7443.3401)), bool(false)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7443.3401)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7443.3401)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7443.3401)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7443.3401)), bool(false)))))))) - 0.0)), bool(true))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5544.2342 * 1485.8309))), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-741.309)), bool(false))), injectionSwitch[1])).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7443.3401)), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))) - 0.0)), bool(true))) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (5)))), int(5))) >> _GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (5)))), int(5))) >> _GLF_IDENTITY(int(5), int(5)), 0 ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (5)))), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (5)))), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), 0)), min(int(ivec4(4, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 0)), _GLF_IDENTITY(int(ivec4(4, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ~ (~ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1) << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) ^ 0) : _GLF_FUZZED(29807)))) * 1) << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) ^ (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), (_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(1, (1) | (1)))) << _GLF_IDENTITY(int(5), int(5)), 0, 1)))) / ivec3(1, 1, 1)))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))), int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, clamp(5, 5, 5))))) | (5))), int(5)), 0, 1), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))), max(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, clamp(5, 5, 5))))) | (5))), int(5)), 0, 1), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, clamp(5, 5, 5))))) | (5))), int(5)), 0, 1), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))))), 1, 0))))) >> _GLF_IDENTITY(int(5), int(5)))))), 0)), clamp(int(ivec4(4, 1, (_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ~ (~ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1) << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) ^ (ivec3(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) ^ (0 ^ 0))), 0, 1))), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(5), int(5)), 0, 1)))) / ivec3(1, 1, 1), ivec3(1, 1, 1) * ((_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)))) << _GLF_IDENTITY(int(5), int(5)), 0, 1)))) / ivec3(1, 1, 1)))))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (true ? 1 << _GLF_IDENTITY(int(5), int(5)) : _GLF_FUZZED(72378))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) / 1), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), int(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 1, 1))))), 0, 1)) / ivec3(1, 1, 1))))), int(ivec3(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, clamp(5, 5, 5))))) | (5))), int(5)), 0, 1), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) << 0)), int(5)), 0, 1)) / ivec3(1, 1, 1))))), 1, 0))))) >> _GLF_IDENTITY(int(5), int(5)))))), 0)), _GLF_IDENTITY(int(ivec4(4, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (1 & 1) * (_GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5)), ~ (~ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1) << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) | 0))), 0, 1), ivec3(0, 0, 0) ^ (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), (_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), _GLF_IDENTITY(ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(5), int(5)), 0, 1)), max(ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(5), int(5)), 0, 1)), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(5), int(5)), 0, 1)))))) / ivec3(1, 1, 1)))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))), int(ivec3(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, clamp(5, 5, 5))))) | (5))), int(5)), 0, 1), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))), 1, 0))))) >> _GLF_IDENTITY(int(5), int(5)))))), 0)), (_GLF_IDENTITY(int(ivec4(4, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ~ (~ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))), 0, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1) << _GLF_IDENTITY(int(5), int(5)), 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)), ivec3(0, 0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) ^ (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), (_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(5), int(5)), 0, 1)))) / ivec3(1, 1, 1)))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))), int(ivec3(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, clamp(5, 5, 5))))) | (5))), int(5)), 0, 1), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))), 1, 0))))) >> _GLF_IDENTITY(int(5), int(5)))))), 0)), clamp(int(ivec4(4, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ~ (~ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1) << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(_GLF_IDENTITY(0, 0 | (0)), 0, 0) ^ (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), (_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(5), int(5)), 0, 1)))) / ivec3(1, 1, 1)))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))), int(ivec3(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(_GLF_IDENTITY(5, 0 | (_GLF_IDENTITY(5, (5) * int(_GLF_ONE(1.0, injectionSwitch.y))))), (5) | (_GLF_IDENTITY(5, clamp(5, 5, 5))))) | (5))), int(5)), 0, 1), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) + 0)) | (int(5)))))), 0, 1), ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))), 1, 0))))) >> _GLF_IDENTITY(int(5), int(5)))))), 0)), int(ivec4(_GLF_IDENTITY(4, clamp(4, 4, 4)), 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ~ (~ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1) << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) ^ (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), (_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) << 0), int(5)), 0, 1)))) / ivec3(1, 1, 1)))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))), int(ivec3(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, clamp(5, 5, 5))))) | (5))), int(5)), 0, 1), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), int(int(int(5))))))), 0, 1), max(ivec3(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), int(int(int(5))))))), 0, 1), ivec3(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), int(int(int(5))))))), 0, 1))), _GLF_IDENTITY(ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)), (_GLF_IDENTITY(ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)), ivec3(0, 0, 0) | (ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))))) | (ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))), 1, 0))))) >> _GLF_IDENTITY(int(5), int(5)))))), 0)), int(ivec4(4, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), int(5)), ~ (~ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1) << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) ^ (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), (_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | 0), 0, 1)))) / ivec3(1, 1, 1)))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), int(5)), 0, _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(81961)))), (ivec3(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec4(5, 1, 1, 0), (ivec4(5, 1, 1, 0)) | (_GLF_IDENTITY(ivec4(5, 1, 1, 0), (ivec4(5, 1, 1, 0)) | (ivec4(5, 1, 1, 0)))))))), int(5)), 0, 1)) / ivec3(1, 1, 1))))), int(ivec3(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, clamp(5, 5, 5))))) | (5))), int(5)), 0, 1), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), clamp(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)))))))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))), 1, 0))))) >> _GLF_IDENTITY(int(5), int(5)))))), 0))))) - 0), int(ivec4(4, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (5), (~ (5)) ^ 0)))) / 1)), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 ^ (5))), int(5)), ~ (~ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (0 << _GLF_IDENTITY(int(2), int(2))) ^ (5))), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) + (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), clamp(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1) << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) ^ (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) / 1)))))), (_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(int(0))), 0)), 1), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(5), int(5)), 0, 1)))) / ivec3(1, 1, 1)))), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))))), int(ivec3(int(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), clamp(ivec3(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, clamp(5, 5, 5))))) | (5))), int(5)), 0, 1), _GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), ivec3(0, 0, 0) | (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1)), (_GLF_IDENTITY(ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1), (ivec3(1 << _GLF_IDENTITY(int(5), int(5)), 0, 1)) / ivec3(1, 1, 1))) ^ ivec3(0, 0, 0))))), 1, 0))))) >> _GLF_IDENTITY(int(5), int(5)))))), 0))))))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.5), _GLF_FUZZED(-9.2)), bvec2(false, false))))).y))) && true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, (false) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
