#version 460
struct _GLF_struct_4 {
 mat2x3 _f0;
 uint next_virtual_gid;
} ;

struct _GLF_struct_5 {
 float _f0;
 uvec4 _f1;
 _GLF_struct_4 _f2;
 bvec4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat4 _f1;
 uint subgroup_id;
 int _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(bvec2(true)), _GLF_struct_1(mat2x4(1.0), vec3(1.0))), mat4(1.0), gl_SubgroupID, 1);
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_struct_replacement_3.subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_5(1.0, uvec4(1u), _GLF_struct_4(mat2x3(1.0), workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), bvec4(true), uvec2(1u)));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   atomicStore(buf[_GLF_struct_replacement_6._f0._f2.next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_6._f0._f2.next_virtual_gid], uint(2), 4, 64, 4);
  }
}
