#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_42 {
 float _f0;
 bvec3 _f1;
 ivec4 _f2;
 bvec4 _f3;
 mat4x3 _f4;
 mat2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_41 {
 int _f0;
} ;

struct _GLF_struct_40 {
 mat2x3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_39 {
 mat4x2 _f0;
 mat2x4 _f1;
 vec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_38 {
 ivec3 _f0;
 vec2 _f1;
 ivec4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_43 {
 mat4x3 _f0;
 _GLF_struct_38 _f1;
 _GLF_struct_39 _f2;
 _GLF_struct_40 _f3;
 _GLF_struct_41 _f4;
 _GLF_struct_42 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_36 {
 ivec2 _f0;
 mat2x3 _f1;
 uvec4 _f2;
 mat4x2 _f3;
 mat2x4 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_37 {
 ivec4 _f0;
 bvec4 _f1;
 vec3 _f2;
 _GLF_struct_36 _f3;
 mat4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_35 {
 ivec4 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_33 {
 mat4x2 _f0;
 vec4 _f1;
 float _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_32 {
 mat3x2 _f0;
} ;

struct _GLF_struct_31 {
 vec4 _f0;
} ;

struct _GLF_struct_34 {
 mat4x2 _f0;
 _GLF_struct_31 _f1;
 _GLF_struct_32 _f2;
 uint _f3;
 _GLF_struct_33 _f4;
 bool _f5;
 uint _f6;
} ;

struct _GLF_struct_29 {
 uint _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_30 {
 _GLF_struct_29 _f0;
 uint num_workgroup;
} ;

struct _GLF_struct_44 {
 _GLF_struct_30 _f0;
 _GLF_struct_34 _f1;
 _GLF_struct_35 _f2;
 _GLF_struct_37 _f3;
 _GLF_struct_43 _f4;
} ;

struct _GLF_struct_26 {
 ivec3 _f0;
 bvec3 _f1;
 uvec3 _f2;
 mat2x4 _f3;
 float _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_25 {
 uint _f0;
 uvec2 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_24 {
 uvec3 _f0;
} ;

struct _GLF_struct_23 {
 uvec3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_27 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 _GLF_struct_25 _f2;
 _GLF_struct_26 _f3;
 mat4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_28 {
 uint _f0;
 _GLF_struct_27 _f1;
 uint next_virtual_gid;
} ;

struct _GLF_struct_20 {
 bvec3 _f0;
 mat3 _f1;
 uint workgroup_size;
 bvec2 _f2;
 vec3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_19 {
 uvec2 _f0;
 uvec4 _f1;
 bvec2 _f2;
 uint _f3;
 mat4x3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_21 {
 bvec2 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
} ;

struct _GLF_struct_17 {
 mat2x4 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_16 {
 mat2x4 _f0;
 uvec2 _f1;
 int _f2;
 uvec2 _f3;
 mat2 _f4;
 vec4 _f5;
 bool _f6;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
 mat2x4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_13 {
 uvec4 _f0;
 mat4 _f1;
 bool _f2;
 ivec3 _f3;
 bvec4 _f4;
 vec3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_18 {
 bvec3 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
 _GLF_struct_17 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_22 {
 uint _f0;
 mat2 _f1;
 _GLF_struct_18 _f2;
 uvec2 _f3;
 bool _f4;
 _GLF_struct_21 _f5;
 bool _f6;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 mat3x2 _f1;
 mat4 _f2;
 mat2x3 _f3;
 int _f4;
 bvec2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_9 {
 int _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 uvec4 _f1;
 bool _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_7 {
 float _f0;
 float _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 mat4x2 _f4;
 bool _f5;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 vec3 _f1;
 uvec2 _f2;
 mat4x3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 vec4 _f1;
 uvec2 _f2;
 float _f3;
 uvec4 _f4;
 int _f5;
} ;

struct _GLF_struct_3 {
 float _f0;
 mat4x3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 mat2x3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 vec4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 float _f1;
} ;

struct _GLF_struct_12 {
 ivec2 _f0;
 mat4 _f1;
 _GLF_struct_2 _f2;
 uint subgroup_local_id;
 uint _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_11 _f5;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 uint workgroup_id;
 int _f1;
 mat4x3 _f2;
 bvec4 _f3;
 ivec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(ivec2(1), mat4(1.0), _GLF_struct_2(_GLF_struct_1(mat4(1.0), uvec3(1u), mat4x3(1.0), vec4(1.0), bvec2(true)), 1.0), gl_SubgroupInvocationID, 1u, _GLF_struct_6(_GLF_struct_3(1.0, mat4x3(1.0), vec4(1.0)), _GLF_struct_4(uvec2(1u), vec4(1.0), uvec2(1u), 1.0, uvec4(1u), 1), _GLF_struct_5(mat4x3(1.0), vec3(1.0), uvec2(1u), mat4x3(1.0), uvec2(1u)), mat2x3(1.0), uvec4(1u)), _GLF_struct_11(_GLF_struct_7(1.0, 1.0), _GLF_struct_8(mat3x2(1.0), uvec4(1u), true, mat4x3(1.0)), _GLF_struct_9(1, mat4x3(1.0)), _GLF_struct_10(mat3(1.0), mat3x2(1.0), mat4(1.0), mat2x3(1.0), 1, bvec2(true), mat4(1.0)), mat4x2(1.0), true));
 _GLF_struct_44 _GLF_struct_replacement_44 = _GLF_struct_44(_GLF_struct_30(_GLF_struct_29(1u, mat3x4(1.0)), gl_NumWorkGroups.x), _GLF_struct_34(mat4x2(1.0), _GLF_struct_31(vec4(1.0)), _GLF_struct_32(mat3x2(1.0)), 1u, _GLF_struct_33(mat4x2(1.0), vec4(1.0), 1.0, ivec4(1)), true, 1u), _GLF_struct_35(ivec4(1), mat2x3(1.0)), _GLF_struct_37(ivec4(1), bvec4(true), vec3(1.0), _GLF_struct_36(ivec2(1), mat2x3(1.0), uvec4(1u), mat4x2(1.0), mat2x4(1.0), bvec4(true)), mat4(1.0), ivec3(1)), _GLF_struct_43(mat4x3(1.0), _GLF_struct_38(ivec3(1), vec2(1.0), ivec4(1), mat4x2(1.0)), _GLF_struct_39(mat4x2(1.0), mat2x4(1.0), vec4(1.0), ivec3(1)), _GLF_struct_40(mat2x3(1.0), uvec2(1u)), _GLF_struct_41(1), _GLF_struct_42(1.0, bvec3(true), ivec4(1), bvec4(true), mat4x3(1.0), mat2(1.0), mat3x4(1.0)), vec4(1.0)));
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(1u, mat2(1.0), _GLF_struct_18(bvec3(true), _GLF_struct_13(uvec4(1u), mat4(1.0), true, ivec3(1), bvec4(true), vec3(1.0), bvec2(true)), _GLF_struct_14(mat2x3(1.0), mat2x4(1.0), mat3x4(1.0)), _GLF_struct_15(mat4x3(1.0), vec2(1.0)), _GLF_struct_16(mat2x4(1.0), uvec2(1u), 1, uvec2(1u), mat2(1.0), vec4(1.0), true), _GLF_struct_17(mat2x4(1.0), mat2x3(1.0)), vec4(1.0)), uvec2(1u), true, _GLF_struct_21(bvec2(true), _GLF_struct_19(uvec2(1u), uvec4(1u), bvec2(true), 1u, mat4x3(1.0), mat3x4(1.0)), _GLF_struct_20(bvec3(true), mat3(1.0), gl_WorkGroupSize.x, bvec2(true), vec3(1.0), bvec4(true))), true);
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(vec2(1.0), gl_WorkGroupID.x, 1, mat4x3(1.0), bvec4(true), ivec3(1));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_struct_replacement_22._f5._f2.workgroup_size * _GLF_struct_replacement_0.workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_struct_replacement_12.subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(1u, _GLF_struct_27(_GLF_struct_23(uvec3(1u), vec4(1.0)), _GLF_struct_24(uvec3(1u)), _GLF_struct_25(1u, uvec2(1u), mat4x2(1.0), bvec2(true), uvec4(1u)), _GLF_struct_26(ivec3(1), bvec3(true), uvec3(1u), mat2x4(1.0), 1.0, ivec3(1)), mat4(1.0), mat3x2(1.0)), workgroup_base + subgroup_base + ((_GLF_struct_replacement_12.subgroup_local_id + 1) % subgroup_size));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if((_GLF_struct_replacement_12.subgroup_local_id % 2) == 0)
  {
   atomicStore(buf[_GLF_struct_replacement_28.next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_28.next_virtual_gid], uint(2), 4, 64, 4);
  }
}
