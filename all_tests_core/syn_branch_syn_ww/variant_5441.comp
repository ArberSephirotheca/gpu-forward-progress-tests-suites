#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (! (! (! (false)))), (! (! (! (! (false))))) || false)))), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((false), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false)))), false, false)), true, false)))), false, false))))), true)))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) || false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), bool(bvec4(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), true, false, true)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), false, true))))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) * 1.0)), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, sin(0.0), abs(0.0), 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.y, 0.0, sin(0.0), abs(0.0), 0.0, 0.0))))))))), ! (! (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, sin(0.0), abs(0.0), 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.y, 0.0, sin(0.0), abs(0.0), 0.0, 0.0)))))))))))))))))))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4605.9367), _GLF_FUZZED(552.446)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) * 1.0)), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))), false || (false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4605.9367), _GLF_FUZZED(552.446)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) * 1.0)), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(58.97)), bool(false))))) : _GLF_FUZZED(pow(-618.010, 31.67))))))))))))))))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
         for(int _injected_loop_counter = (-82567 & (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.8)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) || false)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(5.8), (_GLF_IDENTITY(_GLF_FUZZED(5.8), max(_GLF_FUZZED(5.8), _GLF_IDENTITY(_GLF_FUZZED(5.8), float(mat3x4(_GLF_FUZZED(5.8), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))) / 1.0)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) || false))))))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
          }
         barrier();
        }
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), (bool(bool(_GLF_IDENTITY(false, (false) || false)))) || false), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), (bool(bool(_GLF_IDENTITY(false, (false) || false)))) || false)))))), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) && true)), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) && true))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false))))))), true, true, false)), true && (bool(bvec4((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false))))))), true, true, false))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ((false)) && true), true), false, true))))) || false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ((false)) && true), true), false, true))))) || false)))) && true), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), ((false)) && true), true), false, true))))) || false)))) && true))))))))) && true)) || false)), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))))))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))).x, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), 0u), (uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))), 0u | ((1u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))))), 0u)) | (uvec2(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), 0u)))), (true ? uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), 0u), (uvec2(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), false || (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))) ? 1u : _GLF_FUZZED(subgroup_id))))), 0u)) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) + 0u) : _GLF_FUZZED(subgroup_id))))), 0u)), (true ? (uvec2(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) + 0u) : _GLF_FUZZED(subgroup_id))))), 0u)) : _GLF_FUZZED(bitfieldInsert(uvec2(193926u, 158612u), uvec2(165479u, 147313u), -49406, (bvec4(false, true, false, true) , -36654))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), ~ (~ (_GLF_FUZZED(subgroup_size))))))) * (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(vec4(6.1, 7480.1745, -75.82, 355.777).w)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) > injectionSwitch.y)))))))))), ((injectionSwitch.x > injectionSwitch.y)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(904.500, 1757.5704)) : injectionSwitch)).x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(904.500, 1757.5704)) : injectionSwitch)).x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))) > injectionSwitch.y)) && true), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-6.5))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(347.975) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-6.5))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-6.5))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-6.5))))))) > injectionSwitch.y))))))), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3442.5286)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))))))
  {
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-10321))))), _GLF_IDENTITY(0, ~ (~ (0))))) & -17185), ((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(-82897))))), _GLF_IDENTITY(0, ~ (~ (0))))) & -17185)) ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec4(0.0, 0.0, 0.0, 0.0)))))), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 1.0)))) * 1.0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) >> 0))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))) ^ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) >> 0))))) : _GLF_FUZZED(43581)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(1, (0 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))) ^ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) >> 0))))) : _GLF_FUZZED(43581)), 0 ^ ((true ? _GLF_IDENTITY(1, (0 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))) ^ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) >> 0))))) : _GLF_FUZZED(43581))))) ^ (75146 & 0)))) | (1))))); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2436.2678), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(37.65) : (injectionSwitch)[0])), _GLF_FUZZED(489.953)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(sinh(6.3))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(98.03)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(98.03)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x) + 0.0) > injectionSwitch.y)), false)))))), false, false, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     for(int _injected_loop_counter = (-82255 & 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, true, false)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), false, false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) | (_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (subgroup_size))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) - 0u, max(((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) - 0u, ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) - 0u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) - 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) - 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) - 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) - 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) - 0u)))))), (false ? _GLF_FUZZED(subgroup_size) : max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) - 0u))))), (false ? _GLF_FUZZED(atomicCompSwap(workgroup_base, num_workgroup, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)), subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), max(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), ~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))))), subgroup_size))))))) - _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, (0u) | (0u)))), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> (0u | 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)), subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))) - 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)), subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))) ^ 0u), subgroup_size)), subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))) - 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, min((subgroup_size) ^ 0u, _GLF_IDENTITY((subgroup_size) ^ 0u, max(_GLF_IDENTITY((subgroup_size) ^ 0u, ((subgroup_size) ^ 0u) - 0u), (subgroup_size) ^ 0u))))), subgroup_size)), subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u + (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), min(subgroup_size, subgroup_size)) : _GLF_FUZZED(num_workgroup)))))))) - 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)), subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))) - 0u)))))) >> (0u | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u)) | 0u), min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))) | (subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * _GLF_IDENTITY((subgroup_base), ((subgroup_base)) | 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 1u * (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) | (subgroup_base))))) | (_GLF_IDENTITY(subgroup_base, 1u * _GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base)))))), 1u, 1u, 1u))), _GLF_IDENTITY((subgroup_base) ^ 0u, uint(uvec3(_GLF_IDENTITY((subgroup_base) ^ 0u, _GLF_IDENTITY(clamp((_GLF_IDENTITY(subgroup_base, (subgroup_base) * ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u, _GLF_IDENTITY((subgroup_base) ^ 0u, ((subgroup_base) ^ 0u) - 0u), (subgroup_base) ^ 0u), _GLF_IDENTITY(uint(uint(clamp((_GLF_IDENTITY(subgroup_base, (subgroup_base) * ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u, _GLF_IDENTITY((subgroup_base) ^ 0u, ((subgroup_base) ^ 0u) - 0u), (subgroup_base) ^ 0u))), (uint(uint(clamp((_GLF_IDENTITY(subgroup_base, (subgroup_base) * ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u, _GLF_IDENTITY((subgroup_base) ^ 0u, ((subgroup_base) ^ 0u) - 0u), (subgroup_base) ^ 0u)))) | (uint(uint(clamp((_GLF_IDENTITY(subgroup_base, (subgroup_base) * ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u, _GLF_IDENTITY((subgroup_base) ^ 0u, ((subgroup_base) ^ 0u) - 0u), (subgroup_base) ^ 0u))))))), 0u, 0u)))))), min(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), _GLF_IDENTITY((subgroup_base) - 0u, ~ (~ ((subgroup_base) - 0u))))) ^ 0u))), (true ? _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u))), 0u | (subgroup_base)), _GLF_IDENTITY((subgroup_base) - 0u, ~ (_GLF_IDENTITY(~ ((subgroup_base) - 0u), max(~ ((subgroup_base) - 0u), ~ ((subgroup_base) - 0u))))))) ^ 0u))) : _GLF_FUZZED(subgroup_base))), workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)), 0u ^ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 0), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 0), min(ivec3(1, 0, 0), ivec3(1, 0, 0))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 0), min(ivec3(1, 0, 0), ivec3(1, 0, 0))), ivec3(1, 1, 1) * (_GLF_IDENTITY(ivec3(1, 0, 0), min(ivec3(1, 0, 0), ivec3(1, 0, 0))))))), ivec3(1, 0, 0)))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(1, 0, 0), max(_GLF_IDENTITY(ivec3(1, 0, 0), min(ivec3(1, 0, 0), ivec3(1, 0, 0))), ivec3(1, 0, 0))))) / 1, ((int(_GLF_IDENTITY(ivec3(1, 0, 0), max(_GLF_IDENTITY(ivec3(1, 0, 0), min(ivec3(1, 0, 0), ivec3(1, 0, 0))), ivec3(1, 0, 0))))) / 1) >> (0 << _GLF_IDENTITY(int(5), int(5)))))), (0 | 0)))), 1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))), (0 | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0))) + 0) | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * _GLF_IDENTITY(1, 0 ^ (1)))))), max((_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), _GLF_IDENTITY(1, 0 | (1))), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (_GLF_IDENTITY(0, int(int(0))) | 0)))), 1)) * 1)))), (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1), _GLF_IDENTITY((clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1)), (_GLF_IDENTITY((clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1)), clamp((clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1)), _GLF_IDENTITY((clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1)), ~ (~ ((clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1))))), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1))))) ^ 0))))))), _GLF_IDENTITY((_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 0), max(_GLF_IDENTITY(ivec3(1, 0, 0), min(ivec3(1, 0, 0), ivec3(1, 0, 0))), ivec3(1, 0, 0)))), (int(_GLF_IDENTITY(ivec3(1, 0, 0), max(_GLF_IDENTITY(ivec3(1, 0, 0), min(ivec3(1, 0, 0), ivec3(1, 0, 0))), ivec3(1, 0, 0))))) / 1)), (0 | 0)))), 1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1)))), max((_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1)))), (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1))))))))) ^ 0, ((_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 0), max(_GLF_IDENTITY(ivec3(1, 0, 0), min(ivec3(1, 0, 0), ivec3(1, 0, 0))), ivec3(1, 0, 0)))), (int(_GLF_IDENTITY(ivec3(1, 0, 0), max(_GLF_IDENTITY(ivec3(1, 0, 0), min(ivec3(1, 0, 0), ivec3(1, 0, 0))), ivec3(1, 0, 0))))) / 1)), (0 | 0)))), 1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1)))), max((_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1)))), (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1))))))))) ^ 0) >> 0)))), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 0), max(_GLF_IDENTITY(ivec3(1, 0, 0), min(ivec3(1, 0, 0), ivec3(1, _GLF_IDENTITY(0, 0 | (0)), 0))), ivec3(1, 0, 0)))), (int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(0, 0 | (0)), 0), max(_GLF_IDENTITY(ivec3(1, 0, 0), min(ivec3(1, 0, 0), ivec3(1, 0, 0))), _GLF_IDENTITY(ivec3(1, 0, _GLF_IDENTITY(0, (0) - 0)), (ivec3(1, 0, _GLF_IDENTITY(0, (0) - 0))) ^ ivec3(0, 0, 0)))))) / 1)), (0 | 0)))), 1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (_GLF_IDENTITY(0, (0) + (0 << _GLF_IDENTITY(int(4), int(4)))) | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (_GLF_IDENTITY(0, 0 | (0)) | 0))), (int(ivec2(1, (_GLF_IDENTITY(0, 0 | (0)) | 0)))) / 1)), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(ivec2(1, (0 | 0)), (_GLF_IDENTITY(ivec2(1, (0 | 0)), ivec2(0, 0) | (ivec2(1, (0 | 0))))) - ivec2(0, 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_IDENTITY(ivec2(1, (0 | 0)), (_GLF_IDENTITY(ivec2(1, (0 | 0)), ivec2(0, 0) | (ivec2(1, (0 | 0))))) - ivec2(0, 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0))))))) << 0), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1)))), max((_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (0 | 0))), (int(ivec2(1, (0 | 0)))) ^ 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1))), 0 ^ (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1))))), (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY((0 | 0), (0 | (0 >> _GLF_IDENTITY(int(3), int(3)))) | (_GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0))))))))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1)))) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) | (_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))))), 1), (clamp(1, _GLF_IDENTITY(1, int(ivec2(1, (0 | 0)))), 1)) * 1))))))))))))) ^ 0u) % subgroup_size, (true ? (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))))), _GLF_IDENTITY((0 | 0), 1 * ((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))) | 0)))))), 1))) % subgroup_size : _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(uvec2(182798u, 90004u), min(uvec2(182798u, 90004u), uvec2(182798u, 90004u)))[1])))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (~ (0))))), 0))); _injected_loop_counter --)
  {
   atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (4) >> 0), 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (4), _GLF_IDENTITY(~ (4), max(~ (4), _GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), (~ (4)) >> 0)) | 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-43247) : 4)), 4)), 4)), int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), int(_GLF_IDENTITY(ivec2(4, 0), ivec2(ivec2(ivec2(4, 0))))))) ^ 0))) >> 0), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), ivec2(ivec2(ivec2(4, 0))))))) ^ 0))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), _GLF_IDENTITY(int(ivec2(int(_GLF_IDENTITY(4, (4) ^ 0)), 0)), 0 ^ (int(ivec2(int(_GLF_IDENTITY(4, (4) ^ 0)), 0))))), (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), ivec2(ivec2(ivec2(4, 0))))))) ^ 0))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) / 1), (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), ivec2(ivec2(ivec2(4, 0))))))) ^ 0))) >> 0))))))))) / 1), (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), ((_GLF_IDENTITY(4, max(4, 4)))) | ((_GLF_IDENTITY(4, max(4, 4)))))), (int(_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED((true ? _injected_loop_counter : 38908)))), max(4, 4)))) | ((_GLF_IDENTITY(4, max(4, 4))))))) ^ 0))), ~ (4), _GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) | 0), (~ (4)) >> 0)))) / 1)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))), ~ (4), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0))))))) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))), ~ (4), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> _GLF_IDENTITY(0, min(0, 0))))))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))), ~ (_GLF_IDENTITY(4, (4) / 1)), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0))))))) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(36258, -91063, -79449).b), min(_GLF_IDENTITY(_GLF_FUZZED(ivec3(36258, -91063, -79449).b), max(_GLF_FUZZED(ivec3(36258, -91063, -79449).b), _GLF_FUZZED(ivec3(36258, -91063, -79449).b))), _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))))), ~ (4), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) - 0) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0))))))) / 1), (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))), ~ (4), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0))))))) / 1)) | (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))), ~ (~ (~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b))))))), ~ (4), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0))))))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))), ~ (4), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0))))))) / 1), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))), ~ (4), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0))))))) / 1))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))), ~ (4), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0))))))) / 1), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))), ~ (4), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0))))))) / 1))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))), ~ (4), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0))))))) / 1), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))), ~ (4), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0))))))) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))), ~ (4), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0))))))) / 1), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ 0) : _GLF_FUZZED(ivec3(36258, -91063, -79449).b)))), ~ (4), ~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), (int(_GLF_IDENTITY(4, (4) ^ 0))) >> 0))))))) / 1)))) | 0))) : _GLF_FUZZED(sign(78984)))))))), (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), _GLF_IDENTITY(~ _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(84062) : ((4)))) | _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY((~ (4)), (_GLF_IDENTITY((~ (4)), _GLF_IDENTITY((_GLF_IDENTITY((~ (4)), ((~ (4))) >> 0)), int(_GLF_IDENTITY(int((_GLF_IDENTITY((~ (4)), ((~ (4))) >> 0))), (int((_GLF_IDENTITY((~ (4)), ((~ (4))) >> 0)))) | (int((_GLF_IDENTITY((~ (4)), ((~ (4))) >> 0))))))) >> 0)) << 0) >> 0)))) / 1)) * 1)) ^ 0))));
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, _GLF_IDENTITY(bool(bool((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! (bool(bool((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), bool(bvec2(! (bool(bool((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), true)))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true)))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)))), (! (! ((_GLF_IDENTITY(false, (false) && true))))) || false))))))))))
            barrier();
          }
         for(int _injected_loop_counter = (1 ^ _GLF_IDENTITY(0, (0) * 1)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY(int(ivec2(5, 0)), int(ivec2(int(ivec2(5, 0)), 0))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, ~ (~ (5)))))))) - 0), _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), int(ivec4(int(2), 0, 0, 0))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> 0))); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (0 & 92030) + (_injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)))) && true)) || false); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
      {
       if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(61034) : 2), ((false ? _GLF_FUZZED(61034) : 2)) << 0))) >> _GLF_IDENTITY(0, 0 ^ (0)))) | _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0)), (int(ivec2(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0))) / 1))), min((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2))), ((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2)))) / 1u), (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2))), ((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2)))) / 1u)) | (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2))), ((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2)))) / 1u))))))) == 0)), ! (! (bool(bool((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(61034) : 2), ((false ? _GLF_FUZZED(61034) : 2)) << 0))) >> _GLF_IDENTITY(0, 0 ^ (0)))) | _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0)), (int(ivec2(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0))) / 1))), min((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2))), ((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2)))) / 1u), (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2))), ((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2)))) / 1u)) | (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2))), ((subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2)))) / 1u))))))) == 0)))))))
        {
         atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))), (uint(uint(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))))) | (uint(uint(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))))))), (next_virtual_gid) | (next_virtual_gid)), max(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true)), (true ? mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-1986.6097), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.7)), bvec2(true, false))))).x), bool(true)) : _GLF_FUZZED(4.0)))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), float(_GLF_FUZZED(336.943)), bool(false)))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))).x), _GLF_IDENTITY(bool(true), true && (bool(true))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), (float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4(1.0) * (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) / _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).x), bool(true)))), float(_GLF_FUZZED(-7331.0223)), bool(false)))) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec3(true, true, false))) || false)), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec3(true, true, false))) || false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) && true) ? injectionSwitch.y : _GLF_FUZZED(934.749)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), true && (bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true)), (true ? mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))), mix(vec2(_GLF_FUZZED(-1986.6097), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.7)), bvec2(true, false))))).x), bool(true)) : _GLF_FUZZED(4.0)))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))).x), bool(true))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(roundEven(-5650.4938)) : sin(0.0))), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) / _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).x), bool(true)))), float(_GLF_FUZZED(-7331.0223)), bool(false)))) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(bvec3(true, true, _GLF_IDENTITY(false, (false) && true)), false))))))), (bool(bvec3(true, true, false))) || false)), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec3(true, true, false))) || false)), (injectionSwitch.x < injectionSwitch.y))) && true) ? injectionSwitch.y : _GLF_FUZZED(934.749))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(4.8), (_GLF_IDENTITY(_GLF_FUZZED(4.8), max(_GLF_FUZZED(4.8), _GLF_FUZZED(4.8)))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.6), _GLF_FUZZED(9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))) : _GLF_FUZZED(261.945))) : _GLF_FUZZED(dot(17.61, 338.359)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true)), min(mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true)), mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))))))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true)))), min(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true)))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true)))))), float(_GLF_FUZZED(-7331.0223)), bool(false)))) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, (false) && true))), (bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(true, true, false), true)))))))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(1420.0897) : clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) * 1.0), injectionSwitch.y, injectionSwitch.y)))))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(934.749))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(4.8), clamp(_GLF_FUZZED(4.8), _GLF_FUZZED(4.8), _GLF_FUZZED(4.8)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) - 0.0), 1.0), (true ? vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) - 0.0), 1.0) : _GLF_FUZZED(round(injectionSwitch))))))), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec2(bvec2(bool(true), false)))), false, true))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))) : _GLF_FUZZED(261.945))) : _GLF_FUZZED(dot(17.61, 338.359)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(bool(true))), true && (bool(bool(bool(true)))))))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true)))), float(_GLF_FUZZED(-7331.0223)), bool(false)), (true ? mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bvec4(! (bool(true)), false, false, true)))))))), mix(float(_GLF_FUZZED((-95.72 * (-6289.6205 - 9936.5957)))), float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bvec4(! (bool(true)), false, false, true))))))))), bool(true))), float(_GLF_IDENTITY(_GLF_FUZZED(-7331.0223), (false ? _GLF_FUZZED(-7.5) : _GLF_FUZZED(-7331.0223)))), bool(false)) : _GLF_FUZZED(-503.181)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec2(bvec2(bool(true), false)))), false, true))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))) : _GLF_FUZZED(261.945))) : _GLF_FUZZED(dot(17.61, 338.359)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(bool(true))), true && (bool(bool(bool(true)))))))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true)))), float(_GLF_FUZZED(-7331.0223)), bool(false)), (true ? mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bvec4(! (bool(true)), false, false, true)))))))), mix(float(_GLF_FUZZED((-95.72 * (-6289.6205 - 9936.5957)))), float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bvec4(! (bool(true)), false, false, true))))))))), bool(true))), float(_GLF_IDENTITY(_GLF_FUZZED(-7331.0223), (false ? _GLF_FUZZED(-7.5) : _GLF_FUZZED(-7331.0223)))), bool(false)) : _GLF_FUZZED(-503.181)))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec2(bvec2(bool(true), false)))), false, true))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))) : _GLF_FUZZED(261.945))) : _GLF_FUZZED(dot(17.61, 338.359)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(bool(true))), true && (bool(bool(bool(true)))))))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true)))), float(_GLF_FUZZED(-7331.0223)), bool(false)), (true ? mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bvec4(! (bool(true)), false, false, true)))))))), mix(float(_GLF_FUZZED((-95.72 * (-6289.6205 - 9936.5957)))), float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bvec4(! (bool(true)), false, false, true))))))))), bool(true))), float(_GLF_IDENTITY(_GLF_FUZZED(-7331.0223), (false ? _GLF_FUZZED(-7.5) : _GLF_FUZZED(-7331.0223)))), bool(false)) : _GLF_FUZZED(-503.181)))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), float(mat3(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec2(bvec2(bool(true), false)))), false, true))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true))) : _GLF_FUZZED(261.945))) : _GLF_FUZZED(dot(17.61, 338.359)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(bool(true))), true && (bool(bool(bool(true)))))))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), bool(true)))), float(_GLF_FUZZED(-7331.0223)), bool(false)), (true ? mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bvec4(! (bool(true)), false, false, true)))))))), mix(float(_GLF_FUZZED((-95.72 * (-6289.6205 - 9936.5957)))), float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bvec4(! (bool(true)), false, false, true))))))))), bool(true))), float(_GLF_IDENTITY(_GLF_FUZZED(-7331.0223), (false ? _GLF_FUZZED(-7.5) : _GLF_FUZZED(-7331.0223)))), bool(false)) : _GLF_FUZZED(-503.181)))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), float(_GLF_FUZZED(-7.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec3(true, true, false))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0))), injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(934.749)), mix(float(_GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec3(true, true, false))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec3(true, true, false))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(934.749)), clamp((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec3(true, true, false))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec3(true, true, false))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec3(true, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y)))))))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(3593.4285)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)) : _GLF_FUZZED(934.749)), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec3(true, true, false))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y)))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(934.749)), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), (bool(bvec3(true, true, false))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y), max(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, tan(0.0), exp(0.0), 0.0, determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0))))), max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(_GLF_IDENTITY(934.749, (true ? 934.749 : _GLF_FUZZED(-9.6)))))))), float(_GLF_FUZZED(65.27)), bool(false)))))))))) || false))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = (13113 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), max((1) | (1), (1) | (1)))) << (0 >> _GLF_IDENTITY(int(0), int(0)))))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) - 0))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)), (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --))) << 0))
            {
             atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               barrier();
              }
            }
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, abs(1.0), abs(1.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x4(injectionSwitch.y, 0.0, abs(1.0), abs(1.0), 0.0, 0.0, 1.0, 1.0))) / 1.0))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), (true && (false)) || false)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (false), false || (true && (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (false), false || (true && (false))), true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), false || (! (_GLF_IDENTITY(true, true && (true)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (false), bool(bvec2(true && (false), false)))), bool(bvec3((_GLF_IDENTITY(true && (false), bool(bvec2(true && (false), false)))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false))), false, false, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false))), false, false, true))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false))) && true), false)))) && _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)), false)))))) || false))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false, ((_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false) && true))))) || false) || _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
      }
    }
   barrier();
  }
}
