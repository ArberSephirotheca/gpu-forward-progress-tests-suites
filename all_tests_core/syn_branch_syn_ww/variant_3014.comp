#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id;
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.xy = GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0) / 1.0), 1.0, 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) * mat3(1.0)))), 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y) - 0.0), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.x = subgroup_id;
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.z = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id, uvec4(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[1], _GLF_IDENTITY(0u, (0u) | (0u)) + (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[1])), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[2], (true ? GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[2] : _GLF_FUZZED(15517u))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3], ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3]))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3], ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3]))), 0u | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3], ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3]))))), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3], ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3]))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3], ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3]))), clamp(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3], ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3]))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3], ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3]))), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3], ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3])))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3], ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3]))), uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3], ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id[3]))), 1u, 1u, 0u)))))))))) / uvec4(1u, 1u, 1u, 1u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.xy.y = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id, clamp(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id)), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id, clamp(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id)))), (true ? GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id : _GLF_FUZZED(uvec4(72672u, 30979u, 168187u, 159799u)))).z;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.y = subgroup_size;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id), (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id)) / uvec4(1u, 1u, 1u, 1u)))).y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  return;
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.w = subgroup_local_id;
 GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw.x = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.w;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.x = _GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (injectionSwitch) * cos(vec2(0.0, 0.0)))[1])).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)), (true ? mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)) : _GLF_FUZZED(-6249.3366))))) : 1.0), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0) : _GLF_FUZZED(65.39))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0))))), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))))))))), min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0, 1.0 * (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0) : _GLF_FUZZED(65.39))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0)), mat2(1.0) * (vec2(1.0, 1.0))))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0) : _GLF_FUZZED(65.39))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), _GLF_IDENTITY(float(-1.1), min(float(-1.1), _GLF_IDENTITY(float(-1.1), max(float(-1.1), float(-1.1))))), bool(true)))) : 1.0))))), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))))))), max(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0) : _GLF_FUZZED(65.39))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), _GLF_IDENTITY(float(-1.1), min(float(-1.1), _GLF_IDENTITY(float(-1.1), max(float(-1.1), float(-1.1))))), bool(true)))) : 1.0))))), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))))))), mix(vec2(_GLF_FUZZED((963.687 + 25.69)), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0) : _GLF_FUZZED(65.39))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), _GLF_IDENTITY(float(-1.1), min(float(-1.1), _GLF_IDENTITY(float(-1.1), max(float(-1.1), float(-1.1))))), bool(true)))) : 1.0))))), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))))))))[1]), vec2((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0) : _GLF_FUZZED(65.39))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), _GLF_IDENTITY(float(-1.1), min(float(-1.1), _GLF_IDENTITY(float(-1.1), max(float(-1.1), float(-1.1))))), bool(true)))) : 1.0))))), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))))))))[0], _GLF_FUZZED(-31.52)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), float(-1.1), bool(true)))) : 1.0) : _GLF_FUZZED(65.39))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.1, mix(float(_GLF_FUZZED(-686.317)), _GLF_IDENTITY(float(-1.1), min(float(-1.1), _GLF_IDENTITY(float(-1.1), max(float(-1.1), float(-1.1))))), bool(true)))) : 1.0))))), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))))))))))))))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! (! (bool((injectionSwitch.x < injectionSwitch.y))))))))))) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-40.47)), max(float(_GLF_FUZZED(-40.47)), _GLF_IDENTITY(float(_GLF_FUZZED(-40.47)), (false ? _GLF_FUZZED(3.2) : float(_GLF_FUZZED(-40.47)))))), bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw.y = workgroup_size;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 1u * (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(uvec3(5712u, 140527u, 90060u).x) : gl_WorkGroupID.x))));
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.z = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.w, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.w, 0u ^ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.w)), uint(_GLF_IDENTITY(uint(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.w), (false ? _GLF_FUZZED(subgroup_size) : uint(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.w)))))) | (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.w));
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw, max(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw, GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw)).y * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.z, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.z) << 0u, ((GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.z) << 0u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.xy, (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.xy, (GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.xy) ^ uvec2(0u, 0u))) + uvec2(0u, 0u)), (GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.xy) | uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u))), 0u)).y * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x, 0u ^ (GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) || false))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.y = subgroup_base, ~ (~ (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.y = subgroup_base)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sin(log(1.0)) + (injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false)))))))))))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(false)))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id, clamp(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id)).y + GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw.x;
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.z = _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_FUZZED(subgroup_base)) ^ (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : virtual_gid))) * 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.y = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.z, clamp(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.z, max(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.z, (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.z) ^ (0u ^ 0u)), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.z, 0u ^ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.z)))), GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.z, GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.z));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.y + ((GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw.x + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << (0 << _GLF_IDENTITY(int(6), int(6))), ~ (~ ((1) << (0 << _GLF_IDENTITY(int(6), int(6)))))))) % GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) : injectionSwitch)), injectionSwitch)).y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  return;
 GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.xy.x = _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(injectionSwitch)) : injectionSwitch)).x)) | (next_virtual_gid))), min(clamp(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(injectionSwitch)) : injectionSwitch)).x)) | (next_virtual_gid))), clamp(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(injectionSwitch)) : injectionSwitch)).x)) | (next_virtual_gid))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))) && (_GLF_IDENTITY(true, false || (true)))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, uvec3(0u, 0u, 0u) | (GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id)), GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id)).y], uint(1), 4, 64, _GLF_IDENTITY(4, (4) | 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(769.341) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw.x % 2, min(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw.x % 2, _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw.x % 2, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size) | _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), ((uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ (uvec2(0u, 1u)))))), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), min(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))))) << uvec4(0u, 0u, 0u, 0u))).zw.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size) | _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), ((uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ (uvec2(0u, 1u)))))), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), min(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))))) << uvec4(0u, 0u, 0u, 0u))).zw.x, max(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size) | _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), ((uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ (uvec2(0u, 1u)))))), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), min(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))))) << uvec4(0u, 0u, 0u, 0u))).zw.x, _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size) | _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), ((uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ (uvec2(0u, 1u)))))), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), min(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))))) << uvec4(0u, 0u, 0u, 0u))).zw.x))) ^ 0u), _GLF_IDENTITY(0u, min(0u, 0u)) ^ (GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw.x)) % _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), 0 + (_GLF_IDENTITY(2, min(2, 2)))), _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, _GLF_IDENTITY(1u, (1u) << (0u ^ _GLF_IDENTITY(0u, 0u ^ (0u)))))))))) == 0, ((_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw.x % 2, min(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw.x % 2, _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw.x % 2, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, (GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size) | _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u | (0u), (_GLF_IDENTITY(0u | (0u), uint(uvec4(0u | (0u), 0u, 0u, 0u)))) ^ 0u), _GLF_IDENTITY(uint(uvec2(0u | (0u), 0u)), uint(uvec4(uint(uvec2(0u | (0u), 0u)), 1u, 0u, 0u)))))) + 0u), 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))).zw.x, 0u ^ (GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.zw.x)) % 2, 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_IDENTITY(1u, (1u) << (0u ^ 0u)))))))) == 0) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false), bvec2(bvec4(bvec2(! (false), false), true, false)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(1.5, -9.7).t)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.7)), bool(false))), injectionSwitch.y)))), max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.xy.x], uint(2), _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-97020))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), min(64, 64))) | (64), (true ? (_GLF_IDENTITY(64, min(64, 64))) | (64) : _GLF_FUZZED(11071)))), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(buf[GLF_merged2_0_2_52_2_2_56GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_idGLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.xy.x], uint(2), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) | (64))) << 0, ((_GLF_IDENTITY(64, (64) | (64))) << 0) - 0), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 1))), (64) | (64))) << 0, ((_GLF_IDENTITY(64, (64) | (64))) << 0) - 0)) / 1)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), true), false, true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2483.1431) : injectionSwitch.y))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, bool(bvec2(true, false))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.5)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) < injectionSwitch.y))), false), true))))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true)) && true)))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true)))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch)).y, log(1.0), exp(0.0), exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), (true ? float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch)).y, log(1.0), exp(0.0), exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))) : _GLF_FUZZED(-6.7))))) / exp(0.0))), true))))))), false), true))))))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, true && (true))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))), false))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true))))), false), true))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true)))))))), ! (! (! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), false || (_GLF_IDENTITY((! (! (true))), ! (! ((! (! (true))))))))))))))))) && true)), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true))), true), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true))), true), false, false))))))), true))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))))), bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))))))))) && true), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true))))), false), true))))))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), bool(bvec4(_GLF_IDENTITY(! (true), ! (! (! (true)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), bool(bvec4(_GLF_IDENTITY(! (true), ! (! (! (true)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)))), false, true)), bool(bvec3(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), bool(bvec4(_GLF_IDENTITY(! (true), ! (! (! (true)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)))), false, true)), true, false)))), ! (! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))), false))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true))))), false), true))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true))))), false), true))))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true))))), false), true))))), true, true)), false)))))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true))))), false), true))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true))))), false), true))))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true))))), false), true))))), true, true)), false)))))))))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true))))), false), true))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true))))), false), true))))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true))))), false), true))))), true, true)), false)))))))))))), true, false)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), ! (! (! (true))))), ! (! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))), false))), true, true)))))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (injectionSwitch.y))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (injectionSwitch.y))))), false, true))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))), false || (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true)))))))))), bool(bvec3((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true), true))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), vec2(mat4x3((injectionSwitch), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(vec2(4.4, -6.4)))) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true), true)))))), bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true), true))))))), ! (! (bool((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)), bool(bvec3(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)), true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true)) || false), true)))))))))))))) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y)))) || false))))), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), ! (! (! (_GLF_IDENTITY(true, true && (true)))))), false, false, false)))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5829.3228)), bool(false)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
