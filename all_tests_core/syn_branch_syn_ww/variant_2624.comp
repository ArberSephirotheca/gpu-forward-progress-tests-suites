#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 uint num_workgroup;
 mat4 _f0;
 uvec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_13 {
 mat4x3 _f0;
 _GLF_struct_12 _f1;
 int _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_9 {
 ivec4 _f0;
 uvec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 bvec4 _f1;
 uvec3 _f2;
 mat3x2 _f3;
 mat3x4 _f4;
 uvec3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_8 {
 uint workgroup_size;
 mat2 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 bool _f1;
 float _f2;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 uvec3 _f1;
 int _f2;
 vec4 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 ivec2 _f1;
 float _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 mat2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 mat2 _f1;
 uint _f2;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uvec3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uvec4 _f2;
 float _f3;
 bvec2 _f4;
 _GLF_struct_2 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_11 {
 _GLF_struct_4 _f0;
 _GLF_struct_6 _f1;
 int _f2;
 uint _f3;
 _GLF_struct_8 _f4;
 mat4x2 _f5;
 _GLF_struct_10 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), ! (! (false)))))), ! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true)))), (bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), true))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, bool(bool(((injectionSwitch.x > injectionSwitch.y)) && true))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)) && true, ! (! (((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), bool(bvec2(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false), true)))))))))))))) && true, ! (! (((injectionSwitch.x > injectionSwitch.y)) && true))))))), ! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false), true)))))))))))))) && true, ! (! (((injectionSwitch.x > injectionSwitch.y)) && true))))))), bool(bool((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false), true)))))))))))))) && true, ! (! (((injectionSwitch.x > injectionSwitch.y)) && true))))))))))))), false))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, true))) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) || false), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false)), false || (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), true, false)), false || (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, exp(0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, exp(0.0), 0.0))), 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0)), max(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, exp(0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, exp(0.0), 0.0))), 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, exp(0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, exp(0.0), 0.0))), 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0))))).y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-80.55)), float(injectionSwitch.y), bool(true))))), true, true, false)), false || (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) && _GLF_IDENTITY(true, true && (true))), ! (! (bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)) && true)))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)))), bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), injectionSwitch[1])))).x > injectionSwitch.y)) && true)))) || false)), false))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) : _GLF_FUZZED(5975.6012))) > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true) && true)))), (((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))))) || false) || false)), false))), true), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) : _GLF_FUZZED(5975.6012))) > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true) && true)))), (((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))))) || false) || false)), false))), true), false))), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false)), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false)), false), bvec2(bvec4(bvec2(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false)))), false), false, false))), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false)), false), bvec2(bvec4(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false)), false), false, false))), false, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), injectionSwitch, injectionSwitch))[1])).x > injectionSwitch.y)) && true)))) || false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-8.2) : injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false)), false), bvec2(bvec4(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false)), false), false, false))), false, true)))))), true, true)))))))), true), false))))))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))))) && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), true, true, true)))))), ((injectionSwitch.x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), ((injectionSwitch.x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool((bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), ((injectionSwitch.x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), ((injectionSwitch.x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false)), false || (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false)), false || (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false)), false || _GLF_IDENTITY((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))), (_GLF_IDENTITY((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))), ! (! ((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))))) && true))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false)), false || (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false)), false || (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false)), false || _GLF_IDENTITY((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))), (_GLF_IDENTITY((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))), ! (! ((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))))) && true))), bool(bool((bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false)), false || (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false)), false || (bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false)), false || _GLF_IDENTITY((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))), (_GLF_IDENTITY((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))), ! (! ((bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, true, false))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))))) && true))))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) && _GLF_IDENTITY(true, true && (true))), ! (! (bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0))) * mat2(1.0)).y), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)) && true)))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(((injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))), true, false))))) && true)))), bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || false)) && true)))) || false)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false)), false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false)), false))), true), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0))) << 0)], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, tan(0.0)), vec4(0.0, 1.0, 0.0, log(1.0))), dot(vec4(0.0, 1.0, 0.0, tan(0.0)), vec4(0.0, 1.0, 0.0, log(1.0)))), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)))) || false)), false))), true), false))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))).x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) + tan(vec2(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0)))))).x > injectionSwitch.y)) && true, true && (((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0))).x > injectionSwitch.y)) && true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x > injectionSwitch.y)) && true)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))) && (bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x : _GLF_FUZZED(-1.7))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x)) > injectionSwitch.y)) && true)))))), ! (! (bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true)))) && true)))), bool(_GLF_IDENTITY(bvec2(! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * mat2(1.0)), 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0)), 1.0, tan(0.0), sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))])).x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), bvec2(bvec3(bvec2(! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))) * mat2(1.0)), 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, tan(0.0), sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))])).x > injectionSwitch.y)) && true)))), false), false)))))))))))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.2) : injectionSwitch.x))) - 0.0) > injectionSwitch.y)) && true)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) && true)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-585.069)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(38.00)), vec3(_GLF_FUZZED((+ 0.0)), _GLF_FUZZED(69.30), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), min((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) * vec3(1.0, 1.0, 1.0))))[2]), bvec3(false, false, true))))), 1.0, 1.0, 0.0, 0.0))), injectionSwitch.y)))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-585.069)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(38.00)), vec3(_GLF_FUZZED((+ 0.0)), _GLF_FUZZED(69.30), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), min((_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) + vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(mat3x2(vec3(0.0, 1.0, 0.0), 1.0, abs(0.0), 0.0)), max(vec3(mat3x2(vec3(0.0, 1.0, 0.0), 1.0, abs(0.0), 0.0)), vec3(mat3x2(vec3(0.0, 1.0, 0.0), 1.0, abs(0.0), 0.0))))))) * vec3(1.0, 1.0, 1.0))))[2]), bvec3(false, false, true))))), 1.0, 1.0, 0.0, 0.0))), injectionSwitch.y)))) && true))))), bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-585.069)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(38.00)), vec3(_GLF_FUZZED((+ 0.0)), _GLF_FUZZED(69.30), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), min((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) * vec3(1.0, 1.0, 1.0))))[2]), bvec3(false, false, true))))), 1.0, 1.0, 0.0, 0.0))), injectionSwitch.y)))) && true))))))))) || false)), false)), bool(bvec2(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-585.069)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(38.00)), vec3(_GLF_FUZZED((+ 0.0)), _GLF_FUZZED(69.30), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), min((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) * vec3(1.0, 1.0, 1.0))))[2]), bvec3(false, false, true))))), 1.0, 1.0, 0.0, 0.0))), injectionSwitch.y)))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-585.069)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(38.00)), vec3(_GLF_FUZZED((+ 0.0)), _GLF_FUZZED(69.30), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), min((_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) + vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(mat3x2(vec3(0.0, 1.0, 0.0), 1.0, abs(0.0), 0.0)), max(vec3(mat3x2(vec3(0.0, 1.0, 0.0), 1.0, abs(0.0), 0.0)), vec3(mat3x2(vec3(0.0, 1.0, 0.0), 1.0, abs(0.0), 0.0))))))) * vec3(1.0, 1.0, 1.0))))[2]), bvec3(false, false, true))))), 1.0, 1.0, 0.0, 0.0))), injectionSwitch.y)))) && true))))), bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-585.069)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(38.00)), vec3(_GLF_FUZZED((+ 0.0)), _GLF_FUZZED(69.30), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), min((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), ((vec3(0.0, 1.0, 0.0))) * vec3(1.0, 1.0, 1.0))))[2]), bvec3(false, false, true))))), 1.0, 1.0, 0.0, 0.0))), injectionSwitch.y)))) && true))))))))) || false)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_13(mat4x3(1.0), _GLF_struct_12(gl_NumWorkGroups.x, mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0)), uvec2(1u), mat3x4(1.0)), 1), vec4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_4(_GLF_struct_0(bvec3(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-621.523)), bool(false))))) * mat3(1.0), min((vec3(1.0)) * _GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(1.0))), (vec3(1.0)) * mat3(1.0)))), mix(vec3(_GLF_FUZZED(7306.8926), _GLF_FUZZED(-39.73), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)) * mat3(1.0), min((_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) * 1.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))[0], (vec3(1.0))[1], (vec3(1.0))[2]), vec3(_GLF_FUZZED(2271.1157), _GLF_FUZZED(-584.780), _GLF_FUZZED(99.16)), bvec3(false, false, false)))) * mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (vec3(1.0)) * mat3(1.0))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY((vec3(1.0)) * mat3(1.0), min((_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], (vec3(1.0))[1], (vec3(1.0))[2]), vec3(_GLF_FUZZED(2271.1157), _GLF_FUZZED(-584.780), _GLF_FUZZED(99.16)), bvec3(false, false, false)))) * mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (vec3(1.0)) * mat3(1.0)))))))[2], mix(float(_GLF_FUZZED(-70.64)), _GLF_IDENTITY(float((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(1.4, 0.0 + (1.4))), float(mat4x3(_GLF_FUZZED(_GLF_IDENTITY(1.4, 0.0 + (1.4))), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) : 1.0))), min((vec3(1.0)) * mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY((vec3(1.0)), clamp((vec3(1.0)), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), mix(vec3(_GLF_FUZZED(35.35), _GLF_IDENTITY(((vec3(1.0)))[1], (((vec3(1.0)))[1]) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FUZZED(293.333)), vec3(((vec3(1.0)))[0], _GLF_FUZZED(float(87115u)), ((vec3(1.0)))[2]), bvec3(true, false, true))), mat3(1.0) * ((vec3(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), mix(_GLF_IDENTITY(vec3(((vec3(1.0)))[0], ((vec3(1.0)))[1], ((vec3(1.0)))[2]), max(vec3(((vec3(1.0)))[0], ((vec3(1.0)))[1], ((vec3(1.0)))[2]), vec3(((vec3(1.0)))[0], ((vec3(1.0)))[1], ((vec3(1.0)))[2]))), vec3(_GLF_FUZZED(-7.4), _GLF_FUZZED(2.4), _GLF_FUZZED((- (-162.733 / -2.3)))), bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), (_GLF_IDENTITY((vec3(1.0)), mix(_GLF_IDENTITY(vec3(((vec3(1.0)))[0], ((vec3(1.0)))[1], ((vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(max(6057.1450, 7.8)))))))[2]), max(vec3(((vec3(1.0)))[0], ((vec3(1.0)))[1], ((vec3(1.0)))[2]), vec3(((vec3(1.0)))[0], ((vec3(1.0)))[1], ((vec3(1.0)))[2]))), vec3(_GLF_FUZZED(-7.4), _GLF_FUZZED(2.4), _GLF_FUZZED((- (-162.733 / -2.3)))), bvec3(false, false, false)))) + vec3(0.0, 0.0, 0.0)))) * mat3(1.0)))), (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(51.32)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-6.6)), bvec2(false, false)))) + vec2(0.0, 0.0)).y), _GLF_ONE(1.0, injectionSwitch.y)))) * mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat3((1.0), 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, log(1.0), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0)), (true ? float(mat3((1.0), 1.0, length(abs(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, log(_GLF_IDENTITY(1.0, 1.0 * (1.0))), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, log(1.0), 0.0))), 0.0, 1.0)) : _GLF_FUZZED(-9544.7774)))) - 0.0) : _GLF_FUZZED(-4357.1341))))), clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0))), min((vec3(1.0)) * mat3(1.0), (_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0)))))) * _GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, sin(0.0), 0.0, log(1.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).y)))))), 0.0, 0.0, 0.0) + (mat3(1.0))))))) * vec3(1.0, 1.0, 1.0)))[2]), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec2(-7.7, 94.42).r)), float(float((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0)))) * mat3(1.0), min((vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0))), clamp((vec3(1.0)), _GLF_IDENTITY((vec3(1.0)), mat3(1.0) * ((vec3(1.0)))), _GLF_IDENTITY((vec3(1.0)), mix(_GLF_IDENTITY(vec3(((vec3(1.0)))[0], _GLF_IDENTITY(((vec3(1.0))), _GLF_IDENTITY(mix(vec3(_GLF_FUZZED(-2.5), (((vec3(1.0))))[1], (((vec3(1.0))))[2]), vec3((((vec3(1.0))))[0], _GLF_FUZZED(float(33450)), _GLF_FUZZED(-4407.3894)), bvec3(true, false, false)), (mix(vec3(_GLF_FUZZED(-2.5), (((vec3(1.0))))[1], (((vec3(1.0))))[2]), vec3((_GLF_IDENTITY(((vec3(1.0))), clamp(((vec3(1.0))), _GLF_IDENTITY(((vec3(1.0))), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(((vec3(1.0))), vec3(0.0, 0.0, 0.0) + (((vec3(1.0))))))), _GLF_IDENTITY(((vec3(1.0))), max(((vec3(1.0))), ((vec3(1.0))))))))[0], _GLF_FUZZED(float(33450)), _GLF_FUZZED(-4407.3894)), bvec3(true, _GLF_IDENTITY(false, (false) || false), false))) * vec3(1.0, 1.0, 1.0)))[1], ((vec3(1.0)))[2]), max(vec3(((vec3(1.0)))[0], ((vec3(1.0)))[1], ((vec3(1.0)))[2]), vec3(((vec3(1.0)))[0], ((vec3(1.0)))[1], ((vec3(1.0)))[2]))), vec3(_GLF_FUZZED(-7.4), _GLF_FUZZED(2.4), _GLF_FUZZED((- (-162.733 / -2.3)))), bvec3(false, false, false))))) * mat3(1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)) * mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-4357.1341))))), clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3167.6745))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0))), min((vec3(1.0)) * mat3(1.0), (vec3(1.0)) * _GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, sin(0.0), 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.7)))), float(_GLF_FUZZED(17.98)), bool(false))), 0.0) + (mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))) * vec3(1.0, 1.0, 1.0), max((_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)) * mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-4357.1341))))), clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3167.6745))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0))), min((vec3(1.0)) * mat3(1.0), (vec3(1.0)) * _GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, sin(0.0), 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.7)))), float(_GLF_FUZZED(17.98)), bool(false))), 0.0) + (mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))) * vec3(1.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)) * mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-4357.1341))))), clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3167.6745))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0))), min((vec3(1.0)) * mat3(1.0), (vec3(1.0)) * _GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, sin(0.0), 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.7)))), float(_GLF_FUZZED(17.98)), bool(false))), 0.0) + (mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))) * vec3(1.0, 1.0, 1.0)))))[2])), bool(true)), max(mix(float(_GLF_FUZZED(vec2(-7.7, 94.42).r)), float(float((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0)))) * mat3(1.0), min((vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0))), clamp((vec3(1.0)), _GLF_IDENTITY((vec3(1.0)), mat3(1.0) * ((vec3(1.0)))), _GLF_IDENTITY((vec3(1.0)), mix(_GLF_IDENTITY(vec3(((vec3(1.0)))[0], _GLF_IDENTITY(((vec3(1.0))), mix(vec3(_GLF_FUZZED(-2.5), (((vec3(1.0))))[1], (((vec3(1.0))))[2]), vec3((((vec3(1.0))))[0], _GLF_FUZZED(float(33450)), _GLF_FUZZED(-4407.3894)), bvec3(true, false, false)))[1], ((vec3(1.0)))[2]), max(vec3(((vec3(1.0)))[0], ((vec3(1.0)))[1], ((vec3(1.0)))[2]), vec3(((vec3(1.0)))[0], ((vec3(1.0)))[1], ((vec3(1.0)))[2]))), vec3(_GLF_FUZZED(-7.4), _GLF_FUZZED(2.4), _GLF_FUZZED((- (-162.733 / -2.3)))), bvec3(false, false, false))))) * mat3(1.0)))), (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)) * mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-4357.1341))))), clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3167.6745))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0))), min((vec3(1.0)) * mat3(1.0), (vec3(1.0)) * _GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, sin(0.0), 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.7)))), float(_GLF_FUZZED(17.98)), bool(false))), 0.0) + (mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))) * vec3(1.0, 1.0, 1.0)))[2])), bool(true)), mix(float(_GLF_FUZZED(vec2(-7.7, 94.42).r)), float(float((_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), mat3(1.0) * _GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) / vec3(1.0, 1.0, 1.0)))) * mat3(1.0), min((vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0))), clamp((vec3(1.0)), _GLF_IDENTITY((vec3(1.0)), mat3(1.0) * ((vec3(1.0)))), _GLF_IDENTITY((vec3(1.0)), mix(_GLF_IDENTITY(vec3(((vec3(1.0)))[0], _GLF_IDENTITY(((vec3(1.0))), mix(vec3(_GLF_FUZZED(-2.5), (((vec3(1.0))))[1], (((vec3(1.0))))[2]), vec3((((vec3(1.0))))[0], _GLF_FUZZED(float(33450)), _GLF_FUZZED(-4407.3894)), bvec3(true, false, false)))[1], ((vec3(1.0)))[2]), max(vec3(((vec3(1.0)))[0], ((vec3(1.0)))[1], ((vec3(1.0)))[2]), vec3(_GLF_IDENTITY(((vec3(1.0)))[0], (((vec3(1.0)))[0]) - 0.0), ((vec3(1.0)))[1], ((vec3(1.0)))[2]))), vec3(_GLF_FUZZED(-7.4), _GLF_FUZZED(2.4), _GLF_FUZZED((- (-162.733 / -2.3)))), bvec3(false, false, false))))) * mat3(1.0)))), (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)) * mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-4357.1341))))), clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3167.6745))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0))), min((vec3(1.0)) * mat3(1.0), (vec3(1.0)) * _GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, sin(0.0), 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.7)))), float(_GLF_FUZZED(17.98)), bool(false))), 0.0) + (mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))) * vec3(1.0, 1.0, 1.0)))[2])), bool(true))))), _GLF_IDENTITY(bool(true), (bool(true)) && true)))), _GLF_IDENTITY(vec3((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), (false ? _GLF_FUZZED(vec3(-8364.4714, 6.8, 5147.2287)) : (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) + 0.0))))))[0], (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0), min((vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), (true ? _GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, 0.0)))), (vec3(1.0))), (false ? _GLF_FUZZED(vec3(9.9, -3.0, 86.04)) : min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), (vec3(1.0)))))) * mat3(1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(_GLF_IDENTITY(vec3(163.740, 9.8, 8735.9033), mix(vec3(_GLF_IDENTITY((vec3(163.740, 9.8, 8735.9033))[0], ((vec3(163.740, 9.8, 8735.9033))[0]) + 0.0), (vec3(163.740, 9.8, 8735.9033))[1], _GLF_FUZZED(-9.1)), vec3(_GLF_FUZZED(3520.0208), _GLF_FUZZED(-8.2), (vec3(163.740, 9.8, 8735.9033))[2]), bvec3(false, false, true))))), (_GLF_FUZZED(floor(vec3(_GLF_IDENTITY(163.740, (163.740) + 0.0), 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), mat3(1.0) * (_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0))))))))))))[1], _GLF_FUZZED(_GLF_IDENTITY(-900.446, clamp(_GLF_IDENTITY(-900.446, min(-900.446, -900.446)), -900.446, -900.446)))), clamp(vec3((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), (false ? _GLF_FUZZED(vec3(-8364.4714, 6.8, 5147.2287)) : (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) + 0.0))))))[0], (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0), min((vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), (true ? _GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, 0.0)))), (vec3(1.0))), (false ? _GLF_FUZZED(vec3(9.9, -3.0, 86.04)) : min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), (vec3(1.0)))))) * mat3(1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(_GLF_IDENTITY(vec3(163.740, 9.8, 8735.9033), mix(vec3(_GLF_IDENTITY((vec3(163.740, 9.8, 8735.9033))[0], ((vec3(163.740, 9.8, 8735.9033))[0]) + 0.0), (vec3(163.740, 9.8, 8735.9033))[1], _GLF_FUZZED(-9.1)), vec3(_GLF_FUZZED(3520.0208), _GLF_FUZZED(-8.2), (vec3(163.740, 9.8, 8735.9033))[2]), bvec3(false, false, true))))), (_GLF_FUZZED(floor(vec3(_GLF_IDENTITY(163.740, (163.740) + 0.0), 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), mat3(1.0) * (_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0))))))))))))[1], _GLF_FUZZED(_GLF_IDENTITY(-900.446, clamp(_GLF_IDENTITY(-900.446, min(-900.446, -900.446)), -900.446, -900.446)))), _GLF_IDENTITY(vec3((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), (false ? _GLF_FUZZED(vec3(-8364.4714, 6.8, 5147.2287)) : (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) + 0.0))))))[0], (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0), min((vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), (true ? _GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, 0.0)))), (vec3(1.0))), (false ? _GLF_FUZZED(vec3(9.9, -3.0, 86.04)) : min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), (vec3(1.0)))))) * mat3(1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(_GLF_IDENTITY(vec3(163.740, 9.8, 8735.9033), mix(vec3(_GLF_IDENTITY((vec3(163.740, 9.8, 8735.9033))[0], ((vec3(163.740, 9.8, 8735.9033))[0]) + 0.0), (vec3(163.740, 9.8, 8735.9033))[1], _GLF_FUZZED(-9.1)), vec3(_GLF_FUZZED(3520.0208), _GLF_FUZZED(-8.2), (vec3(163.740, 9.8, 8735.9033))[2]), bvec3(false, false, true))))), (_GLF_FUZZED(floor(vec3(_GLF_IDENTITY(163.740, (163.740) + 0.0), 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), mat3(1.0) * (_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0))))))))))))[1], _GLF_FUZZED(_GLF_IDENTITY(-900.446, clamp(_GLF_IDENTITY(-900.446, min(-900.446, -900.446)), -900.446, -900.446)))), clamp(vec3((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), (false ? _GLF_FUZZED(vec3(-8364.4714, 6.8, 5147.2287)) : (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) + 0.0))))))[0], (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0), min((vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), (true ? _GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, 0.0)))), (vec3(1.0))), (false ? _GLF_FUZZED(vec3(9.9, -3.0, 86.04)) : min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), (vec3(1.0)))))) * mat3(1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(_GLF_IDENTITY(vec3(163.740, 9.8, 8735.9033), mix(vec3(_GLF_IDENTITY((vec3(163.740, 9.8, 8735.9033))[0], ((vec3(163.740, 9.8, 8735.9033))[0]) + 0.0), (vec3(163.740, 9.8, 8735.9033))[1], _GLF_FUZZED(-9.1)), vec3(_GLF_FUZZED(3520.0208), _GLF_FUZZED(-8.2), (vec3(163.740, 9.8, 8735.9033))[2]), bvec3(false, false, true))))), (_GLF_FUZZED(floor(vec3(_GLF_IDENTITY(163.740, (163.740) + 0.0), 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), mat3(1.0) * (_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0))))))))))))[1], _GLF_FUZZED(_GLF_IDENTITY(-900.446, clamp(_GLF_IDENTITY(-900.446, min(-900.446, -900.446)), -900.446, -900.446)))), vec3((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), (false ? _GLF_FUZZED(vec3(-8364.4714, 6.8, 5147.2287)) : (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) + 0.0))))))[0], (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0), min((vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), (true ? _GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, 0.0)))), (vec3(1.0))), (false ? _GLF_FUZZED(vec3(9.9, -3.0, 86.04)) : min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), (vec3(1.0)))))) * mat3(1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(_GLF_IDENTITY(vec3(163.740, 9.8, 8735.9033), mix(vec3(_GLF_IDENTITY((vec3(163.740, 9.8, 8735.9033))[0], ((vec3(163.740, 9.8, 8735.9033))[0]) + 0.0), (vec3(163.740, 9.8, 8735.9033))[1], _GLF_FUZZED(-9.1)), vec3(_GLF_FUZZED(3520.0208), _GLF_FUZZED(-8.2), (vec3(163.740, 9.8, 8735.9033))[2]), bvec3(false, false, true))))), (_GLF_FUZZED(floor(vec3(_GLF_IDENTITY(163.740, (163.740) + 0.0), 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), mat3(1.0) * (_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0))))))))))))[1], _GLF_FUZZED(_GLF_IDENTITY(-900.446, clamp(_GLF_IDENTITY(-900.446, min(-900.446, -900.446)), -900.446, -900.446)))), vec3((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), (false ? _GLF_FUZZED(vec3(-8364.4714, 6.8, 5147.2287)) : (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) + 0.0))))))[0], (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0), min((vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), (true ? _GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, 0.0)))), (vec3(1.0))), (false ? _GLF_FUZZED(vec3(9.9, -3.0, 86.04)) : min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), (vec3(1.0)))))) * mat3(1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(_GLF_IDENTITY(vec3(163.740, 9.8, 8735.9033), mix(vec3(_GLF_IDENTITY((vec3(163.740, 9.8, 8735.9033))[0], ((vec3(163.740, 9.8, 8735.9033))[0]) + 0.0), (vec3(163.740, 9.8, 8735.9033))[1], _GLF_FUZZED(-9.1)), vec3(_GLF_FUZZED(3520.0208), _GLF_FUZZED(-8.2), (vec3(163.740, 9.8, 8735.9033))[2]), bvec3(false, false, true))))), (_GLF_FUZZED(floor(vec3(_GLF_IDENTITY(163.740, (163.740) + 0.0), 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), mat3(1.0) * (_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0))))))))))))[1], _GLF_FUZZED(_GLF_IDENTITY(-900.446, clamp(_GLF_IDENTITY(-900.446, min(-900.446, -900.446)), -900.446, -900.446)))))), vec3((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0), (false ? _GLF_FUZZED(vec3(-8364.4714, 6.8, 5147.2287)) : (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) + 0.0))))))[0], (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0), min((vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), (true ? _GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, 0.0)))), (vec3(1.0))), (false ? _GLF_FUZZED(vec3(9.9, -3.0, 86.04)) : min(_GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), vec3(mat2x3(mat3(1.0) * ((vec3(1.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), (vec3(1.0)))))) * mat3(1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floor(_GLF_IDENTITY(vec3(163.740, 9.8, 8735.9033), mix(vec3(_GLF_IDENTITY((vec3(163.740, 9.8, 8735.9033))[0], ((vec3(163.740, 9.8, 8735.9033))[0]) + 0.0), (vec3(163.740, 9.8, 8735.9033))[1], _GLF_FUZZED(-9.1)), vec3(_GLF_FUZZED(3520.0208), _GLF_FUZZED(-8.2), (vec3(163.740, 9.8, 8735.9033))[2]), bvec3(false, false, true))))), (_GLF_FUZZED(floor(vec3(_GLF_IDENTITY(163.740, (163.740) + 0.0), 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)), mat3(1.0) * (_GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033))), (_GLF_FUZZED(floor(vec3(163.740, 9.8, 8735.9033)))) * vec3(1.0, 1.0, 1.0))))))))))))[1], _GLF_FUZZED(_GLF_IDENTITY(-900.446, clamp(_GLF_IDENTITY(-900.446, min(-900.446, -900.446)), -900.446, -900.446)))))), bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true))), (true) && true), false)))), _GLF_struct_1(bvec3(true), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)), 1u), uvec4(1u), 1.0, bvec2(true), _GLF_struct_2(bvec4(true), mat2(1.0), ivec3(1)), _GLF_struct_3(bvec3(true), _GLF_IDENTITY(ivec2(1), (ivec2(1)) - ivec2(0, 0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(-9.9, (-9.9) / 1.0))) : 1.0, mix(_GLF_IDENTITY(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), min(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), float(false ? _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_FUZZED(normalize(-9.9))))), float(_GLF_FUZZED(5228.4058)), bool(false))) : 1.0))), float(_GLF_FUZZED(float(67123))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(-9.9, (-9.9) / 1.0))) : 1.0, mix(_GLF_IDENTITY(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), min(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), float(false ? _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_FUZZED(normalize(-9.9))))), float(_GLF_FUZZED(5228.4058)), bool(false))) : 1.0))), float(_GLF_FUZZED(float(67123))), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(-9.9, (-9.9) / 1.0))) : 1.0, mix(_GLF_IDENTITY(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), min(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), float(false ? _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_FUZZED(normalize(-9.9))))), float(_GLF_FUZZED(5228.4058)), bool(false))) : 1.0))), float(_GLF_FUZZED(float(67123))), bool(false))), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(-9.9, (-9.9) / 1.0))) : 1.0, mix(_GLF_IDENTITY(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), min(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), float(false ? _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_FUZZED(normalize(-9.9))))), float(_GLF_FUZZED(5228.4058)), bool(false))) : 1.0))), float(_GLF_FUZZED(float(67123))), bool(false))), _GLF_IDENTITY(false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(-9.9, (-9.9) / 1.0))) : 1.0, mix(_GLF_IDENTITY(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), min(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), float(false ? _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_FUZZED(normalize(-9.9))))), float(_GLF_FUZZED(5228.4058)), bool(false))) : 1.0))), float(_GLF_FUZZED(float(67123))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(-9.9, (-9.9) / 1.0))) : 1.0, mix(_GLF_IDENTITY(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), min(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), float(false ? _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_FUZZED(normalize(-9.9))))), float(_GLF_FUZZED(5228.4058)), bool(false))) : 1.0))), float(_GLF_FUZZED(float(67123))), bool(false))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(-9.9, (-9.9) / 1.0))) : 1.0, mix(_GLF_IDENTITY(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), min(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), float(false ? _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_FUZZED(normalize(-9.9))))), float(_GLF_FUZZED(5228.4058)), bool(false))) : 1.0))), float(_GLF_FUZZED(float(67123))), bool(false))), _GLF_IDENTITY(false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(-9.9, (-9.9) / 1.0))) : 1.0, mix(_GLF_IDENTITY(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), min(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), float(false ? _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_FUZZED(normalize(-9.9))))), float(_GLF_FUZZED(5228.4058)), bool(false))) : 1.0))), float(_GLF_FUZZED(float(67123))), bool(false))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(-9.9, (-9.9) / 1.0))) : 1.0, mix(_GLF_IDENTITY(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), min(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), float(false ? _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_FUZZED(normalize(-9.9))))), float(_GLF_FUZZED(5228.4058)), bool(false))) : 1.0))), float(_GLF_FUZZED(float(67123))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(-9.9, (-9.9) / 1.0))) : 1.0, mix(_GLF_IDENTITY(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), min(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), float(false ? _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_FUZZED(normalize(-9.9))))), float(_GLF_FUZZED(5228.4058)), bool(false))) : 1.0))), float(_GLF_FUZZED(float(67123))), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(-9.9, (-9.9) / 1.0))) : 1.0, mix(_GLF_IDENTITY(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), min(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), float(false ? _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_FUZZED(normalize(-9.9))))), float(_GLF_FUZZED(5228.4058)), bool(false))) : 1.0))), float(_GLF_FUZZED(float(67123))), bool(false))), 0.0 + (_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(-9.9, (-9.9) / 1.0))) : 1.0, mix(_GLF_IDENTITY(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), min(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), float(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), max(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), (true ? _GLF_FUZZED(normalize(-9.9)) : _GLF_FUZZED(-8.5))))), _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), (true ? _GLF_FUZZED(normalize(-9.9)) : _GLF_FUZZED(-11.94))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_FUZZED(normalize(-9.9))))), float(_GLF_FUZZED(5228.4058)), bool(false))) : 1.0))), float(_GLF_FUZZED(float(67123))), bool(false))))), _GLF_IDENTITY(false ? _GLF_FUZZED(normalize(_GLF_IDENTITY(-9.9, (-9.9) / 1.0))) : 1.0, mix(_GLF_IDENTITY(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), min(float(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0), float(false ? _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), min(_GLF_FUZZED(normalize(-9.9)), _GLF_FUZZED(normalize(-9.9))))), float(_GLF_FUZZED(5228.4058)), bool(false))) : 1.0))), float(_GLF_FUZZED(float(67123))), bool(false)))))))), bool(true)))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(-9.9)) : 1.0, mix(float(_GLF_FUZZED(-6.2)), float(false ? _GLF_IDENTITY(_GLF_FUZZED(normalize(-9.9)), mix(float(_GLF_FUZZED((- -9961.7330))), float(_GLF_FUZZED(normalize(-9.9))), bool(true))) : 1.0), bool(true))))) - 0.0)), ivec2(1))), _GLF_struct_6(ivec4(1), uvec3(1u), 1, vec4(1.0), _GLF_struct_5(uvec3(1u), true, 1.0)), 1, 1u, _GLF_struct_8(gl_WorkGroupSize.x, mat2(1.0), _GLF_struct_7(mat3x2(1.0), bvec4(true), uvec3(1u), mat3x2(1.0), mat3x4(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(_GLF_IDENTITY((-55651 < 76054), false || (_GLF_IDENTITY((-55651 < 76054), _GLF_IDENTITY(bool(bvec4((-55651 < 76054), true, true, false)), (bool(bvec4((-55651 < 76054), true, true, false))) && true))))))), bool(false))), 0.0, 1.0, 1.0)))), uvec3(1u), uvec4(1u))), mat4x2(1.0), _GLF_struct_10(_GLF_struct_9(_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(1))), uvec4(1u), ivec2(1))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), mix(float(_GLF_FUZZED(-55.68)), float(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0)), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 0.0)), _GLF_IDENTITY((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0)), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 0.0))) * mat2(1.0), _GLF_IDENTITY(((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 0.0))) * mat2(1.0)) * vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-4419.7898, -5.6)) : (_GLF_IDENTITY((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 0.0))), ((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 0.0)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)) * vec2(1.0, 1.0)))))).x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))], clamp(injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))], float(mat2x4(injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))], 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))]))) - 0.0))).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))]) - 0.0))).x), max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))]) - 0.0))).x), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))]) - 0.0))).x))) / abs(1.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(777.187)), bool(false))), mix(float(_GLF_FUZZED(3.9)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(777.187)), bool(false)))), bool(true))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0))))))), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5760.3801)), bool(false))), injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), float(_GLF_FUZZED(-5760.3801)), bool(false))), injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, _GLF_IDENTITY(true, true && (true)), true)))) && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(130929u, 128879u, 191100u)) : gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_base = _GLF_struct_replacement_11._f4.workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id, (0u ^ 1u)), uvec2(0u, 0u) + (uvec2(subgroup_id, (0u ^ 1u))))), (uint(_GLF_IDENTITY(uvec2(subgroup_id, (0u ^ 1u)), uvec2(0u, 0u) + (uvec2(subgroup_id, (0u ^ 1u)))))) | 0u)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(subgroup_id, (0u ^ 1u)), uvec2(0u, 0u) + (uvec2(subgroup_id, (_GLF_IDENTITY(0u ^ 1u, 0u | (0u ^ 1u)))))))) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(subgroup_id, (0u ^ 1u)), uvec2(0u, 0u) + (uvec2(subgroup_id, (0u ^ 1u)))))) * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) * (_GLF_IDENTITY(0u ^ 1u, min(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) - 0u), ~ (~ (_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | 0u))) ^ 1u) - 0u))))) * 1u))))), subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-884.385, -7.5)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-884.385, -7.5)))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-884.385, clamp(_GLF_IDENTITY(-884.385, clamp(-884.385, -884.385, _GLF_IDENTITY(-884.385, min(-884.385, -884.385)))), -884.385, _GLF_IDENTITY(-884.385, (-884.385) / 1.0))), -7.5)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-884.385, -7.5))))))) + vec2(0.0, 0.0)))), (injectionSwitch) - tan(vec2(0.0, 0.0))).y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), (bool(bool(true))) && true)), _GLF_IDENTITY(false, false || (false)), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-884.385, -7.5)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-884.385, -7.5)))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-884.385, -7.5)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-884.385, -7.5))))))) + vec2(0.0, 0.0)))), (injectionSwitch) - tan(vec2(0.0, 0.0))).y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), (bool(bool(true))) && true)), _GLF_IDENTITY(false, false || (false)), false)), ! (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-884.385, -7.5)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-884.385, -7.5)))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-884.385, -7.5)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-884.385, -7.5))))))) + vec2(0.0, 0.0)))), (injectionSwitch) - tan(vec2(0.0, 0.0))).y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), (bool(bool(true))) && true)), _GLF_IDENTITY(false, false || (false)), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))
        return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), clamp((vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])), (vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])), ((vec2(injectionSwitch[0], injectionSwitch[1]))) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), clamp(cos(vec2(0.0, 0.0)), cos(vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), (cos(vec2(0.0, 0.0))) * mat2(1.0)), (_GLF_IDENTITY(cos(vec2(0.0, 0.0)), clamp(cos(vec2(0.0, 0.0)), cos(vec2(0.0, 0.0)), cos(vec2(0.0, 0.0))))) + vec2(0.0, 0.0))))), ((vec2(injectionSwitch[_GLF_IDENTITY(0, 0 | (0))], injectionSwitch[1]))) + vec2(0.0, 0.0)))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])), clamp((vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-1.5) : injectionSwitch[0])), injectionSwitch[1])), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, max(1, 1))))) | 0)])), _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), ((vec2(injectionSwitch[0], injectionSwitch[1]))) / cos(vec2(0.0, 0.0))), ((vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)))))).y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-180.410), (_GLF_FUZZED(-180.410)) / abs(1.0))), bool(false))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))) | 0), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))), mix(vec2(_GLF_FUZZED(3.3), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(5880.6463)), bvec2(true, false))).y)))) ^ 0)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, bool(bool(false))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(false, bool(bool(false))))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(false, bool(bool(false))))), true), false)), false, false))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false, true), false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(254.780)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), bool(true))) > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (! (false))), false)))) && true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) && true))), bool(bvec4(! (bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) && true)), ! (! (bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) && true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) && true)), ! (! (bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))) && true)))))) || false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), true))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(27.81)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, false || (false))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, false || (false))), false)), bool(bvec4(bool(bvec2((_GLF_IDENTITY(false, false || (false))), false)), false, false, false))), true, true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))), false, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))), false, false))))), true && (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))), false, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))), false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED((- (-332.184 - 0.1))), _GLF_FUZZED((- 7830.1477))), bvec2(false, false))).x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-425.063) : injectionSwitch.x, max(false ? _GLF_FUZZED(-425.063) : injectionSwitch.x, false ? _GLF_FUZZED(-425.063) : injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0)))) / cos(0.0)) > injectionSwitch.y))))
  return;
}
