#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 0:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     break;
     case 58:
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       {
        if(true)
         {
          do
           {
            mat3x4(-3845.1124, 7.2, 8.4, -0.8, -79.25, 481.784, 51.50, 9.4, -541.600, 3134.1172, -91.20, -148.765);
           }
          while(_GLF_WRAPPED_LOOP(false));
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            ;
           }
          else
           {
           }
          bool _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
         }
        mat2x4 _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
        while(true)
         {
          mat4x2 _GLF_SWITCH_2_4v[31];
          mix(9.3, -28.63, false);
          if(_GLF_DEAD(false))
           barrier();
          ;
          for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
           {
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
             {
              if(_GLF_DEAD(false))
               barrier();
             }
           }
          if(_GLF_DEAD(false))
           break;
          ivec2 _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v[88];
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            mat2x3(62.96, 6.1, -549.042, -8555.9283, 5302.8726, -45.44);
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          mat3 _GLF_SWITCH_2_8v, _GLF_SWITCH_2_9v;
          mat4x2(8.5, 23.51, -1.1, 2.6, 39.51, 3.4, -43.40, 7746.0837);
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
         continue;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         break;
       }
       if(false)
        {
         if(_GLF_DEAD(false))
          barrier();
         atanh(vec2(-2.3, -7.7));
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         while((false != true))
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         break;
        }
       vec2 _GLF_SWITCH_2_10v[77];
       if(_GLF_DEAD(false))
        barrier();
       float _GLF_SWITCH_2_11v;
       mat3x2(mat3(660.720, 9.0, -1196.1591, -94.56, -0.9, 8.2, 488.258, 8057.1933, -7.3));
       ivec4 _GLF_SWITCH_2_12v[9], _GLF_SWITCH_2_13v[1];
       if(_GLF_DEAD(false))
        return;
       mat4x2 _GLF_SWITCH_2_14v[61], _GLF_SWITCH_2_15v, _GLF_SWITCH_2_16v[64];
      }
     while((false ? false : true));
     case 71:
     mat4x3(723.976, 5624.6232, 8231.5247, 9.4, -7.7, -6.3, 6935.6284, -72.70, -650.711, -6270.4261, -83.28, 56.41);
     default:
     if(_GLF_DEAD(false))
      return;
     1;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 46:
           for(           uvec2(181625u, 59310u);
 false; ivec2(49790, -70425))
            {
             while((ivec3(38858, -86772, -19318) != ivec3(-45358, -79961, -24947)))
              {
              }
             uvec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[68];
             for(mat3 _GLF_SWITCH_4_3v; (mat3x4(-417.056, -6.0, 656.554, -5.9, -75.67, -6.1, 9.8, 7299.0146, -8554.8343, -5.7, 634.804, 42.00) == mat3x4(8.9, 1136.7510, 5.7, -1.2, -7.9, -3.9, 9.2, 4.4, -159.056, -405.703, -6720.6458, 6.1)); ivec4(44879, -67893, -30704, 38065))
              {
               mat3x2 _GLF_SWITCH_4_4v;
               bvec3(true, false, false);
               mat2x4((mat2(6076.8787, -0.3, -802.086, -8.4) - refract(-725.009, 69.52, 9026.5514)));
               ;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 bvec3(true, true, false);
                }
               else
                {
                }
               mat3 _GLF_SWITCH_4_5v[44], _GLF_SWITCH_4_6v, _GLF_SWITCH_4_7v[74];
              }
             for(             uvec4(155718u, 142026u, 81323u, 86794u).y;
 (197.454 < 9.5); vec2(-1.8, 3878.2037))
              {
              }
            }
           case 0:
           case 82:
           case 23:
           case 20:
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
           break;
           case 83:
           bvec4(false, true, false, true);
           default:
           1;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = (0 ^ (1 | 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        continue;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           switch(_GLF_SWITCH(0))
            {
             case 43:
             do
              {
               bitfieldExtract(uvec3(190093u, 75127u, 79344u), -18656, _injected_loop_counter);
              }
             while(_GLF_WRAPPED_LOOP(false));
             case 0:
             case 28:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 55:
             case 37:
             case 2:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              continue;
             case 42:
             case 3:
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 43:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       for(uvec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[67], _GLF_SWITCH_0_2v; ((ivec3(-36576, 96712, -71838) == (ivec3(28524, -31224, -95155) & -98694))); mat2x4(6.3, -394.715, -2.5, -14.80, 2054.2713, -60.48, -3859.3781, -68.95))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         (mat2x4(-6774.2436, -2.4, 3.1, -6620.1979, -646.457, 5.6, 1.0, 7.4) + dot(vec3(1.9, -108.435, 1.5), vec3(-12.77, 5.3, -57.44)));
                         for(                         993.552;
 true; ivec3(21605, 14598, 67317))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             (vec4(546.531, -7617.4732, -1991.0816, -2353.4938) - 93.27);
                             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
                              barrier();
                            }
                           if(_GLF_DEAD(false))
                            continue;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            break;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           return;
                          }
                         if(_GLF_DEAD(false))
                          return;
                         vec2 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             do
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if(_GLF_DEAD(false))
                                  break;
                                }
                               uvec4(70768u, 166462u, 105802u, 64008u);
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           continue;
                          }
                         vec3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[26];
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = (96333 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                          }
                         while((4.4 > -651.797))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             ;
                            }
                           else
                            {
                            }
                           do
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 90:
                               bvec3 _GLF_SWITCH_4_0v;
                               case 0:
                               case 12:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               case 91:
                               case 72:
                               if(_GLF_DEAD(false))
                                barrier();
                               case 54:
                               case 83:
                               mat3x4(-1196.4649, 5.2, -67.61, 45.82, 8.0, -6171.9211, -3.4, -4.6, 5.8, 9956.1812, 5.8, -1.1);
                               break;
                               default:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               1;
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           {
                            (-24.06 != -43.28);
                            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                             barrier();
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               continue;
                              if(_GLF_DEAD(false))
                               break;
                              barrier();
                              if(_GLF_DEAD(false))
                               barrier();
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_DEAD(false))
                                 return;
                                if(_GLF_DEAD(false))
                                 barrier();
                                return;
                               }
                             }
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             return;
                            (false ? mix(bvec3(false, false, true), bvec3(true, false, false), equal(bvec3(true, true, false), bvec3(false, true, false))) : notEqual((ivec3(-6357, -91442, 45567) / -30091), ivec3(-24206, -30388, -89822)));
                            int _GLF_SWITCH_0_8v;
                            (mat4x2(4.8, 4.2, 10.04, 75.61, 601.457, 969.597, -7761.6056, -904.174) / mat4x2(8.4, -928.446, -782.001, 54.76, -7.0, -0.6, -8100.9955, 0.1));
                            mat3(1.3, 53.48, -0.6, 35.67, 478.083, 305.919, -856.163, 38.87, -8.0);
                            if(_GLF_DEAD(false))
                             break;
                           }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              return;
                             continue;
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             mat4(5132.6048, 177.152, 31.27, -7682.2276, 28.82, 1514.1694, 8671.9449, -28.96, 42.47, 47.24, 8.4, -5.2, -1880.5800, -502.159, 3.4, -808.888);
                            }
                           uvec2(172972u, 177982u);
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         subgroup_size;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               for(mat2 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v; (_GLF_SWITCH_0_3v == floor(vec2(6.5, -91.28))); degrees(131.117))
                                {
                                 acos(vec3(4051.2200, 9.4, -9.1));
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    continue;
                                   if(_GLF_DEAD(false))
                                    break;
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    break;
                                   return;
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if(_GLF_DEAD(false))
                                    continue;
                                  }
                                }
                               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                                barrier();
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, true))))))
                      continue;
                    }
                   else
                    {
                    }
                   case 85:
                   while((injectionSwitch == injectionSwitch))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     mat3x2 _GLF_SWITCH_0_12v[60];
                     if(_GLF_DEAD(false))
                      continue;
                     bvec3 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v;
                     vec4 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       (mat3x2(760.595, 96.82, 430.402, -1.7, -9.4, -18.02) * mat3(87.72, 947.895, 75.78, 5.1, 340.347, -462.981, -4085.3987, -0.0, 1276.7821));
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         break;
                        }
                      }
                     mat2(2971.0174, -8.9, 3570.9991, -6054.9095);
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       break;
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       while((bvec4(false, false, false, true) != bvec4(false, true, true, true)))
                        {
                         for(mat4x2 _GLF_SWITCH_0_18v[48], _GLF_SWITCH_0_19v; false; vec3(7296.9016, 20.52, 7.9))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             break;
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                            }
                           bvec2 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v;
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   return;
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                           else
                            {
                            }
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                              break;
                             do
                              {
                               (min(uvec4(89848u, 47024u, 116944u, 61040u), uvec4(109041u, 193668u, 120271u, 199715u)) * uvec4(55805u, 125815u, 32852u, 3814u));
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           else
                            {
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           true;
                           mat2x3 _GLF_SWITCH_0_22v;
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              break;
                             barrier();
                            }
                           uvec3 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v;
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                return;
                               ivec2(-40918, 69263);
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                continue;
                              }
                             if(_GLF_DEAD(false))
                              continue;
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             else
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_DEAD(false))
                                return;
                              }
                             else
                              {
                              }
                             for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                      {
                                       return;
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                }
                               if(_GLF_DEAD(false))
                                return;
                              }
                             continue;
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
                              barrier();
                             if(_GLF_DEAD(false))
                              break;
                             continue;
                            }
                           ivec4 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            barrier();
                           _GLF_SWITCH_0_14v;
                           if(_GLF_DEAD(false))
                            break;
                          }
                         mat4x2(exp(injectionSwitch), injectionSwitch, degrees(vec2(2813.7220, -3905.6594)), injectionSwitch);
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            continue;
                           continue;
                          }
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
                          return;
                         mat2x4(mat4x2(396.620, 947.899, -7.4, -9319.8929, 683.385, 32.12, -4819.6245, 97.68));
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         bvec4(false, true, true, true);
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 return;
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             break;
                            }
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                          {
                           false;
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         do
                          {
                           if(_GLF_DEAD(false))
                            break;
                           mat4(mat2x4(556.879, -80.49, 6723.9333, 511.540, -3.5, 1.7, 7.9, -2.9));
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         {
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                            continue;
                           }
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          mat4x2 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v;
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              if(_GLF_DEAD(false))
                               break;
                              do
                               {
                                barrier();
                               }
                              while(_GLF_WRAPPED_LOOP(false));
                             }
                            else
                             {
                              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                               barrier();
                              if(_GLF_DEAD(false))
                               return;
                             }
                            if(_GLF_DEAD(false))
                             return;
                           }
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           break;
                          if(_GLF_DEAD(false))
                           continue;
                          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                           {
                            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                             {
                              uvec4(uvec2(83870u, 39268u), uvec2(59834u, 197365u));
                             }
                            else
                             {
                             }
                           }
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          else
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_WRAPPED_IF_FALSE(false))
                               {
                               }
                              else
                               {
                                barrier();
                               }
                             }
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              switch(_GLF_SWITCH(0))
                               {
                                case 43:
                                (roundEven(59.14) + mat3x4(-4.8, -616.662, -5.6, 0.4, -11.56, 5277.4521, 9.8, 1.1, -4.2, 181.405, -7587.6150, 7.7));
                                case 0:
                                case 46:
                                case 90:
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                  for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                   {
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     barrier();
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     barrier();
                                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     {
                                     }
                                    else
                                     {
                                      return;
                                     }
                                   }
                                 }
                                if(_GLF_DEAD(false))
                                 barrier();
                                if(_GLF_DEAD(false))
                                 {
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   barrier();
                                  barrier();
                                 }
                                break;
                                default:
                                if(_GLF_WRAPPED_IF_FALSE(false))
                                 {
                                 }
                                else
                                 {
                                  1;
                                 }
                               }
                             }
                            else
                             {
                             }
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                           }
                          bvec2 _GLF_SWITCH_0_29v;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           break;
                          for(int _injected_loop_counter = ((0 | 0) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                           {
                            mat3x2(4.4, -2.2, -7.8, -8.9, -47.24, 83.06);
                           }
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                        }
                      }
                     else
                      {
                      }
                     for(uvec3 _GLF_SWITCH_0_30v[64], _GLF_SWITCH_0_31v; (mat2x4(-32.93, 3962.9995, -9.3, 31.66, -48.67, -0.8, 3542.1394, 9888.9190) != mat2x4(-6.4, 2.1, 5729.9377, -0.2, 310.568, -1000.8735, 2.6, -4783.0111)); _GLF_SWITCH_0_14v)
                      {
                       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         for(                         mat2(-82.88, -295.602, -9.7, -51.92);
 true; ivec2(55587, 50600))
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               barrier();
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                    {
                                     switch(_GLF_SWITCH(0))
                                      {
                                       case 80:
                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                        }
                                       else
                                        {
                                         mat2x3((mat4x2(8357.9981, 642.590, 43.47, -9.5, -1.4, -247.612, -316.073, -535.588) - acosh(5369.6809)));
                                        }
                                       case 56:
                                       int _GLF_SWITCH_4_0v;
                                       case 0:
                                       case 79:
                                       case 9:
                                       case 72:
                                       case 53:
                                       case 33:
                                       case 37:
                                       case 58:
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                                        {
                                         switch(_GLF_SWITCH(0))
                                          {
                                           case 68:
                                           uvec4 _GLF_SWITCH_2_0v[52];
                                           case 0:
                                           case 4:
                                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            continue;
                                           if(_GLF_DEAD(false))
                                            break;
                                           case 64:
                                           case 28:
                                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            break;
                                           case 92:
                                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            barrier();
                                           case 16:
                                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            barrier();
                                           for(int _injected_loop_counter = (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               (mat3x2(-3.0, -1.0, -8.5, 3243.8048, -8783.8268, -1.2) - -0.4);
                                              }
                                            }
                                           break;
                                           default:
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             1;
                                            }
                                          }
                                         if(_GLF_DEAD(false))
                                          break;
                                        }
                                       break;
                                       case 55:
                                       mat4(-755.671, 5.9, 321.799, -7905.0107, 94.84, 0.8, 8.0, -7.5, 92.97, -85.31, -5824.6503, 4887.5773, -1273.0693, -4.2, 81.34, 675.820);
                                       case 75:
                                       _injected_loop_counter;
                                       default:
                                       1;
                                      }
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           do
                            {
                             do
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               else
                                {
                                }
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                break;
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                              break;
                             if(_GLF_DEAD(false))
                              break;
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               break;
                              }
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               bvec2(true, false);
                              }
                             else
                              {
                              }
                            }
                           (vec3(-6.2, -3.3, 7.7) , mat4x3(mat2x3(7.2, 0.2, 8.7, 899.684, 4.3, 8083.8827)));
                           uint _GLF_SWITCH_0_32v;
                           uvec3(179807u, 149605u, 118978u);
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                        }
                       if(_GLF_DEAD(false))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 39:
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 6:
                               uvec2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                               case 84:
                               bvec2 _GLF_SWITCH_4_3v;
                               case 0:
                               if(_GLF_DEAD(false))
                                barrier();
                               case 69:
                               case 90:
                               case 26:
                               case 2:
                               case 55:
                               case 71:
                               case 74:
                               mat2x3(-354.094, 7.7, -460.598, -620.999, 7453.6798, 7.8);
                               break;
                               default:
                               1;
                              }
                            }
                           case 53:
                           vec3(-5.5, 3.1, -89.17);
                           case 0:
                           case 83:
                           case 78:
                           case 21:
                           if(_GLF_DEAD(false))
                            return;
                           case 89:
                           continue;
                           break;
                           case 79:
                           mat2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[2];
                           case 24:
                           mat2x4 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v;
                           default:
                           1;
                          }
                        }
                       do
                        {
                         switch(_GLF_SWITCH((1 ^ 1)))
                          {
                           case 93:
                           int _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                           case 76:
                           mat3x2 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v;
                           case 0:
                           case 38:
                           case 43:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           case 26:
                           case 49:
                           case 21:
                           case 42:
                           mat3x2(-4.6, -40.38, -78.86, -4318.3846, -4.0, -4.6);
                           break;
                           case 79:
                           mat3(5398.3061, -9.5, -9.6, 6.5, 9.9, 418.277, 5.7, -9516.1407, 460.337);
                           case 66:
                           mat4x3 _GLF_SWITCH_4_5v;
                           default:
                           if(_GLF_DEAD(false))
                            barrier();
                           1;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                   case 0:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                      {
                       for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 return;
                                }
                               else
                                {
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                       do
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (-44603 & 0)); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        break;
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        break;
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           return;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       break;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               barrier();
                              }
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   case 4:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     break;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
                    continue;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         continue;
                        }
                       barrier();
                      }
                    }
                   case 95:
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    barrier();
                   case 26:
                   case 57:
                   case 65:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 96:
                           case 24:
                           case 20:
                           case 50:
                           case 98:
                           case 94:
                           case 60:
                           case 46:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             return;
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              return;
                            }
                           else
                            {
                            }
                           break;
                           default:
                           1;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     break;
                    }
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   case 34:
                   case 10:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   break;
                   case 69:
                   {
                    if(_GLF_DEAD(false))
                     break;
                    for(                    mat2(mat4(782.331, 160.488, 3.9, 364.094, 8017.9086, -8.9, -2.1, -3491.0047, -664.075, -8677.4578, 48.32, -726.022, 9.4, 2.0, -5.5, -8841.5634));
 (min((70857 - ivec2(91818, -82684)), ivec2(-80545, -20902)) != ivec2(70835, 74748)); (uvec4(159099u, 80763u, 40572u, 36140u) ^ uvec4(193195u, 135985u, 31562u, 702u)))
                     {
                      mat4x3(-487.981, 844.924, 7.8, -25.15, -9.9, 794.358, -229.393, -568.985, 896.320, -82.05, 524.034, -735.025);
                      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                       return;
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(false))
                           return;
                          return;
                         }
                        else
                         {
                         }
                       }
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          mat3(-451.612, 6804.2116, 8628.6823, -9696.4580, -64.59, 9.1, 5570.5017, 98.98, -9.8);
                         }
                       }
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                       }
                      else
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          do
                           {
                            lessThanEqual(uvec3(10498u, 34639u, 98857u), uvec3(106149u, 129276u, 80641u));
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                       }
                      if(_GLF_DEAD(false))
                       break;
                      uvec4 _GLF_SWITCH_0_33v;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                         }
                        else
                         {
                          return;
                         }
                       }
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        continue;
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    do
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         return;
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        else
                         {
                          barrier();
                         }
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    do
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 11:
                          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                           {
                            ivec4(-13796, -78552, -69513, 27486);
                           }
                          else
                           {
                           }
                          case 0:
                          case 95:
                          case 74:
                          if(_GLF_DEAD(false))
                           barrier();
                          case 41:
                          case 37:
                          case 6:
                          case 45:
                          case 51:
                          switch(_GLF_SWITCH(0))
                           {
                            case 50:
                            uint _GLF_SWITCH_1_0v;
                            case 0:
                            case 51:
                            case 52:
                            if(_GLF_DEAD(false))
                             continue;
                            for(int _injected_loop_counter = _GLF_IDENTITY((0 | 0), min((0 | 0), _GLF_IDENTITY((0 | 0), ((0 | 0)) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                                if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                                 {
                                 }
                                else
                                 {
                                  barrier();
                                 }
                               }
                             }
                            case 39:
                            case 5:
                            while((false))
                             {
                              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                               {
                                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                 {
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   barrier();
                                 }
                               }
                              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                               {
                                mat4x2(186.732, 11.88, -5.9, 6.5, -4318.6607, -0.7, -70.11, -5.9);
                               }
                              uvec4(14005u, 87612u, 66096u, 166506u);
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              if(_GLF_DEAD(false))
                               {
                                switch(_GLF_SWITCH(0))
                                 {
                                  case 0:
                                  case 98:
                                  case 26:
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   barrier();
                                  case 52:
                                  case 42:
                                  if(_GLF_DEAD(false))
                                   {
                                    if(_GLF_DEAD(false))
                                     barrier();
                                    break;
                                   }
                                  case 10:
                                  case 55:
                                  if(_GLF_DEAD(false))
                                   barrier();
                                  case 84:
                                  case 97:
                                  case 50:
                                  if(_GLF_WRAPPED_IF_FALSE(false))
                                   {
                                   }
                                  else
                                   {
                                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                     {
                                      barrier();
                                      if(_GLF_DEAD(false))
                                       {
                                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                         barrier();
                                        break;
                                       }
                                     }
                                   }
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   return;
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   continue;
                                  break;
                                  case 56:
                                  transpose(mat2x4(3.9, 4.5, -8.0, -8.6, 233.715, 237.691, 3.6, 1.2));
                                  default:
                                  if(_GLF_WRAPPED_IF_TRUE(true))
                                   {
                                    if(_GLF_DEAD(false))
                                     barrier();
                                   }
                                  else
                                   {
                                   }
                                  if(_GLF_WRAPPED_IF_TRUE(true))
                                   {
                                    do
                                     {
                                      if(_GLF_WRAPPED_IF_TRUE(true))
                                       {
                                        1;
                                       }
                                      else
                                       {
                                       }
                                     }
                                    while(_GLF_WRAPPED_LOOP(false));
                                   }
                                  else
                                   {
                                   }
                                 }
                                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                                 return;
                                if(_GLF_DEAD(false))
                                 barrier();
                                do
                                 {
                                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                   barrier();
                                 }
                                while(_GLF_WRAPPED_LOOP(false));
                               }
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               break;
                              for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                               {
                                ;
                               }
                              if(_GLF_DEAD(false))
                               barrier();
                              if(_GLF_WRAPPED_IF_TRUE(true))
                               {
                                do
                                 {
                                  if(_GLF_DEAD(false))
                                   {
                                    if(_GLF_DEAD(false))
                                     barrier();
                                    break;
                                   }
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   continue;
                                  switch(_GLF_SWITCH(0))
                                   {
                                    case 31:
                                    (transpose(mat2(6.0, 8277.3067, -2915.6356, -1.4)) * mat4x2(-844.684, 504.432, 5.8, 1.1, -0.1, -67.30, -9578.8980, 7678.5682));
                                    case 0:
                                    if(_GLF_DEAD(false))
                                     barrier();
                                    break;
                                    case 42:
                                    41858u;
                                    case 77:
                                    do
                                     {
                                      if(_GLF_WRAPPED_IF_TRUE(true))
                                       {
                                        mix(log(injectionSwitch), smoothstep(max(vec2(775.175, -9.7), injectionSwitch), injectionSwitch, injectionSwitch), 4870.5474);
                                       }
                                      else
                                       {
                                       }
                                     }
                                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                    if(_GLF_DEAD(false))
                                     barrier();
                                    default:
                                    1;
                                   }
                                  if(_GLF_DEAD(false))
                                   return;
                                 }
                                while(_GLF_WRAPPED_LOOP(false));
                               }
                              else
                               {
                               }
                              uvec3 _GLF_SWITCH_0_34v;
                              if(_GLF_DEAD(false))
                               continue;
                              if(_GLF_WRAPPED_IF_FALSE(false))
                               {
                                if(_GLF_DEAD(false))
                                 continue;
                               }
                              else
                               {
                                do
                                 {
                                  ;
                                  if(_GLF_DEAD(false))
                                   continue;
                                  if(_GLF_DEAD(false))
                                   break;
                                 }
                                while(_GLF_WRAPPED_LOOP(false));
                                if(_GLF_DEAD(false))
                                 {
                                  if(_GLF_DEAD(false))
                                   break;
                                  continue;
                                 }
                                if(_GLF_DEAD(false))
                                 {
                                  if(_GLF_WRAPPED_IF_FALSE(false))
                                   {
                                   }
                                  else
                                   {
                                    barrier();
                                   }
                                 }
                               }
                              if(_GLF_DEAD(false))
                               barrier();
                              if(_GLF_WRAPPED_IF_TRUE(true))
                               {
                                if(_GLF_DEAD(false))
                                 return;
                               }
                              else
                               {
                               }
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_DEAD(false))
                                 continue;
                                if(_GLF_WRAPPED_IF_FALSE(false))
                                 {
                                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   barrier();
                                 }
                                else
                                 {
                                  if(_GLF_DEAD(false))
                                   barrier();
                                  return;
                                 }
                               }
                             }
                            break;
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               return;
                              continue;
                             }
                            case 37:
                            mat3 _GLF_SWITCH_1_1v;
                            if(_GLF_DEAD(false))
                             break;
                            default:
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              1;
                             }
                           }
                          break;
                          case 29:
                          mat4x3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                          default:
                          do
                           {
                            1;
                           }
                          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         }
                       }
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          return;
                         }
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 0:
                             if(_GLF_DEAD(false))
                              barrier();
                             case 89:
                             case 56:
                             do
                              {
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                                {
                                 switch(_GLF_SWITCH(((0 | 0) << _GLF_IDENTITY(int(3), int(3)))))
                                  {
                                   case 0:
                                   case 13:
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     do
                                      {
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        continue;
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       return;
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                   break;
                                   default:
                                   1;
                                  }
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             break;
                             case 18:
                             uvec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                             default:
                             1;
                            }
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(1), int(1)))))
                        {
                         case 42:
                         if(_GLF_DEAD(false))
                          break;
                         bvec2(false, false);
                         case 0:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         case 38:
                         case 70:
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             return;
                            }
                          }
                         case 3:
                         mat2x3(-242.216, 11.21, -9.4, 187.039, 0.8, -88.47);
                         if(_GLF_DEAD(false))
                          continue;
                         break;
                         default:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         1;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))
                          continue;
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       mat3x4((mat2x3(-2.2, -1385.2076, -3.9, -1132.4236, -558.379, -4405.8152) * mat2(3.3, -2.7, 294.327, 3128.6191)));
                      }
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      break;
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       ;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     (5.1 < floor(-1.6));
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         mat2x4(mat4x2(262.310, 246.730, -67.63, 874.526, -84.95, -9.2, 1.9, -1569.6667));
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                          return;
                         mat2x3(9714.7228, -984.457, 3412.2738, -8131.6773, 4919.4997, 865.866);
                         for(int _injected_loop_counter = (-86013 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8)))))); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              break;
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_DEAD(false))
                              return;
                             uvec3(144326u, 23868u, 4276u);
                            }
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                      }
                     uvec3(128753u, 118999u, 192513u);
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                      }
                     else
                      {
                      }
                     do
                      {
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         mat2x4(2.2, 3542.5216, 683.306, 92.64, -51.71, 6.3, -9520.7797, 1411.3218);
                        }
                       mat3x2 _GLF_SWITCH_0_35v[73], _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v[48];
                      }
                     while(true);
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     (mat4x2(288.340, -947.823, 9.3, 0.4, 1858.3564, -472.103, 4.9, -7.0) / -4.9);
                    }
                    do
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        break;
                       }
                      bvec3(false, false, true);
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      (uvec3(68978u, 125249u, 95889u) / uvec3(111671u, 174423u, 134186u));
                      if(_GLF_DEAD(false))
                       return;
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      do
                       {
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                         {
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            barrier();
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                           }
                         }
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    mat2x4(698.530, -1.5, -396.213, 94.60, -622.787, 28.94, 294.182, 0.4);
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        return;
                       }
                     }
                    for(int _injected_loop_counter = (4155 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(false))
                           return;
                         }
                        else
                         {
                         }
                        return;
                       }
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    mat4x2(-335.695, -2734.1102, -569.539, -35.85, 506.449, 3.6, 42.89, -642.297);
                   }
                   case 23:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       continue;
                      }
                     return;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     continue;
                    }
                   ivec4(15222, ivec3(51264, -42294, -65037));
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 41:
                     ;
                     case 62:
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                      {
                       mat4(-2.5, -9.1, 47.45, -565.509, 4211.2021, -9148.7477, -4440.0731, -9.8, 2768.9782, -8.5, 86.48, 4.9, 736.618, -3.3, -790.161, 251.897);
                      }
                     else
                      {
                      }
                     case 0:
                     case 2:
                     case 99:
                     case 97:
                     case 14:
                     case 12:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     break;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     default:
                     1;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             break;
             case 60:
             mat4x3 _GLF_SWITCH_3_0v;
             case 86:
             vec3 _GLF_SWITCH_3_1v[23], _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v[92];
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             default:
             1;
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH((42133 & (1 ^ 1))))
    {
     case 71:
     6164u;
     case 53:
     for(bvec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v; false; greaterThan(ivec2(-34831, -24572), ivec2(89989, 84889)))
      {
       ivec2 _GLF_SWITCH_4_3v;
       mat4x3(2.7, 9185.5705, 9176.8137, -7263.6571, 1.7, -1017.4495, -6.2, -5.9, 3.7, -58.35, -93.31, 9.3);
       bool _GLF_SWITCH_4_4v[26], _GLF_SWITCH_4_5v, _GLF_SWITCH_4_6v;
       {
        if(_GLF_SWITCH_4_5v)
         {
          ;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          vec2 _GLF_SWITCH_4_7v[1], _GLF_SWITCH_4_8v;
         }
        else
         {
          (mat3(625.496, 84.46, 1075.1290, -297.774, -75.32, 0.8, -87.71, 3716.4896, 493.715) + -1.6);
          mat2 _GLF_SWITCH_4_9v[61];
         }
        mat2 _GLF_SWITCH_4_10v[72];
        ;
        if((_GLF_SWITCH_4_0v != bvec4(true, true, false, true)))
         {
          (mat2x4(7.1, -64.12, 5.8, -8.9, -87.67, -7.2, 9.5, -4.7) / mat2x4(55.90, 337.886, 31.86, 7.5, 754.235, 8673.2014, -6.4, 1.9));
          mat2x4(-9.2, -865.562, -2.1, 9.8, -75.54, 6930.2471, 8.9, -7.2);
          ((mat3(4.0, -380.671, 88.87, -6.0, -461.571, -9.3, 79.56, -955.925, -8.4) == mat3(7.7, -20.13, 42.16, -944.162, 155.510, 5888.4455, 7071.0317, 8.8, 6458.6282)) ? mat4x3(mat3x4(-2.4, 603.167, 6882.5410, 37.73, 84.94, -59.02, 101.109, 5735.9888, -3301.0247, 333.388, -45.54, -8.8)) : mat4x3(-3.6, -4.7, 1550.3304, 63.27, 34.68, -2.3, 4126.7974, -95.92, 269.004, 2.6, -7.8, 8.6));
          if(_GLF_DEAD(false))
           barrier();
          mat3x2 _GLF_SWITCH_4_11v, _GLF_SWITCH_4_12v[9];
          mat2x3(-7.2, -9.4, -0.9, -9.4, 2.1, 6903.7101);
          (subgroup_local_id + uvec2(142603u, 163723u));
         }
        else
         {
          bvec3 _GLF_SWITCH_4_13v[71], _GLF_SWITCH_4_14v, _GLF_SWITCH_4_15v;
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            bvec2(false, true);
           }
          if(_GLF_DEAD(false))
           barrier();
          (mat3(mat2x3(1618.3882, 290.063, -4.2, 5.1, 39.03, -5.2)) * (- mat3(-741.472, 6950.9655, 696.669, -132.146, -862.273, -88.63, -36.95, 6.2, 823.673)));
          (subgroup_id / uvec3(130718u, 10908u, 58290u));
          if(_GLF_DEAD(false))
           barrier();
          ;
         }
        -83750;
       }
       clamp(vec3(260.622, 1313.0951, -5168.5000), 338.990, -8.5);
      }
     case 0:
     case 41:
     case 21:
     case 16:
     case 17:
     case 76:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 11:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 30:
     switch(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(8), int(8))) | 0)))
      {
       case 67:
       bvec4(true, false, false, false);
       case 0:
       case 6:
       case 92:
       case 62:
       if(_GLF_DEAD(false))
        return;
       case 86:
       case 2:
       barrier();
       break;
       case 25:
       mat3x4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
       default:
       1;
      }
     break;
     default:
     1;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     switch(_GLF_SWITCH(0))
      {
       case 49:
       mat3x4 _GLF_SWITCH_4_0v[76];
       case 0:
       if(_GLF_DEAD(false))
        barrier();
       case 90:
       case 78:
       case 83:
       case 64:
       case 89:
       case 13:
       case 80:
       case 61:
       case 45:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       break;
       case 24:
       for(       (tan(-13.74) - mat4x2(686.282, -5.8, 254.335, -53.04, 36.11, 0.8, 850.083, 434.990));
 false; bvec4(bvec2(false, false), bvec2(false, true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         mat2(-16.21, 679.801, 9.3, -6.8);
         uvec4(114492u, 40056u, 99920u, 49109u);
         for(bool _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v; false; ivec2(-54450, 25034))
          {
           bitCount(ivec4(-86096, -34739, -92710, 85887));
           unpackHalf2x16(workgroup_id);
           mat2x3(-9521.1407, 446.912, 820.667, 277.906, -9.1, -9.4);
           mat2x3 _GLF_SWITCH_4_3v[36];
           vec3 _GLF_SWITCH_4_4v;
           int _GLF_SWITCH_4_5v;
           abs(_injected_loop_counter);
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             mat2(mat3(-51.09, -242.719, -65.83, -5099.0152, 42.24, 8.3, 5.1, -152.922, -6592.6659));
            }
           else
            {
            }
           uvec4 _GLF_SWITCH_4_6v, _GLF_SWITCH_4_7v[99];
          }
         mat3x4 _GLF_SWITCH_4_8v, _GLF_SWITCH_4_9v, _GLF_SWITCH_4_10v;
         mat4(-4832.9819, 0.0, 900.476, 9.4, 2895.1309, 6.2, -2.9, -7.4, 75.97, -9184.4701, 3.7, -6.6, 4354.7181, -3.6, -75.59, -4849.2924);
         uvec4(66435u, 25668u, 187479u, 24460u);
         mat2x4(-5115.1418, -267.312, 1177.4757, -8793.2601, 6.6, -0.0, 7.7, 9332.8852);
        }
       case 67:
       bvec3 _GLF_SWITCH_4_11v;
       default:
       1;
      }
    }
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     int i = 0;
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        continue;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
      }
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, int(ivec3(1, 1, 0))) ^ 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 77:
               case 37:
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               case 53:
               case 17:
               case 2:
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                }
               case 19:
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                {
                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                  {
                   case 0:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 3:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 87:
                   case 76:
                   return;
                   break;
                   default:
                   1;
                  }
                }
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 3:
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 while((24269 < -33354))
                  {
                   ;
                   uvec3(uvec2(27905u, 105011u), subgroup_id);
                   if(_GLF_DEAD(false))
                    return;
                   bvec2(false, true);
                   mat4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v[76];
                   ivec2(10489, -10034);
                   _GLF_SWITCH_1_0v;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   mat4x3 _GLF_SWITCH_1_3v;
                   do
                    {
                     76165;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               case 8:
               mat4 _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v[54];
               default:
               1;
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         switch(_GLF_SWITCH(((1 ^ 1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))
          {
           case 36:
           ivec4(-1312, (72767 ^ _injected_loop_counter), (ivec2(77032, 44564) << (~ ivec2(-40446, -64519))));
           if(_GLF_DEAD(false))
            break;
           case 8:
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               mat3x2(-4.6, -71.55, -7.8, -727.759, -0.4, -392.993);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           case 0:
           case 20:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 30:
                   case 32:
                   case 33:
                   case 24:
                   case 12:
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
                    {
                     return;
                    }
                   break;
                   case 98:
                   vec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                   case 22:
                   mat2x4 _GLF_SWITCH_3_3v[6], _GLF_SWITCH_3_4v;
                   default:
                   1;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            return;
           break;
           case 97:
           bvec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[74];
           case 83:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             ;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           default:
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             1;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          break;
        }
      }
     for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 64:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             mat3x2(-1.2, 8.8, -1534.0108, -1.4, 30.51, -3464.8169);
            }
           case 0:
           case 3:
           case 75:
           case 6:
           if(_GLF_DEAD(false))
            barrier();
           case 5:
           case 4:
           case 1:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 83:
                 floatBitsToUint(vec4(2.9, 86.76, 85.27, -389.564));
                 case 0:
                 barrier();
                 break;
                 case 51:
                 uint _GLF_SWITCH_4_0v[14], _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                 case 60:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 ivec4 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v[27];
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
           break;
           case 56:
           uvec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[15], _GLF_SWITCH_3_2v[83];
           case 72:
           mat4x2(mat2(-236.536, -611.069, 2.2, -1814.5233));
           default:
           1;
          }
        }
      }
    }
  }
}
