#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 ivec2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 mat3x2 _f1;
 int _f2;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 uvec2 _f1;
 uvec4 _f2;
 uvec2 _f3;
 mat2 _f4;
 mat3x2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 _GLF_struct_0 _f1;
 mat2x4 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_5 {
 int i;
 _GLF_struct_4 _f0;
 mat2x3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-83.17), _GLF_FUZZED(-38.71)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u))))) + (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u | (0u | 0u))), min(_GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u | (0u | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u | (0u | 0u))), (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u | (0u | 0u))) : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(true ? workgroup_size * workgroup_id : _GLF_FUZZED(subgroup_size), (true ? workgroup_size * workgroup_id : _GLF_FUZZED(subgroup_size)) << 0u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) / 1u))) + (clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))), 0u))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1) % subgroup_size), _GLF_IDENTITY(uint(uvec3(((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) - (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(0u, 0u), min(0u, 0u)))), 0u)), min(0u, 0u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), min(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))) | 0u), min(0u, 0u))), min((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u), (min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) >> 0u)), min(0u, 0u))), 1u)))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(0u, 0u), min(0u, 0u)))), 0u)), min(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), 0u ^ (uint(uvec2(0u, 1u))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)))), uint(6u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(6u))) - (0u ^ 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)))), uint(6u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(6u))) - (0u ^ 0u))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)))), uint(6u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(6u))) - _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) - 0u)))) / 1u)) * (1u & 1u)) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))), ((uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ~ (~ (_GLF_IDENTITY(uint(6u), uint(6u))))), 1u, 0u)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u)))) | ((uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(6u, _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(workgroup_id) : 6u)), _GLF_IDENTITY(6u, 1u * (6u))))), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), clamp((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), (_GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), false || ((! _GLF_IDENTITY((true), ((true)) && true)))))))) && true)) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), clamp((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | 0u)), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u))))), 0u ^ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size)) ^ 0u))), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)))), 0u))), uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) * 1u)) | (6u))), uint(6u))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), (true ? (1u << _GLF_IDENTITY(uint(6u), uint(6u))) : _GLF_FUZZED(virtual_gid))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(uint(uint((1u << _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uint((1u << _GLF_IDENTITY(uint(6u), uint(6u)))))) | 0u)) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), clamp((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), 1u * (uint(6u))), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))))), (0u | 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), clamp((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(~ (uint(6u)), (~ (uint(6u))) | (_GLF_IDENTITY(~ (uint(6u)), (~ (uint(6u))) << 0u))))), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, max(6u, 6u))) * 1u)), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), ~ (_GLF_IDENTITY(~ (min(0u, 0u)), 0u ^ (~ (min(0u, 0u)))))), min(0u, 0u)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))))))))), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + 0u) - 0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(0u, 0u), min(0u, 0u)))), 0u)), min(0u, 0u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))))), min(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))) | 0u), min(0u, 0u))), min((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u), (min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)) >> 0u)), min(0u, 0u))), 1u)))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), min(0u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(0u, 0u), min(0u, 0u)))), 0u)), min(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), 0u ^ (uint(uvec2(0u, 1u))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)))), uint(6u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(6u))) - (0u ^ 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)))), uint(6u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(6u))) - (0u ^ 0u))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)))), uint(6u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(6u))) - _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) - 0u)))) / 1u)) * (1u & 1u)) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))), ((uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ~ (~ (_GLF_IDENTITY(uint(6u), uint(6u))))), 1u, 0u)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u)))) | ((uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(6u, _GLF_IDENTITY(6u, (false ? _GLF_FUZZED(workgroup_id) : 6u)), _GLF_IDENTITY(6u, 1u * (6u))))), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), clamp((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), (_GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), false || ((! _GLF_IDENTITY((true), ((true)) && true)))))))) && true)) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), clamp((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | 0u)), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u))))), 0u ^ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size)) ^ 0u))), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)))), 0u))), uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) * 1u)) | (6u))), uint(6u))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), (true ? (1u << _GLF_IDENTITY(uint(6u), uint(6u))) : _GLF_FUZZED(virtual_gid))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(uint(uint((1u << _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uint((1u << _GLF_IDENTITY(uint(6u), uint(6u)))))) | 0u)) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), clamp((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), 1u * (uint(6u))), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))))), (0u | 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), clamp((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(~ (uint(6u)), (~ (uint(6u))) | (_GLF_IDENTITY(~ (uint(6u)), (~ (uint(6u))) << 0u))))), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, max(6u, 6u))) * 1u)), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), ~ (_GLF_IDENTITY(~ (min(0u, 0u)), 0u ^ (~ (min(0u, 0u)))))), min(0u, 0u)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (! (true))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? 1u : _GLF_FUZZED(workgroup_size))), 0u))))))))))), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + 0u) - 0u)), 0u, 0u)) / uvec3(1u, 1u, 1u)) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))), (uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id))), 1u, 1u)) | uvec3(0u, 0u, 0u)))), 1u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))), 1u), _GLF_IDENTITY((uvec3(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))), 1u)) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uvec3(uvec3((uvec3(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))), 1u)) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), (uvec3(0u, 0u, 0u) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), _GLF_IDENTITY(0u, ((0u ^ 0u) >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (0u)))) | (uvec3(uvec3((uvec3(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), 0u | (_GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), 0u + (uint(uvec3(1u, 1u, 1u))))))) ^ 0u)), 1u)) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), (uint(uvec3((_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + 1)))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), clamp(uint(uvec3(1u, 1u, 1u)), uint(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : (1u) ^ 0u)))), (false ? _GLF_FUZZED(uvec3(37498u, 50888u, 59304u)) : uvec3(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u | ((1u))) ^ 0u))))), uint(uvec3(1u, 1u, 1u))))) - 0u)), 1u))) / 1u) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size), _GLF_IDENTITY(1u, uint(uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicMin(num_workgroup, workgroup_base), (atomicMin(num_workgroup, workgroup_base)) ^ 0u)) : _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), clamp(uint(uint(1u)), uint(uint(1u)), uint(uint(1u))))))), 1u))), 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u)))))), 0u ^ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u)))))))), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u)))))), 0u ^ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u)))))))))))), 1u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) + 0u, 0u ^ (_GLF_IDENTITY((uint(1u)) + 0u, clamp((uint(1u)) + 0u, (uint(1u)) + 0u, (uint(1u)) + 0u)))))))))), 0u ^ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u)))))))))), 1u), (uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u)))), ((false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u))))) >> 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u)))))), 0u ^ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u)))))))))), 1u)) * uvec3(1u, 1u, 1u)))))), 1u), ~ (~ (uvec3((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), (uint(0u)) << 0u))))), _GLF_IDENTITY(1u, uint(uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(uint(1u))))), 1u))), 1u))))), ((_GLF_IDENTITY(uvec3(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, uint(uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u))))), 1u))), 1u), ~ (~ (uvec3(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, uint(uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))), (false ? _GLF_FUZZED(atomicMin(num_workgroup, workgroup_base)) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), 1u)))))) >> uvec3(0u, 0u, 0u)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))), (uint(uvec3(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (1u) << 0u), uint(uvec3(1u, 1u, 1u))), 1u))) / 1u) : _GLF_FUZZED(workgroup_size)) | (true ? _GLF_IDENTITY(uint(uvec3(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))), 1u)), (uint(uvec3(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), uint(uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), 1u))) / 1u) : _GLF_FUZZED(workgroup_size))))));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), _GLF_IDENTITY(true, ! (! (true))), true, false))))), false, true)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(0, _GLF_struct_4(bvec4(true), _GLF_struct_0(mat2x4(1.0), uvec2(1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), (1u) * 1u)) << (0u ^ 0u))), uvec2(_GLF_IDENTITY(1u, (1u) >> 0u)), mat2(1.0), mat3x2(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, false))), false)))), mat2x4(1.0), _GLF_struct_1(mat3(1.0), _GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ (ivec2(1)))), _GLF_struct_2(vec2(1.0), mat3x2(1.0), 1), _GLF_struct_3(_GLF_IDENTITY(ivec2(1), ivec2(ivec3(ivec2(1), 0))), vec4(1.0))), mat2x3(1.0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(workgroup_size) : uint(2))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(2, (2) - 0)), _GLF_IDENTITY(uint(2), clamp(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), (2) >> 0), 2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ ((_GLF_IDENTITY(2, int(ivec3(2, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), _GLF_IDENTITY(uint(2), clamp(uint(_GLF_IDENTITY(2, clamp(2, 2, 2))), _GLF_IDENTITY(uint(2), (uint(2)) | 0u), uint(2))), _GLF_IDENTITY(uint(2), (uint(2)) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), (min(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(2), min(uint(2), uint(2))))), clamp(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), (2) >> 0), 2, 2))) | _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec3(2, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ ((_GLF_IDENTITY(2, int(ivec3(2, _GLF_IDENTITY(0, min(0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), _GLF_IDENTITY(uint(2), clamp(uint(_GLF_IDENTITY(2, clamp(2, 2, 2))), _GLF_IDENTITY(uint(2), (uint(2)) | 0u), uint(2))), _GLF_IDENTITY(uint(2), (uint(2)) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))) - 0u)), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).y))) || _GLF_IDENTITY(false, bool(bvec2(false, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), false, false, _GLF_IDENTITY(true, (true) || false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-639.011, 92.55)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.5)), bool(false)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)))) && true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) && true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-86458) : 4)), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
