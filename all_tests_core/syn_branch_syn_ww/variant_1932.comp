#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(47.82)), float(1.0), bool(true))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0)), transpose(transpose(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(47.82)), float(1.0), bool(true))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0))))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0))), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), clamp(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0)))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))) + abs(0.0)), 0.0, 0.0, 0.0))) > injectionSwitch.y))), true, true)), true && (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(false), false, true, false)), bool(bvec3(bool(bvec4(_GLF_WRAPPED_LOOP(false), false, true, false)), false, false)))));
      }
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_IDENTITY(false, true && (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, cos(sqrt(0.0)), 0.0, 1.0, exp(0.0)))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (true ? min(0u, 0u) : _GLF_FUZZED(19761u))))) * 1u), uint(_GLF_IDENTITY(uvec4(0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u))) * 1u), _GLF_IDENTITY((1u ^ 1u), (_GLF_IDENTITY((1u ^ 1u), ~ (~ ((1u ^ 1u))))) >> 0u), 1u, 0u), (uvec4(0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), (1u ^ 1u), 1u, 0u)) << uvec4(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec2(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u))))), 0u, 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u * (1u)) * _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)) >> 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)) ^ 0u)))))))), 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))) * 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), max((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 0u, 1u))) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u)), (~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (true ? _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) / 1u) : _GLF_FUZZED(subgroup_local_id))))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((subgroup_size / workgroup_size)) : _GLF_IDENTITY(0u, 0u ^ (0u))))))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u), (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u), (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u), min(0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u), 0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u)))) << 0u)) ^ 0u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u))) | uvec2(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) ^ 0u))), 0u))))))), min((_GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u))), (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)) >> 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), max((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 0u, 1u))) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u)), (~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u))) | uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 0u)))), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), max((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 0u, 1u))) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u)), (~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u))) | uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 0u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), max((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 0u, 1u))) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u)), (~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u))) | uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u)) * 1u), (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u))))))) * 1u)) >> 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u + (0u))))) * 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)) ^ 0u)), max((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)) << 0u)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) >> 0u), _GLF_IDENTITY(0u, 0u ^ (0u)), 1u))) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), min(0u, 0u))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u)), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u))) | uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 0u), clamp((~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u))) | uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 0u), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u))) | uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 0u), clamp(_GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u))) | uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 0u), ((~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u))) | uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 0u)) | ((~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u))) | uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 0u))), (~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u))) | uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 0u), (~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u))) | uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 0u))), (~ (uvec2(_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), 0u ^ (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) * 1u)), 0u ^ ((0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))))))), 1u))) | uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 0u)))))))))))) + (workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), clamp(~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)))))))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) * _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | 0u, min(_GLF_IDENTITY((1u), (true ? (1u) : _GLF_FUZZED(subgroup_id))) | 0u, _GLF_IDENTITY((1u) | 0u, ~ (~ (_GLF_IDENTITY((1u) | 0u, ~ (~ ((1u) | 0u))))))))) : _GLF_FUZZED(num_workgroup))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(367.539), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.3)), bvec2(true, false)))[0])), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch))[1])).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))), ~ (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))))))) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))), ~ (~ (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))))))) % subgroup_size)) - 0u);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) || false), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(738.461) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(10.45), _GLF_FUZZED(-3.0)), bvec2(false, false))).y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) - 0u)) / 1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), (false ? _GLF_FUZZED(virtual_gid) : (0u)))) + 0u), ~ (~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) - 0u)) / 1u))))), (~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) - 0u)) / 1u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u)))), ~ (~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)), (((0u))) << 0u) - 0u)) / 1u)))))))) | 0u))], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(0, int(ivec3(0, 1, 1))) | (64)), 4);
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) * mat2(1.0)))).y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))))) * mat2(1.0)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) * mat2(1.0)))).y))) || false), true, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))), injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0))), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0), clamp(_GLF_IDENTITY((min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0), clamp((min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)))), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) * mat2(1.0)))).y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) * mat2(1.0)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) * mat2(1.0)))).y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(612.975), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-2969.4380)), bvec2(true, false)))))), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-945.277, -9.6).t)), vec2(_GLF_FUZZED(-5.1), (injectionSwitch)[1]), bvec2(false, true))))) * vec2(1.0, 1.0)))))))) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.1))))))).y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) * mat2(1.0)))).y))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((min(injectionSwitch, injectionSwitch))), min(_GLF_IDENTITY(mat2(1.0) * ((min(injectionSwitch, injectionSwitch))), mix(vec2((mat2(1.0) * ((min(injectionSwitch, injectionSwitch))))[0], (mat2(1.0) * ((min(injectionSwitch, injectionSwitch))))[1]), vec2(_GLF_FUZZED(3.9), _GLF_FUZZED(-4.0)), bvec2(false, false))), mat2(1.0) * ((min(injectionSwitch, injectionSwitch)))))) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) * mat2(1.0)))).y))) || false))))) || false), true, false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, log(1.0) + (0.0)), 0.0)))), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), ((min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) * mat2(1.0)))).y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), cos(vec2(0.0, 0.0)) * (min(injectionSwitch, injectionSwitch)))) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), min(injectionSwitch, injectionSwitch))))) * mat2(1.0)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), max((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) + vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(2.5, 5.5, -2318.7547, 2024.0893)) : mat2(1.0)))))).y))) || false), true, false, false))), false)))) && true)));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(ivec4(int(2), 1, 1, 0), ~ (~ (ivec4(int(2), 1, 1, 0)))))), _GLF_IDENTITY(int(2), 1 * (int(2))))), 0 + ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(0 | (int(2)), (0 | (int(2))) | 0)), int(2), int(2))), int(2))))) ^ 0), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, 2))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, ~ (~ (2)))))))), 0 + ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(24377) : 0)) << _GLF_IDENTITY(int(2), int(2))))) ^ 0), ((_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))), int(2)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))), int(2))) | 0)), 0 + ((0 << _GLF_IDENTITY(int(2), int(2))))) ^ 0)) - 0)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0))) || false); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((bvec3(false, false, true) != bvec3(true, false, true)) ? 87415 : 80515) & 0)); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, 1 * (3)))) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))
      {
       int i = 0;
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) | (2))), 4, 64, 4);
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(true, true && (true)) ? int(1) : _GLF_FUZZED(61999))), int(1)))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
            }
          }
         barrier();
        }
      }
     else
      {
       atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat3x2(-56.08, -4566.8549, 7341.3435, 9757.4680, -3.4, 0.0)[2]) : injectionSwitch)).y, 0.0, 1.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-5.9) : float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)))), float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0)))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
           else
            {
            }
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec4(bool(bvec3(true, true, true)), true, false, false)))), ! (! ((false) && true))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true)))))), (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))), ((bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)))) && true), bool(bvec3(! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))), true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec4(bool(bvec3(true, true, true)), true, false, false)))), ! (! ((false) && true))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (true), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (true)) && true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(bool(bool(injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))))), false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))), ((bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)))) && true), bool(bvec3(! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true))), true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec4(bool(bvec3(true, true, true)), true, false, false)))), ! (! ((false) && true))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (true), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (true)) && true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(bool(bool(injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
}
