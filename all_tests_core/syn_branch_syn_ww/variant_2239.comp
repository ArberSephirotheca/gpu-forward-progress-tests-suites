#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false))), ! (! (! (_GLF_DEAD(false))))))) || false)), true)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))), true)), true, true, true))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)))))), true)))), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false, false)), false)), bool(bvec2(bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false, false)), false)), true))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3890.6759, -5.9)) : injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-32.18, 9460.3998), _GLF_IDENTITY(clamp(vec2(-32.18, 9460.3998), _GLF_IDENTITY(vec2(-32.18, 9460.3998), max(vec2(-32.18, 9460.3998), vec2(-32.18, 9460.3998))), vec2(-32.18, 9460.3998)), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(clamp(vec2(-32.18, 9460.3998), _GLF_IDENTITY(vec2(-32.18, 9460.3998), max(vec2(-32.18, 9460.3998), vec2(-32.18, 9460.3998))), vec2(-32.18, 9460.3998)), mix(vec2(_GLF_FUZZED(52.54), (clamp(vec2(-32.18, 9460.3998), _GLF_IDENTITY(vec2(-32.18, 9460.3998), max(vec2(-32.18, 9460.3998), vec2(-32.18, 9460.3998))), vec2(-32.18, 9460.3998)))[1]), vec2((clamp(vec2(-32.18, 9460.3998), _GLF_IDENTITY(vec2(-32.18, 9460.3998), max(vec2(-32.18, 9460.3998), vec2(-32.18, 9460.3998))), vec2(-32.18, 9460.3998)))[0], _GLF_FUZZED(6.2)), bvec2(true, false))))))))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((! (_GLF_DEAD(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool((! (_GLF_DEAD(false))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.3) : injectionSwitch.x)) < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))))))))))), (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))))))))))))) && true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), ! (! (bool(bvec2((false), false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))) && (_GLF_DEAD(false))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u), max(uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u), uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u), max(uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u), uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u)))), min(uint(_GLF_IDENTITY(uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u), max(uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u), uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u)))), uint(_GLF_IDENTITY(uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u), max(uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u), uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u)))))), uint(_GLF_IDENTITY(uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u), max(uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u), uvec2(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), 1u)))))))), _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), uint(uint(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u + (~ (~ (gl_WorkGroupSize.x)))))))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(967.687) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-988.194)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (true ? _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x : _GLF_FUZZED(workgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))) && true, bool(bvec4(_GLF_IDENTITY((false) && true, true && ((false) && true)), false, true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec4(workgroup_size, _GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u)), (uint(uvec4(workgroup_size, 0u, 0u, 1u))) >> 0u))) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-2.2 - -870.901))), float(0.0), bool(_GLF_IDENTITY(true, (true) && true)))), injectionSwitch.x)))) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(91.82)), float(0.0), bool(true))), injectionSwitch.x))) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (false ? _GLF_FUZZED(147411u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), 1u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id))), max(workgroup_base, workgroup_base)), 1u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)) : _GLF_FUZZED((subgroup_local_id | num_workgroup))))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id, subgroup_local_id))) >> 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-3.9, 1.4) * 6.7)) : injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, false)))), ((_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, false))))) || false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) || false), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-155.834), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(45.83)), bvec2(true, false))))).x > injectionSwitch.y))))))) && true))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, (injectionSwitch.y) / 1.0))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))) && true))))), false, true, false)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)))), true, true, true)))))), false, true, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))), true, true, true))), true))))))))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))))))))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false)))))))))))))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y) && true)))), bool(bool(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y) && true))))))))), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))))))))))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! ((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))))))))))) && true))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false)))))))))))))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))))))))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-5199.9889), (_GLF_IDENTITY(_GLF_FUZZED(-5199.9889), (_GLF_FUZZED(-5199.9889)) - length(vec3(0.0, 0.0, 0.0)))) + _GLF_ZERO(0.0, injectionSwitch.x))), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))))))))), ! (! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.1)))) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch)).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), _GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(_GLF_IDENTITY(-3464.1638, (false ? _GLF_FUZZED(5039.7227) : -3464.1638)))), bool(false))))))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)) || false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)) || false))))), false, true)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((vec3(-647.440, 990.792, -4947.9438).b * 7.7)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4((injectionSwitch)[0], 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_FUZZED(-1.4)), bvec2(true, false))).y))))))))))))))))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-5199.9889), (_GLF_IDENTITY(_GLF_FUZZED(-5199.9889), (_GLF_FUZZED(-5199.9889)) - length(vec3(0.0, 0.0, 0.0)))) + _GLF_ZERO(0.0, injectionSwitch.x))), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))))))))), ! (! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.1)))) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch)).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), _GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(_GLF_IDENTITY(-3464.1638, (false ? _GLF_FUZZED(5039.7227) : -3464.1638)))), bool(false))))))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)) || false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)) || false))))), false, true)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((vec3(-647.440, 990.792, -4947.9438).b * 7.7)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4((injectionSwitch)[0], 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_FUZZED(-1.4)), bvec2(true, false))).y))))))))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-5199.9889), (_GLF_IDENTITY(_GLF_FUZZED(-5199.9889), (_GLF_FUZZED(-5199.9889)) - length(vec3(0.0, 0.0, 0.0)))) + _GLF_ZERO(0.0, injectionSwitch.x))), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))))))))), ! (! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.1)))) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), bool(false)))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(-3464.1638)), bool(false))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch)).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5199.9889)), _GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))), float(_GLF_FUZZED(-100.566)), bool(false)))), float(_GLF_FUZZED(_GLF_IDENTITY(-3464.1638, (false ? _GLF_FUZZED(5039.7227) : -3464.1638)))), bool(false))))))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)) || false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)) || false))))), false, true)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((vec3(-647.440, 990.792, -4947.9438).b * 7.7)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4((injectionSwitch)[0], 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_FUZZED(-1.4)), bvec2(true, false))).y))))))))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), max(workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.4)), bool(false))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.4)), bool(false))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.4)), bool(false))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.4)), bool(false))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.4)), _GLF_IDENTITY(bool(false), false || (bool(false))))) > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.4)), bool(false))) > injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.4)), bool(false))) > injectionSwitch.y))))))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (0))), ((0)) + (0 | 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-79473), (_GLF_IDENTITY(_GLF_FUZZED(-79473), ~ (~ (_GLF_FUZZED(-79473))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-79473), (_GLF_IDENTITY(_GLF_FUZZED(-79473), ~ (~ (_GLF_FUZZED(-79473))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-79473), (_GLF_IDENTITY(_GLF_FUZZED(-79473), ~ (~ (_GLF_FUZZED(-79473))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_FUZZED(-79473), (_GLF_IDENTITY(_GLF_FUZZED(-79473), ~ (~ (_GLF_FUZZED(-79473))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_FUZZED(-79473), (_GLF_IDENTITY(_GLF_FUZZED(-79473), ~ (~ (_GLF_FUZZED(-79473))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(_GLF_FUZZED(-79473), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-79473), ~ (~ (_GLF_FUZZED(-79473))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-79473), ~ (~ (_GLF_FUZZED(-79473)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-79473), ~ (~ (_GLF_FUZZED(-79473)))), (_GLF_IDENTITY(_GLF_FUZZED(-79473), ~ (~ (_GLF_FUZZED(-79473))))) / 1), _GLF_IDENTITY(_GLF_FUZZED(-79473), ~ (~ (_GLF_FUZZED(-79473))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))))) < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (false) || false)))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-59.80 + -899.527))), vec2(_GLF_FUZZED(-8521.9722), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     continue;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(173.224)), bool(false)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(173.224)), bool(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(173.224)), bool(false)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(173.224)), bool(false))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(173.224)), bool(false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(173.224)), bool(false)), mix(float(mix(float(injectionSwitch.y), float(_GLF_FUZZED(173.224)), bool(false))), float(_GLF_FUZZED(2.3)), bool(false))), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(173.224)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(173.224)), bool(false))) / 1.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(173.224)), bool(false)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(173.224)), bool(false)))))))))) && true)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(50577))), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bool(! (bool(bool(false)))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bool(! (bool(bool(false)))))), false, true)))))))))) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), ! (! (((false))))) && true)))), bool(bvec4(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), bool(bvec3(_GLF_IDENTITY(((false)), ! (! (((false))))), false, false))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY(bool(bvec2(false || (false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))), ! (! (bool(bvec2(false || (false), true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(1u * (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) << 0u) * (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))))), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(1u * (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) << 0u) * (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(1u * (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) << 0u) * (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(1u * (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) << 0u) * (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))))), clamp(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(1u * (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) << 0u) * (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))))), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(1u * (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) << 0u) * (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))))), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(1u * (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) << 0u) * (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(1u * (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) << 0u) * (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))))) / 1u)))))], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), (_GLF_IDENTITY((0) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), ((0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), (int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))))) >> (0 & -20019))), 0 | (int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), (int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))))) >> (0 & -20019)))))))) * 1)) >> 0)) | (_GLF_IDENTITY(2, (2) ^ 0))), _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) - 0)), (~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0))) | 0, clamp(_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) - 0)), (~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0))) | 0, _GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) - 0)), (~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0))) | 0, _GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) - 0)), (~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0))) | 0))), _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(max(i, i)))))), (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))) << 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((0) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) / 1), min(0, 0))))), ((0) | (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, _GLF_IDENTITY(0, min(0, 0))), (min(0, _GLF_IDENTITY(0, min(0, 0)))) | (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, min(0, 0))), (min(0, _GLF_IDENTITY(0, min(0, 0)))) / 1)))))) * 1)) >> 0)) | (_GLF_IDENTITY(2, (2) ^ 0))), _GLF_IDENTITY(2, _GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, int(int(2))), 0, 1)), (int(ivec3(_GLF_IDENTITY(2, int(int(2))), 0, 1))) | (int(ivec3(_GLF_IDENTITY(2, int(int(2))), 0, 1)))))), ((2)) - 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0, ~ (~ ((~ _GLF_IDENTITY((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), int(_GLF_IDENTITY(ivec4(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), 0, 0, 0), min(ivec4(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), 0, 0, 0), ivec4(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), 0, 0, 0)))))))) >> 0)))))) | 0), _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(max(i, i))))))) >> 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), (_GLF_IDENTITY((0) | (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, _GLF_IDENTITY(0, min(0, 0))), 0 | (min(0, _GLF_IDENTITY(0, min(0, 0))))))), ((0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), ~ (~ (int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))))))), int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))))), (int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))))) >> (0 & -20019))), 0 | (int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 1)), (int(ivec3(0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 1))) >> 0)), min(0, 0))))), (int(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))))) >> (_GLF_IDENTITY(0, max(0, 0)) & -20019)))))))) * 1)) >> 0)) | (_GLF_IDENTITY(2, (2) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) << (0 >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ (2), ~ (~ (~ (2))))) | (_GLF_IDENTITY(~ (2), (~ (2)) ^ 0)))))), ((2)) - 0)), (~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0))) | 0, clamp(_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) - 0)), (~ (_GLF_IDENTITY((2), ((2)) - 0))) >> _GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))))) | 0, _GLF_IDENTITY((2), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) - 0)), (~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) - 0)), (~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) - 0)), (~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) - 0)), (~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) - 0)), (~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0), _GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) - 0)), (~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0)))) - 0))))) | 0, _GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) - 0)), (~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0))) | 0))), _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(max(i, i)))))), (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (0)), 0)), _GLF_IDENTITY(0, min(0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : 0)), 0))))) << 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((0) | (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) * _GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) ^ 0))) / 1), min(0, 0))))), ((0) | (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0))), (min(0, _GLF_IDENTITY(0, min(0, 0)))) | (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (~ (0))))), _GLF_IDENTITY(0, int(int(0))))), 0))), (min(0, _GLF_IDENTITY(0, min(0, 0)))) / 1)))))) * 1)) >> 0)) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) >> 0) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, int(int(2))), 0, 1)), (int(ivec3(_GLF_IDENTITY(2, int(int(2))), 0, 1))) | (int(ivec3(_GLF_IDENTITY(2, int(int(2))), 0, 1)))))), ((2)) - 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0, ~ (~ ((~ _GLF_IDENTITY((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), int(_GLF_IDENTITY(ivec4(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), 0, 0, 0), min(ivec4(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), 0, 0, 0), ivec4(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), 0, 0, 0)))))))) >> 0)))))) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, int(int(2))), 0, 1)), (int(ivec3(_GLF_IDENTITY(2, int(int(2))), 0, 1))) | (int(ivec3(_GLF_IDENTITY(2, int(int(2))), 0, 1)))))), ((2)) - 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0, ~ (~ ((~ _GLF_IDENTITY((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), int(_GLF_IDENTITY(ivec4(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), 0, 0, 0), min(ivec4(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), 0, 0, 0), ivec4(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), 0, 0, 0)))))))) >> 0)))))) | 0)), (~ (_GLF_IDENTITY(2, _GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, int(int(2))), 0, 1)), (int(ivec3(_GLF_IDENTITY(2, int(int(2))), 0, 1))) | (int(ivec3(_GLF_IDENTITY(2, int(int(2))), 0, 1)))))), ((2)) - 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY((2), ((2)) - 0))) >> 0, ~ (~ ((~ _GLF_IDENTITY((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), int(_GLF_IDENTITY(ivec4(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), 0, 0, 0), min(ivec4(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), 0, 0, 0), ivec4(~ ((_GLF_IDENTITY((2), ((2)) - _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))))), 0, 0, 0)))))))) >> 0)))))) | 0))) >> 0))), _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(max(i, i))))))) >> 0))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0))), injectionSwitch.y)))))) && true))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, (2) / 1)), (~ (2)) + 0)))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-49827) : _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0))))), (false ? _GLF_FUZZED((71724 / 21768)) : _GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(-49827), 0 + (_GLF_FUZZED(-49827))) : _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0))))))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), (bool(bvec3(_GLF_DEAD(false), false, true))) && true)))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
