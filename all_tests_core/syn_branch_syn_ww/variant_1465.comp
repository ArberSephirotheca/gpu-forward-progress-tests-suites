#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bool((false) && true), false || (bool((false) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) || false)), bool(bool((_GLF_IDENTITY(! (true), (! (true)) || false)))))) && true)), ! (! ((true) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), false || ((true)))))))))))))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), (~ (~ (gl_WorkGroupSize.x))) / ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED((_GLF_IDENTITY((uvec3(106447u, 39476u, 83094u) + num_workgroup), clamp((uvec3(106447u, 39476u, 83094u) + num_workgroup), (uvec3(106447u, 39476u, 83094u) + num_workgroup), (uvec3(106447u, 39476u, 83094u) + num_workgroup))) << subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(64002u, 164362u, _GLF_IDENTITY(15839u, (15839u) / 1u))) : (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))) | (gl_WorkGroupSize)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))) : _GLF_FUZZED(subgroup_size))), 0u))), gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))))), max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) >> 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) - 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), min(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), ~ (~ (gl_WorkGroupID))).x, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))), ~ (~ ((gl_WorkGroupID)))))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupID), min(_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u), ((~ (gl_WorkGroupID)) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)) / uvec3(1u, 1u, 1u))), ~ (gl_WorkGroupID))), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))))))))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID))))), ((_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID))))), (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))))))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupID), min(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)), ~ (gl_WorkGroupID))), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u))), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))))))))).x, (true ? _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))))), uvec3(uvec4(_GLF_IDENTITY((gl_WorkGroupID), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))))), 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), min(~ (gl_WorkGroupID), ~ (gl_WorkGroupID))), min(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)), ~ (gl_WorkGroupID))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec3(~ (gl_WorkGroupID)))))), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))), (false ? _GLF_FUZZED(uvec3(188982u, 69749u, 66289u)) : ~ _GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))))))))))).x : _GLF_FUZZED(num_workgroup)))))), clamp(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID)))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))))), _GLF_IDENTITY((~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID)), ((~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID))) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)), (~ (gl_WorkGroupID)) / uvec3(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)), 1u, 1u)), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID))))))), uvec3(0u, 0u, 0u) ^ ((~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)), (~ (gl_WorkGroupID)) / uvec3(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)), 1u, 1u)), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID))))))))) << uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u))), 0u, 0u)), ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID)))))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(uvec3((gl_WorkGroupID)), (uvec3((gl_WorkGroupID))) - uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(35591u, 108629u, 136577u))))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY((~ (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY((~ (gl_WorkGroupID)), ((~ (gl_WorkGroupID))) | ((~ (gl_WorkGroupID)))), 1u))) | (~ (gl_WorkGroupID))))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))), clamp(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID))), ~ (gl_WorkGroupID)), min(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID))), ~ (gl_WorkGroupID)), (_GLF_IDENTITY(max(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID))), ~ (gl_WorkGroupID)), (max(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID))), ~ (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID))), ~ (gl_WorkGroupID))))), (_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID))), ~ (gl_WorkGroupID)), min(_GLF_IDENTITY(max(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID))), ~ (gl_WorkGroupID)), (_GLF_IDENTITY(max(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID))), ~ (gl_WorkGroupID)), (max(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID))), ~ (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID))), ~ (gl_WorkGroupID)))))) ^ uvec3(0u, 0u, 0u)), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID))))))).x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(9943u, 44393u, 193643u)) : _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID))))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.2))))) ? _GLF_FUZZED((uvec3(18112u, 89130u, 49040u) << (uvec3(26984u, 117580u, _GLF_IDENTITY(125090u, ~ (~ (125090u)))) - uvec3(54573u, 142433u, 174089u)))) : (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u), ((~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))) / uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)) + uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID)))) ^ uvec3(0u, 0u, 0u)))))).x, clamp(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(9943u, 44393u, 193643u)) : _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID))))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.2))))) ? _GLF_FUZZED((uvec3(18112u, 89130u, 49040u) << (uvec3(26984u, 117580u, _GLF_IDENTITY(125090u, ~ (~ (125090u)))) - uvec3(54573u, 142433u, 174089u)))) : (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u), ((~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))) / uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)) + uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID)))) ^ uvec3(0u, 0u, 0u)))))).x, _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(9943u, 44393u, 193643u)) : _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID))))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.2))))) ? _GLF_FUZZED((uvec3(18112u, 89130u, 49040u) << (uvec3(26984u, 117580u, _GLF_IDENTITY(125090u, ~ (~ (125090u)))) - uvec3(54573u, 142433u, 174089u)))) : (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u), ((~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))) / uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)) + uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID)))) ^ uvec3(0u, 0u, 0u)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(9943u, 44393u, 193643u)) : _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID))))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.2))))) ? _GLF_FUZZED((uvec3(18112u, 89130u, 49040u) << (uvec3(26984u, 117580u, _GLF_IDENTITY(125090u, ~ (~ (125090u)))) - uvec3(54573u, 142433u, 174089u)))) : (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u), ((~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))) / uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)) + uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID)))) ^ uvec3(0u, 0u, 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(9943u, 44393u, 193643u)) : _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID))))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.2))))) ? _GLF_FUZZED((uvec3(18112u, 89130u, 49040u) << (uvec3(26984u, 117580u, _GLF_IDENTITY(125090u, ~ (~ (125090u)))) - uvec3(54573u, 142433u, 174089u)))) : (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u), ((~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))) / uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)) + uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID)))) ^ uvec3(0u, 0u, 0u)))))).x) | (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(9943u, 44393u, 193643u)) : _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), gl_WorkGroupID))))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.2))))) ? _GLF_FUZZED((uvec3(18112u, 89130u, 49040u) << (uvec3(26984u, 117580u, _GLF_IDENTITY(125090u, ~ (~ (125090u)))) - uvec3(54573u, 142433u, 174089u)))) : (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u), ((~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))) / uvec3(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)) + uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID)))) ^ uvec3(0u, 0u, 0u)))))).x)))), min(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(18112u, 89130u, 49040u) << (uvec3(26984u, 117580u, 125090u) - uvec3(54573u, 142433u, 174089u)))) : (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), _GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | (_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))))), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID)))) / uvec3(1u, 1u, 1u), ((~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(18112u, 89130u, 49040u) << (uvec3(26984u, 117580u, 125090u) - _GLF_IDENTITY(uvec3(54573u, 142433u, 174089u), clamp(_GLF_IDENTITY(uvec3(54573u, 142433u, 174089u), (uvec3(54573u, 142433u, 174089u)) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(54573u, 142433u, 174089u), uvec3(uvec3(uvec3(54573u, 142433u, 174089u)))), uvec3(54573u, 142433u, 174089u)))))) : (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u), ((~ (gl_WorkGroupID)) / uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | 0u), 1u, 1u)))) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID))))))).x, (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(18112u, 89130u, 49040u) << (uvec3(26984u, 117580u, 125090u) - uvec3(54573u, 142433u, 174089u)))) : (gl_WorkGroupID))), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(_GLF_IDENTITY(~ (gl_WorkGroupID), (true ? _GLF_IDENTITY(~ (gl_WorkGroupID), (~ _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID)))) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(125734u, 151385u, 61750u)))), _GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(uvec4(~ (gl_WorkGroupID), 1u)))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u), ((~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)) | ((~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)))) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))) | (~ (gl_WorkGroupID))))))).x) >> 0u))))), _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID))))))).x))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), ~ (~ (gl_WorkGroupID))).x, clamp(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), max(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(min(gl_WorkGroupID, gl_WorkGroupID), (min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), ~ (~ (~ (~ (gl_WorkGroupID)))))))))).x, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x), (true ? uint(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x) : _GLF_FUZZED(subgroup_id))), uint(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), clamp(~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID))))) >> uvec3(0u, 0u, 0u)), 1u))), (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), clamp(~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID))))) >> uvec3(0u, 0u, 0u)), 1u)))) | (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), clamp(~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID))))) >> uvec3(0u, 0u, 0u)), 1u)))))).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), clamp(~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID))))) >> uvec3(0u, 0u, 0u)), 1u))), (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), clamp(~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID))))) >> uvec3(0u, 0u, 0u)), 1u)))) | (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), uvec3(uvec4(_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (_GLF_IDENTITY(~ (~ (gl_WorkGroupID)), clamp(~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID)), ~ (~ (gl_WorkGroupID))))) >> uvec3(0u, 0u, 0u)), 1u)))))).x) | 0u)))));
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)), (uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))))) >> uvec3(0u, 0u, 0u))))) | _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u + (0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)), (uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u * (_GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u, (0u) ^ 0u))))) >> uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(50674u)))) | (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u))))) | 0u), max(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)), (uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u * (_GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u, (0u) ^ 0u))))) >> uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(50674u)))) | (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u))))) | 0u), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)), (uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u * (_GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u, (0u) ^ 0u))))) >> uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(50674u)))) | (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u))))) | 0u)))), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u)))) / 1u), _GLF_IDENTITY(0u, (0u) ^ 0u)))), (uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (_GLF_IDENTITY(0u, (0u) ^ 0u)))) / 1u), _GLF_IDENTITY(0u, (0u) ^ 0u))))) << uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))))) | 0u))), (~ ((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))))))), (uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(0u, (0u) ^ 0u)) | 0u), 1u, 0u))), _GLF_IDENTITY(0u, (0u) ^ 0u))))) >> uvec3(0u, 0u, 0u))))) | 0u)))) >> 0u)))) | ((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)), uint(uvec3(~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)), (1u & 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)), (uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), min((0u), (0u))) ^ 0u), clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) ^ 0u))))) >> uvec3(0u, 0u, 0u))))) | 0u))))) * workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)) * _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size)))) | ((workgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (0u ^ 1u) * (workgroup_size))) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))))), _GLF_IDENTITY(1u * (workgroup_size), max(_GLF_IDENTITY(1u * (workgroup_size), 0u + (_GLF_IDENTITY(1u * (workgroup_size), uint(_GLF_IDENTITY(uint(1u * (workgroup_size)), (_GLF_IDENTITY(uint(1u * (workgroup_size)), (uint(1u * (workgroup_size))) + 0u)) >> 0u))))), _GLF_IDENTITY(1u * (workgroup_size), uint(uvec2(1u * (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))), 1u)))))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * _GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), (_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))), ((_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))) - 0u) / 1u))), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), min(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) >> 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.7)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9417.8965)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) * ((workgroup_size))) | 0u, ((workgroup_size) | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)), ~ (~ ((_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))))) | 0u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id)))))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_FUZZED(subgroup_id))))) : _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | 0u, max((workgroup_size) | 0u, _GLF_IDENTITY((workgroup_size) | 0u, clamp((workgroup_size) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), 1u, 0u))), clamp(_GLF_IDENTITY(workgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), 1u, 0u))), _GLF_IDENTITY(workgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), 1u, 0u))), _GLF_IDENTITY(workgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), 1u, 0u)))))) | 0u, (workgroup_size) | 0u))))))) * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), (workgroup_size) | 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), (workgroup_size) | 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), (workgroup_size) | 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ((workgroup_size)) + 0u) | 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) | 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(uint(28891)))), (workgroup_size) | 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | 0u, ((workgroup_size) | 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))))) * workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), 0u | (~ (workgroup_base))))) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_size))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (_GLF_IDENTITY(min(1, 1), min(_GLF_IDENTITY(min(1, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(1, 1), ~ (~ (_GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1))))), ~ (~ (~ (_GLF_IDENTITY(min(1, 1), ~ (~ (_GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)))))))))), min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), ~ (~ (~ (1))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(64009) : clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) ^ 0) : _GLF_FUZZED(99496)))), ((_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) ^ 0) : _GLF_FUZZED(99496))))) | 0), ~ (1), _GLF_IDENTITY(~ (1), ~ (~ (~ (1)))))))))), 1)))) | (_GLF_IDENTITY(min(1, 1), int(_GLF_IDENTITY(ivec4(min(1, 1), 0, 0, 1), ~ (~ (ivec4(min(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(68628) : 1))), 0, 0, 1)))))))))), _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) * 1))), 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(ivec2(63785, -82640)[0]))))), 64, _GLF_IDENTITY(4, (4) | (4)));
 if((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u)) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (0u ^ 1u) * (next_virtual_gid))], uint(2), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false || (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), _GLF_IDENTITY(false, bool(bool(false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-9540.7132, 7808.9466, 991.909, 3.4)) : mat2(1.0))) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))).y))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY((false), ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))), (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))), (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2((false), false), false)))))))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), bool(bvec2((_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((false)), (((false))) && true)), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, true && (false))))), bool(bvec2((false), false))), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, true && (false))))), bool(bvec2((false), false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, true && (false))))), bool(bvec2((false), false))), false, true), false))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, true && (false))))), bool(bvec2((false), false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, true && (false))))), bool(bvec2((false), false))), false, true), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, true && (false))))), bool(bvec2((false), false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, true && (false))))), bool(bvec2((false), false))), false, true), false))), false)), true))), true))))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))))), false || ((! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false)))))), _GLF_IDENTITY(false, true && (false))))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) / sqrt(vec2(1.0, 1.0))).x < injectionSwitch.y)) && ((false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), false))), false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))))))), true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))))) / exp(vec2(0.0, 0.0)))).x) / 1.0, float(vec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))))) / exp(vec2(0.0, 0.0)))).x) / 1.0, 1.0, 1.0)))))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(0.9), _GLF_FUZZED(4829.3120)), vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (true ? (mat2(1.0) * (injectionSwitch))[0] : _GLF_FUZZED(1.7))), (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - vec2(0.0, 0.0))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(772.165)), bool(false))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, 1.0 * ((injectionSwitch.x) / 1.0))))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), bool(bvec2((_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), bool(bvec2((_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), true))), (true && _GLF_IDENTITY((_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), bool(bvec2((_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), true)))) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), bool(bvec2((_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), true))), (true && _GLF_IDENTITY((_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), bool(bvec2((_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))), true)))) || false), true, true), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))))) / exp(vec2(0.0, 0.0)))).x) / 1.0))), length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0)))))) / exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0)))))).x) / 1.0))))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(5137.5970)), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), false))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true)))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true)))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))), true, true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false))), true)))))) && (_GLF_IDENTITY((false), ((false)) || false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (injectionSwitch.x < injectionSwitch.y))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec2((false), false))), false, true))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2((false), false)), bool(bvec4(bool(bvec2((false), false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, true)))) || false)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false || (_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, _GLF_IDENTITY(true, bool(bool(true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false || (_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, _GLF_IDENTITY(true, bool(bool(true))))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false || (_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, _GLF_IDENTITY(true, bool(bool(true))))), false)))))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))), bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, (false) || false)), bvec2(bvec4(bvec2((false), _GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, true)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.7) : injectionSwitch.y)))) && ((false))), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))), false, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-5.9)), bool(false))))))))))))))), bool(bvec2((_GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), false, true))))))), ! (! ((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)), true), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)), true), true, false))), true, true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((_GLF_IDENTITY(false, ! (! (false)))) || false))), false, true, true)))))))))), bool(bvec2((false), false))), false, true)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false))))))))) || false), false, true, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), false), false))))))), false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), false), false))))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), false), false))))))), false, true, true))) || false)))))))))))), bool(bvec2((_GLF_IDENTITY(false, (false) && true)), false))), _GLF_IDENTITY(false, ! (! (false))), true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + (min(injectionSwitch.y, injectionSwitch.y)))))))))))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))) || false)), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), true))))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)), (bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true)), (bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false)))))), false))), false, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, false || (false))), false))), false, true)), (bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, false || (false))), false))), false, true))) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))))))), true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), (transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))))) / exp(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))), vec2(0.0, 0.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)), (transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0)))))) / exp(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0))), vec2(0.0, 0.0)))))) : _GLF_FUZZED(injectionSwitch))).x) / 1.0))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))), (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY((uint(2)) ^ 0u, max((uint(_GLF_IDENTITY(2, clamp(2, 2, 2)))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) | (uint(2)), ((uint(2)) | (uint(2))) - 0u)), clamp(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) | (uint(2)), ((uint(2)) | (uint(2))) - 0u)), _GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) | (uint(2)), ((uint(2)) | (uint(2))) - 0u)), _GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) | (uint(2)), ((uint(2)) | (uint(2))) - 0u))))) ^ 0u, 0u | ((uint(2)) ^ 0u))))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY((uint(2)) ^ 0u, max((uint(2)) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) | (uint(2)), ((uint(2)) | (uint(2))) - 0u))) ^ 0u, 0u | ((uint(2)) ^ 0u)))))), uint(uint(_GLF_IDENTITY(uint((_GLF_IDENTITY((uint(2)) ^ 0u, max((uint(2)) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) | (uint(2)), ((uint(2)) | (uint(2))) - 0u))) ^ 0u, 0u | _GLF_IDENTITY(((uint(_GLF_IDENTITY(2, (2) - (1 ^ 1)))) ^ 0u), ~ (~ (((uint(_GLF_IDENTITY(2, (2) - (1 ^ 1)))) ^ 0u))))))))), uint(uint(uint((_GLF_IDENTITY((uint(2)) ^ 0u, max((uint(2)) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) | (uint(2)), ((uint(2)) | (uint(2))) - 0u))) ^ 0u, 0u | _GLF_IDENTITY(((uint(_GLF_IDENTITY(2, (2) - (1 ^ 1)))) ^ 0u), ~ (~ (((uint(_GLF_IDENTITY(2, (2) - (1 ^ 1)))) ^ 0u))))))))))))))))) / (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), max(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))))) : _GLF_FUZZED(subgroup_size)))), 1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << 0u)), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u), ~ (0u), ~ (0u)))))), (uint(0u)) | (uint(0u)))) | (uint(0u)))) * 1u), uint(0u)), max(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (uint(0u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | (1u)))) << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) / 1u))), ~ (~ (_GLF_IDENTITY(uint(0u), uint(0u)))))))) * 1u)) << 0u)))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(64, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) * (_GLF_IDENTITY(64, (64) ^ 0))), _GLF_IDENTITY(1, (1) - 0) * (_GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), (_GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, 64, 64))), _GLF_IDENTITY(0 | ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), max(_GLF_IDENTITY(0 | ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), int(int(_GLF_IDENTITY(0 | ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), min(0 | ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), 0 | ((_GLF_IDENTITY(64, clamp(64, 64, 64))))))))), 0 | ((_GLF_IDENTITY(64, clamp(64, 64, 64)))))))) - 0))))) - 0), 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bvec3((true), true, false))))))) || false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
