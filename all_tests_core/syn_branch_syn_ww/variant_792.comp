#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 mat3x2 _f0;
 bvec3 _f1;
 vec3 _f2;
 ivec2 _f3;
 float _f4;
} ;

struct _GLF_struct_16 {
 mat4 _f0;
 _GLF_struct_15 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_13 {
 mat3 _f0;
 ivec3 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
 uvec2 _f4;
 uint workgroup_size;
 mat2x4 _f5;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 int _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 uvec2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 int _f1;
} ;

struct _GLF_struct_17 {
 _GLF_struct_11 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_16 _f2;
 uvec3 _f3;
 float _f4;
 mat2x4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 uvec2 _f1;
 ivec4 _f2;
 int _f3;
 ivec4 _f4;
 float _f5;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 _GLF_struct_7 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 bvec3 _f2;
 bvec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_2 {
 bool _f0;
 vec2 _f1;
 uvec3 _f2;
 bvec4 _f3;
 uint _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 int _f1;
 vec4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 int _f1;
 ivec3 _f2;
 mat3x2 _f3;
 mat3 _f4;
 uvec3 _f5;
 bool _f6;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_3 _f0;
 vec4 _f1;
 ivec4 _f2;
 float _f3;
 uint subgroup_local_id;
 _GLF_struct_6 _f4;
 _GLF_struct_8 _f5;
 uvec4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.6)), vec2(_GLF_FUZZED(((- 4.5) / -8.3)), (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-26321), (_GLF_FUZZED(-26321)) + 0)))]), bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.6)), vec2(_GLF_FUZZED(((- 4.5) / -8.3)), (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-26321), (_GLF_FUZZED(-26321)) + 0)))]), bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.6)), vec2(_GLF_FUZZED(((- 4.5) / -8.3)), (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-26321), (_GLF_FUZZED(-26321)) + 0)))]), bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))).y)) : _GLF_FUZZED(sign(41.33))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.6)), vec2(_GLF_FUZZED(((- 4.5) / -8.3)), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))))[1]), bvec2(false, true))).y)))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, (false) || false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_3(bvec4(true), _GLF_struct_0(ivec3(1), 1, ivec3(1), mat3x2(1.0), mat3(1.0), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (1u) + 0u)), true), _GLF_struct_1(mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1, vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.5) : 1.0))))), vec3(1.0)), _GLF_struct_2(true, vec2(1.0), uvec3(1u), bvec4(true), 1u, _GLF_IDENTITY(ivec4(1), (true ? ivec4(1) : _GLF_FUZZED(ivec4(-15432, 81734, -52066, 3972)))))), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3284.6440))), 1.0))), ivec4(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, 0 ^ (1))))), 1.0, gl_SubgroupInvocationID, _GLF_struct_6(_GLF_struct_4(mat3x2(1.0), mat3x4(1.0)), _GLF_struct_5(mat3(1.0)), bvec3(_GLF_IDENTITY(true, true && (true))), bvec3(true), bvec2(true)), _GLF_struct_8(mat2x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(_GLF_IDENTITY(-56256, 1 * (_GLF_IDENTITY(-56256, _GLF_IDENTITY((-56256) - 0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((-56256) - 0, (0 | 0), 1, 0), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, false, _GLF_IDENTITY(true, ! (! (true)))))) ? ivec4((-56256) - 0, (0 | 0), 1, 0) : _GLF_FUZZED(ivec4(-18754, 20112, 97910, -58343))))), (int(_GLF_IDENTITY(ivec4((-56256) - 0, (0 | 0), 1, 0), (true ? _GLF_IDENTITY(ivec4((-56256) - 0, (0 | 0), 1, 0), (ivec4((-56256) - 0, (0 | 0), 1, 0)) | (ivec4((-56256) - 0, (0 | 0), _GLF_IDENTITY(1, (1) + 0), 0))) : _GLF_FUZZED(ivec4(-18754, 20112, 97910, -58343)))))) | (int(_GLF_IDENTITY(ivec4((-56256) - 0, (0 | 0), 1, 0), (true ? ivec4((-56256) - 0, (0 | 0), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1)), 0) : _GLF_FUZZED(ivec4(-18754, 20112, 97910, -58343)))))))))))))), bool(false)))), mat3x4(1.0), mat2x3(1.0), _GLF_struct_7(mat4x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(1.0, determinant(mat4(1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) * (1.0))))), uvec2(1u), ivec4(1), 1, ivec4(1), 1.0), bvec4(true)), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 1u, 1u)), (uint(uvec4(1u, 0u, 1u, 1u))) | (uint(uvec4(1u, 0u, 1u, 1u)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_11(_GLF_struct_10(bvec2(true), uvec2(1u), bvec4(true)), _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(-52841)))) * 1)), _GLF_struct_14(_GLF_struct_12(mat2x3(1.0), mat4x2(1.0), mat2x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.2)))), mat4x2(1.0), 1, ivec3(1)), _GLF_struct_13(mat3(_GLF_IDENTITY(1.0, log(1.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0) : _GLF_FUZZED(-7988.7140))), 1.0))))))), ivec3(1), mat4x2(1.0), mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u))))) >> 0u), 0u)), max(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (0u) | (0u))), (0u | 0u) ^ (max(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))) >> 0u), 0u)), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))), max((0u), _GLF_IDENTITY((0u), min((0u), (0u))))))))) >> 0u), 0u)))), gl_WorkGroupSize.x, mat2x4(1.0))), _GLF_struct_16(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_struct_15(mat3x2(1.0), bvec3(true), vec3(1.0), ivec2(1), 1.0), mat3x4(1.0)), uvec3(1u), 1.0, mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3260.0122)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(1.0, 1.0, 1.0))), mat3(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_17._f1._f1.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_struct_replacement_9.subgroup_local_id) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_struct_replacement_9.subgroup_local_id) / 1u), min(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_struct_replacement_9.subgroup_local_id) / 1u), _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_struct_replacement_9.subgroup_local_id) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_struct_replacement_9.subgroup_local_id) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_struct_replacement_9.subgroup_local_id) / 1u)), (uint(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_struct_replacement_9.subgroup_local_id) / 1u))) - 0u))))), _GLF_struct_replacement_9.subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size), ~ (~ (((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size)))), (((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size)) / 1u);
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) << 0u))))))) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (virtual_gid)), uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup)))) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), clamp(uint(uvec2(virtual_gid, 1u)), _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uvec2(virtual_gid, 1u)))), uint(uvec2(virtual_gid, 1u))))))) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), clamp(uint(uvec2(virtual_gid, 1u)), _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uvec2(virtual_gid, 1u)))), uint(uvec2(virtual_gid, 1u))))))) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), clamp(uint(uvec2(virtual_gid, 1u)), _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uvec2(virtual_gid, 1u)))), uint(uvec2(virtual_gid, 1u))))))) : _GLF_FUZZED(num_workgroup)))))), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), clamp(uint(uvec2(virtual_gid, 1u)), _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uvec2(virtual_gid, 1u)))), uint(uvec2(virtual_gid, 1u))))))) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), clamp(uint(uvec2(virtual_gid, 1u)), _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(uvec2(virtual_gid, 1u)))), uint(uvec2(virtual_gid, 1u))))))) : _GLF_FUZZED(num_workgroup)))))), 0u, 1u))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u)))), (~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u)))), ((_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) / 1u)) | (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, 1u * (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)))), 1u))))) : _GLF_FUZZED(num_workgroup)))) + 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid)), uint(uvec2(virtual_gid, 1u)))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))), clamp(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))), _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))), _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u)))))), ~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u)))), ~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))))) : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY(uint(uvec2((true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup)), 1u)), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2((true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup)), 1u), ~ (~ (_GLF_IDENTITY(uvec2((true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup)), 1u), (uvec2((true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup)), 1u)) << uvec2(0u, 0u))))))) << 0u, max((uint(_GLF_IDENTITY(uvec2((true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup)), 1u), ~ (~ (_GLF_IDENTITY(uvec2((true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup)), 1u), (uvec2((true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup)), 1u)) << uvec2(0u, 0u))))))) << 0u, (uint(_GLF_IDENTITY(uvec2((true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup)), 1u), ~ (~ (_GLF_IDENTITY(uvec2((true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup)), 1u), (uvec2((true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup)), 1u)) << uvec2(0u, 0u))))))) << 0u)))))) + _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY((189022u & 0u), clamp((189022u & 0u), (189022u & 0u), (189022u & 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(virtual_gid, 1u), uvec2(uvec3(uvec2(virtual_gid, 1u), 1u))))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(virtual_gid, 1u), (uvec2(virtual_gid, 1u)) | uvec2(0u, 0u)))))) : _GLF_FUZZED(num_workgroup)))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec2(virtual_gid, 1u), (_GLF_IDENTITY(uvec2(virtual_gid, 1u), clamp(uvec2(virtual_gid, 1u), uvec2(virtual_gid, 1u), uvec2(virtual_gid, 1u)))) - uvec2(0u, 0u)))))), (true ? (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), 0u | (_GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (_GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), (uint(uvec2(virtual_gid, 1u))) | 0u)) | 0u)))))) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), uint(_GLF_IDENTITY(uvec2(uint(uvec2(virtual_gid, 1u)), 1u), ~ (~ (uvec2(uint(uvec2(virtual_gid, 1u)), 1u)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 1u)), uint(_GLF_IDENTITY(uvec2(uint(uvec2(virtual_gid, 1u)), 1u), ~ (~ (uvec2(uint(uvec2(virtual_gid, 1u)), 1u))))))))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 0u + (num_workgroup)))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) ^ 0u), uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))) << (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0))), injectionSwitch.x)) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(uvec2(virtual_gid, 1u))))), (true ? (~ (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))) : _GLF_FUZZED(num_workgroup)))) + 0u)) >> 0u))))], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) / 1)), 1, 1)), _GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 1, 1))) << _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, 1, 0, 1), ivec4(0, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 | (1)), 1))), 0, 1), ivec4(0, 1, 0, 1))))))))), 1 * (_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 1, 1))) << _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, 1, 0, 1), ivec4(0, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 | (1)), 1))), 0, 1), ivec4(0, 1, 0, 1))))))))), ((int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 1, 1))) << _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, 1, 0, 1), ivec4(0, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 | (1)), 1))), 0, 1), ivec4(0, 1, 0, 1)))))))))) | (_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 1, 1))) << _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, 1, 0, 1), ivec4(0, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 | (1)), 1))), 0, 1), ivec4(0, 1, 0, 1))))))))), max((int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 1, 1))) << _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, 1, 0, 1), ivec4(0, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 | (1)), 1))), 0, 1), ivec4(0, 1, 0, 1))))))))), (int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 1, 1))) << _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, 1, 0, 1), ivec4(0, _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 | (1)), 1))), 0, 1), ivec4(0, 1, 0, 1)))))))))))))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_struct_replacement_9.subgroup_local_id) >> 0u)) - (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) ^ 0))), 1 * ((~ _GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), clamp((_GLF_IDENTITY(64, (64) ^ 0)), (_GLF_IDENTITY(64, (64) ^ 0)), (_GLF_IDENTITY(64, (64) ^ 0)))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) ^ 0)), (_GLF_IDENTITY(64, (64) ^ 0)))))))), _GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, ~ (~ (1)))));
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true)), ! (! (bool(bvec3((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, false)))))), true, true))))))) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          continue;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true, false || ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))) || false), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))), (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), true, true, false)))))), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))))) || false))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(8.2) : injectionSwitch.x)) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))) || false))), false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), true && (bool(! ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.2) : injectionSwitch.x)) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) || false))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec4(injectionSwitch[1], 0.0, 1.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y))) || false))), false))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))), (! _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7985.2859)), float(injectionSwitch[1]), bool(true))))).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(bool(bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(bool(bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))), (bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(8.2) : injectionSwitch.x), float(mat4((false ? _GLF_FUZZED(8.2) : injectionSwitch.x), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), tan(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))) > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false))))))), true))), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), ! (! ((((injectionSwitch.x > injectionSwitch.y))))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((! (((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool((! (((injectionSwitch.x > injectionSwitch.y)))))))))))) || false))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.2) : injectionSwitch.x)) > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(! ((injectionSwitch.x > injectionSwitch.y))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.2) : injectionSwitch.x)) > injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false))))))), true))), true, true)), false, false)))))), false, true, false)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-406.133), _GLF_FUZZED(3630.9309)), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))), 0.0, 1.0, 1.0, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-42.85)), float(1.0), bool(true)))) / 1.0)) * (injectionSwitch)))).y, true, false, true)), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, true, false, true))) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false))) && true)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.2) : injectionSwitch.x)) > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-31.52), _GLF_FUZZED(77.71)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], 0.0, 0.0, 0.0))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false))), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-31.52), _GLF_FUZZED(77.71)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], 0.0, 0.0, 0.0))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false))), false)))), false, true)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false))) && true)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.2) : injectionSwitch.x)) > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-31.52), _GLF_FUZZED(77.71)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], 0.0, 0.0, 0.0))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false))), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-31.52), _GLF_FUZZED(77.71)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], 0.0, 0.0, 0.0))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false))), false)))), false, true))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, false)))), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || false))) && true)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.2) : injectionSwitch.x)) > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-31.52), _GLF_FUZZED(77.71)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], 0.0, 0.0, 0.0))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false))), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-31.52), _GLF_FUZZED(77.71)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], 0.0, 0.0, 0.0))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false))), false)))), false, true))))))), false))))))), false, true, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))), exp(vec2(0.0, 0.0)) * (injectionSwitch)).y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y)), bool(bvec4(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false, true))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false)))), false, false)))) || false)), (false) || false), false)), (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))) && true))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false)))), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false)))), false, false)))) || false)), (false) || false), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (false) || false), false))) && true)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 | (0))))) ^ 0, ~ (~ ((0) ^ 0))) : _GLF_FUZZED(-26845))))) | 0, min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)) | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, int(ivec2((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) * 1)) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) + 0), 0))))) | 0, 1 * ((_GLF_IDENTITY(0, (0) ^ 0)) | 0))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, min(0, 0)))))) ^ _GLF_IDENTITY(0, (0) | (0)))), ~ (~ ((_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, (0) | (0))))))) | 0, 1 * ((_GLF_IDENTITY(0, (0) ^ 0)) | 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) ^ 0))) | 0, _GLF_IDENTITY(1 * ((_GLF_IDENTITY(0, (0) ^ 0)) | 0), min(1 * ((_GLF_IDENTITY(0, (0) ^ 0)) | 0), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)) | 0, ((_GLF_IDENTITY(0, (0) ^ 0)) | 0) | 0)))))), int(ivec2(~ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)) | _GLF_IDENTITY(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) ^ 0)) | (0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (0))), clamp((_GLF_IDENTITY(0, 0 ^ (0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, int(ivec4(0, 1, 0, 0))))), 0 ^ (0))), (_GLF_IDENTITY(0, 0 ^ (0))))) | (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(17506) : _GLF_IDENTITY(0, (0) - 0))))))))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0)) | 0, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0)) | 0, ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0)) | 0) | ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0)) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0)) | 0))))), 1))), _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) ^ 0)) | 0, 1 * ((_GLF_IDENTITY(0, (0) ^ 0)) | 0))), int(_GLF_IDENTITY(int(~ (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, (0 >> _GLF_IDENTITY(int(0), int(0))) | ((0) ^ _GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)))))))) | _GLF_IDENTITY(0, (0) | 0), 1 * ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), 0))) ^ 0)) | 0)))), 0 ^ (int(~ (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))) | ((0) ^ 0), ((0 >> _GLF_IDENTITY(int(0), int(0))) | ((0) ^ 0)) | 0)))) | 0, 1 * ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(69211)))) ^ 0)) | 0)))))))))))), min((_GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), (0))) ^ 0)) | _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) << 0))), clamp(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) - 0) ^ (0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) << 0))), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))), ~ (~ (0)))) << 0))), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) << 0))))), (_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) - 0))) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)) ^ (0), (_GLF_IDENTITY(0, 1 * (0)) ^ (0)) << 0)), (0) ^ 0)) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) << 0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))); _injected_loop_counter ++)
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, min(4, 4)), 0, (1 | 0), 0)), clamp(int(ivec4(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << 0), (1 | 0), 0)), int(ivec4(_GLF_IDENTITY(4, min(4, 4)), 0, (1 | 0), 0)), int(ivec4(_GLF_IDENTITY(4, min(4, 4)), 0, (1 | 0), 0))))), 64, 4);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
}
