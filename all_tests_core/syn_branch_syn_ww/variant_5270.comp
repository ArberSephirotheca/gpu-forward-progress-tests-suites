#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat4x2 _f0;
 int i;
 int _f1;
 mat3 _f2;
 uint _f3;
 bool _f4;
 mat4x3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 _GLF_struct_1 _f1;
 uvec3 _f2;
 bvec3 _f3;
 bvec4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), true, false, true))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true))))) && true), (! (! (false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), ! (! ((false)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), (! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))) || false))))) || false)) && true)) || false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false))), false, true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, min(1u, 1u))), 1u)).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, min(1u, 1u))), 1u)).x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))), (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, _GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u | (1u)))) << 0u) << 0u)))), 1u)).x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), max(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) / uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | (1u)), (1u) / _GLF_IDENTITY(1u, min(1u, 1u))), 1u)).x))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 0.0, 0.0, 1.0)))) - 0.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], _GLF_IDENTITY((gl_WorkGroupID[0]) + 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | ((~ (0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((~ (0u)), (1u & 1u) * ((~ (0u))))))) | ((gl_WorkGroupID[0]) + 0u), max(_GLF_IDENTITY(0u, ~ (~ (0u))) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))[_GLF_IDENTITY(0, 0 | (0))]) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), ~ (~ (0u))) | ((gl_WorkGroupID[0]) + 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) | (gl_WorkGroupID[1])), min(_GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) | (gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID[1], (gl_WorkGroupID[1]) | (gl_WorkGroupID[1])))), _GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), workgroup_size * workgroup_id)), ~ (~ (workgroup_size * workgroup_id)))), (0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_size * workgroup_id), (~ (workgroup_size * workgroup_id)) + 0u))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.1))), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.1))), 0.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, cos(0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 0.0, abs(1.0)))), 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0)), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.1))), 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.1))), 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0)), max(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y, (true ? injectionSwitch.y : _GLF_FUZZED(4.1))), 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (true ? vec2(injectionSwitch.y, 1.0) : _GLF_FUZZED(vec2(6235.5850, 8.3))))))) / exp(0.0)) : _GLF_FUZZED(4.1))), 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.1))), 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0)))))))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(68.35) : injectionSwitch[0])), injectionSwitch[1])).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false, false)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), bool(bool((bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) / vec2(1.0, 1.0)))))).y))))), ((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])).y), _GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], min(((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(_GLF_FUZZED(788.535), _GLF_FUZZED((2.6 + -34.79))), bvec2(false, false))) / vec2(1.0, 1.0)))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9032.1002))), 1.0), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9032.1002))), 1.0), min(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9032.1002))), 1.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9032.1002))), 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9032.1002))), 1.0), (vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9032.1002))), 1.0)) * vec2(1.0, 1.0))))))))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), bool(bvec3(bool(bvec4(true, true, true, false)), false, false)))) && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).y)), false || (true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).y))))) || false))))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false || (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false || (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))))), false || (bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false || (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))))))))), (bool(bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false || (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))))), false || (bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false || (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))))))))))) && true)), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), false || (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))), true, false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (1) << 0)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0))))) | (1)), 1, 1)))) < subgroup_size, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) / 1), max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1)), subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))) + 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) / 1), max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1)), subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))) + 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) / 1), max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1)), subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))) + 0u)))), (1u | 1u), 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) / 1), max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1)), subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))) + 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) / 1), max(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), subgroup_local_id + 1)), subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))) + 0u)))), (1u | 1u), 1u)) - uvec3(0u, 0u, 0u)))) < subgroup_size))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) >> 0u)), _GLF_struct_1(_GLF_struct_0(mat4x2(1.0), _GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(1, 0 ^ (1)), mat3(1.0), _GLF_IDENTITY(1u, 0u + (1u)), true, mat4x3(1.0), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((_GLF_IDENTITY(mat4(1.0), (mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.6)), bool(false))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), clamp(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), mix(float(_GLF_FUZZED(5.0)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), bool(true))) : _GLF_FUZZED(765.976))), 0.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0)), float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.5) : 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.5)), float(1.0), bool(true))) * (1.0))))), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0)), float(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0)))), 0.0, 0.0, 1.0, 1.0, 1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(-1.3), max(_GLF_FUZZED(-1.3), _GLF_FUZZED(_GLF_IDENTITY(-1.3, mix(float(-1.3), float(_GLF_FUZZED((8.8 / 3487.4930))), bool(false)))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) - _GLF_IDENTITY(0.0, (0.0) - 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(38.11)), bool(false))), (1.0) / 1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), (false ? _GLF_FUZZED(-6.9) : _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))) + length(vec2(0.0, 0.0))))), min(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(38.11)), bool(false))), (1.0) / 1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), (false ? _GLF_FUZZED(-6.9) : _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))) + length(vec2(0.0, 0.0))))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(38.11)), bool(false))), (1.0) / 1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), (false ? _GLF_FUZZED(-6.9) : _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))) + length(vec2(0.0, 0.0))))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-54.13)), float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bool(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, true && (true)), true), true, true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, true && (true)), true), true, true)))), true, true))))))), (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, determinant(mat4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), log(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) ? 0.0 : _GLF_FUZZED(-7805.8455))), 0.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))), (mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, determinant(mat4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 1.0)))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0))))), sin(0.0) + (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), transpose(_GLF_IDENTITY(transpose(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) ? transpose(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) : _GLF_FUZZED(mat3(-9.4, -446.213, 6.8, -14.63, _GLF_IDENTITY(-6.1, mix(float(-6.1), float(_GLF_FUZZED(vec4(-3.1, 92.27, 332.933, 6.9).t)), bool(false))), 4076.6762, 3225.7767, -4.7, 339.122)))))))))), 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED((mat4(-0.6, -2.7, 0.8, 7.7, -237.465, 770.789, 2.5, -906.880, 76.95, -2296.1773, 36.25, -50.70, 823.984, -341.620, -2492.9555, 4950.6411) + mat4(5.5, 9.7, 403.688, -755.591, -2.2, -1.3, -3.6, 0.5, -0.4, 3.8, 9.3, 63.31, 3.8, -13.93, 8.5, -216.025))) : (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-54.13)), float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6881.8135) : 1.0)), max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6881.8135) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6881.8135) : 1.0)))), 1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-3.6))), 0.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, determinant(mat4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, log(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8944.2748) : 0.0)) : _GLF_FUZZED(-7805.8455))), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, sin(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6239.3571)), float(0.0), bool(true))), 1.0))), (mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, determinant(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(962.765)), _GLF_IDENTITY(float(mat2(float(_GLF_FUZZED(_GLF_IDENTITY(962.765, max(962.765, 962.765)))), 0.0, 1.0, 0.0)), float(mat2(float(mat2(_GLF_IDENTITY(float(_GLF_FUZZED(962.765)), max(float(_GLF_FUZZED(962.765)), _GLF_IDENTITY(float(_GLF_FUZZED(962.765)), mix(float(_GLF_FUZZED(-2.2)), float(float(_GLF_FUZZED(962.765))), bool(true))))), 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0)))), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-1.3), max(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.3))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))) + length(vec2(0.0, 0.0))))))), (mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(962.765)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, (_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0))))) / 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-1.3), max(_GLF_FUZZED(-1.3), _GLF_FUZZED(-1.3))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((_GLF_IDENTITY(5.9 * 6843.1430, min(5.9 * 6843.1430, 5.9 * 6843.1430))))), bool(false))), 0.0)), 0.0, 0.0), 0.0 + (clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((_GLF_IDENTITY(5.9 * 6843.1430, min(5.9 * 6843.1430, 5.9 * 6843.1430))))), bool(false))), 0.0)), 0.0, 0.0))))) + length(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))))))))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0), clamp(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(42.53) : float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0), clamp(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0))))))), 7.8, 4.7, -2145.6208, -48.79, -2.6, 9081.9562, -46.05, -5.5, _GLF_IDENTITY(-0.5, (-0.5) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), -60.09, -5221.2639, 2862.2462, 79.19, 5370.1427, -200.061))), mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(mix(-2104.8200, -6577.9851, -8.5)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9583.6324)), float(0.0), bool(true))), 0.0)), 1.0), min(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(mix(-2104.8200, -6577.9851, -8.5)))), 0.0, 1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - log(1.0)), (true ? 0.0 : _GLF_FUZZED(mix(-2104.8200, -6577.9851, -8.5)))), 0.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((true ? (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-54.13)), float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(81.99) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) * mat4(1.0))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) * mat4(1.0)))) * vec2(1.0, 1.0))))).x)) < injectionSwitch.y)))))))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, _GLF_IDENTITY(abs(tan(0.0)), clamp(abs(tan(0.0)), abs(tan(0.0)), abs(tan(0.0)))), tan(0.0)))), 1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(181.809)), bool(false)))), 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-1.3), max(_GLF_FUZZED(-1.3), _GLF_FUZZED(_GLF_IDENTITY(-1.3, mix(float(_GLF_IDENTITY(-1.3, 1.0 * (-1.3))), float(_GLF_FUZZED((-24.37 - -8.9))), bool(false)))))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6403.4293) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0)), 0.0, 0.0))) + length(vec2(0.0, 0.0))))))) : _GLF_FUZZED(mat4(0.0, _GLF_IDENTITY(7.8, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(7.8, max(7.8, 7.8)), (false ? _GLF_FUZZED(-8750.1156) : _GLF_IDENTITY(7.8, max(7.8, 7.8)))))), 4.7, -2145.6208, -48.79, -2.6, 9081.9562, -46.05, -5.5, _GLF_IDENTITY(_GLF_IDENTITY(-0.5, clamp(-0.5, _GLF_IDENTITY(-0.5, (true ? -0.5 : _GLF_FUZZED(1.4))), _GLF_IDENTITY(-0.5, min(-0.5, -0.5)))), _GLF_IDENTITY(float(mat2(-0.5, length(vec3(0.0, 0.0, 0.0)), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), min(float(mat2(-0.5, length(vec3(0.0, 0.0, 0.0)), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(mat2(-0.5, length(vec3(0.0, 0.0, 0.0)), abs(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), -60.09, -5221.2639, 2862.2462, 79.19, 5370.1427, -200.061)))))))), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3337.3373)), bool(false))))), 1.0)))), mix(float(_GLF_FUZZED(float(167566u))), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(574.902), min(_GLF_IDENTITY(_GLF_FUZZED(574.902), min(_GLF_IDENTITY(_GLF_FUZZED(574.902), min(_GLF_FUZZED(574.902), _GLF_FUZZED(574.902))), _GLF_FUZZED(574.902))), _GLF_FUZZED(574.902)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(true))), bool(false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(true))), bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(true))), bool(false)))), _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), float(_GLF_FUZZED(float(true))), bool(false))))) && true, ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), float(_GLF_FUZZED(float(true))), bool(false))))) && true), true && (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) - 0.0), float(_GLF_FUZZED(float(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), false || (bool(bvec3(true, true, false)))))))), bool(false))))) && true))))))))) || false))) ? _GLF_FUZZED((7787.7587 + dot(vec3(-3233.9102, 8021.0743, -85.98), vec3(-7.1, -647.261, -9.3)))) : _GLF_IDENTITY(float(1.0), 0.0 + (float(1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-239.123)), float(1.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), 1.0)).y))))))), uvec3(1u), bvec3(true), bvec4(true));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED(subgroup_size)))) / 1u))], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) - 0)), clamp(_GLF_IDENTITY(uint(2), 0u + (uint(2))), uint(2), uint(2))), min(uint(2), _GLF_IDENTITY(uint(2), min(uint(2), uint(2))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY(false, (false) && true) || (false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.4))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), cos(abs(0.0))))), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), cos(abs(0.0)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, tan(length(0.0)), 0.0, 1.0, 1.0))), injectionSwitch)), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-188.398), _GLF_FUZZED(-844.646)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[1]), bvec2(true, true))))), injectionSwitch), vec2(1.0, 1.0) * (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) / exp(tan(vec2(0.0, 0.0))))), injectionSwitch)), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(vec2(-9.5, 534.097))))) * vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))) && true))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))) || false, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat2(-22.06, -913.490, -9.0, -6.8))))) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), float(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0])))) && true), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec3(bvec3(bvec2(false, false), true))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
}
