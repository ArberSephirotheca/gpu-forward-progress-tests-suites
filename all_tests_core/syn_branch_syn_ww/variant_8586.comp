#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6443.7904)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6443.7904)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6443.7904)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6443.7904)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), true), true, true))))))), ! (! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6443.7904)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6443.7904)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6443.7904)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), true), true, true))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(faceforward(vec2(33.71, 6.7), injectionSwitch, vec2(3.0, -671.847))))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, (0 | 0), 0))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, (0 | 0), 0)))) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(ivec3(6, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | (0 ^ 0)), (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (5) << 0)))))))), 0 ^ (_GLF_IDENTITY(int(ivec3(6, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | (0 ^ 0)), (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (5) << 0)))))))), (int(ivec3(6, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | (0 ^ 0)), (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, (5) << 0))))))))) | 0))))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)) << _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, 0)))), ((int(5)) << _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, 0))))) * 1))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true)), true))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.1)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), (true ? (gl_WorkGroupID) : _GLF_FUZZED(uvec3(111343u, 189231u, 172380u)))), _GLF_IDENTITY((gl_WorkGroupID), min(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), (gl_WorkGroupID))), (gl_WorkGroupID))) + uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(min(workgroup_size, workgroup_id)) : workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) & -29238); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size) - _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u)))) + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) << 0u)) / 1u)) << 0u))) * subgroup_size, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))) + (workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (true ? ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) : _GLF_FUZZED(182383u)));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (true ? vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.7, 20.07), max(vec2(-9.7, 20.07), vec2(-9.7, 20.07)))))))) * vec2(1.0, 1.0), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (true ? vec2(_GLF_IDENTITY(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), max(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), (false ? _GLF_FUZZED(fract(vec4(-0.9, -7.3, 7.0, -1.3))) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))))))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), clamp(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), float(mat2x4(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), determinant(mat4(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))), (mat3(injectionSwitch, _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), max(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.1) : 0.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), (false ? _GLF_FUZZED(fract(vec4(_GLF_IDENTITY(-0.9, float(mat2x3(-0.9, 1.0, 1.0, 1.0, 1.0, 0.0))), -7.3, 7.0, -1.3))) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), float(mat2x4(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.2))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))) : _GLF_FUZZED(vec2(-9.7, 20.07)))))) * vec2(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-302.315)), bool(false))) : _GLF_FUZZED(-29.54))), 0.0, 1.0, 0.0))))), (true ? vec2(mat3(injectionSwitch, exp(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-870.940)), float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), bool(true))))) : _GLF_FUZZED(vec2(-9.7, 20.07)))))) * vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(_GLF_IDENTITY(5.3, min(5.3, 5.3)))), bvec2(false, false)))) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0))))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0)))))) / 1.0)), 0.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (true ? vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.7, 20.07), max(vec2(-9.7, 20.07), vec2(-9.7, 20.07)))))))) * vec2(1.0, 1.0), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (true ? vec2(_GLF_IDENTITY(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), max(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), (false ? _GLF_FUZZED(fract(vec4(-0.9, -7.3, 7.0, -1.3))) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))))))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), clamp(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), float(mat2x4(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), determinant(mat4(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))), (mat3(injectionSwitch, _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), max(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.1) : 0.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), (false ? _GLF_FUZZED(fract(vec4(_GLF_IDENTITY(-0.9, float(mat2x3(-0.9, 1.0, 1.0, 1.0, 1.0, 0.0))), -7.3, 7.0, -1.3))) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), float(mat2x4(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.2))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))) : _GLF_FUZZED(vec2(-9.7, 20.07)))))) * vec2(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-302.315)), bool(false))) : _GLF_FUZZED(-29.54))), 0.0, 1.0, 0.0))))), (true ? vec2(mat3(injectionSwitch, exp(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-870.940)), float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), bool(true))))) : _GLF_FUZZED(vec2(-9.7, 20.07)))))) * vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(_GLF_IDENTITY(5.3, min(5.3, 5.3)))), bvec2(false, false)))) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0))))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0)))))) / 1.0)), 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (true ? vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.7, 20.07), max(vec2(-9.7, 20.07), vec2(-9.7, 20.07)))))))) * vec2(1.0, 1.0), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (true ? vec2(_GLF_IDENTITY(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), max(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), (false ? _GLF_FUZZED(fract(vec4(-0.9, -7.3, 7.0, -1.3))) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))))))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), clamp(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), float(mat2x4(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), determinant(mat4(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))), (mat3(injectionSwitch, _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), max(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.1) : 0.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), (false ? _GLF_FUZZED(fract(vec4(_GLF_IDENTITY(-0.9, float(mat2x3(-0.9, 1.0, 1.0, 1.0, 1.0, 0.0))), -7.3, 7.0, -1.3))) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), float(mat2x4(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.2))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))) : _GLF_FUZZED(vec2(-9.7, 20.07)))))) * vec2(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-302.315)), bool(false))) : _GLF_FUZZED(-29.54))), 0.0, 1.0, 0.0))))), (true ? vec2(mat3(injectionSwitch, exp(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-870.940)), float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), bool(true))))) : _GLF_FUZZED(vec2(-9.7, 20.07)))))) * vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(_GLF_IDENTITY(5.3, min(5.3, 5.3)))), bvec2(false, false)))) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0))))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0)))))) / 1.0)), 0.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (true ? vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.7, 20.07), max(vec2(-9.7, 20.07), vec2(-9.7, 20.07)))))))) * vec2(1.0, 1.0), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (true ? vec2(_GLF_IDENTITY(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), max(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), (false ? _GLF_FUZZED(fract(vec4(-0.9, -7.3, 7.0, -1.3))) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))))))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), clamp(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), float(mat2x4(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), determinant(mat4(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))), (mat3(injectionSwitch, _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), max(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.1) : 0.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), (false ? _GLF_FUZZED(fract(vec4(_GLF_IDENTITY(-0.9, float(mat2x3(-0.9, 1.0, 1.0, 1.0, 1.0, 0.0))), -7.3, 7.0, -1.3))) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), float(mat2x4(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.2))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))) : _GLF_FUZZED(vec2(-9.7, 20.07)))))) * vec2(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-302.315)), bool(false))) : _GLF_FUZZED(-29.54))), 0.0, 1.0, 0.0))))), (true ? vec2(mat3(injectionSwitch, exp(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-870.940)), float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), bool(true))))) : _GLF_FUZZED(vec2(-9.7, 20.07)))))) * vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(_GLF_IDENTITY(5.3, min(5.3, 5.3)))), bvec2(false, false)))) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0))))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0)))))) / 1.0)), 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (true ? vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.7, 20.07), max(vec2(-9.7, 20.07), vec2(-9.7, 20.07)))))))) * vec2(1.0, 1.0), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (true ? vec2(_GLF_IDENTITY(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), max(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), (false ? _GLF_FUZZED(fract(vec4(-0.9, -7.3, 7.0, -1.3))) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))))))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), clamp(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), float(mat2x4(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), determinant(mat4(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))), (mat3(injectionSwitch, _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), max(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.1) : 0.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), (false ? _GLF_FUZZED(fract(vec4(_GLF_IDENTITY(-0.9, float(mat2x3(-0.9, 1.0, 1.0, 1.0, 1.0, 0.0))), -7.3, 7.0, -1.3))) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), float(mat2x4(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.2))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))) : _GLF_FUZZED(vec2(-9.7, 20.07)))))) * vec2(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-302.315)), bool(false))) : _GLF_FUZZED(-29.54))), 0.0, 1.0, 0.0))))), (true ? vec2(mat3(injectionSwitch, exp(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-870.940)), float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), bool(true))))) : _GLF_FUZZED(vec2(-9.7, 20.07)))))) * vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(_GLF_IDENTITY(5.3, min(5.3, 5.3)))), bvec2(false, false)))) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0))))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0)))))) / 1.0)), 0.0)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (true ? vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.7, 20.07), max(vec2(-9.7, 20.07), vec2(-9.7, 20.07)))))))) * vec2(1.0, 1.0), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (true ? vec2(_GLF_IDENTITY(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), max(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), (false ? _GLF_FUZZED(fract(vec4(-0.9, -7.3, 7.0, -1.3))) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))))))))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), clamp(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), float(mat2x4(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), determinant(mat4(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), min(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))), (mat3(injectionSwitch, _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), max(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.1) : 0.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)))), (false ? _GLF_FUZZED(fract(vec4(_GLF_IDENTITY(-0.9, float(mat2x3(-0.9, 1.0, 1.0, 1.0, 1.0, 0.0))), -7.3, 7.0, -1.3))) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), float(mat2x4(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.2))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))) : _GLF_FUZZED(vec2(-9.7, 20.07)))))) * vec2(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-302.315)), bool(false))) : _GLF_FUZZED(-29.54))), 0.0, 1.0, 0.0))))), (true ? vec2(mat3(injectionSwitch, exp(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-870.940)), float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), bool(true))))) : _GLF_FUZZED(vec2(-9.7, 20.07)))))) * vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(_GLF_IDENTITY(5.3, min(5.3, 5.3)))), bvec2(false, false)))) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0))))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(724.240)), float(0.0), bool(true)))) / 1.0), 0.0, 1.0, log(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, sin(0.0), 0.0)))))) / 1.0)), 0.0)).x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(340.967, -1.8)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && true))))), true, false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ (0 << _GLF_IDENTITY(int(3), int(3))))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ (0 << _GLF_IDENTITY(int(3), int(3)))))))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, tan(log(1.0)), 0.0, 0.0)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           continue;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = ((+ (-41604 | -20723)) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) * 1), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), bool(bool(bool(bool(! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (_GLF_DEAD(false)) && true)))) && true))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), true, false, true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1039.7748)), bool(false))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             if(_GLF_DEAD(false))
              return;
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), ! (! (bool(bool(false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), virtual_gid)), _GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), _GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), virtual_gid)), virtual_gid)))), _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))), max(uint(uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), (uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))) / 1u), uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), 0u ^ (uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), clamp(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u ^ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))))), 0u ^ (uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))))) >> 0u)))))], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))), true))))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
      }
     barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(68.61)))) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(38020))))) < subgroup_size)
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.8))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), bool(bvec4(false, false, true, true)))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true, true)))))))))));
     int i = 0;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(min(93.06, 7.8)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) || false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), clamp(1, 1, 1))) / 1) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY(int(0), int(0))))) >> 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))), (0 >> _GLF_IDENTITY(int(5), int(5))) | (clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))))))), (true ? _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(i)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)], uint(2), 4, 64, 4);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         continue;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))), bool(bvec3(_GLF_DEAD(false), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, false))))))), true, false))))))))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.1))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(985.841)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0))), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x) - 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false))) ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(6), int(6))))], injectionSwitch[1])).x)) > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false))) ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(6), int(6))))], injectionSwitch[1])).x)) > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false))) ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(6), int(6))))], injectionSwitch[1])).x)) > injectionSwitch.y))))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false))) ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(6), int(6))))], injectionSwitch[1])).x)) > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false))) ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(6), int(6))))], injectionSwitch[1])).x)) > injectionSwitch.y))))))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false))) ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(6), int(6))))], injectionSwitch[1])).x)) > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false))) ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(6), int(6))))], injectionSwitch[1])).x)) > injectionSwitch.y))))))), false)))))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x) - 0.0) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false))) ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(6), int(6))))], injectionSwitch[1])).x)) > injectionSwitch.y))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.1) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.6))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)), true, false)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x) - 0.0) > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false))) ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(6), int(6))))], injectionSwitch[1])).x)) > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false))) ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(int(6), int(6))))], injectionSwitch[1])).x)) > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 continue;
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.x)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-6.0)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED(-63.48), _GLF_FUZZED(978.944)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x), float(_GLF_FUZZED(0.6)), bool(false))), 0.0, log(1.0), 0.0))) > injectionSwitch.y))));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) - 0)); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(0 | (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))), 0 | (0 | (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      continue;
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true)), (bool(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) && true))) || false))))))))
      {
       if(_GLF_DEAD(false))
        break;
       atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (false)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), true && (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))), false, true))))), false)))))) ? _GLF_FUZZED(-64615) : 4), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (false)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), true && (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))), false, true))))), false)))))) ? _GLF_FUZZED(-64615) : 4) : _GLF_FUZZED(-61171)))), 64, _GLF_IDENTITY(4, (4) | (4)));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)), (true ? injectionSwitch.y : _GLF_FUZZED((-5.5 + 1641.5720)))))))))
            break;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) | (int(4)))), ~ (~ (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(_GLF_IDENTITY(1, min(1, 1))))) | (int(4)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = (0 | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = (_GLF_IDENTITY(((1 | 0) << _GLF_IDENTITY(int(7), int(7))), ~ (_GLF_IDENTITY(~ (((1 | 0) << _GLF_IDENTITY(int(7), int(7)))), (_GLF_IDENTITY(~ (((1 | 0) << _GLF_IDENTITY(int(7), int(7)))), int(ivec3(~ (((1 | 0) << _GLF_IDENTITY(int(7), int(7)))), 0, 0)))) | (~ (((1 | 0) << _GLF_IDENTITY(int(7), int(7)))))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              break;
            }
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            break;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           continue;
          }
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0 + (injectionSwitch.y))), (float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) - 0.0)))))))
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) - 0)))), 2, 2))), int(2))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bvec2(_injected_loop_counter < 1, false)), (bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), bvec2(bvec3(bvec2(_injected_loop_counter < 1, false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))))) || false))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(9.4)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))).x : _GLF_FUZZED(-3441.0703))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(0.0), 1.0)), clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(0.0), 1.0)), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(0.0), 1.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(0.0), 1.0))), max(mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(0.0), 1.0))), mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(0.0), 1.0)))))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0), cos(0.0), cos(0.0))), 1.0))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(float(64364))), bvec2(false, false))), injectionSwitch), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(float(64364))), bvec2(false, false))), injectionSwitch), max(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(float(64364))), bvec2(false, false))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(float(64364))), bvec2(false, false))), injectionSwitch))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-1.8, 8.2)))), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(float(64364))), bvec2(false, false))), injectionSwitch), vec2(mat2x4(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(float(64364))), bvec2(false, false))), injectionSwitch), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(float(64364))), bvec2(false, false))), injectionSwitch), _GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(float(64364))), bvec2(false, false))), injectionSwitch)) * mat2(1.0), clamp((min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(float(64364))), bvec2(false, false))), injectionSwitch)) * mat2(1.0), (min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(float(64364))), bvec2(false, false))), injectionSwitch)) * mat2(1.0), (min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(float(64364))), bvec2(false, false))), injectionSwitch)) * mat2(1.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (true ? _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.9)), bool(false))) : _GLF_FUZZED((- 73.24)))), 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(349.272)), bool(false))), 1.0), vec4(1.0, 1.0, 1.0, 1.0))) : _GLF_IDENTITY(_GLF_FUZZED(vec4(-7.4, 7.5, 786.373, 740.450)), (_GLF_FUZZED(_GLF_IDENTITY(vec4(-7.4, 7.5, 786.373, 740.450), (true ? vec4(-7.4, 7.5, 786.373, 740.450) : _GLF_FUZZED(atanh(vec4(276.719, 87.21, 2.0, -0.4))))))) * vec4(1.0, 1.0, 1.0, 1.0))))))), sqrt(1.0), log(1.0), 1.0, 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
