#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(73.13)), bool(false)))))) && true)))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-68.49)), bool(false))), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-68.49)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, cos(0.0)))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (! (! (! (false)))), bool(bvec4(! (! (! (! (false)))), false, true, false))))))), false || ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (! (! (! (false)))), bool(bvec4(! (! (! (! (false)))), false, true, false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) / 1u) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u), workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ~ (_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), max(~ ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(uint(2u), uint(2u)))))), ~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))))))) >> _GLF_IDENTITY(uint(2u), uint(2u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))), (false ? _GLF_FUZZED((workgroup_id & virtual_gid)) : ~ (subgroup_local_id))))) + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, ~ (~ (1)))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((_GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(int(1), int(1)))) / 1) - 0)) | 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, ~ (~ (1)))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((_GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(int(1), int(1)))) / 1) - 0)) | 0)), ((_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, ~ (~ (1)))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((_GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(int(1), int(1)))) / 1) - 0)) | 0))) << 0), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(74086)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((_GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(int(1), int(1)))) / 1) - 0)) | 0)), ((_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ (1)))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((_GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(int(1), int(1)))) / 1) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((_GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(int(1), int(1)))) / 1) - 0)) ^ 0)) | 0))) ^ 0)))), min(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))))) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 1 * (1)))), int(ivec4(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 1 * (1)))), 0, 0, (0 ^ 1)))), 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (int(1))), int(1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0), 0, 0), clamp(ivec3(_GLF_IDENTITY(1, (1) - 0), 0, 0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0), 0, 0), (ivec3(_GLF_IDENTITY(1, (1) - 0), 0, 0)) << ivec3(0, 0, 0)), ivec3(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (0) << (0 << _GLF_IDENTITY(int(8), int(8))))), 0, 0)))))), int(1))) - 0)) | 0)), ((_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, (1) / 1))), max(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 1 * (1)))), 1)))), _GLF_IDENTITY((_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), 1, 1)), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, 1 * (1)))), 1))))), ((_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), 1, 1)), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, 1 * (1)))), 1)))))) >> 0) / (0 | 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), (int(1)) | (int(1))), int(1)), (_GLF_IDENTITY(int(1), int(1))) - 0)) | 0))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((1) << (_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) - 0)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), min(int(1), int(1))), int(1)))), (_GLF_IDENTITY(int(1), int(1))) - 0)) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) - 0)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), min(int(1), int(1))), int(1)))), (_GLF_IDENTITY(int(1), int(1))) - 0)) | 0)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) - 0)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), min(int(1), int(1))), int(1)))), (_GLF_IDENTITY(int(1), int(1))) - 0)) | 0)) - 0)) | 0)) - (0 << _GLF_IDENTITY(int(1), int(1))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0))) | (_GLF_IDENTITY((1) << (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(1), int(1)))), min(_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(1), int(1)))), clamp(int(int(_GLF_IDENTITY(int(1), int(1)))), int(int(_GLF_IDENTITY(int(1), int(1)))), int(int(_GLF_IDENTITY(int(1), int(1)))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(1), int(1)))), clamp(int(int(_GLF_IDENTITY(int(1), int(1)))), int(int(_GLF_IDENTITY(int(1), int(1)))), int(int(_GLF_IDENTITY(int(1), int(1)))))))))) - 0)) | 0)), _GLF_IDENTITY(((1) << (_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) - 0)) | 0))) | ((1) << (_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) - 0)) | _GLF_IDENTITY(0, (0) * 1)))), (((_GLF_IDENTITY(1, ~ (~ (1)))) << (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) - 0)) | 0), (_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) - 0)) | 0)) - (0 | 0)))) | ((1) << (_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 + (_GLF_IDENTITY(int(1), int(1))))) - 0)) | 0)))) | 0))))), (_GLF_IDENTITY(1, (1) << (_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) + 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), _GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) / 1, (_GLF_IDENTITY((int(1)) / 1, ((int(1)) / 1) - 0)) | ((int(1)) / 1))), int(1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))), int(1))) - _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, 0 ^ (0))) << 0))) | 0)))) | (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ _GLF_IDENTITY((1), clamp((1), (1), (1))), ~ (1))))), ~ (~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(max(~ (1), ~ (1)), (false ? _GLF_FUZZED(mix(29824, 40097, true)) : _GLF_IDENTITY(max(~ (1), ~ (1)), clamp(_GLF_IDENTITY(max(~ (1), ~ (1)), int(ivec2(max(~ (1), ~ (1)), 1))), max(~ (1), ~ (1)), max(~ (1), ~ (1)))))))))))))), (_GLF_IDENTITY(int(1), int(1))) - 0)) | 0)), max((_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))), ((_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))) | ((_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(1), int(1))) - 0, int(int((_GLF_IDENTITY(int(1), int(1))) - 0))))) | 0)), (_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))), (true ? _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))) : _GLF_FUZZED(76672))))), (_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) ^ 0)))) - 0)) | 0)))))))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), ! (! (bool((_GLF_DEAD(false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2(injectionSwitch[0], 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(9.5, -955.212))))[_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), ~ (~ (int(ivec4(1, 1, 0, 0))))))), ~ (~ (int(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 1 * (0)), 0)))))))))])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bool(true))) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))) ? _GLF_FUZZED(subgroup_base) : virtual_gid))], uint(1), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, 0 + (4)))), 64, 4);
 if((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0) | (2), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, (1 | 0)), (ivec2(0, (1 | 0))) >> ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, (0) ^ 0))), 0 + (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, (0) ^ 0))))), 0))), (int(_GLF_IDENTITY(ivec2(0, (1 | 0)), (_GLF_IDENTITY(ivec2(0, (_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))) | 0)), (_GLF_IDENTITY(ivec2(0, (_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))) | 0)), ~ (~ (ivec2(0, (_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))) | 0)))))) << ivec2(0, 0))) >> ivec2(0, 0)))) - 0)), ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, (1 | 0)), (ivec2(0, (1 | 0))) >> ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(0, (1 | 0)), _GLF_IDENTITY((ivec2(0, (1 | 0))), ivec2(ivec3((ivec2(0, (1 | 0))), (0 & -71957)))) >> ivec2(0, 0)))) - 0))))), (0) >> 0) | (_GLF_IDENTITY(2, max(2, 2)))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0) | (2), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, (1 | 0)), (ivec2(0, (1 | 0))) >> ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, (0) ^ 0))), 0 + (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, (0) ^ 0))))), 0))), (int(_GLF_IDENTITY(ivec2(0, (1 | 0)), (_GLF_IDENTITY(ivec2(0, (_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))) | 0)), (_GLF_IDENTITY(ivec2(0, (_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))) | 0)), ~ (~ (ivec2(0, (_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))) | 0)))))) << ivec2(0, 0))) >> ivec2(0, 0)))) - 0)), ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, (1 | 0)), (ivec2(0, (1 | 0))) >> ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(0, (1 | 0)), _GLF_IDENTITY((ivec2(0, (1 | 0))), ivec2(ivec3((ivec2(0, (1 | 0))), (0 & -71957)))) >> ivec2(0, 0)))) - 0))))), (0) >> 0) | (_GLF_IDENTITY(2, max(2, 2)))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0) | (2), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, (1 | 0)), (ivec2(0, (1 | 0))) >> ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, (0) ^ 0))), 0 + (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, (0) ^ 0))))), 0))), (int(_GLF_IDENTITY(ivec2(0, (1 | 0)), (_GLF_IDENTITY(ivec2(0, (_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))) | 0)), (_GLF_IDENTITY(ivec2(0, (_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))) | 0)), ~ (~ (ivec2(0, (_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))))) | 0)))))) << ivec2(0, 0))) >> ivec2(0, 0)))) - 0)), ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, (1 | 0)), (ivec2(0, (1 | 0))) >> ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(0, (1 | 0)), _GLF_IDENTITY((ivec2(0, (1 | 0))), ivec2(ivec3((ivec2(0, (1 | 0))), (0 & -71957)))) >> ivec2(0, 0)))) - 0))))), (0) >> 0) | (_GLF_IDENTITY(2, max(2, 2)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) / 1))) >> 0) | (2)), (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) >> 0) | (2))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || (true)) ? subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), clamp(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) ^ 0))) | (2)) : _GLF_FUZZED(virtual_gid), min(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || (true)) ? subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), clamp(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) ^ 0))) | (2)) : _GLF_FUZZED(virtual_gid), (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || (true)) ? subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), clamp(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) ^ 0))) | (2)) : _GLF_FUZZED(virtual_gid)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || (true)) ? subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), clamp(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) ^ 0))) | (2)) : _GLF_FUZZED(virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || (true)) ? subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), clamp(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) ^ 0))) | (2)) : _GLF_FUZZED(virtual_gid), (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || (true)) ? subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), clamp(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) ^ 0))) | (2)) : _GLF_FUZZED(virtual_gid)) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) | (0))))) >> 0)) >> 0) | (2)), (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((0), ((0)) / 1), 1)), (false ? _GLF_FUZZED(-68774) : int(ivec2(_GLF_IDENTITY((0), ((0)) / 1), 1))))) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) >> _GLF_IDENTITY(0, (0) + 0)) | (2))) << 0), (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true)) ? subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), clamp(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) ^ 0))) | (2)) : _GLF_FUZZED(virtual_gid))), 0u, 0u)))) >> 0u)) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) && true))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : next_virtual_gid))], uint(_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, (2) ^ 0), 1, 0, 0)))), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(abs(-99325)) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) | (_GLF_IDENTITY(4, (4) - 0))))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ((bool(false))) || false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), true))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4(_GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) || false, bool(bvec3((false) || false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false)))), false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false)))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false)))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false)))))))))), true && (bool(bool(false))))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false)))))))))), true && (bool(bool(false))))), false), true)))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false))))))), ((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false)))))))) && true)) && true)))), true && (bool(bool(false))))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)), true)))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), false || (bool(false)))))), ! (! (_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))), true && (bool(bool(false))))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false))))))), ! (! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), false || (bool(bool(bool(false))))))))))))), true && (bool(bool(false))))), false), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || (bool(bool(bool(false)))))))))), _GLF_IDENTITY(true && (bool(bool(false))), (true && (bool(bool(false)))) || false))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), true)))), true)))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true)))) || false), ! (! (_GLF_IDENTITY(bool(false), false || (bool(false)))))), ! (! (_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))), true && (bool(bool(false))))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(false, (false) || false)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(452.132), 1.0 * (_GLF_FUZZED(452.132)))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(452.132)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(452.132)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(452.132)), (_GLF_IDENTITY(float(_GLF_FUZZED(452.132)), (float(_GLF_FUZZED(452.132))) * 1.0)) * 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-102.370)), float(injectionSwitch.x), bool(true)))))), 0.0 + (float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-102.370)), float(injectionSwitch.x), bool(true)))))))), bool(true))) > injectionSwitch.y))))))), false, false, _GLF_IDENTITY(true, ! (! (true)))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), true)))), true, true, true)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7499.8695)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(2.0), (_GLF_IDENTITY(_GLF_FUZZED(2.0), mix(float(_GLF_FUZZED(2.0)), float(_GLF_FUZZED(-1651.0683)), bool(false)))) + 0.0), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[1], min(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[1], mix(float(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[1], min((vec2(injectionSwitch[0], injectionSwitch[1]))[1], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]))), float(_GLF_FUZZED(-622.402)), bool(false))), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]))), vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]))[0], _GLF_FUZZED(-5.0)), bvec2(true, false)))).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(2.0), (_GLF_FUZZED(2.0)) + 0.0), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]))[0], _GLF_FUZZED(-5.0)), bvec2(true, false)))).y, false, false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(false))), max(float(_GLF_FUZZED(float(false))), float(_GLF_FUZZED(float(false))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(7750.4363))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-739.987) : 1.0))) * (injectionSwitch))[1]), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(2.0), min(_GLF_IDENTITY(_GLF_FUZZED(2.0), float(mat4x3(_GLF_FUZZED(2.0), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0))), _GLF_FUZZED(2.0))), _GLF_IDENTITY((_GLF_FUZZED(2.0)) + 0.0, float(mat3x4((_GLF_FUZZED(2.0)) + 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, sqrt(1.0), 1.0, cos(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 0.0, sin(0.0), 1.0)))), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]))[0], _GLF_FUZZED(-5.0)), bvec2(true, false)))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(_GLF_IDENTITY(-9.6, (-9.6) - 0.0))), bool(false))), injectionSwitch[1])).x, mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(false, false || (false))))), float(injectionSwitch.x), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(injectionSwitch[0]), (float(injectionSwitch[0])) * 1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-9.6, (-9.6) - 0.0))), bool(false))), injectionSwitch[1])).x, mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(false, false || (false))))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x), bool(true)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)) * abs(vec2(1.0, 1.0)))).x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(2.0), (_GLF_FUZZED(_GLF_IDENTITY(2.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(2.0, min(_GLF_IDENTITY(2.0, mix(float(_GLF_FUZZED(18.83)), float(2.0), bool(true))), 2.0)), 2.0, 2.0), mix(float(_GLF_FUZZED(997.103)), float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(2.0, min(_GLF_IDENTITY(2.0, mix(float(_GLF_FUZZED(18.83)), float(2.0), bool(true))), 2.0)), 2.0, 2.0), float(_GLF_IDENTITY(vec2(clamp(_GLF_IDENTITY(2.0, min(_GLF_IDENTITY(2.0, mix(float(_GLF_FUZZED(18.83)), float(2.0), bool(true))), 2.0)), 2.0, 2.0), 0.0), (vec2(clamp(_GLF_IDENTITY(2.0, min(_GLF_IDENTITY(2.0, mix(float(_GLF_FUZZED(18.83)), float(2.0), bool(true))), 2.0)), 2.0, 2.0), 0.0)) * vec2(1.0, 1.0))))), bool(true)))))) + 0.0), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(2.0), (_GLF_FUZZED(_GLF_IDENTITY(2.0, clamp(_GLF_IDENTITY(2.0, min(_GLF_IDENTITY(2.0, mix(float(_GLF_FUZZED(18.83)), float(2.0), bool(true))), 2.0)), 2.0, 2.0)))) + 0.0), (vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-595.741) : injectionSwitch[0])), injectionSwitch[1]))[0], injectionSwitch[0])), injectionSwitch[1]))[1]), (vec2(_GLF_IDENTITY(_GLF_FUZZED(2.0), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2.0, clamp(2.0, _GLF_IDENTITY(2.0, (true ? 2.0 : _GLF_FUZZED(-4.2))), _GLF_IDENTITY(2.0, mix(float(_GLF_FUZZED(8.6)), float(2.0), bool(true))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(2.0, min(_GLF_IDENTITY(2.0, mix(float(_GLF_FUZZED(18.83)), float(2.0), bool(true))), 2.0)), _GLF_IDENTITY(2.0, (true ? 2.0 : _GLF_FUZZED(-8508.5788))), 2.0), (false ? _GLF_FUZZED(291.333) : clamp(_GLF_IDENTITY(2.0, min(_GLF_IDENTITY(2.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(18.83)), min(_GLF_IDENTITY(float(_GLF_FUZZED(18.83)), (true ? float(_GLF_FUZZED(18.83)) : _GLF_FUZZED(vec3(-68.68, -4.1, 7.6)[0]))), float(_GLF_FUZZED(18.83)))), float(_GLF_IDENTITY(2.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(2.0, float(float(2.0))) : _GLF_FUZZED(mix(-473.435, 0.0, faceforward(-56.38, 4.0, -51.44)))))), bool(true))), 2.0)), _GLF_IDENTITY(2.0, (true ? 2.0 : _GLF_FUZZED(-8508.5788))), 2.0)))))) + 0.0), (vec2(injectionSwitch[0], injectionSwitch[1]))[_GLF_IDENTITY(1, max(1, 1))])) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7512.0369)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true)))))))) / vec2(1.0, 1.0)), vec2((vec2(injectionSwitch[_GLF_IDENTITY(0, (0) + (-71872 & 0))], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]))[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))], _GLF_FUZZED(-5.0)), bvec2(true, false)))).y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
