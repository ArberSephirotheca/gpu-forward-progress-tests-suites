#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat2x4 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 vec4 _f3;
 mat2x3 _f4;
 uint _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_3 {
 bool _f0;
 bool _f1;
 ivec4 _f2;
 mat4x2 _f3;
 float _f4;
 vec2 _f5;
 float _f6;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_6 {
 uint subgroup_size;
 _GLF_struct_5 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(gl_SubgroupSize, _GLF_struct_5(_GLF_struct_0(mat3x4(1.0), uvec2(1u)), _GLF_struct_1(mat3x2(1.0)), _GLF_struct_2(vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) - 0.0))))), _GLF_struct_3(true, true, ivec4(1), mat4x2(1.0), 1.0, vec2(1.0), 1.0), _GLF_struct_4(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), 1.0)), (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), 1.0))) / 1.0)), mat4x3(1.0), mat2x3(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], _GLF_FUZZED(2.5), (vec4(1.0))[2], (vec4(1.0))[3]), vec4(_GLF_FUZZED(-4.7), (vec4(1.0))[1], _GLF_FUZZED(1.1), _GLF_FUZZED(-8464.8633)), bvec4(false, true, false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(7.2), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(7.2), 0.0)), float(mat4(float(vec2(_GLF_FUZZED(7.2), 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0))))), bool(false))), 1.0, 1.0, 1.0) * (vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), vec4(vec4((vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(12.99)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))) * mat4(1.0))))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0)))) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))), (false ? _GLF_FUZZED(vec4(25.65, 99.36, _GLF_IDENTITY(-1.6, max(-1.6, -1.6)), 7.2)) : _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(998.140)))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0)))))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).x < injectionSwitch.y))))))), (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4((vec4(1.0, 1.0, 1.0, 1.0))[0], _GLF_IDENTITY(_GLF_FUZZED(7.8), clamp(_GLF_FUZZED(7.8), _GLF_FUZZED(7.8), _GLF_IDENTITY(_GLF_FUZZED(7.8), float(mat3x4(_GLF_FUZZED(7.8), sqrt(0.0), 1.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0))))), (vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 0.0))[0], min((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[0])), (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED((4671.7547 / -39.71))), bvec2(false, false))))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, exp(0.0), log(1.0)), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, exp(0.0), log(1.0)), (true ? mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, exp(0.0), log(1.0)) : _GLF_FUZZED(mat2(-0.9, -340.426, 6.2, -8604.2369)))))))))))[2], (vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))[3]), vec4(_GLF_FUZZED(-32.75), (vec4(1.0, 1.0, 1.0, 1.0))[1], _GLF_IDENTITY(_GLF_FUZZED(382.287), (_GLF_FUZZED(382.287)) + 0.0), _GLF_FUZZED(1.1)), bvec4(false, true, false, false))) * (_GLF_IDENTITY(vec4(1.0), mat4(1.0) * (vec4(1.0)))))) - vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4(_GLF_FUZZED(8.7), _GLF_FUZZED(694.556), _GLF_FUZZED(-4.3), _GLF_FUZZED(-182.690)), vec4((clamp((_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), vec4(vec4((vec4(1.0)) * mat4(1.0))))), vec4(1.0, 1.0, 1.0, 1.0) * _GLF_IDENTITY((vec4(1.0)), clamp((vec4(1.0)), _GLF_IDENTITY((vec4(1.0)), mix(vec4(((vec4(1.0)))[0], _GLF_FUZZED(7.0), ((vec4(1.0)))[2], ((vec4(1.0)))[3]), vec4(_GLF_FUZZED(-74.25), ((vec4(1.0)))[1], _GLF_FUZZED(65.44), _GLF_FUZZED(-9.5)), bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (vec4(1.0)))))) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))), (false ? _GLF_FUZZED(vec4(25.65, 99.36, -1.6, 7.2)) : _GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0)))))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(48.25) : 0.0)), mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true)))))) || false))))), (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4((vec4(1.0, 1.0, 1.0, 1.0))[0], _GLF_FUZZED(7.8), (vec4(1.0, 1.0, 1.0, 1.0))[2], (vec4(1.0, 1.0, 1.0, 1.0))[3]), vec4(_GLF_FUZZED(-32.75), (vec4(1.0, 1.0, 1.0, 1.0))[1], _GLF_FUZZED(382.287), _GLF_FUZZED(1.1)), bvec4(false, true, false, false))) * (vec4(1.0)), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4((vec4(1.0, 1.0, 1.0, 1.0))[0], _GLF_FUZZED(7.8), (vec4(1.0, 1.0, 1.0, 1.0))[2], (vec4(1.0, 1.0, 1.0, 1.0))[3]), vec4(_GLF_FUZZED(-32.75), (vec4(1.0, 1.0, 1.0, 1.0))[1], _GLF_FUZZED(382.287), _GLF_FUZZED(1.1)), bvec4(false, true, false, false))) * (vec4(1.0)))))) - vec4(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, sqrt(0.0), 0.0)), 0.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0)))[0], (clamp((_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), vec4(vec4((vec4(1.0)) * mat4(1.0))))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0)))) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0))), (_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0)))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(vec4(25.65, 99.36, -1.6, 7.2)) : _GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0)))))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4((vec4(1.0, 1.0, 1.0, 1.0))[0], _GLF_FUZZED(7.8), (vec4(1.0, 1.0, 1.0, 1.0))[2], (vec4(1.0, 1.0, 1.0, 1.0))[3]), vec4(_GLF_FUZZED(-32.75), (vec4(1.0, 1.0, 1.0, 1.0))[1], _GLF_FUZZED(_GLF_IDENTITY(382.287, (_GLF_IDENTITY(382.287, (false ? _GLF_FUZZED(67.48) : 382.287))) / exp(0.0))), _GLF_IDENTITY(_GLF_FUZZED(1.1), float(mat2x4(_GLF_FUZZED(1.1), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))), bvec4(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, false))) * _GLF_IDENTITY((vec4(1.0)), max((vec4(1.0)), (vec4(1.0)))))) - vec4(0.0, 0.0, 0.0, 0.0)))[1], (clamp((_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), vec4(vec4((vec4(1.0)) * mat4(1.0))))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, tan(0.0)))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) / exp(vec4(0.0, 0.0, 0.0, 0.0))) * (vec4(1.0)))) - _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * _GLF_IDENTITY((vec4(1.0)), max((vec4(1.0)), _GLF_IDENTITY((vec4(1.0)), (true ? (vec4(1.0)) : _GLF_FUZZED(mod(vec4(78.72, -3155.2886, 660.719, -789.238), 8710.6810))))))), (false ? _GLF_FUZZED(vec4(25.65, 99.36, -1.6, 7.2)) : _GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0)))))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1054.7606)))), float(_GLF_FUZZED(-0.5)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))) || false)), (false) || false))))))), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), max((vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))[0], _GLF_FUZZED(7.8), (vec4(1.0, 1.0, 1.0, 1.0))[2], (vec4(1.0, 1.0, 1.0, 1.0))[3]), vec4(_GLF_FUZZED(-32.75), (vec4(1.0, 1.0, 1.0, 1.0))[1], _GLF_FUZZED(382.287), _GLF_FUZZED(_GLF_IDENTITY(1.1, mix(float(_GLF_FUZZED(vec4(812.090, 34.54, 9.4, 273.506).s)), float(1.1), bool(true))))), bvec4(false, true, false, false))) * _GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0)))[2], (clamp((_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), vec4(vec4((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))))))) - mat4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-79.38)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(mat4x3(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (true ? vec3(1.0, 1.0, 1.0) : _GLF_FUZZED(vec3(352.370, 7.7, 1141.3521)))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(mat4x3(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (true ? vec3(1.0, 1.0, 1.0) : _GLF_FUZZED(vec3(352.370, 7.7, 1141.3521)))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4(1.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), 1.0, 1.0)), 0.0, 1.0)))), float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(mat4x3(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (true ? vec3(1.0, 1.0, 1.0) : _GLF_FUZZED(vec3(352.370, 7.7, 1141.3521)))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))), 1.0) * (vec4(1.0)))) - _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(19.56))), 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0, 1.0, 1.0, 1.0) * _GLF_IDENTITY((vec4(1.0)), min((vec4(1.0)), (vec4(1.0))))), (false ? _GLF_FUZZED(vec4(25.65, 99.36, _GLF_IDENTITY(-1.6, mix(float(_GLF_FUZZED(2795.2024)), float(-1.6), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 7.2)) : _GLF_IDENTITY(vec4(1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(1.0)))))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(cos(0.0), 1.0, 0.0))) + (float(0.0))), float(_GLF_FUZZED(-0.5)), bool(_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0), mix(vec4((vec4(1.0, 1.0, 1.0, 1.0))[0], _GLF_FUZZED(7.8), (vec4(1.0, 1.0, 1.0, 1.0))[2], (vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((true , acos(672.219)))))))[3]), vec4(_GLF_FUZZED(-32.75), (vec4(1.0, 1.0, 1.0, 1.0))[1], _GLF_FUZZED(382.287), _GLF_FUZZED(1.1)), bvec4(false, true, false, false))) * (vec4(1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)))[3]), bvec4(true, true, true, true))))), mat2x3(1.0), 1u, mat4x3(1.0))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_6.subgroup_size, 0u ^ (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, 0u | (_GLF_struct_replacement_6.subgroup_size))));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), bool(bool(! ((_GLF_IDENTITY(false, true && (false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true)))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && true)))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && true))))))))) || false)))))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true))), true)))))), false || (false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))), false, false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), bool(bool(! ((_GLF_IDENTITY(false, true && (false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true)))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false, (((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false) && true))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true)))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false, (((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false) && true))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true)))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false, (((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false) && true))))), true, true))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))), false, false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && true)))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && true))))))))) || false)))))), bool(bvec3(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), false, false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false)), true))), true))))))))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(190200u))), bool(false))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (vec3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)))), bool(true)))) * (injectionSwitch.y)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(190200u))), bool(false))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (vec3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)))), bool(true)))) * (injectionSwitch.y)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false), bvec3(bvec4(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(190200u))), bool(false))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (vec3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)))), bool(true)))) * (injectionSwitch.y)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false), false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || ((! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || ((! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))))))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || ((! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))))))), true, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.6) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), true && (false)))))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.4)), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(2.4), max(_GLF_FUZZED(2.4), _GLF_FUZZED(2.4)))), clamp(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(2.4)), _GLF_IDENTITY(float(_GLF_FUZZED(2.4)), (true ? float(_GLF_FUZZED(2.4)) : _GLF_FUZZED(-258.309))))), float(_GLF_FUZZED(2.4)))), float(dot(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(0.0, (0.0) / 1.0)) * 1.0), 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-348.825)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))))), bool(true)))) * (injectionSwitch.y)))))), _GLF_IDENTITY(false, true && (false)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), false || ((! (_GLF_IDENTITY(false, true && (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || false))))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (false ? _GLF_FUZZED(exp(mod(-4.2, 5.7))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), mix(float(_GLF_FUZZED(851.051)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))) - 0.0)), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), mix(float(_GLF_FUZZED(851.051)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))) - 0.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), mix(float(_GLF_FUZZED(851.051)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))) - 0.0)), bool(true))))))) * (injectionSwitch.y)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (false ? _GLF_FUZZED(exp(mod(-4.2, 5.7))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), mix(float(_GLF_FUZZED(851.051)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))) - 0.0)), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), mix(float(_GLF_FUZZED(851.051)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))) - 0.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), mix(float(_GLF_FUZZED(851.051)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))) - 0.0)), bool(true))))))) * (injectionSwitch.y)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (false ? _GLF_FUZZED(exp(mod(-4.2, 5.7))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), mix(float(_GLF_FUZZED(851.051)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))) - 0.0)), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), mix(float(_GLF_FUZZED(851.051)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))) - 0.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), mix(float(_GLF_FUZZED(851.051)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))) - 0.0)), bool(true))))))) * (injectionSwitch.y)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (false ? _GLF_FUZZED(exp(mod(-4.2, 5.7))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), mix(float(_GLF_FUZZED(851.051)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))) - 0.0)), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), mix(float(_GLF_FUZZED(851.051)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))) - 0.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), mix(float(_GLF_FUZZED(851.051)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))))) - 0.0)), bool(true))))))) * (injectionSwitch.y)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false))), true, false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0))) / determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))) * (injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0, 0.0))).y)))), bool(true)))) * (injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))) * (injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_ONE(1.0, injectionSwitch.y)), (vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)), vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(2.4)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))) * (injectionSwitch.y))))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec2(bvec2(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))), true))), (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true)))), false, false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false)))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --))) / 1))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
                  {
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u)), 0u | ((_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u))))) - 0u) - 0u))), _GLF_IDENTITY((1u | 1u), ((1u | 1u)) >> 0u) * (_GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), ~ (~ (_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), max(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))))))), clamp(uint(_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), ~ (~ (_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), max(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))))))), uint(_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), ~ (~ (_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), max(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))))))), uint(_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), ~ (~ (_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), max(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))))))))))), (1u | 1u) * (_GLF_FUZZED(workgroup_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), (1u | 1u) * (_GLF_FUZZED(workgroup_id)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), (1u | 1u) * (_GLF_FUZZED(workgroup_id)))), 0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u ^ (_GLF_FUZZED(workgroup_id))))), (1u | 1u) * (_GLF_FUZZED(workgroup_id)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((1u | 1u) * (_GLF_FUZZED(workgroup_id)), ((+ 97853u) & 0u) | ((1u | 1u) * (_GLF_FUZZED(workgroup_id)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, ~ (~ (_GLF_IDENTITY(1u | 1u, min(1u | 1u, 1u | 1u)))))))) * (_GLF_FUZZED(workgroup_id))))))))) << 0u))), (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u)), 0u | ((_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u))))) - 0u) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((1u | 1u), 0u + ((1u | 1u))), ((1u | 1u)) >> 0u) * (_GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), ~ (~ (_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), max(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))))))), clamp(uint(_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), ~ (~ (_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), max(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))))))), uint(_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), ~ (~ (_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), max(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))))))), uint(_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), ~ (~ (_GLF_IDENTITY(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), max(uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), uint(min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))))))))))), (1u | 1u) * (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), (1u | 1u) * (_GLF_FUZZED(workgroup_id)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), (1u | 1u) * (_GLF_FUZZED(workgroup_id)))), 0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))))))), (1u | 1u) * (_GLF_FUZZED(workgroup_id)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((1u | 1u) * (_GLF_FUZZED(workgroup_id)), ((+ 97853u) & 0u) | ((1u | 1u) * (_GLF_FUZZED(workgroup_id)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(1u | 1u, 0u | (_GLF_IDENTITY(1u | 1u, ~ (~ (_GLF_IDENTITY(1u | 1u, min(1u | 1u, 1u | 1u)))))))) * (_GLF_FUZZED(workgroup_id))))))))) << 0u)))) + 0u) + subgroup_base + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)))) / 1u) % _GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size) / 1u)))) << 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)))) / 1u) % _GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size) / 1u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)))) / 1u) % _GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % _GLF_struct_replacement_6.subgroup_size) / 1u)))) << 0u)) * (1u & 1u)))));
 do
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
        }
       else
        {
         do
          {
           atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (1) ^ 0)), 4, 64, 4);
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(findLSB(_GLF_IDENTITY(-47888, (-47888) << 0))) : _GLF_IDENTITY(0, (0) | (0)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) | (_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (4)))), (_GLF_IDENTITY(4, int(ivec4(4, 0, 0, (1 | 1))))) | _GLF_IDENTITY((4), 0 ^ ((4)))), _GLF_IDENTITY(64, int(ivec2(64, 1))), 4);
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(0, (0) / (1 & 1)) ^ (2))), 4, 64, 4);
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
