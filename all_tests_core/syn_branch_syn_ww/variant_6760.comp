#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u ^ (_GLF_IDENTITY(5u, _GLF_IDENTITY(max(_GLF_IDENTITY(5u, (5u) << (0u ^ 0u)), 5u), min(max(_GLF_IDENTITY(5u, (5u) << (0u ^ 0u)), 5u), max(_GLF_IDENTITY(5u, (5u) << (0u ^ 0u)), 5u))))))), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(true ? 5u : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) + 0u)), (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) + 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) + 0u)), _GLF_IDENTITY(uint(uint(~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) + 0u)))), clamp(uint(uint(~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) + 0u)))), uint(uint(~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) + 0u)))), uint(uint(~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) + 0u))))))))))), ~ (~ (_GLF_IDENTITY(true ? 5u : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) + 0u)), (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u))) + 0u))) | (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) + 0u)))))), uint(uint(true ? 5u : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) + 0u)), (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) + 0u))) | (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) + 0u))))))))))))))))), _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))), 0u), clamp(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u)))) | (gl_WorkGroupSize.x)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), min(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u)))) | ((0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), 1u, 0u), uvec4(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), min(0u, 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) ^ 0u)), uint(5u))) | (_GLF_IDENTITY(uint(5u), uint(5u))))), 1u, 0u), _GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) + 0u)), uint(5u))), 1u, 0u), uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (uvec2(0u, 0u))))))), 0u) | (uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u)))))), (uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u), clamp(uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY((uint(5u)) * 1u, ((uint(5u)) * 1u) | (_GLF_IDENTITY((uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(subgroup_id) : 5u))) | 0u))) * 1u, max((uint(5u)) * 1u, (uint(5u)) * 1u))))), uint(5u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) * 1u), uint(5u))))), 1u, 0u), uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY((uint(5u)) >> 0u, ((uint(5u)) >> 0u) | ((uint(5u)) >> 0u))))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_local_id))) | (0u)), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u), min(_GLF_IDENTITY(min(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_local_id))) | (0u)), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_local_id))) | (0u)), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u), ~ (~ (min(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_local_id))) | (0u)), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u)))), min(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_local_id))) | (0u)), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u), min(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_local_id))) | (0u)), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))), min(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_local_id))) | (0u)), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))))), _GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY(1u, max(1u, 1u)), 0u), _GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(0u, 0u), clamp(max(0u, 0u), max(0u, 0u), max(0u, 0u)))), 0u) | (uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(5u, min(5u, 5u))), uint(5u)), ~ (~ (_GLF_IDENTITY(max(uint(5u), uint(5u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)) | (max(uint(5u), uint(5u)))))))))), 1u, 0u)), uvec4(0u, 0u, 0u, 0u) + (uvec4(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(0u, 0u), clamp(max(0u, 0u), max(0u, 0u), max(0u, 0u)))), 0u) | (uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(5u, min(5u, 5u))), uint(5u)), ~ (~ (_GLF_IDENTITY(max(uint(5u), uint(5u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)) | (max(uint(5u), uint(5u)))))))))), 1u, 0u))))))))) | (uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u), _GLF_IDENTITY(clamp(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u), (uint(5u)) / 1u)) | (_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))), uint(_GLF_IDENTITY(5u, (5u) | (5u))))))))))), 1u, 0u), uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, 0u ^ (5u))))), 1u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(max(subgroup_id, subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u), clamp(uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u), uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u), uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u), 1u, 0u))), uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY((uvec4(gl_WorkGroupSize.x, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), uint(5u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), uint(5u)), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), uint(5u))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), uint(5u)), min(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), uint(5u)), 0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), uint(5u))))))) | 0u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) : 1u)), 0u)), ((uvec4(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) - 0u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), uint(5u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))), (uint(_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(5u, clamp(5u, 5u, 5u)))))) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), uint(5u))) | 0u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) : 1u)), 0u))) << uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) ^ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)), max(uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)), uvec4(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))).x, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) ^ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)), max(uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)), uvec4(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))).x, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)))))), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) ^ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)), max(uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)), uvec4(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))).x, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u))))))))) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)) | (_GLF_IDENTITY(uint(5u), 0u | (uint(5u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(uint(5u), uint(5u)))), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u))) >> 0u) / 1u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) >> _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : 0u))), 1u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, max((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, max((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(uint(5u), uint(5u))) / 1u))))))), 0u, 1u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, max((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, max((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(uint(5u), uint(5u))) / 1u))))))), 0u, 1u, 1u)))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(~ (~ (uvec4(0u, 0u, 0u, 0u))), ~ (~ (~ (~ (uvec4(0u, 0u, 0u, 0u)))))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)) | (_GLF_IDENTITY(uint(5u), 0u | (uint(5u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(uint(5u), uint(5u)))), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u))) >> 0u) / 1u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) >> _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : 0u))), 1u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, max((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, max((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(uint(5u), uint(5u))) / 1u))))))), 0u, 1u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, max((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, max((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(uint(5u), uint(5u))) / 1u))))))), 0u, 1u, 1u)))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(~ (~ (uvec4(0u, 0u, 0u, 0u))), ~ (~ (~ (~ (uvec4(0u, 0u, 0u, 0u)))))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)) | (_GLF_IDENTITY(uint(5u), 0u | (uint(5u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(uint(5u), uint(5u)))), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u))) >> 0u) / 1u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) >> _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : 0u))), 1u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, max((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, max((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(uint(5u), uint(5u))) / 1u))))))), 0u, 1u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, max((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, max((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))) / 1u, (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(uint(5u), uint(5u))) / 1u))))))), 0u, 1u, 1u)))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(~ (~ (uvec4(0u, 0u, 0u, 0u))), ~ (~ (~ (~ (uvec4(0u, 0u, 0u, 0u)))))))))))), 1u)))) | (_GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(1u, max(1u, 1u))))), 0u ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))) / 1u), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u))) >> 0u) / 1u), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : 0u))), 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) / 1u), 0u, 1u, 1u)) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(~ (~ (uvec4(0u, 0u, 0u, 0u))), ~ (~ (~ (~ (uvec4(0u, 0u, 0u, 0u))))))))))) | (_GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))) / 1u), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u))) >> 0u) / 1u), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : 0u))), 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) / 1u), 0u, 1u, 1u)) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(~ (~ (uvec4(0u, 0u, 0u, 0u))), ~ (~ (~ (~ (uvec4(0u, 0u, 0u, 0u))))))))))) | (_GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(5u), uint(5u))), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))) / 1u), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u))) >> 0u) / 1u), _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : 0u))), 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) / 1u), 0u, 1u, 1u)) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(~ (~ (uvec4(0u, 0u, 0u, 0u))), ~ (~ (~ (~ (uvec4(0u, 0u, 0u, 0u))))))))))) | (_GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(uint(5u), uint(5u))), 0u, 0u)))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), max(1u, 1u)))))))), 1u, 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) + 0u)))), 1u, 0u), uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY((uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u)), ((uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u))) | ((uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u)))))), ~ (~ _GLF_IDENTITY((clamp(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(59459u) : _GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(59459u) : _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), min(_GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))))), min(0u, 0u))))))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (0u) | (0u)), 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (~ (_GLF_IDENTITY(5u, ~ (~ (5u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uint(uint(5u)), clamp(_GLF_IDENTITY(uint(uint(5u)), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(5u, (5u) << ((39055u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 1u * (uint(uint(5u))))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uint(uint(5u)), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ 0u), max(uint(5u), uint(5u))), uint(5u))))) | 0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((uint(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))))) | 0u, uint(uvec3((uint(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))))) | 0u, (0u | 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (uint(uint(_GLF_IDENTITY((uint(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))))) | 0u, uint(uvec3((uint(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))))) | 0u, (0u | 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u))), _GLF_IDENTITY(uint(uint(5u)), (uint(uint(5u))) / 1u))))), uint(5u))) ^ (1u ^ 1u))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u), uint(5u)))) >> 0u), 1u, 0u), uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), clamp(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(max(uint(5u), uint(5u)), (max(uint(5u), uint(5u))) << 0u)), uint(5u))))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), clamp(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(max(uint(5u), uint(5u)), (max(uint(5u), uint(5u))) << 0u)), uint(5u)))))) | ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), clamp(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(max(uint(5u), uint(5u)), (max(uint(5u), uint(5u))) << 0u)), uint(5u))))))), 1u, 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)), gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(0u, 0u ^ (0u)) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), 1u, 0u), uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), ~ (~ (_GLF_IDENTITY(~ (0u), (~ (0u)) >> 0u))))) | (~ (0u))))), 0u) | (uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u, 0u))))), (true ? (clamp(uvec4(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(59459u) : _GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(59459u) : _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), min(_GLF_IDENTITY(min(0u, 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))), uint(uvec4(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))), 0u, 0u, 0u))))), min(0u, 0u))))))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (0u) | (0u)), 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) / 1u)) / 1u), ~ (~ (_GLF_IDENTITY(5u, ~ (~ (5u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uint(uint(5u)), clamp(_GLF_IDENTITY(uint(uint(5u)), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(5u, (5u) << ((39055u & 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 1u * (uint(uint(5u))))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uint(uint(5u)), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))))) | 0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((uint(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))))) | 0u, uint(uvec3((uint(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))))) | 0u, (0u | 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (uint(uint(_GLF_IDENTITY((uint(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))))) | 0u, uint(uvec3((uint(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))))) | 0u, (0u | 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u))), _GLF_IDENTITY(uint(uint(5u)), (uint(uint(5u))) / 1u))))), uint(5u))) ^ (1u ^ 1u))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u), uint(5u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u), uint(5u)), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u), uint(5u)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u), uint(5u)), 1u, 1u, 1u))))))))) >> 0u), 1u, 0u), uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), clamp(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(max(uint(5u), uint(5u)), (max(uint(5u), uint(5u))) << 0u)), uint(5u))))), 1u, 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)), gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(0u, 0u ^ (0u)) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), 1u, 0u), uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u) | (uvec4(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(0u, 0u ^ (0u))))))) : _GLF_FUZZED(uvec4(42115u, 135345u, 111586u, 138932u))))))) - uvec4(0u, 0u, 0u, 0u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), false, true, false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7386.5162, 26.41)) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) + 0.0)))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / 1u)) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)), bool(bvec3(bool(_GLF_IDENTITY(false, ! (! (false)))), true, true)))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))))) * mat2(1.0)))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))) && true) ? subgroup_local_id : _GLF_FUZZED(num_workgroup))) + 1) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u))))))) - 0u) + 1) << 0u)) ^ (0u ^ 0u)), subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(clamp(num_workgroup, subgroup_size, subgroup_size))))))), uint(uvec3((_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))), 1u, 0u)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-54.53, -75.37)) : injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0)))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(99484)), clamp((true ? 1 : _GLF_FUZZED(99484)), (true ? 1 : _GLF_FUZZED(99484)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(99484), clamp(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), false || (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))) ? 1 : _GLF_FUZZED(99484), true ? 1 : _GLF_FUZZED(99484), true ? 1 : _GLF_FUZZED(99484))), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(99484, max(99484, 99484))), clamp(true ? 1 : _GLF_FUZZED(99484), true ? 1 : _GLF_FUZZED(99484), true ? 1 : _GLF_FUZZED(99484)))) | (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(99484), clamp(true ? 1 : _GLF_FUZZED(99484), true ? 1 : _GLF_FUZZED(99484), true ? 1 : _GLF_FUZZED(99484))))))))), _GLF_IDENTITY(1, (1) / 1), 1)) < subgroup_size, ! (! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(99484)), clamp((true ? 1 : _GLF_FUZZED(99484)), (true ? 1 : _GLF_FUZZED(99484)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(99484), clamp(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))), true && (bool(bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))))))))))))), false || (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))) ? 1 : _GLF_FUZZED(99484), true ? 1 : _GLF_FUZZED(99484), true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(99484), min(_GLF_IDENTITY(_GLF_FUZZED(99484), clamp(_GLF_FUZZED(99484), _GLF_FUZZED(99484), _GLF_IDENTITY(_GLF_FUZZED(99484), 0 + (_GLF_FUZZED(99484))))), _GLF_FUZZED(99484))))), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(99484, max(99484, 99484))), clamp(true ? 1 : _GLF_FUZZED(99484), true ? 1 : _GLF_FUZZED(99484), true ? 1 : _GLF_FUZZED(99484)))) | (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(99484), clamp(true ? 1 : _GLF_FUZZED(99484), true ? 1 : _GLF_FUZZED(99484), true ? 1 : _GLF_FUZZED(99484))))))))), _GLF_IDENTITY(1, (1) / 1), 1)) < subgroup_size))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))))))))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(true, false || (true)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((23.65 * -1377.6784))), bool(false)))) * 1.0) > injectionSwitch.y)) || ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(true, false || (true)) && ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true)))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true)))))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true)))))))))))))))), true && (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true)))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true)))))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true))))))))))))))))))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) || false))) || false))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-249.376))) > injectionSwitch.y))))))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) || false))) || false))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) + 0), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.5))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
}
