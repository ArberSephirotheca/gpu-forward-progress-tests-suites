#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))) && true)))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                    {
                     GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x = _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id));
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
    }
   else
    {
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y = _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), max(_GLF_IDENTITY(0u ^ (subgroup_size), (true ? 0u ^ (subgroup_size) : _GLF_FUZZED(subgroup_id))), 0u ^ (subgroup_size)))), subgroup_size));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)));
 uint virtual_gid = workgroup_base + GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y + subgroup_local_id;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(~ (~ ((virtual_gid))), clamp(_GLF_IDENTITY(~ (~ ((virtual_gid))), (_GLF_IDENTITY(~ (~ ((virtual_gid))), (~ (~ ((virtual_gid)))) / 1u)) >> 0u), ~ (~ ((virtual_gid))), ~ (~ ((virtual_gid)))))) >> 0u), virtual_gid)))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))) | 0u, ((workgroup_base) | 0u) | ((workgroup_base) | 0u)), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_base) | 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ (~ ((workgroup_base) | 0u))))))))) - 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) | ((workgroup_base) | 0u)), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_base) | 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u)))), min(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u)))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u))))))) ^ (~ _GLF_IDENTITY(((workgroup_base) | 0u), uint(_GLF_IDENTITY(uint(((workgroup_base) | 0u)), (uint(((workgroup_base) | 0u))) | (uint(((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) | 0u)))))))))))))) - 0u, ~ (~ ((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(((workgroup_base) | 0u) | ((workgroup_base) | 0u), (((workgroup_base) | 0u) | ((workgroup_base) | 0u)) - 0u)), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((workgroup_base) | 0u), ~ (~ (((workgroup_base) | 0u)))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ (~ ((workgroup_base) | 0u))))))))) - 0u))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) | ((workgroup_base) | 0u)), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_base) | 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ (~ ((workgroup_base) | 0u))))))))) - 0u), ~ (~ (uint((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) | ((workgroup_base) | 0u)), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base), max(_GLF_IDENTITY((workgroup_base), uint(uvec4((workgroup_base), (0u & 66764u), 1u, 0u))), (workgroup_base))) | 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | (_GLF_IDENTITY(uint(uint(2u)), 0u | (uint(uint(2u)))))))), uint(2u))))) ^ (~ ((workgroup_base) | 0u)))))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, _GLF_IDENTITY(((workgroup_base) | 0u) | ((workgroup_base) | 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((workgroup_base) | 0u) | ((workgroup_base) | 0u), (((workgroup_base) | 0u) | ((workgroup_base) | 0u)) << 0u) : _GLF_FUZZED(workgroup_base)))), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_base) | 0u), (_GLF_IDENTITY(0u, (0u) - 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) / 1u), (0u & (false ? 53994u : _GLF_IDENTITY(123397u, (123397u) | (123397u)))) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ (~ ((workgroup_base) | 0u))))))) >> 0u)))) - 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) | ((workgroup_base) | 0u)), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_base) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) | (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))), 0u))))) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ (~ _GLF_IDENTITY(((workgroup_base) | 0u), (_GLF_IDENTITY(((workgroup_base) | 0u), 1u * (((workgroup_base) | 0u)))) - 0u))))))))) - 0u, ~ (~ ((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) | ((workgroup_base) | 0u)), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_base) | 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ (~ ((workgroup_base) | 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) | ((workgroup_base) | 0u)), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_base) | 0u), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ (~ ((workgroup_base) | 0u)), (false ? _GLF_FUZZED(105558u) : (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ (~ ((workgroup_base) | 0u))))))) : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) | ((workgroup_base) | 0u)), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_base) | 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ (~ ((workgroup_base) | 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) | ((workgroup_base) | 0u)), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_base) | 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (_GLF_IDENTITY(false ? 53994u : 123397u, (false ? 53994u : 123397u) / 1u))) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ (~ ((workgroup_base) | 0u)))))), clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) | ((workgroup_base) | 0u)), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_base) | 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ (~ ((workgroup_base) | 0u)))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) | ((workgroup_base) | 0u)), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_base) | 0u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ (~ ((workgroup_base) | 0u)))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | 0u, max(_GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | 0u) | ((workgroup_base) | 0u)), (workgroup_base) | 0u)), ~ (_GLF_IDENTITY(~ ((workgroup_base) | 0u), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : _GLF_IDENTITY(123397u, (false ? _GLF_FUZZED(num_workgroup) : 123397u)))) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ _GLF_IDENTITY((~ ((workgroup_base) | 0u)), max((~ ((workgroup_base) | 0u)), (~ ((workgroup_base) | 0u)))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (0u & (false ? 53994u : 123397u)) | (_GLF_IDENTITY(uint(2u), uint(2u))))) ^ (~ ((workgroup_base) | 0u))) | 0u)))))))))))) - 0u)))))) + GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y + ((subgroup_local_id + 1) % GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y);
 for(int _injected_loop_counter = (int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   do
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((96438 & 0) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y)), abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y), _GLF_IDENTITY(dot(vec3(1.0, _GLF_ONE(1.0, injectionSwitch.y), length(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.1)))))), length(0.0)), vec3(0.0, 0.0, 1.0))) + (length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))), 0.0, 0.0)) + (injectionSwitch.y))))), float(_GLF_FUZZED((false ? 60.94 : -561.485))), bool(false)))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)), clamp(length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)), _GLF_IDENTITY(length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)), 0.0 + (length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)))), length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)))) + (injectionSwitch.y)), abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y))), float(_GLF_FUZZED((false ? 60.94 : -561.485))), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y)), abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y))), float(_GLF_FUZZED((false ? 60.94 : -561.485))), bool(false))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), (false ? _GLF_FUZZED(-2.0) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true)))), float(_GLF_FUZZED(6.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 0.0)) + (injectionSwitch.y)), abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), _GLF_IDENTITY(float(0.0), clamp(float(0.0), _GLF_IDENTITY(float(0.0), (float(0.0)) / 1.0), float(0.0))), bool(true))), 0.0, 0.0)) + (injectionSwitch.y))), float(_GLF_FUZZED((false ? 60.94 : -561.485))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y)), abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y))), float(_GLF_FUZZED((false ? 60.94 : -561.485))), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y))), float(_GLF_FUZZED((false ? 60.94 : -561.485))), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y))), float(_GLF_FUZZED((false ? 60.94 : -561.485))), bool(false))))))), mix(float(_GLF_FUZZED(80.83)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y)), abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y))), float(_GLF_FUZZED((false ? 60.94 : -561.485))), bool(false)))))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y)), abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))), 0.0, 0.0)) + (injectionSwitch.y))), float(_GLF_FUZZED((false ? 60.94 : -561.485))), bool(false)))))))))))), true, false)))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false))) && true))))
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                              {
                               for(int _injected_loop_counter = (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(0, ~ (~ (0))), 1)))); _injected_loop_counter ++)
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   do
                                    {
                                     atomicStore(buf[GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z], uint(1), 4, 64, 4);
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.9))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.9))) > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.9))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.9)))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(39.76) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-373.759)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.9))) > injectionSwitch.y)))) || false), true, false))))))
            {
            }
           else
            {
             do
              {
               for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), (_GLF_IDENTITY(int(4), (int(4)) ^ 0)) << 0)))); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((0), int(ivec2((0), 0))) : _GLF_FUZZED(_injected_loop_counter))) | _GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, (0) | 0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 0))))) ^ ((~ (_GLF_IDENTITY(0, (0) | 0)))))), _GLF_IDENTITY(0, (0) | 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))) >> (0 | 0))) | 0, clamp((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))) >> (0 | 0))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))) >> (0 | 0))) | 0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))), ((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))))) | ((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))))) >> (0 | 0))) | 0))), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (false ? _GLF_FUZZED(68844) : _GLF_IDENTITY(0, (0) | 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | 0) | 0)))) >> (0 | 0))) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, (0) | 0)))) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0)))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (0) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) >> 0) + (0))), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), (0))) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | 0)), 0 ^ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) | 0))))))), min(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) | 0)))), (false ? _GLF_FUZZED((abs(88133) & _injected_loop_counter)) : min(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((0), int(ivec2((0), 0))) : _GLF_FUZZED(_injected_loop_counter))) | _GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, (0) | 0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 0))))) ^ ((~ (_GLF_IDENTITY(0, (0) | 0)))))), _GLF_IDENTITY(0, (0) | 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))) >> (0 | 0))) | 0, clamp((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))) >> (0 | 0))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))) >> (0 | 0))) | 0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))), ((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))))) | ((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))))) >> (0 | 0))) | 0))), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (false ? _GLF_FUZZED(68844) : _GLF_IDENTITY(0, (0) | 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | 0) | 0)))) >> (0 | 0))) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, (0) | 0)))) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0)))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (0) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) >> 0) + (0))), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), (0))) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | 0)), 0 ^ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) | 0))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((0), int(ivec2((0), 0))) : _GLF_FUZZED(_injected_loop_counter))) | _GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, (0) | 0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 0))))) ^ ((~ (_GLF_IDENTITY(0, (0) | 0)))))), _GLF_IDENTITY(0, (0) | 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))) >> (0 | 0))) | 0, clamp((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))) >> (0 | 0))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))) >> (0 | 0))) | 0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))), ((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))))) | ((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))))) >> (0 | 0))) | 0))), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (false ? _GLF_FUZZED(68844) : _GLF_IDENTITY(0, (0) | 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | 0) | 0)))) >> (0 | 0))) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, (0) | 0)))) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0)))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (0) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) >> 0) + (0))), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), (0))) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | 0)), 0 ^ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) | 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY((0), int(ivec2((0), 0))) : _GLF_FUZZED(_injected_loop_counter))) | _GLF_IDENTITY(0, int(ivec3(0, 1, 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, (0) | 0))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec2(int(2), 0))))) ^ ((~ (_GLF_IDENTITY(0, (0) | 0)))))), _GLF_IDENTITY(0, (0) | 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))) >> (0 | 0))) | 0, clamp((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))) >> (0 | 0))) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))) >> (0 | 0))) | 0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))), ((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0))))) | ((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | 0)))))) >> (0 | 0))) | 0))), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (false ? _GLF_FUZZED(68844) : _GLF_IDENTITY(0, (0) | 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | 0) | 0)))) >> (0 | 0))) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, (0) | 0)))) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), 0 | (clamp(0, 0, 0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)) ^ (_GLF_IDENTITY(ivec4(0, 0, 1, 0), (ivec4(0, 0, 1, 0)) + ivec4(0, 0, _GLF_IDENTITY(0, min(0, 0)), 0)))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (0))))))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)) | 0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | 0)))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (0) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) >> 0) + (0))), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), (0))) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | 0)), 0 ^ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) | 0)))))))) ^ 0)))), min(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (0) | 0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))), 2, 2)), _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (_GLF_IDENTITY(2, (2) | (2))) / 1)))) >> 0)) >> 0)))), int(2))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -49181)), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -49181))), ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -49181)))) && true)); _GLF_IDENTITY(_injected_loop_counter --, ~ (_GLF_IDENTITY(~ (_injected_loop_counter --), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1)), (~ (_injected_loop_counter --)) - 0) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) / 1))))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, ((int(4)) << 0) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), clamp(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(_GLF_IDENTITY(0, (0) << 0))))))); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             if(subgroup_local_id + 1 < GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)
                              {
                               int i = 0;
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             else
                              {
                               do
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)))))))))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 ^ (_GLF_IDENTITY(1, (1) | 0)))) | (_GLF_IDENTITY(1, (1) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter --) >> 0, ((_injected_loop_counter --) >> 0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 ^ ((_injected_loop_counter --) >> 0))))
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                                              {
                                               do
                                                {
                                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
                                                  }
                                                }
                                               while(_GLF_WRAPPED_LOOP(false));
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         else
                          {
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
}
