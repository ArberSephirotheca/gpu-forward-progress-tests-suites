#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id;
 mat4x2 _f0;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 bvec3 _f1;
 vec3 _f2;
 uvec4 _f3;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 mat3x4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id;
 uvec4 GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup;
 uvec4 GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec3 GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.xyz = GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))))) || false)), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, true))))))), true))) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  {
   for(int _injected_loop_counter = (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | 0)), int(3)), max(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9769.4763)), vec2(_GLF_FUZZED(95.52), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(7.5, -96.10), mix(vec2(_GLF_FUZZED(-496.163), _GLF_FUZZED(-3001.4732)), vec2((vec2(7.5, -96.10))[0], (vec2(7.5, -96.10))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) - vec2(0.0, 0.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9769.4763)), vec2(_GLF_FUZZED(95.52), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(vec2(7.5, -96.10))))) - vec2(0.0, 0.0))[0], ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9769.4763)), vec2(_GLF_FUZZED(95.52), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(vec2(7.5, -96.10))))) - vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(280.724), _GLF_FUZZED(vec3(94.29, -57.74, -9394.8367).g)), bvec2(false, false)))).x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = (0 | int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0))).x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(30.18))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), (true ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) : _GLF_FUZZED(_injected_loop_counter))) != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
    }
  }
 _GLF_struct_0 _GLF_struct_replacement_0;
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.xy = GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
  return;
 _GLF_struct_1 _GLF_struct_replacement_1;
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
          }
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6494) : 1))))), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), _GLF_IDENTITY(false, true && (false)))))))
                continue;
               if(_GLF_DEAD(false))
                return;
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, true))), false, false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true), false, false))) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]), min(clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]), clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(1591.1637), _GLF_FUZZED(-2.5)), bvec2(false, false))).x > injectionSwitch.y), true, false, false))), (_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(1591.1637), _GLF_FUZZED(-2.5)), bvec2(false, false))).x > injectionSwitch.y), true, false, false))), (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(1591.1637, float(mat3(1591.1637, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_FUZZED(-2.5)), bvec2(false, false))).x > injectionSwitch.y), true, false, false)))) || false)) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]), min(clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]), clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(1591.1637), _GLF_FUZZED(-2.5)), bvec2(false, false))).x > injectionSwitch.y), true, false, false))), (_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(1591.1637), _GLF_FUZZED(-2.5)), bvec2(false, false))).x > injectionSwitch.y), true, false, false))), (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(1591.1637, float(mat3(1591.1637, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_FUZZED(-2.5)), bvec2(false, false))).x > injectionSwitch.y), true, false, false)))) || false)) && true))), true && (! ((_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]), min(clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]), clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(1591.1637), _GLF_FUZZED(-2.5)), bvec2(false, false))).x > injectionSwitch.y), true, false, false))), (_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(1591.1637), _GLF_FUZZED(-2.5)), bvec2(false, false))).x > injectionSwitch.y), true, false, false))), (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(1591.1637, float(mat3(1591.1637, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_FUZZED(-2.5)), bvec2(false, false))).x > injectionSwitch.y), true, false, false)))) || false)) && true))))))))) && true)))));
          }
        }
      }
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.y = subgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.w = GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.y;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 _GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z = GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.w;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))
      {
       return;
      }
     else
      {
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.xy.x = subgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z = subgroup_local_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) ^ 0)), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, true, true))))))))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             do
              {
               _GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w = GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-8.0, -6.2).xxyy.a), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-534.235)), bvec2(true, false))).x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))));
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
          break;
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))));
 do
  {
   do
    {
     do
      {
       GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.x = _GLF_IDENTITY(num_workgroup, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup, 1u * (num_workgroup)), 1u, 1u), min(uvec3(num_workgroup, 1u, 1u), uvec3(num_workgroup, 1u, 1u))), (_GLF_IDENTITY(uvec3(num_workgroup, 1u, 1u), min(uvec3(num_workgroup, 1u, 1u), uvec3(num_workgroup, 1u, 1u)))) - uvec3(0u, 0u, 0u))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.0) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(-2.0) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.0) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_FUZZED(-93.44)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.0) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.0) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.0) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-407.713)), bool(false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3((false) || false, false, false)), false || (bool(bvec3((false) || false, false, false))))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       else
        {
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
   _GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w = GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.x, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w = GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.x), (~ (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w = GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.x)) / 1u)));
  }
 _GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.y = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w), uint(uint((GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w)))), max(~ _GLF_IDENTITY((GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w), uint(uint((GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w)))), _GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w), uint(uint((GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w)))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w), uint(uint((GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w)))), (true ? ~ _GLF_IDENTITY((GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w), uint(uint((GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w)))) : _GLF_FUZZED(subgroup_id))), ~ _GLF_IDENTITY((GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w), uint(uint((_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup, (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup) | (_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup, uvec4(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup[0], GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup[1], GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup[2], GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup[3])))).w)))), ~ _GLF_IDENTITY((GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w), uint(uint((GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup, clamp(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup, ~ (~ (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup))), _GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup, min(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup, GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup)), GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup)).w, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w, (true ? GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w : _GLF_FUZZED(subgroup_size))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w, ~ (~ (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup, (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup) | uvec4(0u, 0u, 0u, 0u)).w, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup, max(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup, (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup) | uvec4(0u, 0u, 0u, 0u)), GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup)).w))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w, 0u ^ (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w)), (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w) | (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup, ~ (~ (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup))).w, 0u ^ (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w)), (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w) | (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w)))))), 0u | ((_GLF_IDENTITY(~ (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(~ (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w), uint(uvec2(~ (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w), 1u))) : _GLF_FUZZED(subgroup_size))))))), 0u | (_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w, ~ _GLF_IDENTITY((~ (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((~ (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w)), (true ? (~ (GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w)) : _GLF_FUZZED(packUnorm2x16(vec2(2.5, -11.56))))))))))) - 0u)));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), min(_GLF_IDENTITY(min(gl_WorkGroupSize, gl_WorkGroupSize), uvec3(uvec3(min(gl_WorkGroupSize, gl_WorkGroupSize)))), min(gl_WorkGroupSize, gl_WorkGroupSize)))), max(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u)))).x;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.xyz.z = workgroup_size;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) >> uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(uvec4((gl_WorkGroupID) >> uvec3(0u, 0u, 0u), 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4((gl_WorkGroupID) >> uvec3(0u, 0u, 0u), 1u))))))) - uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(75545u) : _GLF_IDENTITY(0u, (0u) << 0u))), 0u))) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.xy.y = workgroup_id;
 uint workgroup_base = GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.xyz.z * GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.xy.y;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))))))))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 else
  {
  }
 do
  {
   for(int _injected_loop_counter = (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), max(abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), max(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, cos(0.0)), (false ? _GLF_FUZZED(mat4(-5.7, 9253.3598, 4.2, -831.011, -7399.0582, 9.5, -6.1, 89.60, 5.2, -0.9, 7711.3099, 4552.9950, 256.377, -1.8, -5851.0983, 545.999)) : mat4(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, cos(0.0))))))))))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.xyz.y = workgroup_base;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), true, true)), (bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), true, true))) || false)), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))))))
  return;
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec3((true), true, true))) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), true, true, true))))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           do
            {
             _GLF_struct_replacement_0.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.xyz.y;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))));
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_0.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, (false ? _GLF_FUZZED(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.xyz.z) : _GLF_IDENTITY(_GLF_struct_replacement_0.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, min(_GLF_struct_replacement_0.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, _GLF_struct_replacement_0.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y)))) + _GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.xy.x + _GLF_IDENTITY(_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, (_GLF_IDENTITY(_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w, (_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w) / 1u)) ^ 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   _GLF_struct_replacement_0.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.w)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_0.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(_GLF_struct_replacement_0.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, max(_GLF_struct_replacement_0.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, _GLF_struct_replacement_0.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y)))) + _GLF_IDENTITY(_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)), min(~ (~ (_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)), _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)), ~ (~ (~ (~ (_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z)))))))) * _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id, _GLF_IDENTITY((GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id) | (GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id), min((GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id) | (GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id), (GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id) | (GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id)))).xy.x + (_GLF_IDENTITY((_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1) % GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.xy.x, min((_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1) % _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.xy.x, (true ? _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.xy.x, 1u * (GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.xy.x)) : _GLF_FUZZED((false ? subgroup_size : subgroup_id)))), _GLF_IDENTITY((_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1) % GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.xy.x, 1u * ((_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1) % GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.xy.x)))));
 _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.z = next_virtual_gid, (GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.z = next_virtual_gid) / (_GLF_IDENTITY(1u & ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (1u & ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) * 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.xyz.x = _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id, uvec4(GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id[0], GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id[_GLF_IDENTITY(1, 0 ^ (1))], GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id[2], GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id[3])).z;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (~ (1)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1))), ! (! (_injected_loop_counter > _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-25584)))) | (1))) | 0)), (ivec4(0, 0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-25584)))) | (1))) | 0))) >> ivec4(0, 0, 0, 0)))))))); _injected_loop_counter --)
  {
   _GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x = GLF_merged2_0_3_76_3_1_13GLF_merged3_0_1_16_1_1_14_2_1_14next_virtual_gidworkgroup_baseworkgroup_sizenum_workgroup.xyz.x;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[_GLF_struct_replacement_0.GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), clamp(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), uint(1), uint(1))), (true ? uint(1) : _GLF_FUZZED(workgroup_id))), 4, 64, 4);
    }
   else
    {
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(-711.677, -3.0, -9.9).b)), float(injectionSwitch.y), bool(true))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true, false))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, false)))))) || false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          break;
         continue;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1 < GLF_merged3_0_2_50_2_1_16_3_1_11GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_id.xy.x)
          {
           int i = _GLF_IDENTITY(0, _GLF_IDENTITY(0, max(0, 0)) + (0));
           atomicStore(buf[_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x], _GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(atomicAnd(workgroup_id, 47784u)))), 4, 64, 4);
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           atomicStore(buf[_GLF_struct_replacement_1.GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x], uint(2), _GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), (_GLF_IDENTITY(int(int(4)), min(int(int(4)), int(int(4))))) + 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), _GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) || false), false, _GLF_IDENTITY(false, (false) || false))))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false)))) / _GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), max(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(59.25), clamp(_GLF_IDENTITY(_GLF_FUZZED(59.25), (_GLF_FUZZED(59.25)) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(59.25), (_GLF_FUZZED(59.25)) / abs(1.0)), _GLF_FUZZED(59.25)))), bool(false)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(59.25, (59.25) / 1.0))), bool(false)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))))), max((4) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.1) : 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-8.4) : _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), log(determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, abs(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), 0.0), vec3(0.0, 0.0, cos(0.0))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, cos(0.0)))), 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(59.25)), bool(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sin(-88.22)) : 0.0))), float(_GLF_FUZZED(59.25)), bool(false)), min(mix(float(0.0), float(_GLF_FUZZED(59.25)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))), _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false)), _GLF_IDENTITY(float(vec2(mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false)), 0.0)), (float(vec2(mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false)), 0.0))) / cos(0.0))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false))), max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false))))))) * _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0)))))) - 0.0) / 1.0), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((4) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false)))) / 1.0), injectionSwitch.x)), (_GLF_IDENTITY((4) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false)))) / 1.0), injectionSwitch.x)), min((4) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false)))) / 1.0), injectionSwitch.x)), (4) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false)))) / 1.0), injectionSwitch.x))))) | ((4) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false)))) / 1.0), injectionSwitch.x)))), ((4) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.25)), bool(false)))) / 1.0), injectionSwitch.x))) + int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, clamp(4, 4, 4)), 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) - 0), 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-55794))), 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(0, 0, 0) | (ivec3(4, 1, 1)), (ivec3(0, 0, 0) | (ivec3(4, 1, 1))) << ivec3(0, 0, 0)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) << 0), 0))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85096) : _GLF_IDENTITY(0, max(0, 0))))) | (0)))))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)))) << ivec3(0, 0, 0))) << ivec3(0, 0, 0)) << ivec3(0, 0, 0)), _GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))))))), (4) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1, _GLF_IDENTITY(((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), 4)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) | (ivec3(0, 0, 0))) | (ivec3(4, 1, 1))), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, clamp(4, 4, 4)), 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, (4) - 0))), 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))))), (_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> (ivec3(0, 0, 0) | ivec3(0, 0, 0))) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)))) << ivec3(0, 0, 0))) << ivec3(0, 0, 0)) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)), _GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))))))), (4) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1) - 0, min(((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), 4)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) | (ivec3(0, 0, 0))) | (ivec3(4, 1, 1))), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, clamp(4, 4, 4)), 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, (4) - 0))), 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))))), (_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> (ivec3(0, 0, 0) | ivec3(0, 0, 0))) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)))) << ivec3(0, 0, 0))) << ivec3(0, 0, 0)) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)), _GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))))))), (4) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1) - 0, _GLF_IDENTITY(((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), 4)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) | (ivec3(0, 0, 0))) | (ivec3(4, 1, 1))), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, clamp(4, 4, 4)), 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, (4) - 0))), 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))))), (_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> (ivec3(0, 0, 0) | ivec3(0, 0, 0))) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)))) << ivec3(0, 0, 0))) << ivec3(0, 0, 0)) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)), _GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))))))), (4) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1) - 0, clamp(((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), 4)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) | (ivec3(0, 0, 0))) | (ivec3(4, 1, 1))), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, clamp(4, 4, 4)), 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, (4) - 0))), 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))))), (_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> (ivec3(0, 0, 0) | ivec3(0, 0, 0))) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)))) << ivec3(0, 0, 0))) << ivec3(0, 0, 0)) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)), _GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))))))), (4) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1) - 0, ((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), 4)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) | (ivec3(0, 0, 0))) | (ivec3(4, 1, 1))), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, clamp(4, 4, 4)), 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, (4) - 0))), 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))))), (_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> (ivec3(0, 0, 0) | ivec3(0, 0, 0))) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)))) << ivec3(0, 0, 0))) << ivec3(0, 0, 0)) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)), _GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))))))), (4) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1) - 0, ((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), 4)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) | (ivec3(0, 0, 0))) | (ivec3(4, 1, 1))), clamp(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, clamp(4, 4, 4)), 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, (4) - 0))), 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))))), (_GLF_IDENTITY(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) >> (ivec3(0, 0, 0) | ivec3(0, 0, 0))) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (1) << 0)))), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), 0) | (ivec3(4, 1, 1)))) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)))) << ivec3(0, 0, 0))) << ivec3(0, 0, 0)) << ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 0)), _GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))))))), (4) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1) - 0)))))))))), 64, 4);
          }
        }
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
