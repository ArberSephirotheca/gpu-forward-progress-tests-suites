#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * workgroup_id, max(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)), workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), workgroup_size)), workgroup_size)))))), workgroup_size, workgroup_size)) * workgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * workgroup_id, 0u, 1u, 0u), (uvec4(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * workgroup_id, 0u, _GLF_IDENTITY(1u, (1u) / 1u), 0u)) | (uvec4(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * workgroup_id, 0u, 1u, 0u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), workgroup_size)), workgroup_size)))))), workgroup_size, workgroup_size)) * workgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * workgroup_id, 0u, 1u, 0u), (uvec4(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * workgroup_id, 0u, _GLF_IDENTITY(1u, (1u) / 1u), 0u)) | (uvec4(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * workgroup_id, 0u, 1u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), workgroup_size)), workgroup_size)))))), workgroup_size, workgroup_size)) * workgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * workgroup_id, 0u, 1u, 0u), (uvec4(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * workgroup_id, 0u, _GLF_IDENTITY(1u, (1u) / 1u), 0u)) | (uvec4(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size)) * workgroup_id, 0u, 1u, 0u)))))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))))), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + sqrt(0.0)))), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))))), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + sqrt(0.0)))), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))), true, false, false)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))))), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + sqrt(0.0)))), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))), true, false, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(164987u) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))))) ^ 0u)), (_GLF_IDENTITY(true ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(164987u) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) ^ 0u)) : _GLF_FUZZED(subgroup_base), (true ? true ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(164987u) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) ^ 0u)) : _GLF_FUZZED(subgroup_base) : _GLF_FUZZED(subgroup_local_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))))
    barrier();
   switch(_GLF_IDENTITY(_GLF_SWITCH(0), (_GLF_SWITCH(0)) >> 0))
    {
     case 81:
     if(_GLF_DEAD(false))
      barrier();
     if(true)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       (uvec4(132780u, _GLF_IDENTITY(99540u, clamp(99540u, 99540u, _GLF_IDENTITY(99540u, (99540u) / 1u))), _GLF_IDENTITY(154165u, min(154165u, 154165u)), 12839u) / uvec4(35833u, 2434u, 132411u, 116159u));
       93783;
       while(false)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         vec3 _GLF_SWITCH_0_0v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-12.88) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(1.6)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), mix(vec2(_GLF_FUZZED(2.2), _GLF_FUZZED(3.6)), vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-12.88) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(1.6)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))[0], ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-12.88) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(1.6)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))[1]), bvec2(true, true))) * mat2(1.0)))).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         {
          bvec4(true, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(! (true && (true)), ! (! (! (_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(! (true && (true)), ! (! (! (_GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))));
          bvec3 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          -65.22;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          unpackUnorm4x8((_GLF_IDENTITY(num_workgroup, uint(_GLF_IDENTITY(uvec3(num_workgroup, (188260u & (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), 1u), ~ (~ (uvec3(num_workgroup, (188260u & (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), 1u)))))) | workgroup_base));
          mat3(75.16, -4.4, -8.3, -44.75, 2.3, 143.036, 78.34, -66.10, -3.2);
          mat2 _GLF_SWITCH_0_3v[86], _GLF_SWITCH_0_4v;
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          vec2(2411.1161, -27.87);
          (-6.5 - mat4x2(mat2x3(-961.277, _GLF_IDENTITY(_GLF_IDENTITY(-2.8, mix(float(_GLF_FUZZED(94.82)), float(-2.8), bool(true))), float(mat3x2(_GLF_IDENTITY(-2.8, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(max(-7.4, -24.53)) : -2.8)), (-2.8) / 1.0), -2.8)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)))), determinant(mat2(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1075.8716)), float(0.0), bool(true)), (mix(float(_GLF_FUZZED(1075.8716)), float(0.0), bool(true))) / 1.0))) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0)))) * abs(1.0))), 0.0, 1.0, 1.0, 0.0, 1.0))), 0.0, 0.0, 0.0)), 0.0, abs(tan(0.0))))), _GLF_IDENTITY(3.0, float(mat3(_GLF_IDENTITY(3.0, clamp(3.0, 3.0, _GLF_IDENTITY(3.0, max(_GLF_IDENTITY(3.0, _GLF_IDENTITY((3.0) / 1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY((3.0) / 1.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((3.0) / 1.0, ((3.0) / 1.0) + 0.0), 1.0, 1.0, 0.0), (mat2(_GLF_IDENTITY((3.0) / 1.0, ((3.0) / 1.0) + 0.0), 1.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(length(0.0), 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(length(0.0), 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0), mat3(mat3(mat3(_GLF_IDENTITY((3.0) / 1.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((3.0) / 1.0, ((3.0) / 1.0) + 0.0), 1.0, 1.0, 0.0), (mat2(_GLF_IDENTITY((3.0) / 1.0, ((3.0) / 1.0) + 0.0), 1.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(length(0.0), 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(length(0.0), 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0))))))), 3.0)))), 1.0, 1.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0))), 8.2, 233.421, -4.3)));
          _GLF_IDENTITY(ivec4(55732, -47631, -6543, 53148), min(ivec4(55732, -47631, -6543, 53148), _GLF_IDENTITY(ivec4(55732, -47631, -6543, 53148), (ivec4(55732, -47631, -6543, 53148)) | _GLF_IDENTITY(ivec4(0, 0, 0, 0), max(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0))))));
         }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         uvec3 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[69];
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         while(false)
          {
           mat4x3 _GLF_SWITCH_0_8v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), false || (true && (false))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           mat4x2(-9.3, 36.08, 56.92, _GLF_IDENTITY(-3.4, max(_GLF_IDENTITY(-3.4, _GLF_IDENTITY((-3.4) - 0.0, (true ? (-3.4) - 0.0 : _GLF_FUZZED(-0.2)))), -3.4)), -6.3, -8.4, -8.2, 344.153);
           if(_GLF_DEAD(false))
            barrier();
          }
         _GLF_SWITCH_0_0v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(3.7)))))).x, mix(float(_GLF_FUZZED((+ -69.49))), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]) * 1.0, (_GLF_IDENTITY((injectionSwitch[1]) * 1.0, ((injectionSwitch[1]) * 1.0) - 0.0)) - length(vec3(0.0, 0.0, 0.0)))))).x), bool(true))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         ;
         {
          injectionSwitch;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          vec3(-6564.5704, -0.1, -869.189).t;
          float _GLF_SWITCH_0_9v;
          if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! (_GLF_DEAD(false))))))) && true))
             {
              if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               barrier();
             }
            barrier();
           }
          mat2x3(645.497, 0.3, 5.9, -52.02, 8.7, -68.13);
          if(_GLF_DEAD(false))
           barrier();
          uvec2(154484u, _GLF_IDENTITY(118922u, (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_IDENTITY(118922u, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 118922u : _GLF_FUZZED(mix(num_workgroup, subgroup_size, false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 118922u : _GLF_FUZZED(mix(num_workgroup, subgroup_size, false))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED((workgroup_id * subgroup_size)))));
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
           barrier();
          bitCount(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u));
          if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, injectionSwitch.x)) > injectionSwitch.y))))
             barrier();
            barrier();
           }
          mat4x2((mat2x4(mat4(2.9, -9.9, 2704.3446, 629.428, 183.189, 5989.7374, -8.2, -8.1, -3673.1009, 8.4, -4807.8989, -69.70, 73.03, 9117.1491, -30.38, 986.870)) + -7.1));
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
           barrier();
         }
         if(_GLF_DEAD(false))
          barrier();
         while(true)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           bvec4 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v[21], _GLF_SWITCH_0_12v[18];
           _GLF_SWITCH_0_5v;
           float _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[19];
           if(_GLF_DEAD(false))
            barrier();
           ;
           (mat2(-3967.2503, _GLF_IDENTITY(-791.433, (_GLF_IDENTITY(-791.433, min(-791.433, -791.433))) / 1.0), 27.27, 4.6) + -4.1);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(false)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, false, false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9482.7009)), bool(false))), injectionSwitch.y)) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(mat2x3(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, sqrt(1.0), 1.0, sqrt(0.0))), (float(mat2x3(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, sqrt(1.0), 1.0, sqrt(0.0)))) * 1.0))))), injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY((bool(bvec2(true, true))) && true, false || ((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false)))), true))) && true))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           switch(_GLF_SWITCH(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-67.16) : _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(67.61)), bool(false)))), vec4(_GLF_IDENTITY(1.0, (1.0) - sqrt(tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0), _GLF_IDENTITY(transpose(transpose(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(1.0, (1.0) / cos(0.0))))), (false ? _GLF_FUZZED((9.8 - mat3(21.09, 69.15, -1632.1894, -1.0, 644.947, -8209.0993, 9.8, -1.7, 3.5))) : transpose(transpose(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))))), 0.0))), 0.0, 1.0, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(1.0, (1.0) / cos(0.0))))))))))))))
            {
             case 0:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 12:
             case 49:
             case 40:
             case 51:
             (mat2x3(8429.2522, 6.8, -7154.8830, 1737.2651, 1446.4403, 9969.2102));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              barrier();
             case 31:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             case 72:
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             case 73:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             case 3:
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false))) > injectionSwitch.y))))
              barrier();
             case 60:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1792.2907)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
              barrier();
             ;
             break;
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             default:
             if(_GLF_DEAD(false))
              barrier();
             1;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           ;
           ;
           bvec3 _GLF_SWITCH_0_15v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           mat3x2 _GLF_SWITCH_0_16v[70];
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))) || false))))
            barrier();
           mat3x4 _GLF_SWITCH_0_17v;
           if(_GLF_DEAD(false))
            barrier();
           bvec4(true, true, true, true).pps;
           (_GLF_SWITCH_0_17v ++);
           if(_GLF_DEAD(false))
            barrier();
           true;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           ;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       subgroup_size;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       lessThanEqual(uvec4(82491u), uvec4(67827u, _GLF_IDENTITY(99498u, (99498u) >> 0u), 48387u, _GLF_IDENTITY(147359u, clamp(147359u, 147359u, 147359u))));
       mat4x2(-34.25, -5152.6325, -297.278, 2.2, -8188.5169, 8.7, -4674.6486, 6032.8549);
       if(_GLF_DEAD(false))
        barrier();
       ;
       ivec2 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
       mat2x3(-9.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-8660.6524, _GLF_IDENTITY(float(vec3(-8660.6524, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0)), max(float(vec3(-8660.6524, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0)), float(vec3(-8660.6524, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0))))), 1.0 * (-8660.6524)), mix(float(_GLF_IDENTITY(-8660.6524, (true ? _GLF_IDENTITY(-8660.6524, (false ? _GLF_FUZZED(-6371.6847) : -8660.6524)) : _GLF_FUZZED(993.419)))), float(_GLF_FUZZED(_GLF_IDENTITY(-7.7, clamp(-7.7, -7.7, _GLF_IDENTITY(-7.7, float(mat4x2(-7.7, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 1.0))))))), bool(false))), 86.21, -6.2, _GLF_IDENTITY(0.3, (false ? _GLF_FUZZED(-5693.7370) : 0.3)), 4.2);
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       bvec4(true, true, true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))).xyw;
       (vec4(-8.9, -48.23, _GLF_IDENTITY(-6139.0299, min(-6139.0299, _GLF_IDENTITY(-6139.0299, float(vec3(-6139.0299, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0))))), -88.42) == (vec4(0.9, -1.1, 4.1, -116.505) * _GLF_IDENTITY((mat4(-8.7, 84.01, -5983.6706, -4.3, -47.91, 9.2, -1368.9221, 187.774, 0.4, -296.053, _GLF_IDENTITY(_GLF_IDENTITY(5117.2905, (_GLF_IDENTITY(5117.2905, (5117.2905) - 0.0)) + 0.0), (_GLF_IDENTITY(5117.2905, (_GLF_IDENTITY(5117.2905, (5117.2905) - 0.0)) + 0.0)) * sqrt(1.0)), 283.534, _GLF_IDENTITY(-8.4, clamp(_GLF_IDENTITY(-8.4, _GLF_IDENTITY((-8.4), min((-8.4), (-8.4))) - 0.0), -8.4, _GLF_IDENTITY(-8.4, _GLF_IDENTITY(mix(float(-8.4), float(_GLF_FUZZED(-3242.6826)), bool(false)), (mix(float(-8.4), float(_GLF_FUZZED(-3242.6826)), bool(false))) - 0.0)))), _GLF_IDENTITY(0.3, min(0.3, _GLF_IDENTITY(_GLF_IDENTITY(0.3, min(0.3, 0.3)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.3, min(0.3, 0.3)), (_GLF_IDENTITY(0.3, min(0.3, 0.3))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.3, min(0.3, 0.3)), (_GLF_IDENTITY(0.3, min(0.3, 0.3))) / 1.0))))), -588.744, _GLF_IDENTITY(-6.1, max(-6.1, -6.1)))), ((mat4(-8.7, 84.01, -5983.6706, -4.3, -47.91, 9.2, -1368.9221, 187.774, 0.4, -296.053, _GLF_IDENTITY(_GLF_IDENTITY(5117.2905, (_GLF_IDENTITY(5117.2905, (5117.2905) - 0.0)) + 0.0), (_GLF_IDENTITY(5117.2905, (_GLF_IDENTITY(5117.2905, (5117.2905) - 0.0)) + 0.0)) * sqrt(1.0)), 283.534, _GLF_IDENTITY(-8.4, clamp(_GLF_IDENTITY(-8.4, _GLF_IDENTITY((-8.4), min((-8.4), (-8.4))) - 0.0), -8.4, _GLF_IDENTITY(-8.4, _GLF_IDENTITY(mix(float(-8.4), float(_GLF_FUZZED(-3242.6826)), bool(false)), (mix(float(-8.4), float(_GLF_FUZZED(-3242.6826)), bool(false))) - 0.0)))), _GLF_IDENTITY(0.3, min(0.3, _GLF_IDENTITY(_GLF_IDENTITY(0.3, min(0.3, 0.3)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.3, min(0.3, 0.3)), (_GLF_IDENTITY(0.3, min(0.3, 0.3))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.3, min(0.3, 0.3)), (_GLF_IDENTITY(0.3, min(0.3, 0.3))) / 1.0))))), -588.744, _GLF_IDENTITY(-6.1, max(-6.1, -6.1))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))))))
        barrier();
       {
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec2(true, true))))))
           barrier();
          barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        switch(_GLF_SWITCH(0))
         {
          case 76:
          mat3x2(-867.093, 3.0, _GLF_IDENTITY(-16.83, (-16.83) * 1.0), 3.2, -4.5, -24.14);
          case 0:
          mat2x3 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v[29];
          case 64:
          if(_GLF_DEAD(false))
           barrier();
          (mat4(_GLF_IDENTITY(3.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(3.0, float(mat2x4(_GLF_IDENTITY(3.0, max(3.0, 3.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(0.7, 1475.4910, -3.9, 4.6, 97.42, -67.36)) : mat3x2(_GLF_IDENTITY(3.0, float(mat2x4(_GLF_IDENTITY(3.0, _GLF_IDENTITY(max(3.0, 3.0), min(max(3.0, 3.0), max(3.0, 3.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0))), 1.0))), sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(0.0)))), 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0))))), 1.0)))), (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(3.0, float(mat2x4(_GLF_IDENTITY(3.0, _GLF_IDENTITY(max(3.0, 3.0), mix(float(max(3.0, 3.0)), float(_GLF_FUZZED(-109.951)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.8))), 1.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(0.7, 1475.4910, -3.9, 4.6, 97.42, -67.36)) : mat3x2(_GLF_IDENTITY(3.0, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(3.0, (3.0) / 1.0), max(3.0, _GLF_IDENTITY(3.0, max(_GLF_IDENTITY(3.0, (3.0) + 0.0), 3.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0))))) + 0.0)), _GLF_IDENTITY(5.2, min(5.2, _GLF_IDENTITY(5.2, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(5.2, (5.2) - 0.0)), ((_GLF_IDENTITY(5.2, (5.2) - 0.0))) * 1.0)))), -39.72, -785.864, -9356.2439, 4.5, 193.840, _GLF_IDENTITY(_GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, max(2.7, 2.7)), 2.7)), max(_GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, max(2.7, 2.7)), 2.7)), _GLF_IDENTITY(2.7, max(_GLF_IDENTITY(2.7, max(2.7, 2.7)), 2.7)))), -7666.9703, -5.6, _GLF_IDENTITY(-25.30, mix(float(-25.30), float(_GLF_FUZZED(-9235.2892)), bool(false))), -57.56, -9.3, 2253.6806, -7.3, 7.2) * (true ? mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1135.1396, mix(float(_GLF_FUZZED(float(true))), float(1135.1396), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1135.1396, mix(float(_GLF_FUZZED(float(true))), float(1135.1396), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(1135.1396, mix(float(_GLF_FUZZED(float(true))), float(1135.1396), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1135.1396, mix(float(_GLF_FUZZED(float(true))), float(1135.1396), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1135.1396, mix(float(_GLF_FUZZED(float(true))), float(1135.1396), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1135.1396, mix(float(_GLF_FUZZED(float(true))), float(1135.1396), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(1135.1396, mix(float(_GLF_FUZZED(float(true))), float(1135.1396), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))))))))))), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1135.1396, mix(float(_GLF_FUZZED(float(true))), float(1135.1396), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1135.1396, mix(float(_GLF_FUZZED(float(true))), float(1135.1396), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), ! (! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))))))))) / 1.0), _GLF_IDENTITY(1135.1396, mix(float(_GLF_FUZZED(float(true))), float(1135.1396), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))))))))), -2.4, _GLF_IDENTITY(_GLF_IDENTITY(-83.60, 1.0 * (-83.60)), _GLF_IDENTITY(float(mat2(-83.60, 1.0, 1.0, 1.0)), float(mat3(float(mat2(-83.60, 1.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, exp(0.0)))), 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(-7.5) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0)))))), 2.7, _GLF_IDENTITY(-9385.9456, _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(-9385.9456, _GLF_IDENTITY(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)))))), float(_GLF_IDENTITY(mat2x3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(-9385.9456, _GLF_IDENTITY(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 1.0), mat2x3(mat4(mat2x3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(-9385.9456, _GLF_IDENTITY(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED(5790.3227) : _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(-9385.9456, _GLF_IDENTITY(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)))))), float(_GLF_IDENTITY(mat2x3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(-9385.9456, _GLF_IDENTITY(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 1.0), mat2x3(mat4(mat2x3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(-9385.9456, _GLF_IDENTITY(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 1.0)))))), float(vec2(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(-9385.9456, _GLF_IDENTITY(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)))))), float(_GLF_IDENTITY(mat2x3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(-9385.9456, _GLF_IDENTITY(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 1.0), mat2x3(mat4(mat2x3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(-9385.9456, _GLF_IDENTITY(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(-9385.9456, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 1.0, 1.0)))))), 1.0)))))), 9942.5728, 58.10, -67.13, _GLF_IDENTITY(32.24, _GLF_IDENTITY((_GLF_IDENTITY(32.24, (32.24) * 1.0)) - 0.0, float(vec4(_GLF_IDENTITY((_GLF_IDENTITY(32.24, (32.24) * 1.0)) - 0.0, mix(float((_GLF_IDENTITY(32.24, (32.24) * 1.0)) - 0.0), float(_GLF_FUZZED(-970.258)), bool(false))), 1.0, 0.0, 1.0)))), 9.7, _GLF_IDENTITY(-6.0, min(-6.0, -6.0)), -780.874) : mat3x4(_GLF_IDENTITY(-2.1, 1.0 * (_GLF_IDENTITY(-2.1, (false ? _GLF_IDENTITY(_GLF_FUZZED(6.4), (_GLF_IDENTITY(_GLF_FUZZED(6.4), (_GLF_IDENTITY(_GLF_FUZZED(6.4), (false ? _GLF_FUZZED(-40.87) : _GLF_FUZZED(6.4)))) - length(vec3(0.0, 0.0, 0.0)))) - 0.0) : -2.1)))), 3.9, 9.2, -6.0, 4.8, 3033.5016, _GLF_IDENTITY(8.6, max(8.6, 8.6)), 538.447, -4727.9225, 586.253, 9.0, 85.33)));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), false, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), false, false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), false, false)))))))))))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false))))))))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          case 10:
          if(_GLF_DEAD(false))
           barrier();
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           float _GLF_SWITCH_0_22v[5];
           true;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(54.10)), vec2(_GLF_FUZZED(26.11), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 0.0)), (vec2(vec4(injectionSwitch, 1.0, 0.0))) - vec2(0.0, 0.0))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).x, (_GLF_IDENTITY(false ? _GLF_FUZZED(3.1) : injectionSwitch.x, max(false ? _GLF_FUZZED(3.1) : injectionSwitch.x, _GLF_IDENTITY(false ? _GLF_FUZZED(3.1) : injectionSwitch.x, max(_GLF_IDENTITY(false ? _GLF_FUZZED(3.1) : injectionSwitch.x, float(_GLF_IDENTITY(mat3(false ? _GLF_FUZZED(3.1) : injectionSwitch.x, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0), (mat3(false ? _GLF_FUZZED(3.1) : injectionSwitch.x, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0)) * mat3(1.0)))), false ? _GLF_FUZZED(3.1) : injectionSwitch.x)))))), injectionSwitch.x)) > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            barrier();
           mat3x4 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v[10];
           -9.9;
           (mat4x3(7.7, -6909.2519, 457.423, -2.3, -4598.3265, -672.732, _GLF_IDENTITY(-4949.5207, min(-4949.5207, -4949.5207)), 0.2, _GLF_IDENTITY(-210.636, float(mat3x2(_GLF_IDENTITY(-210.636, min(-210.636, -210.636)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0))), 0.0, 1.0))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (false ? _GLF_FUZZED(-96.53) : 0.0)), 1.0))), 20.42, _GLF_IDENTITY(_GLF_IDENTITY(333.760, max(333.760, 333.760)), float(mat2(_GLF_IDENTITY(333.760, min(333.760, 333.760)), abs(1.0), 1.0, 1.0))), _GLF_IDENTITY(-99.76, float(_GLF_IDENTITY(mat4x3(-99.76, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.6)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(-1.1)) : 1.0))), bool(true))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-361.034)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, exp(0.0), length(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))), (false ? _GLF_FUZZED(mat4x3(32.86, 84.86, -8643.2759, 8492.0926, -1.9, 488.386, -9992.6341, 9427.1623, 295.111, 8.6, -5.4, 28.02)) : mat4x3(-99.76, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y), 1.0, exp(0.0), length(vec3(0.0, 0.0, 0.0)))))))) - -936.890);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
            barrier();
          }
          for(mat2x4 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v; false; bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), bool(bvec4(bool(bvec3(true, false, true)), false, false, true))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), bool(bvec4(bool(bvec3(true, false, true)), false, false, true))))), bool(bool(true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false)))))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.1) : injectionSwitch.y)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-7.1), max(_GLF_IDENTITY(_GLF_FUZZED(-7.1), (false ? _GLF_FUZZED(_GLF_IDENTITY(-2340.3160, float(_GLF_IDENTITY(mat2x3(-2340.3160, 0.0, 0.0, 0.0, 0.0, 1.0), (mat2x3(-2340.3160, 0.0, 0.0, 0.0, 0.0, 1.0)) * mat2(1.0))))) : _GLF_FUZZED(-7.1))), _GLF_FUZZED(-7.1))) : injectionSwitch.y))) || false)))), false, true))
           {
            ;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            mat4x3(-89.53, _GLF_IDENTITY(-7.8, mix(float(-7.8), float(_GLF_FUZZED(55.36)), bool(false))), -8284.0359, -648.343, 68.46, 4944.6896, 1.2, -7.2, -9884.1759, _GLF_IDENTITY(_GLF_IDENTITY(-999.184, (-999.184) + 0.0), (true ? _GLF_IDENTITY(-999.184, (-999.184) + 0.0) : _GLF_FUZZED(-762.883))), -80.05, -48.49);
            _GLF_SWITCH_0_20v;
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          (-73.26 - mat3x2(-93.16, -0.6, _GLF_IDENTITY(_GLF_IDENTITY(-0.4, float(mat4x2(-0.4, 1.0, 1.0, 1.0, 0.0, exp(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), max(_GLF_IDENTITY(-0.4, float(mat4x2(-0.4, 1.0, 1.0, 1.0, 0.0, exp(0.0), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (true ? normalize(vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED((vec3(4102.4655, -89.63, 14.07) / -7.8)))))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(-0.4, float(mat4x2(-0.4, 1.0, 1.0, 1.0, 0.0, exp(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(-0.4, float(mat4x2(-0.4, 1.0, 1.0, 1.0, 0.0, exp(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))))))), 3.0, 3140.2815, _GLF_IDENTITY(42.12, max(42.12, _GLF_IDENTITY(42.12, (false ? _GLF_FUZZED(42.72) : 42.12))))));
          case 28:
          case 83:
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          mat4x2 _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
          if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          case 74:
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, sqrt(1.0), determinant(mat4(sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.4) : injectionSwitch.x)), 1.0))) > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
             barrier();
            barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          ;
          break;
          case 9:
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)))
           barrier();
          float _GLF_SWITCH_1_0v[74], _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          default:
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, abs(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(17.67)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 0.0, 0.0, abs(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 0.0, 0.0, abs(0.0))), float(mat2(dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 0.0, 0.0, abs(0.0))), 0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), 1.0), vec4(1.0, 0.0, 0.0, abs(0.0))), float(mat2(dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 0.0, 0.0, abs(0.0))), 0.0, 0.0, 0.0)))) - 0.0)), 0.0, 0.0, cos(0.0), 0.0))), 1.0, abs(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))), 1.0, abs(0.0)), transpose(transpose(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0))))))))), clamp(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))).x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0))))))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(1.0), 0.0)))) * abs(vec2(1.0, 1.0))).y), 1.0, abs(0.0)), transpose(transpose(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-3.0)), bool(false)), min(_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-3.0)), bool(false)), abs(0.0) + (_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-3.0)), bool(false)), (mix(float(0.0), float(_GLF_FUZZED(-3.0)), bool(false))) / 1.0))), mix(float(0.0), float(_GLF_FUZZED(-3.0)), bool(false)))))))))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))), 1.0, abs(0.0)), transpose(transpose(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0))))))))), (true ? float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0))))))))) : _GLF_FUZZED(_GLF_SWITCH_1_1v)))))) > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, abs(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(17.67)))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 0.0, 0.0, abs(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 0.0, 0.0, abs(0.0))), float(mat2(dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 0.0, 0.0, abs(0.0))), 0.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), 1.0), vec4(1.0, 0.0, 0.0, abs(0.0))), float(mat2(dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(1.0, 0.0, 0.0, abs(0.0))), 0.0, 0.0, 0.0)))) - 0.0)), 0.0, 0.0, cos(0.0), 0.0))), 1.0, abs(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))), 1.0, abs(0.0)), transpose(transpose(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0))))))))), clamp(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))).x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0))))))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(1.0), 0.0)))) * abs(vec2(1.0, 1.0))).y), 1.0, abs(0.0)), transpose(transpose(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-3.0)), bool(false)), min(_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-3.0)), bool(false)), abs(0.0) + (_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-3.0)), bool(false)), (mix(float(0.0), float(_GLF_FUZZED(-3.0)), bool(false))) / 1.0))), mix(float(0.0), float(_GLF_FUZZED(-3.0)), bool(false)))))))))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))), 1.0, abs(0.0)), transpose(transpose(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0))))))))), (true ? float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0)), transpose(transpose(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0))))))))) : _GLF_FUZZED(_GLF_SWITCH_1_1v)))))) > injectionSwitch.y)))), true), false))))))))))
           barrier();
          1;
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
       }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))))
        barrier();
       if(false)
        {
         ivec2 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         uvec3(7853u, 126719u, 11037u).bbg;
         mat2(-9.5, -8.5, _GLF_IDENTITY(_GLF_IDENTITY(-731.293, (false ? _GLF_FUZZED(4.9) : _GLF_IDENTITY(-731.293, _GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), max(_GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-8.2)), float(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0))))), bool(true))), _GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-7406.5115)), float(_GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), (true ? min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(62.60)))), bool(true)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(-731.293, (false ? _GLF_FUZZED(4.9) : _GLF_IDENTITY(-731.293, _GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), max(_GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-8.2)), float(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0))))), bool(true))), _GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-7406.5115)), float(_GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), (true ? min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(62.60)))), bool(true)))))))), min(_GLF_IDENTITY(-731.293, (false ? _GLF_FUZZED(4.9) : _GLF_IDENTITY(-731.293, _GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), max(_GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-8.2)), float(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0))))), bool(true))), _GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-7406.5115)), float(_GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), (true ? min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(62.60)))), bool(true)))))))), _GLF_IDENTITY(-731.293, (false ? _GLF_FUZZED(4.9) : _GLF_IDENTITY(-731.293, _GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), max(_GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-8.2)), float(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0))))), bool(true))), _GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-7406.5115)), float(_GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), (true ? min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(62.60)))), bool(true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(-731.293, (false ? _GLF_FUZZED(4.9) : _GLF_IDENTITY(-731.293, _GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), max(_GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-8.2)), float(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0))))), bool(true))), _GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-7406.5115)), float(_GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), (true ? min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(62.60)))), bool(true)))))))), 1.0 * (_GLF_IDENTITY(-731.293, (false ? _GLF_FUZZED(4.9) : _GLF_IDENTITY(-731.293, _GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), max(_GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-8.2)), float(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0))))), bool(true))), _GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-7406.5115)), float(_GLF_IDENTITY(min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))), (true ? min(-731.293, _GLF_IDENTITY(-731.293, float(vec4(-731.293, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(62.60)))), bool(true)))))))))))), 0.1);
         mat2 _GLF_SWITCH_0_33v;
        }
      }
     case 48:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     bitCount(-86014);
     if(_GLF_DEAD(false))
      barrier();
     case 0:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 43:
     case 65:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, (false) || false), false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, abs(0.0))), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, abs(0.0)))))))))
      barrier();
     case 42:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 35:
     atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))), (_GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)))), ((~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) / 1u)) | 0u))) << 0u)], uint(2), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
     case 22:
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     case 6:
     case 84:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 97:
     if(_GLF_DEAD(false))
      barrier();
     (mat4x3(mat2(7031.7562, -110.539, -138.384, -8.7)) + 53.25);
     case 59:
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) || false))) && true)))))
        barrier();
       barrier();
      }
     next_virtual_gid;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))) || false))))
      barrier();
     default:
     if(_GLF_DEAD(false))
      barrier();
     _GLF_IDENTITY(1, 0 + (1));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   switch(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))), (_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1))))) | (_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))), 0 ^ (_GLF_IDENTITY(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))), (_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1))))) | (_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))), (_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1))))) | (_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))), (_GLF_IDENTITY(_GLF_SWITCH((_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(int(1), int(1)))), (_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1))))) | (_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1))))))) ^ 0), _GLF_IDENTITY(_GLF_SWITCH((_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, (1 & 1)), (false ? _GLF_FUZZED(ivec3(-84313, 50665, 24880)) : ivec3(0, 0, (1 & 1)))))) << _GLF_IDENTITY(int(1), int(1)))), (_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1))))) | (_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))))))
    {
     case 0:
     case 90:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     case 58:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 85:
     case 99:
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     case 91:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, 0 | (2))), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, abs(1.0), 1.0, 1.0)), (vec2(mat3x2(injectionSwitch, 1.0, abs(1.0), 1.0, 1.0))) * mat2(1.0))))[0]), float(_GLF_FUZZED(3.9)), bool(false))), _GLF_FUZZED(-5.6)), vec2(_GLF_FUZZED(2222.9898), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     default:
     1;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
