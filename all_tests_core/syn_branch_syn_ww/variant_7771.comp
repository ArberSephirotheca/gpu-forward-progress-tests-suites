#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(48.68)), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(min(903.141, 6.1), max(min(903.141, 6.1), min(_GLF_IDENTITY(903.141, mix(float(903.141), float(_GLF_FUZZED(-3.1)), bool(false))), 6.1)))) : injectionSwitch.y), min((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(min(903.141, 6.1), max(min(903.141, 6.1), min(_GLF_IDENTITY(903.141, mix(float(903.141), float(_GLF_FUZZED(-3.1)), bool(false))), 6.1)))) : injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(min(903.141, 6.1), max(min(903.141, 6.1), min(_GLF_IDENTITY(903.141, mix(float(903.141), float(_GLF_FUZZED(-3.1)), bool(false))), 6.1)))) : injectionSwitch.y))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, 0.0))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(96.77)), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED((7033.3871 + (-0.3 - _GLF_IDENTITY(5051.7452, mix(float(_GLF_FUZZED(-2871.6630)), float(_GLF_IDENTITY(5051.7452, min(5051.7452, _GLF_IDENTITY(5051.7452, (5051.7452) / 1.0)))), bool(true)))))) : float(injectionSwitch.y))), bool(true)))), bool(true)), (true ? mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(96.77)), float(injectionSwitch.y), bool(true)))), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))) : _GLF_FUZZED(distance(-228.058, 66.19)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -5030.6885))), vec2(_GLF_FUZZED(-622.668), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) && (bool(bool(_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x < injectionSwitch.y)) && (bool(bool(_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, false)))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        return;
       return;
      }
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-409.892 / 6.0))), vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y)), false, true), false)), false))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-281.891) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(704.652)), bool(false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))), true, true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, true))))) && true, _GLF_IDENTITY(bool(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, true))))) && true, false)), true && (bool(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, true))))) && true, false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), true && (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))))))))))), true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), true && (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))))))))))), true)))), bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), true && (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))))))))))), true))))))), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))), true, true)))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, true))))) && true, _GLF_IDENTITY(bool(bool((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, true))))) && true)), (bool(bool((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, true))))) && true))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, true))))) && true, bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, true))))) && true, true, true), bvec3(bvec4(bvec3((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, true))))) && true, true, true), true))))), false)), true && (bool(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), true, true))))) && true, false))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.3, 8.1)) : injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(915.627), float(vec4(_GLF_IDENTITY(_GLF_FUZZED(915.627), min(_GLF_FUZZED(915.627), _GLF_FUZZED(915.627))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0))), _GLF_FUZZED(-872.131)), bvec2(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))).x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))), true, true)))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.3, 8.1)) : injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(915.627), float(vec4(_GLF_IDENTITY(_GLF_FUZZED(915.627), min(_GLF_FUZZED(915.627), _GLF_FUZZED(915.627))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0))), _GLF_FUZZED(-872.131)), bvec2(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))).x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))), true, true)))), true, false, true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), true))))) && true, _GLF_IDENTITY(bool(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y)))))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true, true))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (true))), false)), true && (bool(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), true, true))))) && true, false)))))))))) || false)))))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> (1u ^ _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | (1u))))));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_size, 1u, 1u)), uint(uvec2(uint(uvec3(workgroup_size, 1u, 1u)), 0u)))) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true), false, false))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(15.57)), vec2(_GLF_FUZZED(7317.9459), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))) * mat2(1.0)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), true))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(vec2(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3637.7290) : 1.0)), 1.0, 1.0))), round(length(normalize(vec2(1.0, 1.0)))))))), 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4191.7999), _GLF_FUZZED(2.4)), bvec2(false, false))))))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) >> 0u, (false ? _GLF_FUZZED(146458u) : ((subgroup_local_id + 1)) >> 0u))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && (false))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(41.63), _GLF_IDENTITY(_GLF_FUZZED(2.7), min(_GLF_IDENTITY(_GLF_FUZZED(2.7), min(_GLF_FUZZED(2.7), _GLF_FUZZED(2.7))), _GLF_FUZZED(2.7)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-16769) : 1))]), _GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(41.63), _GLF_IDENTITY(_GLF_FUZZED(2.7), min(_GLF_IDENTITY(_GLF_FUZZED(2.7), min(_GLF_FUZZED(2.7), _GLF_FUZZED(2.7))), _GLF_FUZZED(2.7)))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-16769) : 1))]), _GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED(54083u)))) >> 0u)), _GLF_IDENTITY(uint(uint((uint(1)))), 0u | (uint(uint((uint(1))))))) | _GLF_IDENTITY((uint(1)), (0u ^ 0u) ^ (_GLF_IDENTITY((uint(1)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : (uint(1))), ((false ? _GLF_FUZZED(subgroup_id) : (uint(1)))) - 0u)))))) / 1u), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), (4), _GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), max(_GLF_IDENTITY(int(int((4))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY((4), 0 ^ ((4))))), clamp(int(int((4))), int(int((4))), int(int((4)))))) | (int(int((4))))), int(int((4))))))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) ^ 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), int(2))), (int(2)) | _GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) / 1)), _GLF_IDENTITY(((int(2))), min(((int(2))), _GLF_IDENTITY(((int(2))), ~ (~ (((int(2)))))))) << 0)))), ((~ (_GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), max(int(2), int(2))))), int(2))))) << 0), int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY((int(2)), ((int(2))) << 0)), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY((int(2)), ((int(2))) << 0))), (~ (int(_GLF_IDENTITY((int(2)), ((int(2))) << 0)))) ^ (0 << _GLF_IDENTITY(int(0), int(0)))))), ~ (~ (int(_GLF_IDENTITY((int(2)), ((int(2))) << 0))))))), _GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) << 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) << 0), (_GLF_IDENTITY((int(2)), ((int(2))) << 0)) ^ 0))))))))) >> 0), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 1, 0)))), (int(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(ivec2(0 << _GLF_IDENTITY(int(8), int(8)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec2(0 << _GLF_IDENTITY(int(8), int(8)), int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (int(ivec2(0 << _GLF_IDENTITY(int(8), int(8)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) / 1)), ((int(2))) << 0)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (int(2)) ^ 0), int(2))), (int(2)) | _GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) << 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY((int(2)), ((int(2))) << 0)), ~ (~ (int(_GLF_IDENTITY((int(2)), ((int(2))) << 0))))))), _GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) << 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY((int(2)), (_GLF_IDENTITY((int(2)), max((int(2)), (int(2))))) << 0), (_GLF_IDENTITY((int(2)), ((int(2))) << 0)) ^ 0))))))))) >> 0)) - 0)) / 1))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), int(2))) ^ (clamp((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(4, int(int(4)))))) | (4)), 4))), (4), _GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), max(int(int((4))), int(int((4)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) + 0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((4) + _GLF_IDENTITY(0, (0) - 0), (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), min(ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))), 0)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))))))), _GLF_IDENTITY(0 + (int(_GLF_IDENTITY(ivec4((4) + 0, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) / 1)), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) << 0, min((int(4)) << 0, (int(4)) << 0)))))), min(ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) / 1)), (int(4)) << 0)))))))), (_GLF_IDENTITY(0 + (int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) >> 0)) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))) | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))))), min(ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))))))), (_GLF_IDENTITY(0 + (int(_GLF_IDENTITY(ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1))))))), 0, (_GLF_IDENTITY(0, ~ (~ (0))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), min(ivec4((4) + 0, (_GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) * (0)) >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), ivec4((4) + 0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), min((0 >> _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), clamp((0 >> _GLF_IDENTITY(int(1), int(1))), (0 >> _GLF_IDENTITY(int(1), int(1))), (0 >> _GLF_IDENTITY(int(1), int(1))))))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))))))), (true ? 0 + (int(_GLF_IDENTITY(ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), min(ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) << 0)))), ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))))))) : _GLF_FUZZED(95297)))) | (0 + (int(_GLF_IDENTITY(ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), min(_GLF_IDENTITY(ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)), min(0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)), 0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))))), ivec4(0, 0, 0, 0) + (ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)), min(0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)), 0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))))))), ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))))))))))) | (0 + (int(_GLF_IDENTITY(ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), min(ivec4((4) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))), ivec4((_GLF_IDENTITY(4, clamp(4, 4, 4))) + 0, (0 >> _GLF_IDENTITY(int(1), int(1))), 0, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)), clamp(0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)), 0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)), (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))) >> 0))))))))))))))), _GLF_IDENTITY(int(int((4))), max(int(int((4))), int(int((4))))))))))))), (_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(clamp((4), (4), _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) | ((4))), _GLF_IDENTITY(_GLF_IDENTITY(int(int((4))), ~ (~ (int(int((4)))))), max(int(int((4))), int(int((4))))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) ^ 0)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) | (int(2)))), min((_GLF_IDENTITY(int(2), (int(2)) | (int(2)))), (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), int(2)), min(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) ^ 0)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) | (int(2)))), min((_GLF_IDENTITY(int(2), (int(2)) | (int(2)))), (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), int(2)), 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) ^ 0)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) | (int(2)))), min((_GLF_IDENTITY(int(2), (int(2)) | (int(2)))), (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), int(2))))) ^ (clamp((4), (4), _GLF_IDENTITY(_GLF_IDENTITY((4), max((4), (4))), _GLF_IDENTITY(int(_GLF_IDENTITY(int((4)), (_GLF_IDENTITY(int((4)), (int((4))) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(int(int((4))), _GLF_IDENTITY((int(int((4)))) | ((0 >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), min((int(int((4)))) | ((0 >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), (int(int((4)))) | ((0 >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6))))))))), _GLF_IDENTITY(int(int((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), ~ (~ (_GLF_IDENTITY(4, (4) ^ 0))))))), (int(int((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), ~ (~ (_GLF_IDENTITY(4, (4) ^ 0)))))))) ^ 0))))))), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY((4), ((4)) | ((4))), (4), _GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), max(int(int((4))), int(int((4))))))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) ^ 0)), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) | (int(2)))), min((_GLF_IDENTITY(int(2), (int(2)) | (int(2)))), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) | (int(2)))), min((_GLF_IDENTITY(int(2), (int(2)) | (int(2)))), (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))), 0 | (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) | (int(2)))), min((_GLF_IDENTITY(int(2), (int(2)) | (int(2)))), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))))))))))))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), int(2))) ^ (clamp((4), (4), _GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY(max((4), (4)), (max((4), (4))) | (max((4), (4))))), _GLF_IDENTITY(int(int((4))), max(_GLF_IDENTITY(int(int((4))), (_GLF_IDENTITY(int(int((4))), (int(int((4)))) / 1)) | (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (_GLF_IDENTITY(int(6), 0 ^ (int(6))))), ~ (~ (int(6))))), ((0 >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (_GLF_IDENTITY(int(6), 0 ^ (int(6))))), ~ (~ (int(6)))))) | 0))), int(int((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), ~ (~ (_GLF_IDENTITY(4, (4) ^ 0))))))))))))) : _GLF_FUZZED(23057))))) >> 0) - 0));
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) << 0)) | 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) << 0))))), clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1))))) | 0)) >> 0u) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0), (mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0))), 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(mat4(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, exp(0.0), sin(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(1.0), 0.0, 0.0, 1.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), max(_GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(mat4(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, exp(0.0), sin(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(1.0), 0.0, 0.0, 1.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), clamp(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(mat4(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, exp(0.0), sin(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(1.0), 0.0, 0.0, 1.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(mat4(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, exp(0.0), sin(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(1.0), 0.0, 0.0, 1.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), min(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(mat4(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, exp(0.0), sin(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(1.0), 0.0, 0.0, 1.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(mat4(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, exp(0.0), sin(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(1.0), 0.0, 0.0, 1.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(mat4(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, exp(0.0), sin(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(1.0), 0.0, 0.0, 1.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(mat4(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, exp(0.0), sin(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), abs(1.0), 0.0, 0.0, 1.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (false)))))), ((_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (false))))))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), ! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true)))))))))), ((_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bool((! (false)))))) && true), bool(bvec3(! (! (false)), false, true))))))))))) || false)), ! _GLF_IDENTITY((! (bool(! (_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true))))))))), true && ((! (bool(! (_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), ! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true)))))))))), ((_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bool((! (false)))))) && true), bool(bvec3(! (! (false)), false, true))))))))))) || false)), ! _GLF_IDENTITY((! (bool(! (_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true))))))))), true && ((! (bool(! (_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))))))))))), false || (_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), ! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) && true), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false))))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false))))), false, true), false)))))))))))), ((_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bool((! (false)))))) && true), bool(bvec3(! (! (false)), false, true))))))))))) || false)), ! _GLF_IDENTITY((! (bool(! (_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true))))))))), true && _GLF_IDENTITY(((! (bool(! (_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))))))))), true && (_GLF_IDENTITY(((! (bool(! (_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))))))))), (((! (bool(! (_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true))))))))))) || false)))))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(bool(bool((! (! (! (false)))))), bool(bvec4(bool(bool((! (! (! (false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! _GLF_IDENTITY((! (! (! (false)))), bool(bool((! (! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! _GLF_IDENTITY((! (! (! (false)))), bool(bool((! (! (! (false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! _GLF_IDENTITY((! (! (! (false)))), bool(bool((! (! _GLF_IDENTITY((! (false)), false || ((! (false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false))))))))))) && true))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), (_GLF_IDENTITY(! (! (! (! (false)))), (! (! (! (! (false))))) || false)) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), false || (! _GLF_IDENTITY((false), ((false)) && true))))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), false || (! _GLF_IDENTITY((false), ((false)) && true)))))))))), ! (! (! (! (false))))), ! (! (! (! (false)))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), true && (bool(bvec2(! (false), true))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))))) || false))))) && true))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false))), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), ! (! (! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && ((! (false)))), ! (! (! (! (false))))), ! (! (! (! (false)))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), (_GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! (! (false)))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch)).x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, false || (false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch)).x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, false || (false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch)).x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, false || (false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false, false))))))), ! _GLF_IDENTITY((! (! (! (false)))), ((! (! (! (false))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false), true, true)))), ! (! (! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (_GLF_IDENTITY(false, false || (false))))))), ! (! (! (! (_GLF_IDENTITY(false, true && (false)))))))))) || false))))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false))))))))) && true)) || false))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), bool(bvec3((! (! (false))), true, false)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), _GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false))))) && true), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false))))))))) && true)) || false))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), bool(bvec3((! (! (false))), true, false)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), _GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false))))) && true)), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, true))))))))), ! (! (! (! (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), false || ((! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), ! (! (! (! (false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (false)))), bool(bvec2((! (! (! (false)))), true)))), _GLF_IDENTITY(! (! (! (! (false)))), bool(bvec4(! (! (! (! (false)))), false, true, true)))))))) && true)) || false))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), bool(bvec3((! (! (false))), true, false)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), _GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), _GLF_IDENTITY(! (! (! (! (false)))), ! (! (! (! (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false))))) && true)))))))), false || ((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(false, (false) && true))))), true && ((! (! (! (_GLF_IDENTITY(false, (false) && true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec4((! ((false))), false, true, true))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))))), ! (! (bool(_GLF_IDENTITY((false), ! (! ((false)))))))), false, true)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))))))), ! (! (bool(_GLF_IDENTITY((false), ! (! ((false)))))))), false, true))))))))), ! (! (! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))))), ! (! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))))))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))), ! (! (! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (_GLF_IDENTITY(false, false || (false))))))), ! (! (! (! (false)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (_GLF_IDENTITY(false, false || (false))))))), ! (! (! (! (false))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))))))))))) || false)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), (! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (false)), false, true), bvec3(bvec3(bvec3(! (! (false)), false, true))))), true && (bool(_GLF_IDENTITY(bvec3(! (! (false)), false, true), bvec3(bvec3(bvec3(! (! (false)), false, true))))))))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))))) || false))), true && (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (true)), true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (bool(bool(injectionSwitch.x < injectionSwitch.y))) && true))) && true))) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), ! (! (_GLF_IDENTITY(true && ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), bool(bool(true && ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.4)), bool(false)))))))))))), _GLF_IDENTITY(! (! (! (! (false)))), (_GLF_IDENTITY(! (! (! (! (false)))), true && (! (! (! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (! (! (false)))))))))) || false))))))) && true)))))) || false), true, false)))) || false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (next_virtual_gid), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) + 0u), 0u ^ (~ (next_virtual_gid)))))), ((~ (next_virtual_gid))) - 0u)) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(79805u, _GLF_IDENTITY(61683u, min(_GLF_IDENTITY(61683u, (61683u) | 0u), _GLF_IDENTITY(61683u, (61683u) / 1u)))), (uvec2(79805u, _GLF_IDENTITY(61683u, min(_GLF_IDENTITY(61683u, (61683u) | 0u), _GLF_IDENTITY(61683u, (61683u) / 1u))))) << uvec2(0u, 0u)).y)))], uint(2), 4, 64, _GLF_IDENTITY(4, 0 | (4)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3304.0771))) > injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, ! (! ((bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), true, false, true)), false || (bool(bvec4(_GLF_IDENTITY((bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, ! (! ((bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))) || false))), true, false, true))))))))))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.3, -125.305)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0)))).y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0)))).y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), false)))), ((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false), bvec3(bvec4(bvec3(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false), true)))))), (bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false), bvec3(bvec4(bvec3(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false), true))))))) && true))))))))) && true))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
