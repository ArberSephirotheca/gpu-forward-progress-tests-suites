#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 bvec2 _f0;
 float _f1;
 bool _f2;
 uint subgroup_size;
 float _f3;
 float _f4;
 mat2x4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(bvec2(true), 1.0, true, gl_SubgroupSize, 1.0, 1.0, mat2x4(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size + GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y;
 GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.z = virtual_gid;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size + ((GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y + 1) % _GLF_struct_replacement_0.subgroup_size);
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.x = next_virtual_gid;
 atomicStore(buf[GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.z], uint(1), 4, 64, 4);
 do
  {
   if(GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y + 1 < _GLF_struct_replacement_0.subgroup_size)
    {
     int i = 0;
     atomicStore(buf[GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.x], uint(2), 4, 64, 4);
    }
   else
    {
     atomicStore(buf[GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.x], uint(2), 4, 64, 4);
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
