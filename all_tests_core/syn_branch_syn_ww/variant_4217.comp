#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, false, false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * sqrt(cos(vec2(0.0, 0.0)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * sqrt(cos(vec2(0.0, 0.0)))).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false)), (bool(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false))) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false)), (bool(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false))) && _GLF_IDENTITY(true, bool(bvec2(true, false))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true) || _GLF_IDENTITY((false), ! (! ((false))))))) || false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec4(1480.6221, _GLF_IDENTITY(-6691.7358, mix(float(_GLF_FUZZED(806.257)), float(_GLF_IDENTITY(-6691.7358, mix(float(-6691.7358), _GLF_IDENTITY(float(_GLF_FUZZED(-468.253)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-468.253)), (float(_GLF_FUZZED(-468.253))) / 1.0), float(_GLF_FUZZED(-468.253)))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))), bool(true))), -986.398, -392.177).ba) : injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec3(bool(bvec3(false, false, true)), false, true)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))) - (0u | 0u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), min(0u, 0u)), 0u)), (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), _GLF_IDENTITY(uint(uint((0u))), 0u | (uint(uint((0u)))))), (0u))) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), min(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, min((0u) ^ 0u, (0u) ^ 0u))), _GLF_IDENTITY(0u, (0u) ^ 0u)))) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(58622u, 140656u, 38365u)))), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(58622u, 140656u, 38365u)))), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(58622u, 140656u, 38365u)))), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(58622u, 140656u, 38365u)))), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(58622u, 140656u, 38365u)))), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(58622u, 140656u, 38365u)))), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize))))), 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(58622u, 140656u, 38365u)))), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(58622u, 140656u, 38365u)))), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(58622u, 140656u, 38365u)))), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(58622u, 140656u, 38365u)))), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(58622u, 140656u, 38365u)))), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize))))), 0u)) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(112860u)))), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), _GLF_IDENTITY(0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))), (_GLF_IDENTITY(0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))), 0u ^ (0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))))) >> 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u))))) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u))))) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 0u, 0u)), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(131475u) : (0u))) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u | ((0u))) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ~ (~ ((0u))))) | (_GLF_IDENTITY((0u), ((0u)) ^ 0u))) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u), (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))), ~ (~ (clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u), (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))))))))), 0u)))) | (gl_WorkGroupSize), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), _GLF_IDENTITY(0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))), ~ (~ (0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), _GLF_IDENTITY(0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))), ~ (~ (0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))), (false ? _GLF_FUZZED(uvec3(188785u, 167877u, 115842u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), _GLF_IDENTITY(0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))), ~ (~ (0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), _GLF_IDENTITY(0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))), ~ (~ (0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))))) | (gl_WorkGroupSize))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u))), (~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))) >> 0u))), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) - uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize), min(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (0u) ^ 0u), _GLF_IDENTITY(1u, (1u) << 0u))), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) ^ 0u), 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))) - 0u), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) ^ 0u), 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u), (true ? uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u) : _GLF_FUZZED(uvec4(22903u, 194070u, 95545u, 72975u)))))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ _GLF_IDENTITY((uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)), clamp((uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u), max(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u), min(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u), uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))))), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)), (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)), (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))))) | (gl_WorkGroupSize), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ~ (~ ((0u) ^ 0u)))), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u))), uvec3(0u, 0u, 0u) | (~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u))) ^ 0u), 1u))))), 0u)))))) | (gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u) ^ 0u : _GLF_FUZZED(subgroup_local_id)))), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u)), 0u, 0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u))))), 0u)))) | (gl_WorkGroupSize)))))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (false ? _GLF_FUZZED(uvec3(110729u, 85741u, 70448u)) : uvec3(5u))))))), 0u))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-419.825)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, determinant(mat3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0))), 1.0, 1.0, 1.0, 0.0)), 0.0 + (float(mat3x2(injectionSwitch.y, determinant(mat3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0))), 1.0, 1.0, 1.0, 0.0)))), (float(mat3x2(injectionSwitch.y, determinant(mat3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), float(_GLF_FUZZED(4.2)), bool(false)))))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0))), 1.0, 1.0, 1.0, 0.0))) + 0.0)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, determinant(mat3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0))), 1.0, 1.0, 1.0, 0.0)), 0.0 + (float(mat3x2(injectionSwitch.y, determinant(mat3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0))), 1.0, 1.0, 1.0, 0.0)))), (float(mat3x2(injectionSwitch.y, determinant(mat3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), float(_GLF_FUZZED(4.2)), bool(false)))))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0))), 1.0, 1.0, 1.0, 0.0))) + 0.0)))))))), _GLF_IDENTITY(false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false) || _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false, bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))) || false) || (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))) || false) || (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(sign(injectionSwitch))))))).x > injectionSwitch.y))))) && true)))) || false, ((bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false) || false), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-232.332), _GLF_FUZZED(7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(-8.4, -4.9)))))).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))), (0u ^ 0u) | _GLF_IDENTITY((workgroup_id), 0u ^ _GLF_IDENTITY(((workgroup_id)), uint(uvec2(((workgroup_id)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)))), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), true, true)))))))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((bool(false))), ! (! (((bool(false)))))) && true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(false)), false, true, true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), (~ ((subgroup_local_id + 1) % subgroup_size)) >> 0u))))) | (((subgroup_local_id + 1) % subgroup_size)));
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), virtual_gid), uint(uint(max(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true, true && (true)) ? virtual_gid : _GLF_FUZZED(workgroup_base))), virtual_gid)))))) / 1u)], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / 1.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-7.6) : injectionSwitch.y, (false ? _GLF_FUZZED(-7.6) : injectionSwitch.y) - determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((40.69 - cosh(42.36))) : injectionSwitch.x)) > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), (2) | (2))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), max(int(_GLF_IDENTITY(4, (4) ^ 0)), int(_GLF_IDENTITY(4, (4) ^ 0)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(23.61) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), true, false, true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false, _GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.0) : injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y)))) || false), (((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.0) : injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y)))) || false)) && true) && true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
