#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true)))))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0))))) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), false, true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0))))) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), false, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0))))) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), false, true))), false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0))))) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), false, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x4(vec2(1.0, 1.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0))))) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), false, true))), false))), true))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0, 0.0, 1.0, 1.0, 0.0, sin(sqrt(0.0)), 0.0, 1.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0, 0.0, 1.0, 1.0, 0.0, sin(sqrt(0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)))), max(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0, 0.0, 1.0, 1.0, 0.0, sin(sqrt(0.0)), 0.0, 1.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0, 0.0, 1.0, 1.0, 0.0, sin(sqrt(0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0, 0.0, 1.0, 1.0, 0.0, sin(sqrt(0.0)), 0.0, 1.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0, 0.0, 1.0, 1.0, 0.0, sin(sqrt(0.0)), 0.0, 1.0, 1.0, 0.0, 0.0))))))) < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(mod(vec2(11.83, 8509.2314), injectionSwitch))))).y)))), true, false, true))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-235.561, 539.717)) : injectionSwitch)).y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y))), false, false), false)))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(min(injectionSwitch, 5.7)))).x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), false, true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)))), true, false, true))), true)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && true))))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.9) : injectionSwitch.y)) : _GLF_FUZZED(asinh(-527.507)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-543.045)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true, true), bvec3(bvec4(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)), true, true), false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)) * (injectionSwitch.x), (true ? determinant(mat3(1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)) * (injectionSwitch.x) : _GLF_FUZZED(-3.1)))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(6583.1570)), bool(false))))), false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), false))))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(913.230, -6877.9809)))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(88.38)), float(0.0), bool(true))) + (1.0)), 1.0, 1.0, cos(0.0)), (true ? mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0)) : _GLF_FUZZED(mat3x4(9.7, 73.98, 4986.7414, -77.68, 2.0, -8.2, 24.87, 2.9, -72.19, 506.846, -4.3, 6.9)))))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(false))), ! (! ((bool(bool(false)))))), false || (_GLF_IDENTITY((bool(bool(false))), ! (_GLF_IDENTITY(! ((bool(bool(false)))), false || (_GLF_IDENTITY(! ((bool(bool(false)))), false || (! ((bool(bool(false)))))))))))))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)), ((0u | 0u) << _GLF_IDENTITY(uint(4u), uint(4u))) ^ ((_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))))) | 0u), max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), ! (! (! (false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool((_GLF_IDENTITY(! (false), ! (! (! (false))))))), false, false), bvec3(bvec3(bvec3(bool(bool((_GLF_IDENTITY(! (false), ! (! (! (false))))))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true)))))))), true && (bool(_GLF_IDENTITY(bvec3(bool(bool((_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))), false, false), bvec3(bvec3(bvec3(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), false || ((! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))), true, true))) && (! (! (false))))))))), false, false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))), false, false, true))))))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, (false) && true)))), false, false, true))), bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, (false) && true)))), false, false, true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, (false) && true)))), false, false, true)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, (false) && true)))), false, false, true))))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, (false) && true)))), false, false, true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) && true)))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, (false) && true)))), false, false, true)))), _GLF_IDENTITY(false, bool(bool(false))) || (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) && true)))), bool(bvec4(! (! (! (_GLF_IDENTITY(false, (false) && true)))), false, false, true)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec4(! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))), false, false, true)), (bool(bvec4(! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))), false, false, true))) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, false)))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(4132.6506) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (false ? _GLF_FUZZED(4132.6506) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / determinant(mat2(round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0)))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2201.7262, -9.8)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(827.131) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, false, false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, false, false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_DEAD(false))) || false)))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, 1u))), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), ~ (~ (min(subgroup_local_id, subgroup_local_id)))))) | (subgroup_local_id)))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-921.975))))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec2(bvec2(! (false), true)))))), ! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))) && true))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), vec2(1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(27.27))))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, cos(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), mix(float(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), float(_GLF_FUZZED(9596.2412)), _GLF_IDENTITY(bool(false), true && (bool(false)))))) : _GLF_FUZZED(-88.30)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.2), _GLF_FUZZED(697.290)), bvec2(false, false))).y))))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(19.89), _GLF_FUZZED(2.1)), vec2(((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0))], _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), float(float(1.0)), float(float(1.0)))))))[1], _GLF_IDENTITY(clamp(((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(clamp(((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1]), mix(float(_GLF_FUZZED(3.6)), float(clamp(((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1])), bool(true))) : _GLF_FUZZED(length(injectionSwitch))))), ((injectionSwitch) * mat2(1.0))[1]))), bvec2(true, true))))) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1270.1973))), 0.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(19.89), _GLF_FUZZED(2.1)), vec2(((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0))], _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], max(_GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), min(float(float(1.0)), float(float(1.0)))))))))[1], _GLF_IDENTITY(clamp(((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), min(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0))))[1], ((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1]), mix(float(_GLF_FUZZED(3.6)), float(clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(mat2(((injectionSwitch) * mat2(1.0)), 0.0, cos(0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(((injectionSwitch) * mat2(1.0)), 0.0, cos(0.0))))))[1], ((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1])), bool(true))) : _GLF_FUZZED(length(injectionSwitch))))), ((injectionSwitch) * mat2(1.0))[1]))), bvec2(true, true))))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? 0.0 : _GLF_FUZZED(1270.1973)), (false ? _GLF_FUZZED(5.2) : (_GLF_IDENTITY(true, (true) && true) ? 0.0 : _GLF_FUZZED(1270.1973))))), 0.0)).y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(true, ! (! (true))), false))))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true, false)), true && (bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true))))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), abs(1.0), 1.0, 1.0, 0.0))).x > injectionSwitch.y)))))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true))))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true))))))))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), true, true, true)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0))).y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(mat4x2((injectionSwitch), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, tan(0.0), 1.0))))), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))) + vec2(0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, true && ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))) && true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) ? _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)) : _GLF_FUZZED(vec2(11.34, 66.73)))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(1485.4345, 318.223), (vec2(1485.4345, 318.223)) - tan(vec2(0.0, 0.0)))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(6.2), exp(0.0) * (_GLF_FUZZED(6.2))), (injectionSwitch)[1]), bvec2(false, true))).y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)) : _GLF_FUZZED(vec2(11.34, 66.73)))) : _GLF_FUZZED(vec2(1485.4345, 318.223)))), vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), bvec2(false, true))).y)), true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)) : _GLF_FUZZED(vec2(11.34, 66.73)))), mix(vec2((_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)) : _GLF_FUZZED(vec2(11.34, 66.73)))))[0], (_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)) : _GLF_FUZZED(vec2(11.34, 66.73)))))[1]), vec2(_GLF_FUZZED((-1838.1009 * -8001.4760)), _GLF_FUZZED(float(186163u))), bvec2(false, false))) : _GLF_FUZZED(vec2(1485.4345, _GLF_IDENTITY(318.223, (false ? _GLF_FUZZED(9346.3359) : 318.223)))))), vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), bvec2(false, true))).y)), true, true, true))), ! (! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), int(ivec2(_GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))), (1 ^ 0))))), 0))], _GLF_FUZZED(6.8)), (true ? vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0))], _GLF_FUZZED(6.8)) : _GLF_FUZZED(vec2(11.34, 66.73)))) : _GLF_FUZZED(vec2(1485.4345, 318.223)))), vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), bvec2(false, true))).y)), true, true, true)))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))).y)))))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) * exp(vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), float(mat4x3(float(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))).y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * exp(vec2(0.0, 0.0))).y)))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-97.77, 72.07))))) + vec2(0.0, 0.0)) / vec2(1.0, 1.0))), max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-97.77, 72.07))))) + vec2(0.0, 0.0)) / vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-97.77, 72.07))))) + vec2(0.0, 0.0)) / vec2(1.0, 1.0))))) * exp(vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))).y)))), true, false, false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * mat2(1.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * mat2(1.0))), 1.0, 0.0, 0.0, 0.0), mat3x2(mat4(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * mat2(1.0))), 1.0, 0.0, 0.0, 0.0), mat3x2(mat3(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * mat2(1.0))), 1.0, 0.0, 0.0, 0.0))))))))).x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (4) | 0), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-20.99))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id)), subgroup_local_id)) + 1, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id)), subgroup_local_id)) + 1, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_local_id)), subgroup_local_id)) + 1)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, (num_workgroup --) << 0u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED((num_workgroup --))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((num_workgroup --), 0u | ((num_workgroup --)))), (true ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup --, (num_workgroup --) * (1u & _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (num_workgroup --) * 1u))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, (num_workgroup --) * 1u))), 1u * (_GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, _GLF_IDENTITY((num_workgroup --) * 1u, ((num_workgroup --) * 1u) ^ 0u)))))))) : _GLF_FUZZED(subgroup_id))), (false ? _GLF_FUZZED(79874u) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup --)), ~ (~ (_GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (injectionSwitch.x < injectionSwitch.y) || false)), bool(bool((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (injectionSwitch.x < injectionSwitch.y) || false)))))), true)))) || false) ? _GLF_FUZZED(workgroup_id) : num_workgroup --)))))))))) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED((num_workgroup --))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup --), ~ (~ (_GLF_IDENTITY((num_workgroup --), _GLF_IDENTITY(((num_workgroup --)), (_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), (false ? _GLF_FUZZED(virtual_gid) : ((num_workgroup --)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), ~ (~ (((num_workgroup --))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), ~ (~ (((num_workgroup --))))), (_GLF_IDENTITY(((num_workgroup --)), ~ (~ (((num_workgroup --)))))) - 0u)))), (false ? _GLF_FUZZED(virtual_gid) : ((num_workgroup --))))) / 1u)) >> ((+ 146211u) & 0u)) - 0u)))), 0u | ((num_workgroup --))), (_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup --), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((num_workgroup --), _GLF_IDENTITY(((num_workgroup --)), (_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), (false ? _GLF_FUZZED(virtual_gid) : ((num_workgroup --)))), (_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), ~ (~ (((num_workgroup --))))), (false ? _GLF_FUZZED(virtual_gid) : ((num_workgroup --))))) / 1u)) >> ((+ 146211u) & 0u)) - 0u))), (~ (~ (_GLF_IDENTITY((num_workgroup --), _GLF_IDENTITY(((num_workgroup --)), (_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), (false ? _GLF_FUZZED(virtual_gid) : ((num_workgroup --)))), (_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), ~ (~ (((num_workgroup --))))), (false ? _GLF_FUZZED(virtual_gid) : ((num_workgroup --))))) / 1u)) >> ((+ 146211u) & 0u)) - 0u)))) >> 0u)), 0u | ((num_workgroup --)))) + 0u)), (true ? _GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, (num_workgroup --) * 1u))) : _GLF_FUZZED(subgroup_id))), (false ? _GLF_IDENTITY(_GLF_FUZZED(79874u), (_GLF_FUZZED(79874u)) | (_GLF_FUZZED(79874u))) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup --)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false) ? _GLF_FUZZED(workgroup_id) : num_workgroup --))))), (~ (_GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat4x2(injectionSwitch, 0.0, 0.0, log(1.0), cos(0.0), 0.0, abs(0.0)))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0))))), true)))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), bool(bool(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))))))))) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))))))))) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (true) || false), true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))))))))) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))) && true)), ! (_GLF_IDENTITY(! (true && (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))))))))) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)))))), bool(bool(! (true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false))))))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)))))))))))))))))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(num_workgroup --, (num_workgroup --) ^ 0u))))))) * 1u)))))) : _GLF_FUZZED(subgroup_size)))) << 0u)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED((num_workgroup --))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((num_workgroup --), 0u | ((num_workgroup --)))), (true ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup --, (num_workgroup --) * (1u & _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (num_workgroup --) * 1u))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, (num_workgroup --) * 1u))), 1u * (_GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, _GLF_IDENTITY((num_workgroup --) * 1u, ((num_workgroup --) * 1u) ^ 0u)))))))) : _GLF_FUZZED(subgroup_id))), (false ? _GLF_FUZZED(79874u) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup --)), ~ (~ (_GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (injectionSwitch.x < injectionSwitch.y) || false)), bool(bool((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (injectionSwitch.x < injectionSwitch.y) || false)))))), true)))) || false) ? _GLF_FUZZED(workgroup_id) : num_workgroup --)))))))))) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED((num_workgroup --))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup --), ~ (~ (_GLF_IDENTITY((num_workgroup --), _GLF_IDENTITY(((num_workgroup --)), (_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), (false ? _GLF_FUZZED(virtual_gid) : ((num_workgroup --)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), ~ (~ (((num_workgroup --))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), ~ (~ (((num_workgroup --))))), (_GLF_IDENTITY(((num_workgroup --)), ~ (~ (((num_workgroup --)))))) - 0u)))), (false ? _GLF_FUZZED(virtual_gid) : ((num_workgroup --))))) / 1u)) >> ((+ 146211u) & 0u)) - 0u)))), 0u | ((num_workgroup --))), (_GLF_IDENTITY(_GLF_IDENTITY((num_workgroup --), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((num_workgroup --), _GLF_IDENTITY(((num_workgroup --)), (_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), (false ? _GLF_FUZZED(virtual_gid) : ((num_workgroup --)))), (_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), ~ (~ (((num_workgroup --))))), (false ? _GLF_FUZZED(virtual_gid) : ((num_workgroup --))))) / 1u)) >> ((+ 146211u) & 0u)) - 0u))), (~ (~ (_GLF_IDENTITY((num_workgroup --), _GLF_IDENTITY(((num_workgroup --)), (_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), (false ? _GLF_FUZZED(virtual_gid) : ((num_workgroup --)))), (_GLF_IDENTITY(_GLF_IDENTITY(((num_workgroup --)), ~ (~ (((num_workgroup --))))), (false ? _GLF_FUZZED(virtual_gid) : ((num_workgroup --))))) / 1u)) >> ((+ 146211u) & 0u)) - 0u)))) >> 0u)), 0u | ((num_workgroup --)))) + 0u)), (true ? _GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, (num_workgroup --) * 1u))) : _GLF_FUZZED(subgroup_id))), (false ? _GLF_IDENTITY(_GLF_FUZZED(79874u), (_GLF_FUZZED(79874u)) | (_GLF_FUZZED(79874u))) : _GLF_IDENTITY(_GLF_FUZZED((num_workgroup --)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false) ? _GLF_FUZZED(workgroup_id) : num_workgroup --))))), (~ (_GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat4x2(injectionSwitch, 0.0, 0.0, log(1.0), cos(0.0), 0.0, abs(0.0)))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0))))), true)))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), bool(bool(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false), (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))))))))) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))))))))) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (true) || false), true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))))))))) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false))))) && true)), ! (_GLF_IDENTITY(! (true && (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))))))))) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)))))), bool(bool(! (true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false))))))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-24.12, 0.0 + (_GLF_IDENTITY(-24.12, float(mat4x3(-24.12, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), bool(false))))), true))), false)))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)))))))))))))))))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(num_workgroup --, (num_workgroup --) ^ 0u))))))) * 1u)))))) : _GLF_FUZZED(subgroup_size)))) << 0u)) : _GLF_FUZZED(num_workgroup)))) : subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   int i = _GLF_IDENTITY(0, clamp(0, 0, 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) - 0, ((2) - 0) | ((2) - 0)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6659.8987, -3003.0552)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6659.8987, -3003.0552)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec4(mat2(1.0) * (injectionSwitch), 1.0, 1.0))), mat2(1.0) * (injectionSwitch)))).y))))), false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6659.8987, -3003.0552)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6659.8987, -3003.0552)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, injectionSwitch.y)))))) && true), false, false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6659.8987, -3003.0552)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6659.8987, -3003.0552)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, injectionSwitch.y)))))) && true), false, false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6659.8987, -3003.0552)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6659.8987, -3003.0552)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, injectionSwitch.y)))))) && true), false, false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false)))), true && (! ((_GLF_IDENTITY(false, true && (false)))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ! (! ((! (_GLF_IDENTITY(false, true && (false))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(0.0)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + length(0.0)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), true))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(127.992, max(127.992, 127.992)))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), float(mat3x2(mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(127.992, max(127.992, 127.992)))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), 1.0, cos(0.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(127.992), max(_GLF_FUZZED(127.992), _GLF_FUZZED(127.992)))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(127.992)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))))) - length(vec2(0.0, 0.0)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(127.992)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))))))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(127.992)), bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false)))))))))))), true)))), true, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, (false) || false)) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
