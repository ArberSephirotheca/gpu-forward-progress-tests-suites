#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 bool _f0;
 mat4 _f1;
 bvec3 _f2;
 vec3 _f3;
 mat3x2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_7 {
 uint next_virtual_gid;
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_4 {
 uint _f0;
 bvec4 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 _GLF_struct_3 _f1;
 vec3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 ivec3 _f1;
 _GLF_struct_1 _f2;
 mat4x3 _f3;
 mat2x3 _f4;
 bvec2 _f5;
 bool _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_2 _f0;
 mat4x2 _f1;
 _GLF_struct_5 _f2;
 uvec3 _f3;
 _GLF_struct_7 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.z = subgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-64546)))))), (_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), ~ (~ (int(4))))))) / 1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_size = gl_SubgroupSize;
 _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = subgroup_size));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.w = subgroup_local_id;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.z = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), false, false, true))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.x = num_workgroup;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.x = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.x;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   if(_GLF_DEAD(false))
    break;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (! (bool(_GLF_IDENTITY(false, false || (false)))))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.6) : injectionSwitch.y))))))) && true)), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.6) : injectionSwitch.y))))))) && true)), true, false))))) && true))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec3(bvec2((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((31.68 + vec2(-5.1, 60.64))) : injectionSwitch)).x, float(mat4(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0))) < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((31.68 + vec2(-5.1, 60.64))) : injectionSwitch)).x, float(mat4(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0))) < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false)), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(439.151, 4.2)))), injectionSwitch)).y))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(439.151, 4.2)), mix(vec2((true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(439.151, 4.2)))[0], (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(439.151, 4.2)))[1]), vec2(_GLF_FUZZED(-930.431), _GLF_FUZZED(645.003)), bvec2(false, false))))), injectionSwitch)).y))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), false)), false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec4((false), false, true, false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 0.0))) < injectionSwitch.y))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false))))))))), true)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, cos(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0))) < injectionSwitch.y))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((false ? 71.42 : 7.5)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(25.29)), bvec2(true, false))))).y))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9633.5080), _GLF_FUZZED((false ? -6.1 : -636.789))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x < injectionSwitch.y))), false)), false))))))))), true))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0)))), false)), bvec2(bvec3(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0)))), false)), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0))) < injectionSwitch.y))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2((false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y)), false, false)))))), false)), false))))))))), true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0)))), false)), bvec2(bvec3(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0)))), false)), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0))) < injectionSwitch.y))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2((false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y)), false, false)))))), false)), false))))))))), true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, determinant(mat3(1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)) * (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(624.953) : 1.0)))), 1.0, 0.0, cos(0.0), 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0))) < injectionSwitch.y))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec4(bvec2(bvec3(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), false)), false))))))))), true)))))), false, true))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-28.19)), bool(false)))), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), dot(vec3(0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0), mat2x4(mat2x4(mat2x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, log(1.0), 1.0), (vec3(0.0, log(1.0), 1.0)) * mat3(1.0)), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) - length(vec2(0.0, 0.0))), 1.0), (false ? _GLF_FUZZED(vec3(8852.1893, -7357.8016, -5632.7560)) : vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), dot(vec3(0.0, log(1.0), 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(uintBitsToFloat(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], (min(injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(-822.259), _GLF_FUZZED((-746.490))), bvec2(false, false)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))))).y)))))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
            break;
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-172.730), _GLF_FUZZED(float(93182))), bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false))).x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = _GLF_IDENTITY(workgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), (true ? (workgroup_size) | (workgroup_size) : _GLF_FUZZED(79970u)))), 0u, 0u)));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(2607.3411, -618.419)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.6)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), true && (bool(false)))), true && (! (_GLF_IDENTITY(bool(false), true && (bool(false))))))))) && true)))))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          return;
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(1, (1) | (0 >> _GLF_IDENTITY(int(0), int(0)))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              continue;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(int(int(7)), min(int(int(7)), int(int(7))))))) ^ 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(ivec3(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (false ? _GLF_FUZZED(-38213) : 7))) | (7)), 1, 0)))), int(7)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) - (0 | 0)))))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((+ (injectionSwitch + vec2(-2.5, -55.56)))))).y))))
      break;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), false || (! (_GLF_WRAPPED_IF_FALSE(false)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       return;
      }
    }
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
      }
     else
      {
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    return;
  }
 else
  {
   GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) ^ uvec2(0u, 0u)).y * _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x, 0u + (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)))))
  {
  }
 else
  {
   GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.w = workgroup_base;
  }
 uint subgroup_base = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.z * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 1 * (4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.y = _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_size)));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    return;
   GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.y = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id.y;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    break;
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) << 0))))), int(0)), (_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1)))) >> 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 0, 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(ivec4(0, 0, 0, 0)))))), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      continue;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true))))))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))), true)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.9) : injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4208.4343)), float(1.0), bool(true))))))).y)), true)))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
              }
             return;
             if(_GLF_DEAD(false))
              return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))), (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)))) + uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u) ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(150219u) : 0u, (false ? _GLF_FUZZED(subgroup_local_id) : false ? _GLF_FUZZED(150219u) : 0u)))), 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) ^ uvec4(0u, 0u, 0u, 0u)), (uvec4(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(150219u) : 0u)), 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY((uvec4(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(150219u) : 0u)), 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) / 1u), (false ? _GLF_FUZZED((subgroup_id --)) : _GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) / 1u), ~ (~ (_GLF_IDENTITY(2u, (2u) / 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) / 1u), ~ (~ (_GLF_IDENTITY(2u, (2u) / 1u))))))) ^ 0u)), uvec4(_GLF_IDENTITY(2u, (2u) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((uvec4(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(150219u) : 0u)), 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) / 1u)) ^ 0u)), uvec4(_GLF_IDENTITY(2u, (2u) >> 0u)))), ((uvec4(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(150219u) : 0u)), 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) / 1u)) ^ 0u)), uvec4(_GLF_IDENTITY(2u, (2u) >> 0u))))) | uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY((uvec4(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(150219u) : 0u)), 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) ^ 0u))) ^ 0u)), uvec4(_GLF_IDENTITY(2u, (2u) >> 0u)))), ((uvec4(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(150219u, (150219u) ^ 0u)) : 0u)), 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) / 1u)) ^ 0u)), uvec4(_GLF_IDENTITY(2u, (2u) >> 0u))))) | uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u)) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))))))))).w + GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.y + GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.z;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_2(_GLF_struct_0(bvec2(true), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) << 0u)), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) << 0u)), ((_GLF_IDENTITY(1u, (1u) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) << 0u)), 0u + ((_GLF_IDENTITY(1u, (1u) << 0u)))))), (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(uint(0u), (uint(0u)) * 1u))), (uint(0u)) / 1u))), 0u, 0u))) << 0u))), ivec3(1), _GLF_struct_1(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2x3(1.0), bvec2(true), _GLF_IDENTITY(true, true && (true))), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) - 0.0)), _GLF_struct_5(bvec4(true), _GLF_struct_3(vec4(1.0)), vec3(1.0), _GLF_struct_4(1u, bvec4(true), mat2(1.0))), uvec3(1u), _GLF_struct_7(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.w + GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.y + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)))))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)))))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)))))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_17num_workgroupsubgroup_basesubgroup_idsubgroup_local_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base))[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)))))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)))).z, uint(uint(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.z))) + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) ^ uvec2(0u, 0u)).x), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.w, max(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.w, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.w) / 1u))) + GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.y + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0]), (min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)).z, _GLF_IDENTITY(uint(uint(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.z)), uint(uvec4(_GLF_IDENTITY(uint(uint(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.z)), max(uint(uint(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.z)), uint(uint(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.z)))), 1u, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 1u))))))) + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) ^ uvec2(0u, 0u)).x, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base), clamp(min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], uint(uvec2(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0], 0u))), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[0])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[1], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[2], GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base[3])), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)), GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base)))).z, uint(uint(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.z))) + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) ^ uvec2(0u, 0u), (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) ^ uvec2(0u, 0u), max((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) ^ uvec2(0u, 0u), (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) ^ _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) * uvec2(1u, 1u))) / uvec2(1u, 1u))))) / uvec2(1u, 1u))).x : _GLF_FUZZED(subgroup_id))))))), _GLF_struct_6(true, mat4(1.0), bvec3(true), vec3(1.0), mat3x2(1.0), mat3(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             return;
            }
          }
         atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), int(ivec3(1, 0, 0)))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (0 | 0) | (64))) | 0), (64) | 0), 4);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), 0 | (int(3)))))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              return;
            }
           return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0))).y))))
          return;
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 1)), 1 * (int(ivec3(2, 1, 1)))))), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) / 1)); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       continue;
      }
     return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    break;
   if((GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_14num_workgroupsubgroup_basesubgroup_local_idworkgroup_base.z % 2) == 0)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
            continue;
           break;
          }
        }
       if(_GLF_DEAD(false))
        break;
       break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ((false)) && true), false))))))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true)))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      continue;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), 0 + (int(4))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), min(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, ~ (~ (8)))), _GLF_IDENTITY(int(8), (int(8)) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ~ (~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) | 0), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) | 0), max(_GLF_IDENTITY(int(8), (int(8)) | 0), _GLF_IDENTITY(int(8), (int(8)) | 0))))))), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), max(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), (true ? int(8) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)) | 0, ((int(8)) | 0) | 0))), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(int(8), int(8), _GLF_IDENTITY(int(8), int(ivec3(int(8), 1, 1))))), (int(8)) | 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)) | 0, ((int(8)) | 0) | ((int(8)) | 0)))))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), 0))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ~ (~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), max(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)) | 0, ((int(8)) | 0) | 0))), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(int(8), int(8), _GLF_IDENTITY(int(8), int(ivec3(int(8), 1, 1))))), (int(8)) | 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) | 0), (_GLF_IDENTITY(int(8), (int(8)) | 0)) | (0 << _GLF_IDENTITY(int(6), int(6))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ~ (~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), max(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)) | 0, ((int(8)) | 0) | 0))), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(int(8), int(8), _GLF_IDENTITY(int(8), int(ivec3(int(8), 1, 1))))), (int(8)) | 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), 0 | _GLF_IDENTITY((_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0))), int(int((_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ~ (~ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, clamp(_GLF_IDENTITY(8, 1 * (8)), 8, 8))), (int(8)) | 0)), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), max(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) - 0), _GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)) | 0, ((int(8)) | 0) | 0))), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(int(8), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), min(int(8), int(8)))) | (int(8))), _GLF_IDENTITY(int(8), int(ivec3(int(8), 1, 1))))), (int(8)) | 0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)), 0 | (_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | 0)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))))))))) ^ 0))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  return;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0)), mix(float(float(mat2x3(1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-1043.5114)), bool(false)))), 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true))), clamp(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0)), mix(float(float(mat2x3(1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-1043.5114)), bool(false)))), 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), _GLF_IDENTITY((vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], float(mat4x3((vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, exp(0.0), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true))), _GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0)), mix(float(float(mat2x3(1.0, cos(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0))), float(_GLF_FUZZED(-1043.5114)), bool(false)))), 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0)), mix(float(float(mat2x3(1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-1043.5114)), bool(false)))), mix(float(_GLF_FUZZED(731.753)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0)), mix(float(float(mat2x3(1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-1043.5114)), bool(false))))), bool(true))), 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true))), (_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) ^ 0)))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) ^ 0)))))))], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0)), mix(float(float(mat2x3(1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-1043.5114)), bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))))), 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)))) * vec4(1.0, 1.0, 1.0, 1.0))))))), clamp(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1)))))], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[3]), bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, true)))))), (clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), mix(vec4(_GLF_IDENTITY(_GLF_FUZZED(-549.051), mix(float(_GLF_FUZZED(-593.853)), float(_GLF_FUZZED(-549.051)), bool(true))), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))), 0.0))[_GLF_IDENTITY(0, (0) - 0)], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], (vec4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((vec4(-904.116, 7.4, 1.9, 283.928) - 8.1).y)), float(0.0), bool(true)))))[3]), bvec4(true, false, true, true))))))) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(roundEven(injectionSwitch)) : injectionSwitch)).x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec2(7243.0759, 9381.5203), injectionSwitch)))), 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], (vec4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))[3]), bvec4(true, false, true, true)))))), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)), 0.0), _GLF_IDENTITY(mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)), clamp(mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)), mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true)), mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-59.04), 0.0 + (_GLF_FUZZED(-59.04))), (_GLF_IDENTITY(_GLF_FUZZED(-59.04), 0.0 + (_GLF_FUZZED(-59.04)))) - 0.0)), vec4((vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[3]), bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true, true)))))))), (clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], _GLF_IDENTITY((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), min((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), _GLF_IDENTITY((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), max((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))))))[3]), bvec4(true, false, true, true))), clamp(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], _GLF_IDENTITY((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), min((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), _GLF_IDENTITY((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), max((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))))))[3]), bvec4(true, false, true, true))), _GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], _GLF_IDENTITY((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), min((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), _GLF_IDENTITY((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), max((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))))))[3]), bvec4(true, false, true, true))), _GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-549.051), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(9812.1145), _GLF_FUZZED(-59.04)), vec4((vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(5678.4140), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))[2], _GLF_IDENTITY((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), min((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), _GLF_IDENTITY((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), max((vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), (vec4(injectionSwitch.x, 1.0, 1.0, 0.0))))))[3]), bvec4(true, false, true, true))))))))) / 1.0)))) > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              continue;
             do
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        return;
       atomicStore(buf[_GLF_struct_replacement_8._f4.next_virtual_gid], _GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(~ (uint(2)), (_GLF_IDENTITY(~ (uint(2)), (false ? _GLF_FUZZED(workgroup_size) : ~ (uint(2))))) ^ 0u))), 4, _GLF_IDENTITY(64, 1 * (64)), 4);
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   else
    {
     atomicStore(buf[_GLF_struct_replacement_8._f4.next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, true && ((true) || false)))), (! (_GLF_IDENTITY(true, (true) || false))) || false)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (! ((_GLF_IDENTITY(true, (true) || false))))), (! (_GLF_IDENTITY(true, (true) || false))) || false))), true && (bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) || false))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) || false, ((true) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((true) || false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))) || false, false), false, true)))))))) || false))))))))))
            {
             do
              {
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   break;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       continue;
                      }
                     break;
                    }
                   return;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            continue;
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(int(true), clamp(int(true), int(true), _GLF_IDENTITY(int(true), 0 ^ (int(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))) || false))))))) : 1, _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(2.4)), float(injectionSwitch[0]), bool(true))))), injectionSwitch[1])).y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) / 1) * (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) ? _GLF_FUZZED(int(true)) : 1))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           return;
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
      return;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY((_GLF_DEAD(false)) || false, false || ((_GLF_DEAD(false)) || false)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), bool(bvec3(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), true, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), bool(bvec3(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), true, true))), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), bool(bvec3(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), true, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), bool(bvec3(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), true, true))), true, false), false))))) && true))); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, determinant(mat3(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), log(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), round(length(normalize(1.0))))), 0.0, 1.0))) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec2(bvec2(((injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec2(bvec2(((injectionSwitch.x < injectionSwitch.y)), true))))))))))))
          {
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false)))))) || false)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false)))))) || false)))) || false), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))), false)))))) || false)))) || false)))))))))
    return;
  }
}
