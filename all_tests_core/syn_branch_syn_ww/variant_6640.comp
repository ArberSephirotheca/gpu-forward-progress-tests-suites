#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(vec2(684.000, 62.80).s)), bool(false)))) && true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
        {
        }
       else
        {
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 0.0 + (max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))) : _GLF_FUZZED(-646.935)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (_GLF_IDENTITY(1 & int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))), injectionSwitch.y)), min(1 & int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1 & int(_GLF_ONE(1.0, injectionSwitch.y)), (1 & _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(int(int(_GLF_ONE(1.0, injectionSwitch.y))))), int(_GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(1, 0 | (1)) & int(_GLF_ONE(1.0, injectionSwitch.y))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))), (_GLF_IDENTITY(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))), ! (! (_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))))))) || false), false || (_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec2(1, 1))), 1, 1)))))))))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.3)), bool(false))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(457.799)), float(injectionSwitch.y), bool(true)))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))) != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.x = subgroup_id;
 do
  {
   GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.z = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.x;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z = subgroup_size;
 do
  {
   GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.y = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u)))).z;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        continue;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(76.69) : injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)))))))))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))), injectionSwitch)).y))))), true))))))))
        return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | 0), 1)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.x = num_workgroup;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (! (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((! (! (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! (! (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3((! (! (injectionSwitch.x > injectionSwitch.y))), false, false))))))))))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size) : gl_WorkGroupSize)))).x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))) || (false)), true && (! (_GLF_IDENTITY(false, ! (! (false))) || (false))))))), ! (! (false)))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), bool(bool(! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))))))
  {
  }
 else
  {
   GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.z = workgroup_size;
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(-2.8, -60.59)))).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, true))), false))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, true))), false))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (false) && true))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, true))), false))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, true))), false))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (false) && true))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), false, false))))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             return;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 ^ (0 | 0)), ((0 ^ (0 | 0))) / 1)); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))), max(injectionSwitch, injectionSwitch)))) + vec2(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))), max(injectionSwitch, injectionSwitch)))) + vec2(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))), max(injectionSwitch, injectionSwitch)))) + vec2(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))).x, float(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))), max(injectionSwitch, injectionSwitch)))) + vec2(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))).x, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0))))), float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0))))).x, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sin(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(81.73), (_GLF_FUZZED(81.73)) / exp(0.0)))))), 1.0), min(max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(81.73))))), 1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(81.73))))), 1.0), 0.0 + _GLF_IDENTITY((max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(81.73), (true ? _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(81.73), (true ? 1.0 : _GLF_FUZZED(81.73)) * sqrt(1.0)) : _GLF_FUZZED(-67.73))))))), 1.0)), float(mat4((max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(81.73), (true ? _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(81.73), (true ? 1.0 : _GLF_FUZZED(81.73)) * sqrt(1.0)) : _GLF_FUZZED(-67.73))))))), 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), abs(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))))))), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0)), dot(vec4(sin(0.0), 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 0.0))), determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-3.0))), (true ? 1.0 : _GLF_FUZZED(-1.8))), 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), (determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(_GLF_IDENTITY(0.0, (0.0) / 1.0))))) - 0.0), round(length(normalize(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-92.40) : 1.0)))))), clamp(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-98.70)), float(1.0), bool(true))), 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0))))))), max(float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(748.279)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), length(0.0))))), round(length(normalize(1.0)))), clamp(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), clamp(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(length(0.0), max(length(0.0), _GLF_IDENTITY(length(0.0), (length(0.0)) * 1.0))))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0))))))), float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), 1.0 * (length(0.0))))), round(length(normalize(1.0)))), clamp(vec3(0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), 1.0 * (_GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), clamp(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), mix(float(_GLF_FUZZED(3182.8268)), float(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0)))), bool(true))))))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-612.810)), bool(false)))), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), _GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), clamp(_GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), length(0.0), length(0.0))))), round(length(normalize(1.0)))), max(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), clamp(_GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), length(0.0), length(0.0))))), round(length(normalize(1.0)))), _GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), clamp(_GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), length(0.0), length(0.0))))), round(length(normalize(1.0)))), (_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), clamp(_GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), length(0.0), length(0.0))))), round(length(normalize(1.0)))), vec3(1.0, 1.0, 1.0) * (vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), clamp(_GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), length(0.0), length(0.0))))), round(length(normalize(1.0))))))) / vec3(1.0, 1.0, 1.0)))))))))), max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), (length(0.0)) - 0.0))), round(length(normalize(1.0)))), clamp(vec3(0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), clamp(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), exp(0.0) * (determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6273.8845) : 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))))), round(length(normalize(1.0))))))), max(float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, abs(1.0), 1.0)), max(float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, abs(1.0), 1.0)), float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, abs(1.0), 1.0)))))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), clamp(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(mat2(vec4(1.0, 1.0, 1.0, 1.0))), (vec4(mat2(vec4(1.0, 1.0, 1.0, 1.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0)))))), length(0.0))), round(length(normalize(1.0))))))), float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, tan(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), clamp(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), mix(float(length(0.0)), float(_GLF_FUZZED(-57.94)), bool(false))))), round(length(_GLF_IDENTITY(normalize(1.0), max(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(-5.1)), float(normalize(1.0)), bool(true))), normalize(1.0)))))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))) - 0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))) + (_GLF_IDENTITY(1.0, (1.0) - 0.0))))))), length(0.0))), round(length(normalize(1.0)))))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), clamp(vec3(0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), min(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, sqrt(0.0), 1.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4428.6869)), float(0.0), bool(true))) : _GLF_FUZZED(floor(-114.199))))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0))))))), max(float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), clamp(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-19.25)), bool(false)))))), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0))))))), float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0)))) - _GLF_ZERO(0.0, injectionSwitch.x)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), _GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) - 0.0)), clamp(vec3(0.0, determinant(mat3(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) / 1.0), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-20.00)), bool(false))), 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), _GLF_IDENTITY((determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(_GLF_IDENTITY(0.0, (0.0) / 1.0))))) - 0.0, mix(float(_GLF_FUZZED(324.523)), float((determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(_GLF_IDENTITY(0.0, (0.0) / 1.0))))) - 0.0), bool(true)))), round(length(normalize(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-92.40) : 1.0)))))), clamp(vec3(0.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), clamp(sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))))), 1.0, 0.0, tan(0.0), 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mat4(1.0) * (normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), mix(float(_GLF_FUZZED(-98.70)), float(1.0), bool(true))), 1.0)))), length(0.0))), round(length(normalize(1.0)))), _GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), min(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), _GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), min(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0))))))))))))), max(float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.5)), bool(false))), 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(float(191789u))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(748.279)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), _GLF_IDENTITY(length(0.0), mix(float(_GLF_IDENTITY(length(0.0), float(mat2(_GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), length(0.0))), 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(-4413.7175)), bool(false))))))), round(length(normalize(1.0)))), clamp(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(_GLF_IDENTITY(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), vec4(mat4x2(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), max(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) / vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0)))), clamp(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))) + 0.0) + (length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)))))))), _GLF_IDENTITY(length(0.0), max(length(0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(0.0), (length(0.0)) * 1.0), mix(float(_GLF_FUZZED((-264.797 / vec4(779.323, -3742.4552, 9.7, -962.076).x))), float(_GLF_IDENTITY(length(0.0), (length(0.0)) * 1.0)), bool(true))))))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0))))))), float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), 1.0 * (length(0.0))))), round(length(normalize(1.0)))), clamp(vec3(0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), 1.0 * (_GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), clamp(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), mix(float(_GLF_FUZZED(3182.8268)), float(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0)))), bool(true))))))), round(length(normalize(1.0)))), vec3(0.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-612.810)), bool(false)))), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0)), (mat3(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-612.810)), bool(false)))), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))) * mat3(1.0))), round(length(normalize(1.0)))), _GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), clamp(_GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))))), length(0.0), length(0.0))))), round(length(normalize(1.0)))), max(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), clamp(_GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))))), length(0.0), length(0.0))))), round(length(normalize(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), clamp(_GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), length(0.0), length(0.0))))), round(length(normalize(1.0)))), (_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), clamp(_GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), length(0.0), length(0.0))))), round(length(normalize(1.0)))), vec3(1.0, 1.0, 1.0) * (vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), clamp(_GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), length(0.0), length(0.0))))), round(length(normalize(1.0))))))) / vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) - 0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) - 0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0)), (float(mat2x4(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) - 0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0))) - 0.0), float(mat2x4(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) - 0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0)), float(mat2x4(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) - 0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(length(0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false ? _GLF_FUZZED(48.07) : _GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), length(0.0), length(0.0))))), round(length(normalize(1.0)))), (_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), clamp(_GLF_IDENTITY(length(0.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.4)), float(vec3(float(_GLF_FUZZED(2.4)), 0.0, 1.0))), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), length(0.0), length(0.0))))), round(length(normalize(1.0)))), vec3(1.0, 1.0, 1.0) * (vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(mat3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, length(0.0), 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(length(0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), length(0.0), length(0.0)), (clamp(_GLF_IDENTITY(length(0.0), mix(float(_GLF_FUZZED(2.4)), float(length(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), length(0.0), length(0.0))) + 0.0)))), round(length(normalize(1.0))))))) / vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(5547.9217)), bool(false))), 1.0, 1.0))) - vec3(0.0, 0.0, 0.0)))))))))), max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4x3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat4x3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0))))))))), 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), (length(0.0)) - 0.0))), round(length(normalize(1.0)))), clamp(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), clamp(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))))), round(length(normalize(1.0)))), min(vec3(0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), clamp(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))))), round(length(normalize(1.0)))), vec3(0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), clamp(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))))), round(length(normalize(1.0)))))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), exp(0.0) * (determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6273.8845) : _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))))), round(length(normalize(1.0))))))), max(float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-3.3))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, abs(1.0), 1.0)), max(float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, abs(1.0), 1.0)), float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, abs(1.0), 1.0)))))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), clamp(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(mat2(vec4(1.0, 1.0, 1.0, 1.0))), mix(vec4(_GLF_IDENTITY((vec4(mat2(vec4(1.0, 1.0, 1.0, 1.0))))[0], 1.0 * ((vec4(mat2(vec4(1.0, 1.0, 1.0, 1.0))))[0])), (vec4(mat2(vec4(1.0, 1.0, 1.0, 1.0))))[1], _GLF_FUZZED(91.57), _GLF_FUZZED(6852.9532)), vec4(_GLF_FUZZED(-2.1), _GLF_FUZZED(-8000.2552), (vec4(mat2(vec4(1.0, 1.0, 1.0, 1.0))))[2], (vec4(mat2(vec4(1.0, 1.0, 1.0, 1.0))))[3]), bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))), (vec4(mat2(vec4(1.0, 1.0, 1.0, 1.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0)))))), length(0.0))), round(length(normalize(1.0))))))), float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, tan(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), length(0.0))), round(length(normalize(1.0)))), clamp(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), mix(float(length(0.0)), float(_GLF_FUZZED(-57.94)), bool(false))))), (false ? _GLF_FUZZED(fma(-8.7, 39.23, -1.7)) : _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), mix(float(length(0.0)), float(_GLF_FUZZED(-57.94)), bool(false))))), mix(float(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(length(0.0), mix(float(length(0.0)), float(_GLF_FUZZED(-57.94)), bool(false)))))), float(_GLF_FUZZED(846.702)), bool(false))))), _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(1.0), max(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(-5.1)), float(normalize(1.0)), bool(true))), normalize(1.0))))), (_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(1.0), max(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(-5.1)), float(normalize(1.0)), bool(true))), normalize(1.0))))), (false ? _GLF_FUZZED(18.60) : round(length(_GLF_IDENTITY(normalize(1.0), max(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(-5.1)), float(normalize(1.0)), bool(true))), normalize(1.0)))))))) - sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))), vec3(0.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))) - 0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec4(1.0, 1.0, 0.0, 1.0))) + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, cos(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), (float(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, cos(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)))))))), length(0.0)), (true ? _GLF_IDENTITY(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))) - 0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec4(1.0, 1.0, 0.0, 1.0))) + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, cos(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), (float(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, cos(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)))))))), length(0.0)), transpose(transpose(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))) - 0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec4(1.0, 1.0, 0.0, 1.0))) + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, cos(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), (float(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(sqrt(0.0), 0.0, 1.0, 0.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 1.0, cos(0.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)))))))), length(0.0))))) : _GLF_FUZZED(mat3(-87.18, -535.077, -77.42, 4.5, 0.9, -18.91, -4.6, 45.71, 4.2))))), round(length(normalize(1.0)))))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(mat4x3(mat4(_GLF_IDENTITY(mat4x3(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), mat4x3(mat4x3(mat4x3(mat4(_GLF_IDENTITY(mat4x3(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))))))))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))))), clamp(vec3(0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) + sqrt(0.0)), 1.0)))), _GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(step(-9734.4611, 3.6)) : _GLF_IDENTITY(length(0.0), mix(float(length(0.0)), float(_GLF_FUZZED(9.9)), bool(false))))))), min(determinant(mat3(0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), length(0.0))))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, sqrt(0.0), 1.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4428.6869)), float(0.0), bool(true))) : _GLF_FUZZED(floor(-114.199))))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0))))))), max(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), clamp(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-722.672)), bool(false))), 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0)))), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.2)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), determinant(mat3(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-19.25)), bool(false)))))), 1.0, 0.0, tan(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0))))))), float(_GLF_IDENTITY(vec3(0.0, determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)))) - _GLF_ZERO(0.0, injectionSwitch.x)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0))), _GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) - 0.0)), clamp(vec3(0.0, determinant(mat3(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.7)), float(1.0), bool(true))))))), max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) / 1.0), length(0.0))), round(length(normalize(1.0)))), vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), determinant(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) / round(length(normalize(vec2(1.0, 1.0)))))))), _GLF_IDENTITY(round(length(normalize(1.0))), float(mat2x3(round(length(normalize(1.0))), abs(1.0), 0.0, 1.0, 0.0, 0.0)))), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat3(0.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-20.00)), min(float(_GLF_FUZZED(-20.00)), float(_GLF_FUZZED(-20.00)))), bool(false))), 1.0, 1.0)))), length(0.0))), round(length(normalize(1.0))))))))))))) / determinant(mat3(exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, tan(0.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.4) : 0.0))))))))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, abs(1.0), 1.0, 1.0, 1.0), mat2(1.0) * (mat3x2(injectionSwitch.y, 0.0, abs(1.0), 1.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, abs(1.0), 1.0, 1.0, 1.0), mat2(1.0) * (mat3x2(injectionSwitch.y, 0.0, abs(1.0), 1.0, 1.0, 1.0))))) * sqrt(1.0))), injectionSwitch.y))) + abs(0.0)), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (true) || false) && (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9262.0720) : injectionSwitch.y))))), false || (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (false))) && (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY((! (true)) && true, false || ((! (true)) && _GLF_IDENTITY(true, false || (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (true)) && true, ! (! ((! (true)) && true)))))))), (injectionSwitch.x < injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (true && (_GLF_IDENTITY(false, ! (! (false))))) || false)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-91.43, 172.227)))).y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / exp(vec2(0.0, 0.0)))).x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch)) : injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch)) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch)) : injectionSwitch)).y)))), ~ (~ (int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch)) : injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch)) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch)) : injectionSwitch)).y))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))))))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false))))), (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
  }
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w = workgroup_id;
 uint workgroup_base = GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.z * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.w;
 do
  {
   GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.z * _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.y, (GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.y) ^ (0u & (25461u | 48275u)));
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y = subgroup_base;
 uint virtual_gid = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.w + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.y;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z), (_GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z)) - 0u) : GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))) / (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))), 0u ^ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))))))) / 1u) >> _GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))), 0u ^ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))))))) / 1u) >> _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))), 0u ^ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))))))) / 1u) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) + ((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.y + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))) % GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.y), (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z), (_GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z)) - 0u) : GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y))), uint(uint((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z), (_GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.z)) - 0u) : GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_12num_workgroupsubgroup_basesubgroup_idworkgroup_id.y)))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), _GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))), 0u ^ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.x)) | (1u))), ~ (~ (uint(1u))))))))) / 1u) >> _GLF_IDENTITY(uint(1u), uint(1u)))) + ((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0 + (_GLF_IDENTITY(1, clamp(1, 1, 1))))))) % GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.y)) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 do
  {
   GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.x = next_virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) >> 0)), min(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) | _GLF_IDENTITY(0, (0) ^ 0))), (uint(_GLF_IDENTITY(1, (1) >> 0))) * 1u))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y)))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false), true, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, true, true)), false)), ! (! (bool(bvec2(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, ! (! (true))))), false))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(82.95, 231.050)))).y))))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) || (false))));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     else
      {
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       continue;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec2(false, false))), true))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           barrier();
          }
         barrier();
        }
      }
     return;
    }
   if((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base, clamp(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base, clamp(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base)), GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_base)).y % 2) == _GLF_IDENTITY(0, (0) | 0))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true))))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(0 >> _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY(max(5, 5), min(max(5, 5), max(5, 5)))))), (0 >> _GLF_IDENTITY(int(5), int(5))) | (0 >> _GLF_IDENTITY(int(5), int(5)))), 0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (5)))), int(5))))), (_GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(ivec3(_GLF_IDENTITY(int(5), int(5)), 0, 1)))), ~ (~ ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(71334) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))))))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), _GLF_IDENTITY(int(5), max(int(5), int(5))))), int(5)))) ^ 0)) >> _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), _GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.x], uint(2), 4, 64, 4);
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
        }
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 & 1) & 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, true))))))))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        return;
      }
     else
      {
      }
    }
   else
    {
     atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidsubgroup_sizeworkgroup_size.x], uint(2), 4, 64, 4);
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)).x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
}
