#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 mat3x2 _f0;
 uvec4 _f1;
 uint subgroup_id;
 bvec3 _f2;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_8 {
 uint num_workgroup;
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 mat2x4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 ivec2 _f1;
 uint _f2;
 mat4x3 _f3;
 uint _f4;
 bool _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 float _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 ivec3 _f1;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), int(int((1 << _GLF_IDENTITY(int(0), int(0)))))) >> _GLF_IDENTITY(int(0), int(0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), int(int((1 << _GLF_IDENTITY(int(0), int(0)))))) >> _GLF_IDENTITY(int(0), int(0))), (true ? (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), int(int((1 << _GLF_IDENTITY(int(0), int(0)))))) >> _GLF_IDENTITY(int(0), int(0))) : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(-10769)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(mat3x2(1.0), uvec4(1u), gl_SubgroupID, bvec3(true));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))))), true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (! (true && (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))) || false), false, true, true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)))))))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), mix(vec2((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[0], _GLF_FUZZED(-162.284)), vec2(_GLF_FUZZED(-4.6), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[1]), bvec2(false, true)))).x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   do
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), false, true))))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.1) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false, false), false))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)))))))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))));
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / 1.0, max((_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / 1.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / 1.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) / 1.0))) / 1.0)))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true)))))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))) || false)))), false, _GLF_IDENTITY(false, bool(bool(false)))))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(! (! (bool((false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool((false)))), bool(bool(_GLF_IDENTITY(! (! (bool((false)))), false || (! (! (bool((false)))))))))), bool(bvec3(! (_GLF_IDENTITY(! (! (bool((false)))), bool(bool(_GLF_IDENTITY(! (! (bool((false)))), false || (! (! (bool((false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true, false))))))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(2), int(2))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(asin(distance(7.2, -9.1))) : injectionSwitch.x)) < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! ((! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))))))))))))))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(gl_NumWorkGroups.x, _GLF_struct_7(_GLF_IDENTITY(vec4(1.0), min(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(11.19), _GLF_FUZZED(57.05), _GLF_FUZZED((false ? 1.2 : _GLF_IDENTITY(501.327, 0.0 + (501.327)))), _GLF_FUZZED(501.862)), vec4((vec4(1.0))[0], (vec4(1.0))[1], _GLF_IDENTITY((vec4(1.0))[2], min((vec4(1.0))[2], (vec4(1.0))[_GLF_IDENTITY(2, (2) ^ 0)])), _GLF_IDENTITY((vec4(1.0)), _GLF_IDENTITY(vec4(mat2(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(vec4(mat2(_GLF_IDENTITY((vec4(1.0)), ((vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(round(-203.607))))))) - vec4(0.0, 0.0, 0.0, 0.0)))), (vec4(_GLF_IDENTITY(mat2(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) - vec4(0.0, 0.0, 0.0, 0.0))), (true ? mat2(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) - vec4(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2(-6.5, 1.8, 3.4, 4.8)))))) - vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(vec4(3.3, -69.02, -200.204, -14.65)))))[3]), bvec4(true, true, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) + vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4((_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))[0], _GLF_FUZZED(1.9), (_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))[2], _GLF_FUZZED(vec3(34.44, 5.1, 3659.1139).p)), vec4(_GLF_FUZZED(-1.7), (_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))[1], _GLF_FUZZED(vec4(-89.95, -4.2, -460.357, -91.03).b), (_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))[3]), bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), _GLF_struct_6(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) | ivec4(0, 0, 0, 0))) | (_GLF_IDENTITY(ivec4(1), ivec4(1, 1, 1, 1) * (ivec4(1))))))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(-8.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), mat4(1.0) * (vec4(1.0))), gl_WorkGroupSize.x);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.5) : injectionSwitch.x)) < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          barrier();
        }
       else
        {
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false))) && true))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((0 | 0), int(ivec2(_GLF_IDENTITY((0 | 0), clamp((0 | 0), (0 | 0), (0 | 0))), 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 & _GLF_IDENTITY(1, clamp(1, 1, 1))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | (5))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(5), 0 | (int(5)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(int(5), 0 | (int(5)))), ((_GLF_IDENTITY(int(5), 0 | (int(_GLF_IDENTITY(5, 0 + (5))))))) | 0), (_GLF_IDENTITY(int(5), 0 | (int(5)))), (_GLF_IDENTITY(int(5), 0 | (int(5))))))))) >> _GLF_IDENTITY(int(5), int(5)))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0)), (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))) / (1 ^ 0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = (0 | _GLF_IDENTITY(0, 0 | (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) && true)), bool(bvec2(false, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) && true)), bool(bvec2(false, true))))) || false) || false))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)).x, gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(1.2, -348.046), injectionSwitch)) : injectionSwitch)))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_4(_GLF_struct_0(mat2x4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))))))), _GLF_struct_1(mat3x2(1.0), 1.0, uvec2(_GLF_IDENTITY(1u, (1u) / 1u))), _GLF_struct_2(mat2(1.0), ivec2(1), 1u, mat4x3(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY((_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(mix(float(float(1.0)), float(_GLF_FUZZED(-3986.6641)), bool(false)), (_GLF_IDENTITY(mix(float(float(1.0)), float(_GLF_FUZZED(-3986.6641)), bool(false)), mix(float(mix(float(float(1.0)), float(_GLF_FUZZED(-3986.6641)), bool(false))), float(_GLF_FUZZED(-0.4)), bool(false)))) / 1.0))), ((_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(mix(float(float(1.0)), float(_GLF_FUZZED(-3986.6641)), bool(false)), (_GLF_IDENTITY(mix(float(float(1.0)), float(_GLF_FUZZED(-3986.6641)), bool(false)), mix(float(mix(float(float(1.0)), float(_GLF_FUZZED(-3986.6641)), bool(false))), float(_GLF_FUZZED(-0.4)), bool(false)))) / 1.0)))) / 1.0) / _GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(91.36)), bool(false)))))), 1u, true, mat4x2(1.0)), _GLF_struct_3(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.9) : 1.0))) + 0.0)), mat3x4(1.0), mat2x3(1.0), mat2x4(1.0), mat3x2(1.0)), _GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))), _GLF_IDENTITY(ivec3(1), (ivec3(1)) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))), _GLF_struct_replacement_9.workgroup_size * workgroup_id);
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + _GLF_struct_replacement_10.subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, min(_GLF_struct_replacement_5.workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, ~ (~ (_GLF_struct_replacement_5.workgroup_base)))) >> 0u), (_GLF_struct_replacement_5.workgroup_base) >> 0u))) + _GLF_struct_replacement_10.subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, min(_GLF_struct_replacement_5.workgroup_base, _GLF_struct_replacement_5.workgroup_base)) + _GLF_struct_replacement_10.subgroup_id * subgroup_size)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, min(_GLF_struct_replacement_5.workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, ~ (~ (_GLF_struct_replacement_5.workgroup_base)))) >> 0u), (_GLF_struct_replacement_5.workgroup_base) >> 0u))) + _GLF_struct_replacement_10.subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, min(_GLF_struct_replacement_5.workgroup_base, _GLF_struct_replacement_5.workgroup_base)) + _GLF_struct_replacement_10.subgroup_id * subgroup_size)) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, min(_GLF_struct_replacement_5.workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, ~ (~ (_GLF_struct_replacement_5.workgroup_base)))) >> 0u), (_GLF_struct_replacement_5.workgroup_base) >> 0u))) + _GLF_struct_replacement_10.subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, min(_GLF_struct_replacement_5.workgroup_base, _GLF_struct_replacement_5.workgroup_base)) + _GLF_struct_replacement_10.subgroup_id * subgroup_size)) - 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, min(_GLF_struct_replacement_5.workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, ~ (~ (_GLF_struct_replacement_5.workgroup_base)))) >> 0u), (_GLF_struct_replacement_5.workgroup_base) >> 0u))) + _GLF_struct_replacement_10.subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, min(_GLF_struct_replacement_5.workgroup_base, _GLF_struct_replacement_5.workgroup_base)) + _GLF_struct_replacement_10.subgroup_id * subgroup_size)) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, min(_GLF_struct_replacement_5.workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, ~ (~ (_GLF_struct_replacement_5.workgroup_base)))) >> 0u), (_GLF_struct_replacement_5.workgroup_base) >> 0u))) + _GLF_struct_replacement_10.subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, min(_GLF_struct_replacement_5.workgroup_base, _GLF_struct_replacement_5.workgroup_base)) + _GLF_struct_replacement_10.subgroup_id * subgroup_size)) - 0u)))) / 1u) << 0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u | (_GLF_FUZZED(subgroup_size))) : (_GLF_struct_replacement_5.workgroup_base + _GLF_struct_replacement_10.subgroup_id * subgroup_size) << 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
    }
   else
    {
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_10.subgroup_id, min(_GLF_struct_replacement_10.subgroup_id, _GLF_struct_replacement_10.subgroup_id))) ^ 0u) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (1))) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-42348, (-42348) * (1 | 1))) : 1))))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), ((subgroup_local_id + 1)) << 0u) % subgroup_size)) | 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (subgroup_local_id + 1) / 1u)) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), max(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), 0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) ^ (subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(ivec2(76647, 92861).y) : 1))) | (1)))))))) - 0)) % subgroup_size))))), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (1))) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-42348, (-42348) * (_GLF_IDENTITY(1 | 1, max(1 | 1, 1 | 1))))) : 1))))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) << 0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (((subgroup_local_id + 1)) << 0u))) % subgroup_size)) | 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), max(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), 0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) ^ (subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))))))) % subgroup_size))))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (1))) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-42348, (-42348) * (1 | 1)), (false ? _GLF_FUZZED((-50359 - -78549)) : _GLF_IDENTITY(-42348, (-42348) * (1 | 1))))) : 1))))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size)) | 0u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uvec4(uint(6u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))), uint(6u)), max(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), 0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) ^ (subgroup_size))), ((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))))))) % subgroup_size)))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false))));
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(53935u)), _GLF_FUZZED(2.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), false, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))))), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(845.747)), bool(false)))))), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0))), injectionSwitch.y))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true))))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))))))))))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false)))))) || false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, exp(0.0), 1.0)), (float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, exp(0.0), 1.0))) / 1.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-7.9, 1.4, 2.5, -1.6).z)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))), mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))))), injectionSwitch), max(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0))), mix(vec2((_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0))))[0], (_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0))))[1]), vec2(_GLF_FUZZED(-4187.0449), _GLF_FUZZED(539.306)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0))), vec2(mat4x3(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0)))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-9.1, -999.112)) : (injectionSwitch))))) * vec2(1.0, 1.0)))))), injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0))))), injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, false)))))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             else
              {
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)));
                }
              }
            }
           else
            {
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), min(0, 0))) | (_GLF_IDENTITY(0, min(0, 0))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)), true && (bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))))) || _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true), false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, 1.0 * ((injectionSwitch.x) + 0.0))) > injectionSwitch.y))))))) || false))))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)) || false)) && true))) || false))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec4(true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false, true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false || (true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, false || (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))), bool(bvec4(true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false, true)))))))))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                            barrier();
                          }
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                         else
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))) || (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(-62.32, (false ? _GLF_FUZZED(637.662) : -62.32)) * 8313.3175))), vec2(_GLF_FUZZED(float(_GLF_IDENTITY(76448, max(76448, 76448)))), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], 1.0 * ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-62.32 * 8313.3175))), vec2(_GLF_FUZZED(float(76448)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), (injectionSwitch), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))))))))[1], clamp((injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) + 0)))], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-8.5)), float(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0)), float(_GLF_FUZZED(63.40)), bool(false)))), bool(true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])))[1]))), bvec2(false, true))).x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-62.32 * 8313.3175))), vec2(_GLF_FUZZED(float(76448)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x), max(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-62.32 * 8313.3175))), vec2(_GLF_FUZZED(float(76448)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, (1) << (0 | 0))]))), bvec2(false, true))).x), (false ? _GLF_FUZZED(-77.67) : float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-62.32 * 8313.3175))), vec2(_GLF_IDENTITY(_GLF_FUZZED(float(76448)), float(mat2x3(_GLF_FUZZED(float(76448)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), exp(0.0), 0.0, 0.0, sqrt(tan(0.0))))), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x))), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-62.32 * 8313.3175))), vec2(_GLF_FUZZED(float(76448)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).x))), float(_GLF_FUZZED(-2667.3982)), bool(false))))) > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true), true)))))))));
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
                        barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (true ? injectionSwitch.y : _GLF_FUZZED(25.90))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(25.90))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))))))
              barrier();
             for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ 1), int(int(_GLF_IDENTITY((0 ^ 1), (true ? _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) | ((0 ^ 1))) : _GLF_FUZZED((60077 / 69561))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false)))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       do
        {
         barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, log(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, abs(0.0)))), injectionSwitch.y))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(52383) : _GLF_IDENTITY(0, int(ivec3(0, 0, 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))) || false)) && true)), true, true, _GLF_IDENTITY(true, bool(bool(true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      barrier();
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))), true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))), true))))) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-15106) : 0))], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(2.2)), vec2(_GLF_FUZZED((+ -5.6)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(2.2)), vec2(_GLF_FUZZED((+ -5.6)), (injectionSwitch)[1]), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(2.2)), vec2(_GLF_FUZZED((+ -5.6)), (injectionSwitch)[1]), bvec2(false, true)), vec2(mat3x2(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(2.2)), vec2(_GLF_FUZZED((+ -5.6)), (injectionSwitch)[1]), bvec2(false, true)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(2.2)), vec2(_GLF_FUZZED((+ -5.6)), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))), bool(bvec2(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true)))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), true, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), true, false)))), false, true)))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(2.2)), vec2(_GLF_FUZZED((+ -5.6)), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))).x > injectionSwitch.y))), true))))))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY((false), false || ((false)))))))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(67523u))), float(0.0), bool(true))), round(length(normalize(abs(1.0)))), sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-2513.8067 / 4.3))), bool(false))))), transpose(transpose(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-2.4)), bool(false))), round(length(normalize(abs(1.0)))), sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(exp(-705.840))))))));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false))), ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))) && true))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))) && true))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY((- -3218.3169), min(_GLF_IDENTITY((- -3218.3169), clamp((- -3218.3169), (- -3218.3169), (- -3218.3169))), (- -3218.3169))))), float(injectionSwitch.y), bool(true)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(clamp(405.003, 4201.9735, 1144.1145)) : injectionSwitch.y))))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     do
      {
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true, true))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || (_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(26107) : 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), max(int(0), int(0)))) / 1), int(0)))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) >> 0, ((int(3)) >> 0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) >> 0), max(_GLF_IDENTITY(int(3), (int(3)) >> 0), _GLF_IDENTITY(int(3), (int(3)) >> 0)))) | (_GLF_IDENTITY(int(3), (int(3)) >> 0))), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(18062))), int(3))))), 0 + (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) >> 0, ((int(3)) >> 0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) >> 0), max(_GLF_IDENTITY(int(3), (int(3)) >> 0), _GLF_IDENTITY(int(3), (int(3)) >> 0)))) | (_GLF_IDENTITY(int(3), (int(3)) >> 0))), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(18062))), int(3))))), min((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) >> 0, ((int(3)) >> 0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) >> 0), max(_GLF_IDENTITY(int(3), (int(3)) >> 0), _GLF_IDENTITY(int(3), (int(3)) >> 0)))) | (_GLF_IDENTITY(int(3), (int(3)) >> 0))), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(18062))), int(3))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) >> 0, ((int(3)) >> 0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) >> 0), max(_GLF_IDENTITY(int(3), (int(3)) >> 0), _GLF_IDENTITY(int(3), (int(3)) >> 0)))) | (_GLF_IDENTITY(int(3), (int(3)) >> 0))), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(18062))), int(3))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)) >> 0, ((int(3)) >> 0) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) >> 0), max(_GLF_IDENTITY(int(3), (int(3)) >> 0), _GLF_IDENTITY(int(3), (int(3)) >> 0)))) | (_GLF_IDENTITY(int(3), (int(3)) >> 0))), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(18062))), int(3)))))) << 0))))), ((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (int(3)) >> 0), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(18062))), int(3)))))) | (0 << _GLF_IDENTITY(int(0), int(0)))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false, true, true)))) || false); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         else
          {
          }
        }
       atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(69564) : _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(min(4, 4), max(min(4, 4), _GLF_IDENTITY(min(4, 4), (min(4, 4)) * 1)))), (int(_GLF_IDENTITY(min(4, 4), max(min(4, 4), _GLF_IDENTITY(min(4, 4), (min(4, 4)) * 1))))) / _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1))) | (1)), 1, 1)))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(min(4, 4), max(min(4, 4), _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))), min(_GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))), (_GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4)))) | (_GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))))), _GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))), clamp(_GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))), _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4))), _GLF_IDENTITY(min(4, 4), 0 ^ (min(4, 4)))))))) * 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) ^ 0), 4), max(min(_GLF_IDENTITY(4, (4) | (4)), 4), _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY((min(4, 4)), (_GLF_IDENTITY((min(4, 4)), clamp(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4)), (min(4, 4))))) - 0) * 1)))), 0 ^ (int(_GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) ^ 0), 4), max(min(_GLF_IDENTITY(4, (4) | (4)), 4), _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY((min(4, 4)), (_GLF_IDENTITY((min(4, 4)), clamp(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) | ((min(4, 4)))), (min(4, 4)), (min(4, 4))))) - 0) * 1))))))) / 1))) | (int(_GLF_IDENTITY(int(_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << 0) | (4)), 0)), (int(ivec2(_GLF_IDENTITY(4, (4) | (4)), 0))) >> 0))), max(min(4, 4), _GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), (min(4, 4)) << 0), _GLF_IDENTITY(_GLF_IDENTITY((min(4, 4)) * 1, max((min(4, 4)) * 1, (min(4, 4)) * 1)), (_GLF_IDENTITY((min(4, 4)) * 1, int(int(_GLF_IDENTITY((min(4, 4)), ((min(4, 4))) + 0) * 1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), max(_GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(min(4, 4), 0 + (min(4, 4))), 1), (ivec2(_GLF_IDENTITY(min(4, 4), 0 + (min(4, 4))), 1)) << (ivec2(0, 0) << _GLF_IDENTITY(ivec2(0), ivec2(0))))))) / 1)) << 0), _GLF_IDENTITY(min(4, 4), (min(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) << 0))), 4)) * 1))), 0 + (_GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | 0), 4), max(min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), 4), _GLF_IDENTITY(min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (false ? _GLF_FUZZED(-80221) : ~ (4))))), 4)), 4), _GLF_IDENTITY((min(4, 4)), (_GLF_IDENTITY((min(4, 4)), (_GLF_IDENTITY((min(4, 4)), 0 | ((min(4, 4))))) ^ 0)) + 0) * 1))))))) / 1)))))))))), 64, 4);
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))
      barrier();
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), true && ((true)))), (bool(_GLF_IDENTITY((true), true && ((true))))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), true && ((true)))), (bool(_GLF_IDENTITY((true), true && ((true))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), true && ((true)))), (bool(_GLF_IDENTITY((true), true && ((true))))) || false))) || false)))), (! (true)) || false), (! (true)) || false))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.3)), float(injectionSwitch.y), bool(true)))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.1)), vec2(_GLF_FUZZED(float(108156u)), _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0)))), bvec2(false, true))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.1)), vec2(_GLF_FUZZED(float(108156u)), _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0)))), bvec2(false, true))).y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || false))))))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(403.000)), bvec2(true, false))), exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))).x < injectionSwitch.y)))))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7594.5461), _GLF_FUZZED(-788.097)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, injectionSwitch.x)) > injectionSwitch.y))) || false))))))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(cos(0.0), 1.0, 1.0), (vec3(cos(0.0), 1.0, 1.0)) * mat3(1.0))), clamp(float(_GLF_IDENTITY(vec3(cos(0.0), 1.0, 1.0), (vec3(cos(0.0), 1.0, 1.0)) * mat3(1.0))), float(_GLF_IDENTITY(vec3(cos(0.0), 1.0, 1.0), (vec3(cos(0.0), 1.0, 1.0)) * mat3(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(cos(0.0), 1.0, 1.0), (vec3(cos(0.0), 1.0, 1.0)) * mat3(1.0))), (false ? _GLF_FUZZED(-8.8) : float(_GLF_IDENTITY(vec3(cos(0.0), 1.0, 1.0), (vec3(cos(0.0), 1.0, 1.0)) * mat3(1.0)))))))), 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0), (mat4x3(injectionSwitch, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0), (mat4x3(injectionSwitch, 0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, exp(0.0)))))), 1.0, abs(1.0), 1.0, 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0), (mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, cos(0.0), 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))))))) && true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 1u * (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec2(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))], _GLF_IDENTITY(1u, ~ (~ (1u))))), uint(uint(uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, ~ (~ (1u)))), max(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), 0u | (~ (~ (1u)))), ~ (~ (1u)))))), max(uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, ~ (~ (1u)))), uvec2(buf[virtual_gid], _GLF_IDENTITY(1u, ~ (~ (1u))))))))))))))), (_GLF_IDENTITY(buf[virtual_gid], 1u * (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))) * 1u)], uint(uvec2(buf[virtual_gid], 1u)))))) / 1u), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     do
      {
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))
    {
     barrier();
    }
   else
    {
    }
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           barrier();
          }
        }
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0))), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat2x4(0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0))), 0.0))) - sin(vec2(0.0, 0.0))).y))))
          {
           do
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(54.91) : 1.0)), _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_IDENTITY(sqrt(1.0), float(vec2(sqrt(1.0), 0.0)))), float(_GLF_FUZZED(-7277.8356)), bool(false))), 1.0, 0.0))) > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)))))))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)))))))), false))));
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(0, min(0, 0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), (true) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), ! (! (subgroup_local_id + 1 < subgroup_size))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! _GLF_IDENTITY((! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (_GLF_IDENTITY(! ((subgroup_local_id + 1 < subgroup_size)), true && (! ((subgroup_local_id + 1 < subgroup_size))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (_GLF_IDENTITY(! ((subgroup_local_id + 1 < subgroup_size)), true && (! ((subgroup_local_id + 1 < subgroup_size))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)) || (_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), ! (_GLF_IDENTITY(! ((subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(true && (! ((subgroup_local_id + 1 < subgroup_size))), ! (! (true && (! ((subgroup_local_id + 1 < subgroup_size)))))))))))))))), ((! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (_GLF_IDENTITY(! ((subgroup_local_id + 1 < subgroup_size)), true && (! ((subgroup_local_id + 1 < subgroup_size))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (_GLF_IDENTITY(! ((subgroup_local_id + 1 < subgroup_size)), true && (! ((subgroup_local_id + 1 < subgroup_size))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)) || (_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), ! (_GLF_IDENTITY(! ((subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(true && (! ((subgroup_local_id + 1 < subgroup_size))), ! (! (true && (! ((subgroup_local_id + 1 < subgroup_size))))))))))))))))) || false)))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), true))), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), true))), false))), true), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), true))), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), true))), false))), true), false)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), true))), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (false))) || false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))), bool(bool((_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))) || false)))), false), true))), false))), true), false))))))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! (! (true && (false))))) || false), ! (! (true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) / 1)); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(~ (~ (~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (~ (~ (~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (~ (~ (~ (~ (_GLF_IDENTITY(4, (4) / 1))))))))), 64, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 0 | (4))))));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(clamp(-8.9, -50.74, sqrt(-3.7))) : injectionSwitch.y, min(false ? _GLF_FUZZED(clamp(-8.9, -50.74, sqrt(-3.7))) : injectionSwitch.y, false ? _GLF_FUZZED(clamp(-8.9, -50.74, sqrt(-3.7))) : injectionSwitch.y)))))) || (false))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), false || (false)))), true), false))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false)))))), false)))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))) || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool((false))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), _GLF_IDENTITY(false, bool(bool(false)))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bool(false || (false)), false || (bool(false || (false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), false))), _GLF_IDENTITY(true, (true) && true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), true), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), false || (true && (_GLF_IDENTITY(false, false || (false)))))), true), false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))) && true))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true && (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))))), true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(-3326.6852), max(_GLF_FUZZED(-3326.6852), _GLF_FUZZED(-3326.6852)))), bool(false))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490))), mix(float(_GLF_FUZZED((2534.1155 - -0.9))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(380.490), float(mat2x4(_GLF_FUZZED(380.490), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(380.490), float(mat2x4(_GLF_FUZZED(380.490), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(380.490), float(mat2x4(_GLF_FUZZED(380.490), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))), (float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(380.490), float(mat2x4(_GLF_FUZZED(380.490), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))) / 1.0))), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490))), mix(float(_GLF_FUZZED((2534.1155 - -0.9))), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))))))), (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0))))))))) / 1.0)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))))))), (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0))))))))) / 1.0)), min((_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))))))), (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0))))))))) / 1.0)), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))))))), (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0))))))))) / 1.0)))), 1.0, 0.0, 0.0), vec4(mat2x4(vec4(_GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))))))), (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0))))))))) / 1.0)), min((_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))))))), (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0))))))))) / 1.0)), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))))))), (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(380.490, float(mat2x3(_GLF_IDENTITY(380.490, clamp(380.490, 380.490, 380.490)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, sqrt(1.0)))), 1.0, tan(0.0), 0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0))))))))) / 1.0)))), 1.0, 0.0, 0.0), 0.0, 1.0, 1.0, 1.0))))))), bool(true))) : _GLF_FUZZED(8704.8189))))))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490))), mix(float(_GLF_FUZZED((2534.1155 - -0.9))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490)))), bool(true)))))))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(normalize(vec2(-381.839, 8.5))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x)) > injectionSwitch.y)), true && (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))))), true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3326.6852)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490))), mix(float(_GLF_FUZZED((2534.1155 - -0.9))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490)))), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490))), mix(float(_GLF_FUZZED((2534.1155 - -0.9))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, 0.0 + (380.490)), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 0.0 + (_GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))))), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1128.7251)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0))))))))))), bool(true))) : _GLF_FUZZED(8704.8189))))))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490))), mix(float(_GLF_FUZZED((2534.1155 - -0.9))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490)))), bool(true)))))))))))) || false)) || false, ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(normalize(vec2(-381.839, 8.5))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(normalize(vec2(-381.839, 8.5))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(normalize(vec2(-381.839, 8.5))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true)))) || false))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(49.40, 68.78, -1.2, -3.2)) : mat2(1.0)))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x)))) > injectionSwitch.y)), true && (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), (injectionSwitch) * mat2(1.0)))), (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))))), true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3326.6852)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490))), mix(float(_GLF_FUZZED((2534.1155 - -0.9))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490)))), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490))), mix(float(_GLF_FUZZED((2534.1155 - -0.9))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(380.490, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, 0.0 + (380.490)), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 0.0 + (_GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))))), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1128.7251)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0))))))))))), bool(true))) : _GLF_FUZZED(8704.8189))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490))), mix(float(_GLF_FUZZED((_GLF_IDENTITY(2534.1155, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(2534.1155, clamp(2534.1155, 2534.1155, 2534.1155)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), mix(float(float(mat4x2(_GLF_IDENTITY(2534.1155, clamp(2534.1155, 2534.1155, 2534.1155)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(5.0)), bool(false)))) - -0.9))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490)))), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490))), mix(float(_GLF_FUZZED((2534.1155 - -0.9))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(380.490, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, 0.0 + (380.490)), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 0.0 + (_GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))))), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1128.7251)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0))))))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(380.490, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, 0.0 + (380.490)), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 0.0 + (_GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))))), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1128.7251)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0))))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, length(0.0), 0.0, abs(1.0), 1.0, 1.0), transpose(transpose(mat4(_GLF_IDENTITY(380.490, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(380.490, 0.0 + (380.490)), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), 0.0 + (_GLF_IDENTITY(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), clamp(float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)))))), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(380.490, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1128.7251)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), max(float(mat4x3(380.490, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), float(mat4x3(380.490, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, abs(0.0), 1.0, 1.0))))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, length(0.0), 0.0, abs(1.0), 1.0, 1.0)))))))))), bool(true))) : _GLF_FUZZED(8704.8189))))))))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490))), mix(float(_GLF_FUZZED((2534.1155 - -0.9))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490)))), bool(true)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))) + (clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490))), mix(float(_GLF_FUZZED((2534.1155 - -0.9))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(380.490)))), _GLF_IDENTITY(bool(true), ! (! (bool(true))))))))))))))))) || false)) || false) || false)))));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, false || (false))))), ! (! (bool(bool(! (_GLF_IDENTITY(false, false || (false)))))))))))) || _GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7684.8268)), float(injectionSwitch.y), bool(true)))))) || false)))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)))).y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))))) && true))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec3(! (bool(false)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), float(vec4(float(vec2(injectionSwitch.x, 1.0)), 0.0, 1.0, 1.0)))) > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       subgroupAll(false);
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec4(_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ! (! _GLF_IDENTITY(((! (false))), (((! (false)))) || false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << 0) ^ 0), 64, 4);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(59.39)), bool(false)))))), float(_GLF_FUZZED(33.98)), bool(false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(774.533, 529.928)))).y)))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((true ? -2910.6871 : -0.6)), min(_GLF_FUZZED((_GLF_IDENTITY(true ? -2910.6871 : -0.6, (true ? -2910.6871 : -0.6) - 0.0))), _GLF_IDENTITY(_GLF_FUZZED((true ? -2910.6871 : -0.6)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0)) + (_GLF_FUZZED((true ? -2910.6871 : -0.6)))))), _GLF_IDENTITY(_GLF_FUZZED(5272.4391), clamp(_GLF_FUZZED(5272.4391), _GLF_FUZZED(5272.4391), _GLF_IDENTITY(_GLF_FUZZED(5272.4391), mix(float(_GLF_FUZZED(vec2(-1.2, 8887.2396).g)), float(_GLF_FUZZED(5272.4391)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), min(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), min(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (((injectionSwitch)) * mat2(1.0)) * vec2(1.0, 1.0)))[1]), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (mat2(1.0) * ((injectionSwitch))) + vec2(0.0, 0.0)))[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) * mat2(1.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(_GLF_IDENTITY(float(_GLF_IDENTITY(87982u, min(87982u, 87982u))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(87982u, min(87982u, 87982u))), min(float(_GLF_IDENTITY(87982u, min(87982u, 87982u))), float(_GLF_IDENTITY(87982u, min(87982u, 87982u))))), float(_GLF_IDENTITY(87982u, min(87982u, 87982u))))))), bool(false))), (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]))))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec2(bvec2(bvec2(bvec2(true, true))))))), false, true))))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))).y, 1.0), vec2(mat2(vec2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(6.9, -3288.5955)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))))))).y, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), false)))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), false))))))))))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) * (injectionSwitch)).x > injectionSwitch.y)) || false)) ? _GLF_FUZZED(vec2(-7.7, 8.2)) : injectionSwitch)).x > injectionSwitch.y))))
                      barrier();
                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ _GLF_IDENTITY((~ (int(4))), ((~ (int(4)))) << 0))) | 0))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                }
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0), (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))) * 1.0)), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0)) * 1.0), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0)) * 1.0))), false || (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0)) * 1.0)))))))) && true))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4((_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false, true))))))
              {
               subgroupAll(true);
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))) > injectionSwitch.y))))
                  barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(float(173032u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.45), _GLF_FUZZED(26.07)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false))))))))), false, false, true)))) && true))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(15.13)), bool(false)))) - 0.0), false || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(15.13)), bool(false)))) - 0.0), bool(_GLF_IDENTITY(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(15.13)), bool(false)))) - 0.0)), false || (bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(15.13)), bool(false)))) - 0.0))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true)))), ((! (false))) || false)), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(! (true && (true)), true && (! (true && (true)))))))), bool(bool((_GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), bool(bvec4(! (! ((injectionSwitch.x < injectionSwitch.y))), false, false, true))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))), ((! ((injectionSwitch.x < injectionSwitch.y)))) && true))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.1))) < injectionSwitch.y))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false), false, false)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), true))))))))))))))) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec4(bvec2(! (false), true), false, false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(! _GLF_IDENTITY((false), bool(bool((false)))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), true), false), false))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))), true && (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))), true && (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) || false) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (false), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, (true) || false)), true), false), false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(true && (_GLF_IDENTITY(false, ! (! (false)))), true, false)))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (false)))), ((_GLF_IDENTITY(true, (true) || false))) || false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (false), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), true), false), false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(false, ! (! (false))))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) || false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < injectionSwitch.y)))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), _GLF_IDENTITY(false, false || (false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-375.870) : _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, sin(0.0), 0.0, 1.0, 1.0))))) < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), true), true)), false)))))), bvec2(bvec3(bvec2(false, true), false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), true), true)), false)))))), bvec2(bvec3(bvec2(false, true), false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), true), true)), false)))))), bvec2(bvec3(bvec2(false, true), false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))), false))), true))))))), _GLF_IDENTITY(false, (false) || false))))))))), false)))), bool(bvec4(false, true, false, true)))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(true, (true) || false))))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                barrier();
              }
             barrier();
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bool(_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y)))))))))))))))))))), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), (! (false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), true, true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))).x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))).x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y))))))))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3(! (injectionSwitch.x < injectionSwitch.y), false, false)))))), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool(! (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(bool(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))))))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))).x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))).x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y))))))))))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3(! (injectionSwitch.x < injectionSwitch.y), false, false)))))), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool(! (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(bool(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))))))))))))), false, false))), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-37.44)), vec2(_GLF_FUZZED(vec4(8.6, 6.5, 0.4, 7.3).z), (injectionSwitch)[1]), bvec2(false, true))).y)))))), false, false)), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))), false, false)), true, true)))))))))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(0.5, min(0.5, 0.5))) : injectionSwitch.y))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           do
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false, false))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)) || false, ! (! ((_GLF_WRAPPED_LOOP(false)) || false)))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                    }
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), true)))))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), false))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4541.2919)), bool(false)))))));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           else
            {
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & _GLF_IDENTITY(1, (false ? _GLF_FUZZED(9443) : 1)))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (1 ^ 1), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) > (1 ^ 1), bool(bvec4(_injected_loop_counter > (1 ^ 1), true, true, false))))))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))) > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false, true))))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) && true); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(int(int(_GLF_ONE(1.0, injectionSwitch.y))), 0 | (int(int(_GLF_ONE(1.0, injectionSwitch.y))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), false, true, false)), false, true)))) && true)))
  barrier();
}
