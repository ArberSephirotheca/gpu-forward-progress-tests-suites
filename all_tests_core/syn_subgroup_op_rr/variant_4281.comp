#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(-94.37)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED((2187.2210 - 5.8)), _GLF_FUZZED(-970.084)), vec2((vec2((injectionSwitch)[0], (injectionSwitch)[1]))[0], (vec2((injectionSwitch)[0], (injectionSwitch)[1]))[1]), bvec2(true, true))))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) >> _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 0u, 1u))), _GLF_IDENTITY((gl_WorkGroupSize.x) >> 0u, min((gl_WorkGroupSize.x) >> 0u, _GLF_IDENTITY((gl_WorkGroupSize.x) >> 0u, max((gl_WorkGroupSize.x) >> 0u, (gl_WorkGroupSize.x) >> 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 1u, 0u, 1u))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)) - 0u)), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(144042u, 58119u, 100062u)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x) >> 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)))))) >> 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))), _GLF_IDENTITY(false, (false) && true) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(94.07), _GLF_FUZZED(-5969.5792)), bvec2(false, false)))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false), bvec3(bvec3(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-486.679), _GLF_FUZZED(-1.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))))), _GLF_IDENTITY(false, (false) || false))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.0), _GLF_FUZZED(-2.4)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))).x, mix(float(_GLF_FUZZED(-4990.6462)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) >> 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true))))) && true)) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bool(bvec2((false), true)))))) || _GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true))), bool(bvec3(false, false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(478.959), _GLF_FUZZED(-41.40)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (true))))) && true)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false), bvec2(bvec3(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false), false))))))))))), true, false, false)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), (false ? _GLF_FUZZED(-9.7) : min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) + subgroup_local_id, _GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)))) / 1u) + subgroup_local_id), min(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))) >> 0u))) + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) | (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))) ^ 0u), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (subgroup_size)) + subgroup_local_id), _GLF_IDENTITY((min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | 0u) + subgroup_local_id)) - 0u, min((min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | 0u) + subgroup_local_id)) - 0u, (min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | 0u) + subgroup_local_id)) - 0u)))) / 1u), min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0))).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, min(_GLF_IDENTITY((injectionSwitch.x) * 1.0, (false ? _GLF_FUZZED(9.0) : (injectionSwitch.x) * 1.0)), (injectionSwitch.x) * 1.0))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0)), max(_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0)), min(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0)))), determinant(mat3(0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(16.88) : 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0)), 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) * mat2(1.0))).x) * _GLF_IDENTITY(1.0, max(1.0, 1.0))) > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(944.237)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (_GLF_DEAD(false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true, false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? 94.29 : -21.33)), _GLF_FUZZED(-8.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), true, false)))), false)))), false)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-92.66), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-92.66), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-92.66), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-92.66), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (false ? _GLF_FUZZED(3553.0198) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-92.66), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-92.66), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-92.66), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-92.66), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-92.66), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (false ? _GLF_FUZZED(3553.0198) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-92.66), _GLF_FUZZED(-2.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)))) > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)], _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 0u, 0u))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | (virtual_gid), 0u ^ ((virtual_gid) | (virtual_gid))))], min(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), buf[virtual_gid])))))))) | (buf[virtual_gid])), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, max(0, 0)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), max(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id))))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, (1u ^ 0u), 0u))))) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1)) << 0), (false ? _GLF_FUZZED(28882) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ((1) * 1) >> (0 << _GLF_IDENTITY(int(1), int(1)))))) / 1))), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) - 0)), clamp((_GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) - 0)), ((_GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) - 0))) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) - 0)), max((_GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) - 0)), (_GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) - 0)))))) | (int(ivec2(1, 1)))), (int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) + 0), 1))) / 1)))))) < subgroup_size, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)))) < subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 + (_GLF_IDENTITY(1, (1) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), (false ? _GLF_FUZZED((~ -59763)) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96973) : 1)))))), (1) ^ 0), 1, 1), (0 ^ 0) ^ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96973) : 1)))))), (1) ^ 0), 1, 1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-19631))), 1)) & 1) ^ 1)))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1), 1 * (clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))) ^ 0)), 1 * (clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) | (_GLF_IDENTITY(1, (1) ^ 0))), _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) ^ 0))), 1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ ((_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-19631)), (false ? _GLF_FUZZED(56280) : _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-19631)), 0 ^ ((true ? 1 : _GLF_FUZZED(-19631))))))), 1)) & 1) ^ 1)))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) ^ 0), 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(24578) : 1)), 1)) : _GLF_FUZZED(findMSB(11446)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1), 1 * (clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-37600)))), _GLF_IDENTITY(1, int(ivec4(1, (1 | 1), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))), 1))) ^ 0))))))) < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96973) : 1)))))), (1) ^ 0), 1, 1)), clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))), (true ? 1 : _GLF_FUZZED(-19631))), 1)) & 1) ^ 1)))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1), 1 * (clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))) ^ _GLF_IDENTITY(0, (0) / 1)))))) < subgroup_size), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96973) : 1)), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) * (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96973) : 1)))))))), _GLF_IDENTITY((1), int(int((1)))) ^ 0), 1, 1)), clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-19631))), 1)) & 1) ^ 1)))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1), 1 * (clamp(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) / 1), 1)))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))) ^ 0))))) < subgroup_size), true && ((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96973) : 1)))))), (1) ^ 0), 1, 1)), clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-19631))), 1)) & 1) ^ 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), max(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), max(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)))))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1), 1 * (clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, clamp((1) ^ 0, (1) ^ 0, (1) ^ 0))), 1, _GLF_IDENTITY(1, max(1, 1)))))), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))) ^ 0))))) < subgroup_size)))) || false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true, true))) || false)), false || (! _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1)))) - 0), (true ? clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1)))))), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(_GLF_IDENTITY(97150, (97150) | 0))))) < subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)) && true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, max(1, 1))), clamp(0 | (_GLF_IDENTITY(1, max(1, 1))), 0 | (_GLF_IDENTITY(1, max(1, 1))), 0 | (_GLF_IDENTITY(1, max(1, 1)))))), clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (1) * 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-73720) : (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (1) * 1)))) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(9427) : 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), max(int(_GLF_IDENTITY(1, (1) | (1))), int(_GLF_IDENTITY(1, (1) | (1))))))), clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, max(1, 1))), clamp(0 | (_GLF_IDENTITY(1, max(1, 1))), 0 | (_GLF_IDENTITY(1, max(1, 1))), 0 | (_GLF_IDENTITY(1, max(1, 1)))))), clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (1) * 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-73720) : (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (1) * 1)))) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(9427) : 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), max(int(_GLF_IDENTITY(1, (1) | (1))), int(_GLF_IDENTITY(1, (1) | (1))))))), clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)))))) < subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), max((_GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), ((_GLF_IDENTITY(1, (1) * 1))) ^ 0))) : _GLF_FUZZED(-95748)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-18201 % -73386)) : (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), max((_GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), ((_GLF_IDENTITY(1, (1) * 1))) ^ 0))) : _GLF_FUZZED(-95748))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) | 0), 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))) ^ 0))))) < subgroup_size, false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), max((_GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), ((_GLF_IDENTITY(1, (1) * 1))) ^ 0))) : _GLF_FUZZED(-95748)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-18201 % -73386)) : (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), max((_GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), ((_GLF_IDENTITY(1, (1) * 1))) ^ 0))) : _GLF_FUZZED(-95748))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) | 0), 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))) ^ 0))))) < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), max((_GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), ((_GLF_IDENTITY(1, (1) * 1))) ^ 0))) : _GLF_FUZZED(-95748)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-18201 % -73386)) : (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), max((_GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1)), ((_GLF_IDENTITY(1, (1) * 1))) ^ 0))) : _GLF_FUZZED(-95748))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)))), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) | 0), 1)), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1))) ^ 0))))) < subgroup_size, false, true)))))) || false)), _GLF_IDENTITY(false || (! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))) | 0, 0 ^ ((_GLF_IDENTITY(1, max(1, 1))) | 0)))) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150))), max(_GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))) | 0, 0 ^ ((_GLF_IDENTITY(1, max(1, 1))) | 0)))) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150))), _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))) | 0, 0 ^ ((_GLF_IDENTITY(1, max(1, 1))) | 0)))) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))))) < subgroup_size)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false || (! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || _GLF_IDENTITY((! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-27487)))))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)), false || (_GLF_IDENTITY((! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-27487)))))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)), bool(bvec2((! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-27487)))))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)), false)))))), (! (false || (! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), uint(uvec4(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))))))) < subgroup_size)))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || _GLF_IDENTITY((! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-27487)))))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)), false || (_GLF_IDENTITY((! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-27487)))))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)), bool(bvec2((! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-27487)))))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)), false)))))), (! (false || (! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), uint(uvec4(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))))))) < subgroup_size)))) || false)))), false || (! (_GLF_IDENTITY(false || (! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))), (true ? clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)))) / _GLF_IDENTITY(1, int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || _GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-27487)))))) | 0)) * 1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-27487)))))) | 0)) * 1)) >> 0)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)), false || (_GLF_IDENTITY((! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-27487)))))) | 0)) * 1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-27487)))))) | 0)) * 1)) + 0)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)), bool(bvec2((! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-27487)))))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), false)))))), (! (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), uint(uvec4(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))))))) < subgroup_size), bool(bool(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), uint(uvec4(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))))))) < subgroup_size))))))) || false)))))))))), (bool(bool(_GLF_IDENTITY(false || _GLF_IDENTITY((! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) >> 0))), int(ivec4(int(int(_GLF_IDENTITY(1, (1) >> 0))), 0, 0, 0))))) >> 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(ivec2(23371, -28287).r) : _GLF_IDENTITY(1, 1 * (1))))))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)), false || ((! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) >> 0))), int(ivec4(int(int(_GLF_IDENTITY(1, (1) >> 0))), 0, 0, 0))))) >> 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(ivec2(23371, -28287).r) : _GLF_IDENTITY(1, 1 * (1))))))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false || (! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))))) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) / 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size))), (! (false || (! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(1, 1, 1), clamp(_GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | (_GLF_IDENTITY(clamp(1, 1, 1), min(clamp(1, 1, 1), clamp(1, 1, 1))))), clamp(1, 1, 1), clamp(1, 1, 1))), (clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-98729))), 1, 1)) / 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))) : _GLF_FUZZED(97150)))) < subgroup_size)))) || _GLF_IDENTITY(false, ! (! (false)))), (! (false || (! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), _GLF_IDENTITY(max(~ ((1)), ~ ((1))), _GLF_IDENTITY(int(ivec4(max(~ ((1)), ~ ((1))), 1, (1 & 1), 0)), (int(ivec4(max(~ ((1)), ~ ((1))), 1, (1 & 1), 0))) | (int(ivec4(max(~ ((1)), ~ ((1))), 1, (1 & 1), 0)))))))) * 1)) / 1), _GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) ^ 0))) | 0)) * 1)) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0), 0)), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))))), 0))) << 0)))))) : _GLF_FUZZED(97150)))) < subgroup_size)))) || false)))))) && true))))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), ! (! ((! _GLF_IDENTITY((false), ((false)) || false)))))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, ! (! (false)))))), true && ((! (false || (_GLF_IDENTITY(false, ! (! (false))))))))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, true)))))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! _GLF_IDENTITY((false || (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY((false || (_GLF_IDENTITY(false, ! (! (false))))), ((false || (_GLF_IDENTITY(false, ! (! (false)))))) || false))))))))))) || false))))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, false), bvec3(bvec3(bvec3((! (false)), true, false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), true)))))))))))))) || false)))) && true))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), ! (! ((! _GLF_IDENTITY((false), ((false)) || false)))))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, ! (! (false)))))), true && ((! (false || (_GLF_IDENTITY(false, ! (! (false))))))))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, true)))))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! _GLF_IDENTITY((false || (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY((false || (_GLF_IDENTITY(false, ! (! (false))))), ((false || (_GLF_IDENTITY(false, ! (! (false)))))) || false))))))))))) || false))))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, false), bvec3(bvec3(bvec3((! (false)), true, false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), true)))))))))))))) || false)))) && true))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), ! (! ((! _GLF_IDENTITY((false), ((false)) || false)))))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY((! (false || (_GLF_IDENTITY(false, ! (! (false)))))), true && ((! (false || (_GLF_IDENTITY(false, ! (! (false))))))))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true, true)))))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! _GLF_IDENTITY((false || (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY((false || (_GLF_IDENTITY(false, ! (! (false))))), ((false || (_GLF_IDENTITY(false, ! (! (false)))))) || false))))))))))) || false))))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, false), bvec3(bvec3(bvec3((! (false)), true, false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), true)))))))))))))) || false)))) && true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))))), ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))))))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, false), bvec3(bvec3(bvec3((! (false)), true, false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, false), bvec3(bvec3(bvec3((! (false)), true, false))))))), bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, false), bvec3(bvec3(bvec3((! (false)), true, false))))))), false, true, true))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), ! (! (false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((_GLF_IDENTITY(! (false), true && (! (false))))), true)))))))))))))) || false)))) && true))), false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))))), ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (! (false || (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))))))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, false), bvec3(bvec3(bvec3((! (false)), true, false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, false), bvec3(bvec3(bvec3((! (false)), true, false))))))), bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), true, false), bvec3(bvec3(bvec3((! (false)), true, false))))))), false, true, true))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), ! (! (false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((_GLF_IDENTITY(! (false), true && (! (false))))), true)))))))))))))) || false)))) && true))))))))))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(24.71), _GLF_FUZZED(4549.2494)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-794.526)), vec2(_GLF_FUZZED(-889.357), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), mix(vec2(_GLF_FUZZED(-431.299), _GLF_FUZZED(-24.55)), vec2((clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-794.526)), vec2(_GLF_FUZZED(-889.357), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch))[0], (clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-794.526)), vec2(_GLF_FUZZED(-889.357), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch))[1]), bvec2(true, true))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), min(read_2, read_2))) / 1u))), read_2), min(clamp(read_2, _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, min(read_2, read_2)))), read_2), clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) >> 0u), _GLF_IDENTITY((read_2) | (_GLF_IDENTITY(read_2, min(read_2, read_2))), uint(uvec3((read_2) | (_GLF_IDENTITY(read_2, min(read_2, read_2))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u)))), read_2)))), clamp(_GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) + 0u), read_2)))), read_2), 0u ^ (clamp(read_2, _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, min(read_2, read_2)))), read_2)))), _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, min(read_2, read_2)))), read_2)), min(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) << _GLF_IDENTITY((0u | 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) - 0u), (0u | 0u))), (uint(uvec2(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) - 0u), (0u | 0u)))) ^ 0u)))) | (_GLF_IDENTITY(read_2, min(read_2, read_2)))), read_2)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) | (read_2)), ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) | (read_2))))), clamp(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), 1u * ((read_2)))) | ((read_2))) | (_GLF_IDENTITY(read_2, min(read_2, read_2)))), read_2)))), _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(workgroup_size) : read_2)), min(read_2, read_2)))), read_2))))) + _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(4, ~ (~ (4))), 64, _GLF_IDENTITY(4, (4) - 0));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) - 0.0), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) - 0.0), false, true)), bool(bvec2(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) - 0.0), false, true)), false)))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(bvec4(_GLF_IDENTITY(false, true && (false)) || (false), true, false, false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, true))), false, true)), (bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, true))), false, true))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) || false))))), bool(bvec2(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) || false))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) || false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) || false)))))), ! (! (bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) || false))))))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) || false)))))), ! (! (bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) || false))))))))), false, false)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, sqrt(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0))) > injectionSwitch.y))))))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mix(pow(5772.3960, -669.192), 1.3, -461.053))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch))) - vec2(0.0, 0.0)).y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true, true, true)))))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true)), false, true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true))))), (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), true))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))), false, false))))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))))))), true), true, false))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false))))))))) && true)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), ! (! (true && (_GLF_IDENTITY(false, (false) || false)))))))))) && true));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(12.03), _GLF_FUZZED(-638.599)), bvec2(false, false))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x : _GLF_FUZZED(60.40))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(12.03, min(_GLF_IDENTITY(12.03, clamp(12.03, 12.03, 12.03)), 12.03))), _GLF_FUZZED(-638.599)), vec2(mat4x3(vec2(_GLF_FUZZED(_GLF_IDENTITY(12.03, min(_GLF_IDENTITY(12.03, clamp(12.03, 12.03, 12.03)), 12.03))), _GLF_FUZZED(-638.599)), 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, abs(1.0), 0.0))), bvec2(false, false))), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(7459.4222), _GLF_FUZZED(9.1)), vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))) : injectionSwitch)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) || false)))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-23.58)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, mix(float(_GLF_FUZZED(-23.58)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))))) || false)))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), (float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) - 0.0), mix(float(_GLF_FUZZED(59.59)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), (float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) - 0.0)), bool(true))))) > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true, false)), (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true, false))) || false)), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-93.55 + 0.7))), bool(false)))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))) && _GLF_IDENTITY(true, ! (! (true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)))) || false))), ! (! ((false) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec3(bool(true), false, true)), bool(bool(bool(bvec3(bool(true), false, true))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec3(bool(true), false, true)), bool(bool(bool(bvec3(bool(true), false, true))))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec3(bool(true), false, true)), bool(bool(bool(bvec3(bool(true), false, true))))))), false), true, true)))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-733.767)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.1)), bool(false))), injectionSwitch.x)))) < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec2(bool(bvec3(false, true, true)), true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (false))))) || false)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) || false)))))), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) || false)))))), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) || false)))))), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) || false)))))), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))), false, true)))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) || false)))))), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) || false)))))), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))), false, true)))))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
}
