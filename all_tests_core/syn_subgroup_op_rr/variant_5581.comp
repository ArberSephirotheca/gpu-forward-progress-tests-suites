#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 bvec3 _f0;
 bvec4 _f1;
 bvec2 _f2;
 bvec2 _f3;
 mat3x4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
 mat3x2 _f1;
 mat4 _f2;
 mat4x2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 uvec2 _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 uint read_1;
 float _f1;
} ;

struct _GLF_struct_10 {
 _GLF_struct_5 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_3 {
 int _f0;
 ivec3 _f1;
 uint virtual_gid;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 uvec2 _f1;
 ivec3 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 int _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 ivec4 _f1;
 int _f2;
 _GLF_struct_3 _f3;
 vec2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id;
 uvec4 GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 do
  {
   GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_size.xy = GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.z = subgroup_id;
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y = GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.z;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_size.w = subgroup_size;
 GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_size.xy.x = GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_size.w;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w = GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_size.xy.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.w = subgroup_local_id;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z = GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.w;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, (GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.y = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z) ^ _GLF_IDENTITY(0u, (0u) << 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.x = num_workgroup;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.x = GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   do
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 do
  {
   for(int _injected_loop_counter = (1 ^ (0 << _GLF_IDENTITY(int(2), int(2)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))).x, gl_WorkGroupSize.x), ~ (~ (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), ~ (~ (max(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), 0u ^ (uint(uvec2(gl_WorkGroupSize.x, 1u))))), _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x)))))) >> 0u), gl_WorkGroupSize.x));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), true, false)))) && true); _injected_loop_counter ++)
    {
     GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.w = workgroup_size;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_size.xy.y = workgroup_id;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size) ^ uvec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(20.96, -5.1).r) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).w * GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_size.xy.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   else
    {
    }
  }
 GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.z = workgroup_base;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_2(_GLF_IDENTITY(mat3(1.0), mat3(mat4(mat3(1.0)))), 1, _GLF_struct_0(mat3x4(1.0), ivec4(1)), _GLF_struct_1(mat2x4(1.0), uvec2(1u), ivec3(1), mat4x3(1.0))), ivec4(1), 1, _GLF_struct_3(1, ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.z, GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.z, GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.z)) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, min(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)).y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.y, (GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.z + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w + GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.y) ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u))) + 0u)))), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(vec2(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(cos(0.0)), determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-63.04) : 0.0)), 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), length(vec2(0.0, 0.0)), 0.0, 1.0))))), 1.0, 1.0), (true ? mat4(vec2(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(cos(0.0)), determinant(mat4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0))))), 1.0, 1.0) : _GLF_FUZZED(mat4(9.0, _GLF_IDENTITY(3783.2691, mix(float(_GLF_IDENTITY(3783.2691, (3783.2691) + 0.0)), float(_GLF_FUZZED(3.1)), bool(false))), -7953.5910, -168.011, 6.8, -3.8, -374.476, 3.4, 18.94, 5.6, 7.3, -2.9, -35.08, -3.4, 6.8, -266.208))))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(mat4(vec2(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), float(_GLF_FUZZED(70.50)), bool(false))), sqrt(cos(0.0)), determinant(mat4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(4.4) : length(vec2(0.0, 0.0)))), 0.0, 1.0)), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0))))), 1.0, 1.0), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) ? mat4(vec2(1.0), _GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(cos(0.0)), determinant(mat4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(vec2(0.0, 0.0)), 0.0, 1.0))))), 1.0, 1.0) : _GLF_FUZZED(mat4(9.0, 3783.2691, -7953.5910, -168.011, 6.8, -3.8, -374.476, 3.4, 18.94, 5.6, 7.3, -2.9, -35.08, -3.4, 6.8, -266.208)))))))));
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.z + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, max(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w))))))), (false ? _GLF_FUZZED(99162u) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, (true ? GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size))))).y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.z + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) ^ 0u))) + ((GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_size.z = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.x = GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_idnext_virtual_gidsubgroup_size.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), true)))), true, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), true)))), true, true)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), true)))), true, true)), true)), false))))), true)), true))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, true, false))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x < injectionSwitch.y))))))))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))), true)))), true)), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))))))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((vec2(-5.9, 17.12) * mat2(430.595, 0.4, -91.14, -31.44))) : _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), min(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))))).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, true, false)))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), false))), bvec2(bvec2(bvec2(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), false))))))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false), _GLF_IDENTITY(true, bool(bvec3(true, true, true))))))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), true))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) < injectionSwitch.y)))), true, true, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) < injectionSwitch.y)))), true, true, false)))))), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) < injectionSwitch.y)))), true, true, false)))))), false, false))), false)))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), true))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), true)))))))), false, false))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))), true, true, false))))))))))))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false), true)))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), true))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(615.660), _GLF_FUZZED(-543.057)), bvec2(false, false))), injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, true, false))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(smoothstep(4165.5008, -2.9, 568.306)))) < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5198.6141)), vec2(_GLF_FUZZED(1.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false), true)))), _GLF_IDENTITY(true, (true) || false))), true))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mix(vec2(_GLF_FUZZED(-869.214), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(0.6)), bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false))).x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, true, false))))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, true, false))))))), true, false))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1408.2892) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), true))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(28.78, 83.53)) : injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(28.78, 83.53)) : injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(28.78, 83.53)) : injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(28.78, 83.53)) : injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(28.78, 83.53)) : injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true), true, true, false))))))))))))))))) && true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), true))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), true))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), true, true, false))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(28.48, -3.4)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y))), false), true)))), true)), true))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, true, false))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false), true)))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)), _GLF_IDENTITY(true, ! (! (true)))))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x4((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), 0.0, 1.0, length(0.0), 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0)), (vec2(mat3x4((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), 0.0, 1.0, length(0.0), 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0))) * vec2(1.0, 1.0)))).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6893.8112) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.1)), bool(false))))))) < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, true, false))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY(vec2(mat3x4((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), 0.0, 1.0, length(0.0), 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0)), (vec2(mat3x4((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), 0.0, 1.0, length(0.0), 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0))) * vec2(1.0, 1.0)))).x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6893.8112) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.1)), bool(false))))))) < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, true, false))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) && true)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.x], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_5(mat3x2(1.0), atomicLoad(buf[_GLF_struct_replacement_4._f3.virtual_gid], 4, 64, _GLF_IDENTITY(0, ~ (~ (0)))), 1.0), _GLF_struct_9(_GLF_struct_6(vec2(1.0), mat3x2(1.0), mat4(1.0), mat4x2(1.0), ivec3(1)), _GLF_struct_7(mat4(1.0), _GLF_IDENTITY(ivec4(1), (ivec4(_GLF_IDENTITY(0, (0) / 1), 0, 0, 0) & ivec4(-2182, -55436, 77575, -85472)) ^ (ivec4(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)))))), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) << ((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u))) | uvec2(0u, 0u))), _GLF_struct_8(bvec3(true), bvec4(true), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))))), true, false))), bvec2(true), mat3x4(1.0), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | 0)))));
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_4._f3.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y = read_2;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.y + 1 < GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w)
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size))).x], uint(_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y) + 1, 4, 64, 4);
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, true, false))), ! (! (! (bool(bvec3(false, true, false))))))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), true && (! ((injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true))), false, false, true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               barrier();
              }
            }
           else
            {
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     atomicStore(buf[GLF_merged4_0_1_16_1_1_17_2_1_14_3_1_14next_virtual_gidsubgroup_local_idworkgroup_baseworkgroup_size.x], uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_10._f0.read_1 == _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id : _GLF_FUZZED(uvec4(155332u, 33174u, 127114u, 7800u)))).y, uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y, 0u, 0u, ((((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << (1853u & 0u)), 1u)))), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), uint(uvec3(uint(1u), 1u, 0u)))) / 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), 0u + _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))), uint(uvec3((_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))), 0u, 0u))))))), (uvec4(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y, 0u, 0u, (((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.x) : (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))))) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), _GLF_IDENTITY(uvec4(7u), ~ (~ (uvec4(7u)))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y), false || ((_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y))), (! (_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y)) || false), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.3)), bool(false))) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(! (_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_10._f0.read_1, clamp(_GLF_struct_replacement_10._f0.read_1, _GLF_struct_replacement_10._f0.read_1, _GLF_IDENTITY(_GLF_struct_replacement_10._f0.read_1, (_GLF_struct_replacement_10._f0.read_1) << 0u))) == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y)))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y), (! (_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y)) || false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(! (_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_10._f0.read_1, clamp(_GLF_struct_replacement_10._f0.read_1, _GLF_struct_replacement_10._f0.read_1, _GLF_IDENTITY(_GLF_struct_replacement_10._f0.read_1, (_GLF_struct_replacement_10._f0.read_1) << 0u))) == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y), (! (_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y)) || false), false || (_GLF_IDENTITY(! (_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y), (! (_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y)) || false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(! (_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_10._f0.read_1, clamp(_GLF_struct_replacement_10._f0.read_1, _GLF_struct_replacement_10._f0.read_1, _GLF_IDENTITY(_GLF_struct_replacement_10._f0.read_1, (_GLF_struct_replacement_10._f0.read_1) << 0u))) == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_struct_replacement_10._f0.read_1 == GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_2subgroup_idsubgroup_local_id.y)))))))) && true)))))))))) + 1, 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(6.9, -67.20, 4454.4569).s)), float(injectionSwitch.y), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     subgroupAll(true);
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(9071))), int(4), int(4)))))), int(4), int(4))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), ~ (~ (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))))), int(4), int(4))), (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))))), int(4), int(_GLF_IDENTITY(4, max(4, 4)))))) | (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), (~ (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))) * 1))))), int(4), int(4)))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), int(4)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
    }
  }
 do
  {
   for(int _injected_loop_counter = (0 & 37700); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
}
