#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_46 {
 vec3 _f0;
 uint subgroup_local_id;
 uint _f1;
} ;

struct _GLF_struct_45 {
 mat4x2 _f0;
 bool _f1;
 bvec4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_44 {
 int _f0;
 vec2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_47 {
 _GLF_struct_44 _f0;
 bvec4 _f1;
 int _f2;
 _GLF_struct_45 _f3;
 mat4 _f4;
 _GLF_struct_46 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_42 {
 mat3x4 _f0;
 bvec4 _f1;
 ivec3 _f2;
 mat2 _f3;
 bvec2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_41 {
 bool _f0;
 uvec3 _f1;
 mat4x2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_43 {
 mat2x3 _f0;
 vec2 _f1;
 _GLF_struct_41 _f2;
 _GLF_struct_42 _f3;
} ;

struct _GLF_struct_39 {
 uvec3 _f0;
 float _f1;
 mat2x4 _f2;
 bool _f3;
 ivec4 _f4;
 ivec3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_38 {
 mat2x3 _f0;
 vec4 _f1;
 uint _f2;
 uint _f3;
 mat4 _f4;
 vec2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_37 {
 ivec4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_40 {
 ivec2 _f0;
 ivec2 _f1;
 _GLF_struct_37 _f2;
 _GLF_struct_38 _f3;
 _GLF_struct_39 _f4;
} ;

struct _GLF_struct_35 {
 mat2x4 _f0;
 uvec4 _f1;
 int _f2;
} ;

struct _GLF_struct_34 {
 mat2 _f0;
 ivec3 _f1;
 mat4x2 _f2;
 uvec2 _f3;
 uvec4 _f4;
 mat3x2 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_36 {
 float _f0;
 _GLF_struct_34 _f1;
 vec3 _f2;
 ivec4 _f3;
 _GLF_struct_35 _f4;
} ;

struct _GLF_struct_48 {
 mat3 _f0;
 _GLF_struct_36 _f1;
 _GLF_struct_40 _f2;
 _GLF_struct_43 _f3;
 _GLF_struct_47 _f4;
} ;

struct _GLF_struct_31 {
 uvec3 _f0;
 mat4x3 _f1;
 float _f2;
 uint _f3;
 float _f4;
 bool _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_30 {
 bvec2 _f0;
} ;

struct _GLF_struct_29 {
 mat3 _f0;
 uint _f1;
 ivec2 _f2;
 mat3 _f3;
 mat4x3 _f4;
 uint _f5;
} ;

struct _GLF_struct_28 {
 mat3x4 _f0;
 vec3 _f1;
 bvec4 _f2;
 int _f3;
} ;

struct _GLF_struct_32 {
 _GLF_struct_28 _f0;
 _GLF_struct_29 _f1;
 _GLF_struct_30 _f2;
 _GLF_struct_31 _f3;
} ;

struct _GLF_struct_26 {
 int _f0;
 mat4 _f1;
 mat2 _f2;
 ivec4 _f3;
 mat3 _f4;
 int _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_25 {
 bvec2 _f0;
 mat2x3 _f1;
 mat4 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_27 {
 bool _f0;
 _GLF_struct_25 _f1;
 _GLF_struct_26 _f2;
 uint _f3;
} ;

struct _GLF_struct_23 {
 ivec4 _f0;
 vec2 _f1;
 mat3x4 _f2;
 uvec2 _f3;
 uvec3 _f4;
 vec3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_22 {
 ivec4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
 bvec4 _f1;
 _GLF_struct_22 _f2;
 bvec4 _f3;
 _GLF_struct_23 _f4;
} ;

struct _GLF_struct_20 {
 bvec3 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
 uvec2 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_19 {
 uvec4 _f0;
 uvec3 _f1;
 uvec4 _f2;
 uvec3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_21 {
 _GLF_struct_19 _f0;
 bvec4 _f1;
 ivec3 _f2;
 mat3x2 _f3;
 vec3 _f4;
 _GLF_struct_20 _f5;
 int _f6;
} ;

struct _GLF_struct_33 {
 vec3 _f0;
 _GLF_struct_21 _f1;
 uint next_virtual_gid;
 _GLF_struct_24 _f2;
 _GLF_struct_27 _f3;
 uvec4 _f4;
 _GLF_struct_32 _f5;
} ;

struct _GLF_struct_16 {
 mat4x2 _f0;
 mat2x3 _f1;
 bvec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_17 {
 uint _f0;
 _GLF_struct_16 _f1;
} ;

struct _GLF_struct_18 {
 uint num_workgroup;
 _GLF_struct_17 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_13 {
 bool _f0;
 bvec3 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_12 {
 uint _f0;
 uint _f1;
 vec4 _f2;
 uint _f3;
 mat4 _f4;
 mat4x2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_10 {
 uvec3 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 vec3 _f3;
 mat3 _f4;
 uint _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 uvec4 _f1;
 mat4x2 _f2;
 uvec4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
 mat4 _f1;
 uvec3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_4 {
 uint _f0;
 mat2x3 _f1;
 bvec3 _f2;
 uvec4 _f3;
 uint _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 mat4x3 _f1;
 uvec3 _f2;
 mat2x4 _f3;
 int _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 bvec3 _f1;
 uvec4 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 bool _f1;
 uvec3 _f2;
 mat4x3 _f3;
 bool _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 bvec4 _f3;
 bool _f4;
 mat3x4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat2 _f1;
 mat2x3 _f2;
 uvec4 _f3;
 _GLF_struct_1 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_15 {
 _GLF_struct_2 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_11 _f3;
 uvec2 _f4;
 uint read_2;
 _GLF_struct_14 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_48 _GLF_struct_replacement_48 = _GLF_struct_48(mat3(1.0), _GLF_struct_36(1.0, _GLF_struct_34(mat2(1.0), ivec3(1), mat4x2(1.0), uvec2(1u), uvec4(1u), mat3x2(1.0), mat2x3(1.0)), vec3(1.0), ivec4(1), _GLF_struct_35(mat2x4(1.0), uvec4(1u), 1)), _GLF_struct_40(ivec2(1), ivec2(1), _GLF_struct_37(ivec4(1), mat3x4(1.0)), _GLF_struct_38(mat2x3(1.0), vec4(1.0), 1u, 1u, mat4(1.0), vec2(1.0), vec2(1.0)), _GLF_struct_39(uvec3(1u), 1.0, mat2x4(1.0), true, ivec4(1), ivec3(1), ivec3(1))), _GLF_struct_43(mat2x3(1.0), vec2(1.0), _GLF_struct_41(true, uvec3(1u), mat4x2(1.0), bvec2(true)), _GLF_struct_42(mat3x4(1.0), bvec4(true), ivec3(1), mat2(1.0), bvec2(true), bvec3(true))), _GLF_struct_47(_GLF_struct_44(1, vec2(1.0), mat3x2(1.0)), bvec4(true), 1, _GLF_struct_45(mat4x2(1.0), true, bvec4(true), mat3x2(1.0)), mat4(1.0), _GLF_struct_46(vec3(1.0), gl_SubgroupInvocationID, 1u), uvec2(1u)));
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(gl_NumWorkGroups.x, _GLF_struct_17(1u, _GLF_struct_16(mat4x2(1.0), mat2x3(1.0), bvec4(true), mat3x4(1.0))), uvec2(1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_48._f4._f5.subgroup_local_id;
 _GLF_struct_33 _GLF_struct_replacement_33 = _GLF_struct_33(vec3(1.0), _GLF_struct_21(_GLF_struct_19(uvec4(1u), uvec3(1u), uvec4(1u), uvec3(1u), ivec4(1)), bvec4(true), ivec3(1), mat3x2(1.0), vec3(1.0), _GLF_struct_20(bvec3(true), mat3x2(1.0), mat2x4(1.0), uvec2(1u), vec3(1.0)), 1), workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_48._f4._f5.subgroup_local_id + 1) % subgroup_size), _GLF_struct_24(ivec4(1), bvec4(true), _GLF_struct_22(ivec4(1), mat3x2(1.0)), bvec4(true), _GLF_struct_23(ivec4(1), vec2(1.0), mat3x4(1.0), uvec2(1u), uvec3(1u), vec3(1.0), mat3(1.0))), _GLF_struct_27(true, _GLF_struct_25(bvec2(true), mat2x3(1.0), mat4(1.0), uvec2(1u)), _GLF_struct_26(1, mat4(1.0), mat2(1.0), ivec4(1), mat3(1.0), 1, uvec4(1u)), 1u), uvec4(1u), _GLF_struct_32(_GLF_struct_28(mat3x4(1.0), vec3(1.0), bvec4(true), 1), _GLF_struct_29(mat3(1.0), 1u, ivec2(1), mat3(1.0), mat4x3(1.0), 1u), _GLF_struct_30(bvec2(true)), _GLF_struct_31(uvec3(1u), mat4x3(1.0), 1.0, 1u, 1.0, true, ivec3(1))));
 atomicStore(buf[_GLF_struct_replacement_33.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_2(_GLF_struct_0(ivec2(1), mat3x2(1.0), mat2x3(1.0), bvec4(true), true, mat3x4(1.0), ivec3(1)), mat2(1.0), mat2x3(1.0), uvec4(1u), _GLF_struct_1(uvec2(1u), true, uvec3(1u), mat4x3(1.0), true, mat4x3(1.0)), bvec3(true)), _GLF_struct_5(_GLF_struct_3(mat3x2(1.0), mat4x3(1.0), uvec3(1u), mat2x4(1.0), 1, mat4x2(1.0)), bvec3(true), uvec4(1u), _GLF_struct_4(1u, mat2x3(1.0), bvec3(true), uvec4(1u), 1u, uvec2(1u))), _GLF_struct_7(_GLF_struct_6(bvec2(true), mat4(1.0), uvec3(1u), uvec3(1u)), mat3x4(1.0)), _GLF_struct_11(_GLF_struct_8(mat3x4(1.0), mat2(1.0)), _GLF_struct_9(mat3(1.0), uvec4(1u), mat4x2(1.0), uvec4(1u), mat2x3(1.0)), _GLF_struct_10(uvec3(1u), mat4x2(1.0), mat4x2(1.0), vec3(1.0), mat3(1.0), 1u, mat4x2(1.0))), uvec2(1u), atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_struct_14(_GLF_struct_12(1u, 1u, vec4(1.0), 1u, mat4(1.0), mat4x2(1.0), ivec3(1)), _GLF_struct_13(true, bvec3(true), bvec3(true)), uvec3(1u)));
 if(_GLF_struct_replacement_48._f4._f5.subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[_GLF_struct_replacement_33.next_virtual_gid], uint(read_1 == _GLF_struct_replacement_15.read_2) + 1, 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_struct_replacement_33.next_virtual_gid], uint(read_1 == _GLF_struct_replacement_15.read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
