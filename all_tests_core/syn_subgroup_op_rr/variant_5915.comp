#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 uvec4 _f0;
 uint read_1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
 uvec2 _f1;
 uint _f2;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 bvec2 _f1;
 _GLF_struct_9 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 uvec4 _f1;
 vec4 _f2;
 mat3x4 _f3;
 vec4 _f4;
 uvec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 uint _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
} ;

struct _GLF_struct_0 {
 uint _f0;
 uvec4 _f1;
 mat2 _f2;
 ivec4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_7 {
 int _f0;
 ivec2 _f1;
 uint workgroup_base;
 _GLF_struct_6 _f2;
 uvec4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.4)), bool(false))), injectionSwitch.y)), 1.0, abs(0.0), 1.0, sqrt(1.0), 0.0, 1.0, 0.0)), min(float(mat4x2(injectionSwitch.y, 1.0, abs(0.0), 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(1.0 * (float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 1.0, 0.0))), min(1.0 * (float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0))), 1.0 * (float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))), 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0), 1.0, sqrt(1.0), 0.0, 1.0, 0.0))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-1.4, 0.0 + (-1.4)))), bool(false))), injectionSwitch.y)), 1.0, abs(0.0), 1.0, sqrt(1.0), 0.0, 1.0, 0.0)), min(float(mat4x2(injectionSwitch.y, 1.0, abs(0.0), 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0 * (float(mat3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), min(1.0 * (float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0 * (float(mat3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0 * (float(mat3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), min(1.0 * (float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0 * (float(mat3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), mix(float(_GLF_IDENTITY(1.0 * (float(mat3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), min(1.0 * (float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0 * (float(mat3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))), float(_GLF_FUZZED(8.2)), bool(false))), _GLF_IDENTITY(1.0 * (float(mat3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, clamp((0.0) - 0.0, (0.0) - 0.0, (0.0) - 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), min(1.0 * (float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0 * (float(mat3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))))), 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0), 1.0, sqrt(1.0), 0.0, 1.0, 0.0))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((-88.14)) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((true ? -9463.2366 : -2.2))), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))))))))).x : _GLF_FUZZED(subgroup_id)));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), true, true, true))), ! (! (! (_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) || false))), (_GLF_IDENTITY((true), ! (! ((true))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), bvec3(bvec4(bvec3(! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false), true))))))))) && true)))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec4(bvec3(! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), true))))))))) && true))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (true)))))))), true && (! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))))))))))), false)))), true))))))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), false), bvec2(bvec2(bvec2(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), (! (! (_GLF_IDENTITY(true, ! (! (true)))))) || false)))))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! (! (true)))), bool(bvec4((_GLF_IDENTITY(true, ! (! (true)))), true, true, false)))) && true))))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true)))))))) && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), (! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), false || ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4((_GLF_IDENTITY(true, ! (! (true)))), false, true, true)))) || false)), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4((_GLF_IDENTITY(true, ! (! (true)))), false, true, true)))) || false))))))))))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), (! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), false || ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4((_GLF_IDENTITY(true, ! (! (true)))), false, true, true)))) || false)), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) && true)))), false, true, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) && true)))), false, true, true)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) && true)))), false, true, true))))))))) || false)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))), false, true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))), false), bvec2(bvec2(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))))))), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))))))))), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), true && ((true))), true, false, false))))))))))))))) && true), false))))), true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), 1.0, exp(0.0), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), 1.0, exp(0.0), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))))))) * mat2(1.0))).x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), (true ? (injectionSwitch.y) + _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(mat2x4(vec3(1.0, 1.0, 1.0), log(1.0), 0.0, 1.0, abs(1.0), 0.0))), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))) : _GLF_FUZZED(986.716)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.9)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.4))), 0.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.1), _GLF_FUZZED((-1587.6646 + -3582.1564))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(vec2(0.0, 0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(vec2(0.0, 0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, float(mat3(0.0, sqrt(1.0), exp(0.0), _GLF_IDENTITY(dot(vec3(1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0), vec3(abs(0.0), 0.0, 1.0)), dot(vec3(1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0), vec3(abs(0.0), 0.0, 1.0))), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(vec2(0.0, 0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(degrees(exp2(1.4))) : 0.0)), 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec2(5748.4434, 6.3)) : vec2(_GLF_IDENTITY(mat4(vec2(0.0, 0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-60.95)), bool(false))), 0.0), (_GLF_IDENTITY(mat4(vec2(0.0, 0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) / sqrt(vec4(1.0, 1.0, 1.0, 1.0))), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0, 0.0), transpose(transpose(mat4(vec2(0.0, 0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0))))) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))).x > injectionSwitch.y)))))), true, true, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))).y), ((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(1, ivec2(1), workgroup_size * workgroup_id, _GLF_struct_6(_GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), (1u) + 0u), uvec4(_GLF_IDENTITY(1u, (1u) / 1u)), mat2(1.0), ivec4(1), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(12.49), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(12.49), min(_GLF_FUZZED(12.49), _GLF_FUZZED(12.49))))))))), clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(546.377)), _GLF_IDENTITY(float(1.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), max(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(1061.7111, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1061.7111, max(_GLF_IDENTITY(1061.7111, (false ? _GLF_FUZZED(4330.6205) : 1061.7111)), 1061.7111)), 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(1061.7111, max(_GLF_IDENTITY(1061.7111, (false ? _GLF_FUZZED(4330.6205) : 1061.7111)), 1061.7111)), 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))))))), float(float(1.0)), bool(true))), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))))), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), max(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))))), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), bool(true))))), 0.0, cos(0.0), 0.0)), max(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), max(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))))), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), _GLF_IDENTITY(float(float(1.0)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(float(float(1.0)), cos(0.0) * (float(float(1.0)))))), (float(float(_GLF_IDENTITY(float(float(1.0)), cos(0.0) * (float(float(1.0))))))) - 0.0)), bool(true))))), 0.0, cos(0.0), 0.0)), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), max(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), (_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true)))) / _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(max(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true)))), mix(float(_GLF_FUZZED((- -705.441))), float(_GLF_IDENTITY(max(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true)))), clamp(max(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true)))), max(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true)))), max(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))))))), bool(true)))), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))))), 0.0, cos(0.0), 0.0))))), 1.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9689.3776))), 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (false ? _GLF_FUZZED(mat4x2(447.284, -44.47, _GLF_IDENTITY(34.66, (false ? _GLF_IDENTITY(_GLF_FUZZED(-951.793), (true ? _GLF_IDENTITY(_GLF_FUZZED(-951.793), float(float(_GLF_FUZZED(-951.793)))) : _GLF_FUZZED(137.389))) : _GLF_IDENTITY(34.66, (34.66) * 1.0))), -131.934, 7.0, -711.252, 5.2, 5.0)) : mat4x2(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true)), clamp(mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true)), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(1061.7111), float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(1061.7111), mix(float(_GLF_FUZZED(1061.7111)), float(_GLF_FUZZED(-254.940)), bool(false))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), float(float(1.0)), bool(true)), min(mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(1061.7111, mix(float(_GLF_IDENTITY(1061.7111, mix(float(_GLF_FUZZED(1.7)), float(1061.7111), bool(true)))), float(_GLF_FUZZED(-34.32)), bool(false))))), float(float(1.0)), bool(true))))) / 1.0)))), 1.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(normalize(66.77)))))), 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8184.0453)))))))), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(546.377)), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.8)))), mix(float(_GLF_FUZZED(1061.7111)), float(float(_GLF_IDENTITY(1.0, (1.0) - 0.0))), bool(true))), 1.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(50.43) : round(length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY((round(length(normalize(vec3(1.0, 1.0, 1.0))))) / 1.0, mix(float(_GLF_FUZZED(-352.971)), float((round(length(normalize(vec3(1.0, 1.0, 1.0))))) / 1.0), bool(true)))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.9)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), cos(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(447.284, _GLF_IDENTITY(-44.47, max(-44.47, -44.47)), _GLF_IDENTITY(34.66, mix(float(34.66), float(_GLF_FUZZED(8381.8396)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -131.934, 7.0, -711.252, 5.2, 5.0)) : mat4x2(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), bool(true))), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(_GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(-9.4)))))) > injectionSwitch.y)) ? _GLF_FUZZED(-1.6) : exp(0.0))), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.2) : 1.0)), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 1.0, 1.0)), (mat3(1.0) * (vec3(1.0, 1.0, 1.0))) * mat3(1.0)))))), 1.0))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.29)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), max(_GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0)))))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.8)), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))) * 1.0) : _GLF_FUZZED(-5.1), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.29)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), max(_GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0)))))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.8)), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))) * 1.0) : _GLF_FUZZED(-5.1), max(true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.29)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), max(_GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0)))))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.8)), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))) * 1.0) : _GLF_FUZZED(-5.1), true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.29)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), max(_GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0)))))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.8)), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))) * 1.0) : _GLF_FUZZED(-5.1))), true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.29)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), max(_GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0)))))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.8)), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))) * 1.0) : _GLF_FUZZED(-5.1), true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.29)), bool(false)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), max(_GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_FUZZED(0.8), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat3x4(_GLF_FUZZED(0.8), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0)))))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.8)), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))) * 1.0) : _GLF_FUZZED(-5.1)))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), _GLF_IDENTITY(bool(true), true && (bool(true))))), (_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1061.7111)), float(float(1.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))), true && (bool(true)))))) / cos(0.0)), 1.0, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), (false ? _GLF_FUZZED(mat4x2(447.284, -44.47, _GLF_IDENTITY(34.66, min(34.66, 34.66)), -131.934, 7.0, -711.252, 5.2, 5.0)) : mat4x2(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(1061.7111), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(771.655) : _GLF_FUZZED(1061.7111)))), float(float(1.0)), bool(true))), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(8110.7508)), bool(false))))) / 1.0) : _GLF_FUZZED(7.4))) > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y)) ? _GLF_FUZZED(_GLF_IDENTITY(-1.6, min(-1.6, -1.6))) : exp(0.0))), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-1163.5433), float(_GLF_IDENTITY(vec2(_GLF_FUZZED(-1163.5433), 1.0), clamp(vec2(_GLF_FUZZED(-1163.5433), 1.0), vec2(_GLF_FUZZED(-1163.5433), 1.0), vec2(_GLF_FUZZED(-1163.5433), 1.0)))))))) / 1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))))) - 0.0), bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(false, ! (! (false))) || ((true))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-127.294) : 1.0)), 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) && true) ? 1.0 : _GLF_FUZZED(9260.1819))))))))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.0))), clamp(1.0, 1.0, 1.0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(153.270) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-127.294) : 1.0)), 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) && true) ? 1.0 : _GLF_FUZZED(9260.1819))))))))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.0))), clamp(1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-127.294) : 1.0)), 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) && true) ? 1.0 : _GLF_FUZZED(9260.1819))))))))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.0))), clamp(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-127.294) : 1.0)), 1.0, 1.0)))), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) && true) ? 1.0 : _GLF_FUZZED(9260.1819))))))))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.0))), clamp(1.0, 1.0, 1.0)))))))))), 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, float(mat2x4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-6.9, mix(float(-6.9), float(_GLF_FUZZED(3572.1095)), bool(false)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))), float(mat2x3(float(_GLF_IDENTITY(float(0.0), _GLF_IDENTITY(min(float(0.0), float(0.0)), mix(float(_GLF_FUZZED((+ 8.8))), float(min(float(0.0), float(0.0))), bool(true))))), 0.0, 1.0, 1.0, 1.0, 0.0)))), 0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))), float(mat2x3(float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 0.0, 0.0)), mix(float(_GLF_FUZZED(5.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))), float(mat2x3(float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))), 0.0, 1.0, 1.0, 1.0, 0.0)))), 0.0, 0.0)), max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))), float(mat2x3(float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))), 0.0, 1.0, 1.0, 1.0, 0.0)))), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))), float(mat2x3(float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))), 0.0, 1.0, 1.0, 1.0, 0.0)))), 0.0, 0.0))))), _GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false, false))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))), float(mat2x3(float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))), 0.0, 1.0, 1.0, 1.0, 0.0)))), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))), float(mat2x3(float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))), 0.0, 1.0, 1.0, 1.0, 0.0)))), 0.0, 0.0)))), _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-61.51) : 0.0)), 0.0))), mix(float(min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-71.77)), bool(false)))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0, mix(float((_GLF_IDENTITY(1.0, float(mat2x4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.9) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), float(_GLF_IDENTITY(_GLF_FUZZED(-8.8), (_GLF_FUZZED(-8.8)) / 1.0)), bool(false)))), 1.0)))), _GLF_struct_1(_GLF_IDENTITY(ivec4(1), (ivec4(1)) | _GLF_IDENTITY((ivec4(1)), ((ivec4(1))) << ivec4(0, 0, 0, 0)))), _GLF_struct_2(mat2(1.0)), _GLF_struct_3(uvec2(_GLF_IDENTITY(1u, min(1u, 1u))), 1u, mat4x3(1.0)), _GLF_struct_4(uvec2(1u), uvec2(1u)), _GLF_struct_5(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), clamp(uint(uvec2(1u, 1u)), uint(uvec2(1u, 1u)), uint(uvec2(1u, 1u)))))), uvec4(1u), vec4(1.0), mat3x4(1.0), vec4(1.0), uvec2(_GLF_IDENTITY(1u, (1u) / 1u)), mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.9) : 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), ~ (~ (_GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((~ (uvec4(1u))), clamp((~ (uvec4(1u))), _GLF_IDENTITY((~ (uvec4(1u))), (true ? (~ (uvec4(1u))) : _GLF_FUZZED(uvec4(174206u, 835u, 106574u, 13082u)))), (~ (uvec4(1u)))))))))) | (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u)))), min(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(clamp(uvec4(1u), uvec4(1u), uvec4(1u)), (clamp(uvec4(1u), uvec4(1u), uvec4(1u))) | (clamp(uvec4(1u), uvec4(1u), uvec4(1u)))))) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))))), uvec4(1u))))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_7.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_7.workgroup_base, min(_GLF_struct_replacement_7.workgroup_base, _GLF_struct_replacement_7.workgroup_base))) ^ 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), uint(uint(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((~ (next_virtual_gid)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY((~ (next_virtual_gid)), _GLF_IDENTITY(uint(uvec3((~ (next_virtual_gid)), 1u, 0u)), uint(uvec2(uint(uvec3((~ (next_virtual_gid)), 1u, 0u)), 1u)))))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (true ? (1) << 0 : _GLF_FUZZED(9373)))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, _GLF_IDENTITY(1, max(1, 1)))), int(ivec3(_GLF_IDENTITY(int(ivec2(1, 1)), max(_GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) ^ 0), int(ivec2(1, 1)))), 0, 0)))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, int(ivec2(1, 1))))), int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(144.796)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y)))), min(int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, 0 ^ (0))), _GLF_IDENTITY(1, int(ivec2(1, 1)))), (min(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (_GLF_IDENTITY(0 ^ (0), (0 ^ (0)) << 0)) | (0 ^ (0))))), _GLF_IDENTITY(1, int(ivec2(1, 1))))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), int(ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1) << 0), _GLF_IDENTITY(1, int(ivec2(1, 1))))), int(_GLF_ONE(1.0, injectionSwitch.y)))))))), 0u ^ (uint(1))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) - 0u)), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u ^ (uint(1)), (0u ^ (uint(1))) - 0u))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 182000u)), 0u, 0u))) << 0u)), (uint(1)) | _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (true ? _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))) / 1u) : _GLF_FUZZED(workgroup_id)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-256.242)), bool(false))), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5259.9541) : 0.0)))), 0.0))) + (vec3(1.0)), clamp(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-647.092)), float(0.0), bool(true))), 0.0) + _GLF_IDENTITY((vec3(1.0)), mix(vec3(((vec3(1.0)))[0], _GLF_FUZZED(3.1), _GLF_FUZZED(-3.4)), vec3(_GLF_FUZZED((19.93 * 589.494)), ((vec3(1.0)))[1], _GLF_IDENTITY(((vec3(1.0))), max(((vec3(1.0))), ((vec3(1.0)))))[2]), bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), max(vec3(0.0, 0.0, 0.0) + (vec3(1.0)), vec3(0.0, 0.0, 0.0) + (vec3(1.0)))), vec3(0.0, 0.0, 0.0) + _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(float(mat2x3((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.6))), 1.0)), (true ? float(mat2x3((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(determinant(mat2(1.6, 5037.2997, _GLF_IDENTITY(-8905.9929, mix(float(_GLF_FUZZED(4.4)), float(-8905.9929), bool(true))), 11.61)))))) / 1.0), 1.0)))), vec3(0.0, 0.0, 0.0) + ((vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(float(mat2x3((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.6))), 1.0)), (true ? float(mat2x3((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(determinant(mat2(1.6, 5037.2997, _GLF_IDENTITY(-8905.9929, mix(float(_GLF_FUZZED(4.4)), float(-8905.9929), bool(true))), 11.61)))))) / 1.0), 1.0)))))), vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))) + (vec3(1.0))))), max(vec3(1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9646.2837) : min(1.0, 1.0)))), 1.0 * (1.0))))), bvec2(true), _GLF_struct_9(_GLF_struct_8(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u ^ (1u))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec4(_GLF_IDENTITY(1u, 0u ^ (1u))))), atomicLoad(buf[virtual_gid], 4, 64, 0)), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))), false, false))))) || false) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))) >> 0u)), ~ (~ (_GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))) >> 0u))))) : 1u))), 1u), uvec4(1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (~ (64))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (! (subgroup_local_id + 1 < subgroup_size)), true && (! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool((subgroup_local_id + 1 < subgroup_size)))), true, true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), bool(bvec4(bool(bvec3((false), false, true)), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_struct_replacement_10._f2._f0.read_1 == read_2) + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, clamp(1, 1, 1)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2))), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))))) + 1), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))))) + 1), max((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))))) + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))))) + 1, max(uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))))) + 1, uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))))) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))))) + 1, max(uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))))) + 1, uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))))) + 1)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))))) + 1, max(uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))))) + 1, uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))))) + 1)))))) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))))) + 1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))), bool(bvec2(false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))), true))))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(virtual_gid)))) | (read_2))))))) + 1, (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(virtual_gid)))) | (read_2))))))) + 1))) << _GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(subgroup_size), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, bool(bvec2(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, (_GLF_struct_replacement_10._f2._f0.read_1 == read_2) || false)) || false), true))), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))), bool(bvec2(_GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(virtual_gid)))) | (read_2))))))) + 1, min(uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(virtual_gid)))) | (read_2))))))) + 1, uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(virtual_gid)))) | (read_2))))))) + 1))) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), max(0u, 0u))) : _GLF_FUZZED(subgroup_size)) * 1u)))))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == read_2))))) + 1))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_10._f2._f0.read_1 == read_2), false || ((_GLF_struct_replacement_10._f2._f0.read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)))))) + 1)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) && true))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), true)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bool(bool(bvec2(false, true)))), true && (bool(bool(bool(bvec2(false, true)))))))), false || (false)), true, true, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true, false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))))) * exp(vec2(0.0, 0.0))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), vec2(mat2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))), sqrt(0.0), 1.0))))))) * exp(vec2(0.0, 0.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))))) : _GLF_FUZZED(vec2(95.19, 8.2))))) * exp(vec2(0.0, 0.0))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))))) * exp(vec2(0.0, 0.0))).x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))))) * exp(vec2(0.0, 0.0))).x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(1.3, -235.070, -7335.7170, 8.8, 408.116, -2.0, -610.754, -2633.2721, -5180.2908, -17.65, -9007.5868, -57.49))))), (true ? float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))))) * exp(vec2(0.0, 0.0))).x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))))) * exp(vec2(0.0, 0.0))).x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(1.3, -235.070, -7335.7170, 8.8, 408.116, -2.0, -610.754, -2633.2721, -5180.2908, -17.65, -9007.5868, -57.49))))) : _GLF_FUZZED(dot(vec2(-0.2, 5.9), injectionSwitch))))))) > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), (injectionSwitch) * exp(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))))).x > injectionSwitch.y)))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-99.64), _GLF_FUZZED(-6547.6703)), bvec2(false, false)))) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))), vec2(mat2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))), 0.0, 1.0))) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))), vec2(mat2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))), 0.0, 1.0))) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))), true)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(2.2, 8544.4599)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))))).x > injectionSwitch.y))))))))))))) || false)))), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), min(next_virtual_gid, next_virtual_gid)))))], uint(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1 == read_2, bool(bvec4(_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1, (_GLF_IDENTITY(_GLF_struct_replacement_10._f2._f0.read_1, (_GLF_struct_replacement_10._f2._f0.read_1) | 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, true, true, false)))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(float(29113)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))) || false), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(true, false || (true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))), true, false, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), ! (! (true && (false))))), false || (! (_GLF_IDENTITY(true && (false), ! (! _GLF_IDENTITY((true && (false)), ((true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, false || (true)));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), bool(bvec4(false, true, false, false))), false, _GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))) || false)), (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, true, false)))))) || false))) || false))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), false || (bool(bool(! (false)))))))), true, true)))))
  barrier();
}
