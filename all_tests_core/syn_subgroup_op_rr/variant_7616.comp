#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY(((uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((subgroup_id)) : 1u)), 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(5u), uvec3(5u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(5u), uvec3(5u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(5u), uvec3(5u))))))))), _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, ~ (~ _GLF_IDENTITY((5u), ((5u)) << 0u)))))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) << 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), 0u ^ (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))))), max(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) + 0u)) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(_GLF_IDENTITY(5u, 0u ^ (_GLF_IDENTITY(5u, (5u) << 0u))), _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))), uvec3(5u)))))), max(uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, ~ (~ _GLF_IDENTITY((5u), ((5u)) << 0u)))))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) << 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), 0u ^ (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))))), max(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) + 0u)) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(_GLF_IDENTITY(5u, 0u ^ (_GLF_IDENTITY(5u, (5u) << 0u))), _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))), uvec3(5u)))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, ~ (~ _GLF_IDENTITY((5u), ((5u)) << 0u)))))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) << 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), 0u ^ (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))))), max(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) + 0u)) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(_GLF_IDENTITY(5u, 0u ^ (_GLF_IDENTITY(5u, (5u) << 0u))), _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))), uvec3(5u)))))), clamp(uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, ~ (~ _GLF_IDENTITY((5u), ((5u)) << 0u)))))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) << 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), 0u ^ (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))))), max(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) + 0u)) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(_GLF_IDENTITY(5u, 0u ^ (_GLF_IDENTITY(5u, (5u) << 0u))), _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))), uvec3(5u)))))), uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, ~ (~ _GLF_IDENTITY((5u), ((5u)) << 0u)))))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) << 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), 0u ^ (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))))), max(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) + 0u)) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(_GLF_IDENTITY(5u, 0u ^ (_GLF_IDENTITY(5u, (5u) << 0u))), _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))), uvec3(5u)))))), uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, ~ (~ _GLF_IDENTITY((5u), ((5u)) << 0u)))))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) << 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), 0u ^ (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))))), max(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) + 0u)) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(_GLF_IDENTITY(5u, 0u ^ (_GLF_IDENTITY(5u, (5u) << 0u))), _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))), uvec3(5u))))))))))), min(uvec3(uvec3(_GLF_IDENTITY(((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)), min(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)), uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), clamp(_GLF_IDENTITY(uvec3(5u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(5u))), uvec3(5u), uvec3(5u))), uvec3(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), clamp(_GLF_IDENTITY(uvec3(5u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(5u))), uvec3(5u), uvec3(5u))), uvec3(5u))) << uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))))), uvec3(uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(subgroup_size) : 5u))) * 1u), 5u))), uvec3(5u))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, max(5u, 5u))), uvec3(5u))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 0u + (5u))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uvec3(5u)), max(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, (5u) << 0u), _GLF_IDENTITY(5u, 0u + (_GLF_IDENTITY(5u, (5u) | 0u)))))))), ((uvec3(1u, _GLF_IDENTITY(1u, (1u) >> (0u & 182678u)), 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))))))) * (~ (gl_WorkGroupID)))), ~ (~ ((_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY(((uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((subgroup_id)) : 1u)), 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY(uvec3(5u), uvec3(5u))) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(5u), uvec3(5u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(5u), uvec3(5u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(5u), uvec3(5u))))))))), _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, ~ (~ _GLF_IDENTITY((5u), ((5u)) << 0u)))))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) << 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), 0u ^ (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))))), max(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) + 0u)) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(_GLF_IDENTITY(5u, 0u ^ (_GLF_IDENTITY(5u, (5u) << 0u))), _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))), uvec3(5u)))))), max(uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, ~ (~ _GLF_IDENTITY((5u), ((5u)) << 0u)))))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) << 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), 0u ^ (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))))), max(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) + 0u)) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(_GLF_IDENTITY(5u, 0u ^ (_GLF_IDENTITY(5u, (5u) << 0u))), _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))), uvec3(5u)))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, ~ (~ _GLF_IDENTITY((5u), ((5u)) << 0u)))))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) << 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), 0u ^ (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))))), max(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) + 0u)) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(_GLF_IDENTITY(5u, 0u ^ (_GLF_IDENTITY(5u, (5u) << 0u))), _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))), uvec3(5u)))))), clamp(uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, ~ (~ _GLF_IDENTITY((5u), ((5u)) << 0u)))))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) << 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), 0u ^ (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))))), max(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) + 0u)) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(_GLF_IDENTITY(5u, 0u ^ (_GLF_IDENTITY(5u, (5u) << 0u))), _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))), uvec3(5u)))))), uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, ~ (~ _GLF_IDENTITY((5u), ((5u)) << 0u)))))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) << 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), 0u ^ (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))))), max(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) + 0u)) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(_GLF_IDENTITY(5u, 0u ^ (_GLF_IDENTITY(5u, (5u) << 0u))), _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))), uvec3(5u)))))), uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uint(0u))), 0u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, ~ (~ _GLF_IDENTITY((5u), ((5u)) << 0u)))))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, (5u) << 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))), 0u ^ (_GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))))), max(uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) + 0u)) / 1u), 5u), clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u))))), uvec3(_GLF_IDENTITY(5u, _GLF_IDENTITY(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), max(clamp(5u, _GLF_IDENTITY(5u, (5u) / 1u), 5u), clamp(_GLF_IDENTITY(5u, 0u ^ (_GLF_IDENTITY(5u, (5u) << 0u))), _GLF_IDENTITY(5u, (5u) / 1u), 5u))))))), uvec3(5u))))))))))), min(uvec3(uvec3(_GLF_IDENTITY(((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)), min(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)), uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), clamp(_GLF_IDENTITY(uvec3(5u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(5u))), uvec3(5u), uvec3(5u))), uvec3(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), clamp(_GLF_IDENTITY(uvec3(5u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(5u))), uvec3(5u), uvec3(5u))), uvec3(5u))) << uvec3(0u, 0u, 0u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))))), uvec3(uvec3(_GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (false ? _GLF_FUZZED(subgroup_size) : 5u))) * 1u), 5u))), uvec3(5u))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, max(5u, 5u))), uvec3(5u))), max(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 0u + (5u))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uvec3(5u)), max(_GLF_IDENTITY(uvec3(5u), uvec3(5u)), _GLF_IDENTITY(uvec3(5u), uvec3(5u))))) >> _GLF_IDENTITY(uvec3(5u), uvec3(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, (5u) << 0u), _GLF_IDENTITY(5u, 0u + (_GLF_IDENTITY(5u, (5u) | 0u)))))))), ((uvec3(1u, _GLF_IDENTITY(1u, (1u) >> (0u & 182678u)), 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))))))) * (~ (gl_WorkGroupID)))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) * 1u))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) - 0u)), clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) * 1u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | 0u)), workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), max(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) - 0u))))) * 1u), 0u, 0u)))) + 0u)))) | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))), ~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) >> 0u, (((workgroup_base)) >> 0u) | (((workgroup_base)) >> 0u))) - 0u))))), workgroup_base))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), min(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))), (true ? ~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) : _GLF_FUZZED((workgroup_size ^ 71611u)))))))), ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))), ~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), workgroup_base)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))), clamp(~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, 0u, 1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)), clamp(workgroup_base, workgroup_base, workgroup_base))), ~ (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(bitfieldInsert(workgroup_id, workgroup_id, 92575, -24807)) : _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))), workgroup_base, workgroup_base)))))) >> 0u))))) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, (1u & 1u), 1u)), 0u + (uint(uvec4(subgroup_id, 1u, (1u & 1u), 1u))))) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)), min(uint(uvec4(subgroup_size, 1u, 1u, 1u)), _GLF_IDENTITY(uint(uvec4(subgroup_size, 1u, 1u, 1u)), (uint(uvec4(subgroup_size, 1u, 1u, 1u))) / 1u)))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))), (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) >> 0u))), (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) | (subgroup_local_id)))) + 1) % subgroup_size)) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) ^ (0u | 0u)), (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u))), 0u, 0u)), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) << 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_id)))) ^ 0u), uint(uvec4(virtual_gid, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)), 1u)))) | (virtual_gid)), _GLF_IDENTITY((virtual_gid) / 1u, ((virtual_gid) / 1u) | 0u)), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, (0u ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((+ next_virtual_gid)) : 0u)))), (uvec3(1u, 1u, (0u ^ 0u))) | uvec3(0u, 0u, 0u))))) | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) << 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u))))) : _GLF_FUZZED(virtual_gid))), 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, ~ (~ ((virtual_gid) / 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(1u, (1u) - 0u)) : _GLF_FUZZED(atomicMax(subgroup_local_id, workgroup_id)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, ~ (~ ((virtual_gid) / 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u) : _GLF_FUZZED(atomicMax(subgroup_local_id, workgroup_id)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(7u))), uint(7u)))))))) | 0u) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid))) / _GLF_IDENTITY(1u, 0u + (1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, ~ (~ ((virtual_gid) / 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(1u, (1u) - 0u)) : _GLF_FUZZED(atomicMax(subgroup_local_id, workgroup_id)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, ~ (~ ((virtual_gid) / 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u) : _GLF_FUZZED(atomicMax(subgroup_local_id, workgroup_id)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(7u))), uint(7u)))))))) | 0u) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid))) / _GLF_IDENTITY(1u, 0u + (1u))))) >> 0u)), 0u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, ~ (~ ((virtual_gid) / 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(1u, (1u) - 0u)) : _GLF_FUZZED(atomicMax(subgroup_local_id, workgroup_id)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, ~ (~ ((virtual_gid) / 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u) : _GLF_FUZZED(atomicMax(subgroup_local_id, workgroup_id)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(7u))), uint(7u)))))))) | 0u) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid))) / _GLF_IDENTITY(1u, 0u + (1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, ~ (~ ((virtual_gid) / 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(1u, (1u) - 0u)) : _GLF_FUZZED(atomicMax(subgroup_local_id, workgroup_id)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, ~ (~ ((virtual_gid) / 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u) : _GLF_FUZZED(atomicMax(subgroup_local_id, workgroup_id)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(7u))), uint(7u)))))))) | 0u) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid))) / _GLF_IDENTITY(1u, 0u + (1u))))) >> 0u)), 0u, 0u))))))))))], 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), ~ (~ (0 + (64))))), 64, 64)), 0);
 do
  {
   if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1 < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       switch(_GLF_IDENTITY(_GLF_SWITCH(0), (true ? _GLF_SWITCH(0) : _GLF_FUZZED(55293))))
        {
         case 0:
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) * (_GLF_IDENTITY(1u, (1u) | 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-7.9) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(1513.2567) : _GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0)))))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)))) + 1, 4, 64, 4);
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         case 87:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) / 1)); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), bool(bvec2(_GLF_IDENTITY(! (_injected_loop_counter != 1), false || (! (_injected_loop_counter != 1))), true)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), bool(bvec2(! (_injected_loop_counter != 1), true)))))), bool(bool(! (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, clamp(0, 0, 0))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true)), bool(bvec2(! (_injected_loop_counter != 1), true)))))))))))))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 77:
                 subgroupAll(false);
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 default:
                 do
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     1;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         break;
         case 54:
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (((0 | 1) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), (false ? _GLF_FUZZED((-71479 | 83606)) : int(7))), (true ? _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED((-71479 | 83606)) : int(7))) : _GLF_FUZZED((-78542 / -95548))))))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bool(bvec2(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false)))));
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
         for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           ;
          }
         case 64:
         if(false)
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 13:
             ivec4(-52016, (ivec3(-85659, _GLF_IDENTITY(9746, (9746) | (9746)), -75799) ^ ivec3(60838, 53581, -87859)));
             case 69:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
              {
              }
             else
              {
               mat2x4(mat4(6.2, 4248.1343, -80.53, -84.05, -8.3, 0.1, 7.0, _GLF_IDENTITY(_GLF_IDENTITY(-95.81, (-95.81) / exp(0.0)), mix(float(_GLF_FUZZED(-2224.2236)), float(_GLF_IDENTITY(-95.81, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(-95.81, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(223.514)), bool(false))), 1.0, 0.0, 0.0), (mat3x2(-95.81, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(_GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), _GLF_IDENTITY(float(mat2x4(float(_GLF_IDENTITY(mat3x2(-95.81, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0), (mat3x2(-95.81, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(6891.7463)), bool(false)))), 1.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.0)), float(injectionSwitch.y), bool(true))))) ? 0.0 : _GLF_FUZZED(-3.1))), 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(22.73)), float(_GLF_IDENTITY(float(mat2x4(float(_GLF_IDENTITY(mat3x2(-95.81, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6750.9266)), bool(false))), 0.0), (mat3x2(-95.81, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6891.7463)), bool(false)))), 1.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-3.1, max(-3.1, _GLF_IDENTITY(-3.1, min(-3.1, -3.1))))))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6323.3851)), float(0.0), bool(true)))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0), vec3(0.0, 1.0, 1.0))))))) * 1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(0.0, (0.0) * 1.0))), 1.0)), mix(float(float(mat2x4(float(_GLF_IDENTITY(mat3x2(-95.81, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6750.9266)), bool(false))), 0.0), (mat3x2(-95.81, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6891.7463)), bool(false)))), 1.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-3.1))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6323.3851)), float(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, abs(1.0)))), 1.0, length(0.0))))), bool(true)))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3036.3438) : 0.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)) + (0.0)), abs(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 1.0, 1.0)))) * sqrt(vec3(1.0, 1.0, 1.0))))))), mix(float(_GLF_FUZZED(-3637.3910)), float(float(mat2x3(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3036.3438) : 0.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)) + (0.0)), abs(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 1.0, 1.0)))) * sqrt(vec3(1.0, 1.0, 1.0)))))))), bool(true))))) * 1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-34.67), clamp(_GLF_FUZZED(-34.67), _GLF_FUZZED(-34.67), _GLF_FUZZED(-34.67)))), bool(false)))), bool(true)))))), bool(_GLF_IDENTITY(true, true && (true))))), -8.3, -8.6, 4.8, 1532.8409, 17.23, 56.67, 7169.9702, -5597.2469));
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             case 0:
             case 18:
             case 1:
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), ! (! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! ((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))) || false))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec4(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false, true, false))))))), ! (! (true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))) || (false))))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))), ! (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), false || (! ((true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))))))), true && (! (true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false)))))), bool(bvec3(! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false)))))), true, false))))))), false)))))))))), ! (! (bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false))))))), false || (! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, false))))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false))))))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false))))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))))))))), false)))))))))), ! (! (bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false))), (bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false)))) || false), false, false, _GLF_IDENTITY(false, bool(bool(false)))))))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! _GLF_IDENTITY((true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY((true && (_GLF_IDENTITY(false, (false) || false))), ((true && (_GLF_IDENTITY(false, (false) || false)))) && true)) && true))))), _GLF_IDENTITY(false, (false) || false))))))))))))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false))))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)))))))))), ! (! (bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false))))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false))))))))))))))), ! (! (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false))))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)))))))))), ! (! (bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false))))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false))))))))))))))), bool(bvec3(true && (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false))))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)))))))))), ! (! (bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false))))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), true && (! (true && (_GLF_IDENTITY(false, (false) || false))))))), false))))))))))))))), false, true)))))))) && true)), ! (! _GLF_IDENTITY((bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))), bool(bool(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))))))), ! (! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)))))))))), ! (! (_GLF_IDENTITY((bool(bool(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6747.1362, 2.4)))).x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), ! (! (true && (_GLF_IDENTITY(false, (false) || false))))))))))))))), bool(bvec4((bool(bool(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) || (false))))))), ! (! (true && (_GLF_IDENTITY(false, (false) || false)))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), bool(bvec3((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false)))), ! (! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))), ! _GLF_IDENTITY((! (true && (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(bvec3((! (true && (_GLF_IDENTITY(false, (false) || false)))), false, false)), bool(bool(bool(bvec3((! (true && (_GLF_IDENTITY(false, (false) || false)))), false, false))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))), ! _GLF_IDENTITY((! (true && (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(bvec3((! (true && (_GLF_IDENTITY(false, (false) || false)))), false, false)), bool(bool(bool(bvec3((! (true && (_GLF_IDENTITY(false, (false) || false)))), false, false)))))))))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))), ! (! (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false) || (false))) && true, ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), true)))) || false))) || (false))) && _GLF_IDENTITY(true, true && (true))) && true))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false) || (false))) && true, ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), true)))) || false))) || (false))) && _GLF_IDENTITY(true, true && (true))) && true))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false) || (false))) && true, ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), true)))) || false))) || (false))) && _GLF_IDENTITY(true, true && (true))) && true))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false) || (false))) && true, ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), true)))) || false))) || (false))) && _GLF_IDENTITY(true, true && (true))) && true)))))), false, true, false))))))))), ! (! (true && (_GLF_IDENTITY(false, (false) || false)))))) && true)))))))))), true, true)))))))))
              {
              }
             else
              {
               for(int _injected_loop_counter = (1 & 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) | (int(2))), (int(2)) >> 0)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(48967)))), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) | (_GLF_IDENTITY(int(2), (int(2)) >> 0)))), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) >> 0), (_GLF_IDENTITY(int(2), (int(2)) >> _GLF_IDENTITY(0, min(0, 0)))) | (_GLF_IDENTITY(int(2), (int(2)) >> 0)))))))))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 52:
                     mat2x4 _GLF_SWITCH_1_0v[19], _GLF_SWITCH_1_1v;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     case 90:
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     mat3 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     case 0:
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      barrier();
                     case 40:
                     case 95:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 98:
                     case 61:
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     case 47:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 16:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 32:
                     case 4:
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(70.90, -63.00)))).x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                        barrier();
                      }
                     else
                      {
                       (mat2(-46.78, 859.515, -5.4, -8848.3495) + mat2(_GLF_IDENTITY(-0.3, (_GLF_IDENTITY(-0.3, min(-0.3, -0.3))) - 0.0), -554.056, 23.57, -2815.1118));
                      }
                     break;
                     default:
                     1;
                    }
                  }
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0, int(ivec3(0, 0, 0))) << _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(int(int((0 << _GLF_IDENTITY(int(5), int(5))))), ~ (~ (int(int((_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) + 0) / 1) << _GLF_IDENTITY(int(5), int(5))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, 1)))) << 0)) + 0)) : _GLF_FUZZED(_injected_loop_counter))) != 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (true ? mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(-6.7, -67.34, 4.7, -7927.4135, -4.9, -84.91, -578.672, -19.93))))))) - vec2(0.0, 0.0)).y))))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 do
                  {
                   if(((-8957.6705 - mat2x3(-941.819, 0.4, -3.4, 3780.2230, 80.76, -1.4)) == (mat2x3(-1784.6011, 7.5, -945.564, 50.26, _GLF_IDENTITY(-2.7, max(-2.7, _GLF_IDENTITY(-2.7, max(_GLF_IDENTITY(-2.7, (false ? _GLF_FUZZED(-6.6) : -2.7)), -2.7)))), 1.7) / mat2x3(mat2(-8.4, -4.6, 996.274, _GLF_IDENTITY(-2008.0338, min(-2008.0338, -2008.0338)))))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       mat4x3(-2752.6403, 3297.0145, -3.7, 842.630, -9615.4027, 8.1, 1703.5995, 3.9, -9.0, 14.13, -5.5, -7.3);
                      }
                     else
                      {
                      }
                     int _GLF_SWITCH_0_0v;
                     mat2x4 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v;
                     uvec2 _GLF_SWITCH_0_4v[14], _GLF_SWITCH_0_5v[38], _GLF_SWITCH_0_6v[28];
                     if(_GLF_DEAD(false))
                      barrier();
                     mat2(mat3(4.2, -6.1, 2490.5773, 8121.4978, -754.317, -678.980, -0.8, -6505.2102, 1.3));
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -77325)); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     mat2x4(mat3x4(858.854, -0.7, 5.6, -4.1, -82.48, 76.86, _GLF_IDENTITY(-48.04, clamp(-48.04, -48.04, -48.04)), 565.579, -3.1, 1148.0063, 43.60, _GLF_IDENTITY(-7709.9086, mix(float(_GLF_FUZZED(-6.4)), float(-7709.9086), bool(true)))));
                     for(int _injected_loop_counter = ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1)), (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1))) / 1)) ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) > 0) && true)); _injected_loop_counter --)
                      {
                       false;
                      }
                     mat2 _GLF_SWITCH_0_7v[29], _GLF_SWITCH_0_8v[20], _GLF_SWITCH_0_9v;
                     reflect(cos(faceforward(vec4(-92.69, 6450.5123, -3.4, -2.9), vec4(6.9, _GLF_IDENTITY(3.9, 0.0 + (_GLF_IDENTITY(3.9, 1.0 * (3.9)))), -9571.7145, 2721.7499), vec4(5565.3458, -1044.4736, 5067.4223, 52.69))), vec4(5.7, 5.0, 6.2, -2.8));
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       switch(_GLF_SWITCH(_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-30934)))))))))
                        {
                         case 58:
                         _GLF_IDENTITY((+ mat3(-0.4, -3804.0549, -1.2, -906.090, 750.094, 4.2, 4559.3433, 7449.0665, _GLF_IDENTITY(-9.9, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true)), max(mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true)), mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(((+ mat3(-0.4, -3804.0549, -1.2, -906.090, 750.094, 4.2, 4559.3433, 7449.0665, _GLF_IDENTITY(_GLF_IDENTITY(-9.9, mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(-9.9, mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true))), (false ? _GLF_FUZZED(32.59) : _GLF_IDENTITY(-9.9, mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true)))))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (((+ mat3(-0.4, -3804.0549, -1.2, -906.090, 750.094, 4.2, 4559.3433, 7449.0665, _GLF_IDENTITY(_GLF_IDENTITY(-9.9, mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-9.9, mix(float(-9.9), float(_GLF_FUZZED(313.238)), bool(false))), mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true))), (false ? _GLF_FUZZED(32.59) : _GLF_IDENTITY(-9.9, mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true)))))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(_GLF_IDENTITY(mat4(((+ mat3(_GLF_IDENTITY(-0.4, max(-0.4, -0.4)), -3804.0549, -1.2, -906.090, 750.094, 4.2, 4559.3433, 7449.0665, _GLF_IDENTITY(-9.9, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true)), _GLF_IDENTITY(0.0 + (mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true))), clamp(0.0 + (mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true))), _GLF_IDENTITY(0.0 + (mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true))), (false ? _GLF_FUZZED(-14.26) : 0.0 + (mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true))))), 0.0 + (mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true)))))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat4(((+ mat3(-0.4, _GLF_IDENTITY(-3804.0549, (_GLF_IDENTITY(-3804.0549, clamp(-3804.0549, -3804.0549, -3804.0549))) * 1.0), -1.2, -906.090, 750.094, 4.2, 4559.3433, 7449.0665, _GLF_IDENTITY(-9.9, mix(float(_GLF_FUZZED(5.1)), float(-9.9), bool(true)))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0))) * mat4(1.0)))));
                         case 0:
                         case 48:
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         case 95:
                         case 71:
                         case 30:
                         case 89:
                         case 96:
                         case 17:
                         case 88:
                         bvec2(false, false);
                         break;
                         if(_GLF_DEAD(false))
                          barrier();
                         case 76:
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         mat2x4 _GLF_SWITCH_1_0v;
                         case 25:
                         ;
                         default:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(exp2(-4548.3645))))))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false)))))))))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           1;
                          }
                        }
                      }
                     else
                      {
                      }
                     mat4x3 _GLF_SWITCH_0_10v[1], _GLF_SWITCH_0_11v[16];
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 if((_GLF_IDENTITY((mat2(-7561.8684, _GLF_IDENTITY(-5.9, float(float(-5.9))), 39.72, 77.01) * mat2(309.137, -7.1, _GLF_IDENTITY(398.868, (false ? _GLF_FUZZED(3.8) : 398.868)), 6381.4627)) != mat2(mat4x2(_GLF_IDENTITY(759.408, max(_GLF_IDENTITY(759.408, (false ? _GLF_FUZZED(distance(_GLF_IDENTITY(-6.8, float(_GLF_IDENTITY(mat4x2(-6.8, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0), (mat4x2(-6.8, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 8281.9587)) : _GLF_IDENTITY(759.408, (false ? _GLF_FUZZED(-322.293) : _GLF_IDENTITY(759.408, (false ? _GLF_FUZZED(-58.07) : 759.408)))))), _GLF_IDENTITY(759.408, float(mat4x2(759.408, 0.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0))))), 22.93, 4957.7280, _GLF_IDENTITY(_GLF_IDENTITY(2.5, min(2.5, 2.5)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.3) : _GLF_IDENTITY(2.5, min(_GLF_IDENTITY(2.5, float(mat2x3(2.5, 1.0, 0.0, 0.0, cos(0.0), 1.0))), 2.5)))), _GLF_IDENTITY(-0.6, (-0.6) - 0.0), _GLF_IDENTITY(7.2, (7.2) * abs(1.0)), -6.8, 3.5)), bool(bool((mat2(-7561.8684, -5.9, 39.72, 77.01) * mat2(309.137, -7.1, _GLF_IDENTITY(398.868, 1.0 * (398.868)), 6381.4627)) != mat2(mat4x2(759.408, 22.93, 4957.7280, 2.5, -0.6, 7.2, -6.8, 3.5)))))))
                  {
                   mat3 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[45];
                   uvec2(32065u, _GLF_IDENTITY(141629u, min(141629u, 141629u)));
                   (mat2x3(13.06, 4.9, -3.5, -2653.4096, 24.85, 74.68) + 661.145);
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     asinh(pow(vec4(2.8, _GLF_IDENTITY(4629.6388, max(4629.6388, 4629.6388)), -626.568, 5.2), vec4(4.5, 3.6, 3.1, 8279.1054)));
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / 1u)) ^ 0u));
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-841.829, 6.8)))).x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                          }
                        }
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, false, false))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))); _injected_loop_counter ++)
                    {
                     do
                      {
                       ;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(5.2), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], (true ? (mat2(1.0) * (injectionSwitch))[1] : _GLF_FUZZED(-9.9)))), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-0.9)), bvec2(true, false)))).y))));
                    }
                  }
                 vec4 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v[37], _GLF_SWITCH_0_17v;
                 mat3x4 _GLF_SWITCH_0_18v[37], _GLF_SWITCH_0_19v[32], _GLF_SWITCH_0_20v;
                }
              }
             else
              {
              }
             case 25:
             mat3x2 _GLF_SWITCH_0_21v[85];
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             case 88:
             mat3x4(13.69, 9989.1347, -7.4, _GLF_IDENTITY(-3871.8907, (-3871.8907) / 1.0), 6.2, -1235.9893, 48.22, -1.4, -9.3, 3.6, 7.1, 4.0);
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               uvec4(2186u, 63722u, 166572u, 191737u).y;
              }
             case 80:
             for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(42555) : _GLF_IDENTITY(1, clamp(1, 1, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               mat4x3(-3.6, 9.3, -11.05, -3.9, _GLF_IDENTITY(_GLF_IDENTITY(-0.4, max(_GLF_IDENTITY(-0.4, (-0.4) * 1.0), -0.4)), max(-0.4, -0.4)), -93.73, 6.1, 23.29, -23.74, -28.02, 0.3, 7.8);
              }
             case 38:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 do
                  {
                   bvec3(false, _GLF_IDENTITY(false, (false) && true), true);
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))));
              }
             else
              {
              }
             break;
             case 71:
             do
              {
               (+ _GLF_IDENTITY(_GLF_IDENTITY((-895.414 + mat3(80.21, _GLF_IDENTITY(_GLF_IDENTITY(-206.179, (false ? _GLF_FUZZED(-2586.5874) : -206.179)), sin(0.0) + (_GLF_IDENTITY(-206.179, (_GLF_IDENTITY(-206.179, 1.0 * (-206.179))) - 0.0))), -5.4, 7.2, -714.075, -46.22, _GLF_IDENTITY(-5.4, _GLF_IDENTITY(_GLF_IDENTITY(max(-5.4, -5.4), max(_GLF_IDENTITY(max(-5.4, -5.4), mix(float(max(-5.4, -5.4)), float(_GLF_FUZZED(4067.0166)), bool(false))), max(-5.4, -5.4))), (max(-5.4, -5.4)) + length(vec2(0.0, 0.0)))), 98.59, _GLF_IDENTITY(-20.72, _GLF_IDENTITY(min(-20.72, -20.72), (min(-20.72, -20.72)) + 0.0)))), ((-895.414 + mat3(80.21, -206.179, -5.4, 7.2, -714.075, -46.22, -5.4, 98.59, _GLF_IDENTITY(_GLF_IDENTITY(-20.72, (true ? -20.72 : _GLF_FUZZED(6.6))), clamp(_GLF_IDENTITY(-20.72, (-20.72) + 0.0), -20.72, _GLF_IDENTITY(-20.72, clamp(-20.72, _GLF_IDENTITY(-20.72, _GLF_IDENTITY((-20.72), clamp((-20.72), (-20.72), (-20.72))) - 0.0), -20.72))))))) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(tan(atan(-6728.2996, -595.510))) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.x, 0.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.x, 0.0, 0.0))))) / 1.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-3737.9713, 6231.1930, 15.24, 84.69, -8.2, 895.310, -703.285, -72.37, -7921.6998)) : _GLF_IDENTITY((-895.414 + mat3(80.21, _GLF_IDENTITY(_GLF_IDENTITY(-206.179, (false ? _GLF_FUZZED(-2586.5874) : -206.179)), _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(-2374.0324)), bool(false))) + (_GLF_IDENTITY(-206.179, (_GLF_IDENTITY(-206.179, 1.0 * (-206.179))) - 0.0))), -5.4, 7.2, -714.075, -46.22, _GLF_IDENTITY(_GLF_IDENTITY(-5.4, _GLF_IDENTITY(_GLF_IDENTITY(max(-5.4, -5.4), max(_GLF_IDENTITY(max(-5.4, -5.4), mix(float(max(-5.4, -5.4)), float(_GLF_FUZZED(4067.0166)), bool(false))), max(-5.4, -5.4))), (max(-5.4, -5.4)) + length(vec2(0.0, 0.0)))), clamp(_GLF_IDENTITY(-5.4, _GLF_IDENTITY(_GLF_IDENTITY(max(-5.4, -5.4), max(_GLF_IDENTITY(max(-5.4, -5.4), mix(float(max(-5.4, -5.4)), float(_GLF_FUZZED(4067.0166)), bool(false))), max(-5.4, -5.4))), (max(-5.4, -5.4)) + length(vec2(0.0, 0.0)))), _GLF_IDENTITY(-5.4, _GLF_IDENTITY(_GLF_IDENTITY(max(-5.4, -5.4), max(_GLF_IDENTITY(max(-5.4, -5.4), mix(float(max(-5.4, -5.4)), float(_GLF_FUZZED(4067.0166)), bool(false))), max(-5.4, -5.4))), (max(-5.4, -5.4)) + length(vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(-5.4, _GLF_IDENTITY(_GLF_IDENTITY(max(-5.4, -5.4), max(_GLF_IDENTITY(max(-5.4, -5.4), mix(float(max(-5.4, -5.4)), float(_GLF_FUZZED(4067.0166)), bool(false))), max(-5.4, -5.4))), (max(-5.4, -5.4)) + length(vec2(0.0, 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(-5.4, _GLF_IDENTITY(_GLF_IDENTITY(max(-5.4, -5.4), max(_GLF_IDENTITY(max(-5.4, -5.4), mix(float(max(-5.4, -5.4)), float(_GLF_FUZZED(4067.0166)), bool(false))), max(-5.4, -5.4))), (max(-5.4, -5.4)) + length(vec2(0.0, 0.0)))), float(vec4(_GLF_IDENTITY(-5.4, _GLF_IDENTITY(_GLF_IDENTITY(max(-5.4, -5.4), max(_GLF_IDENTITY(max(-5.4, -5.4), mix(float(max(-5.4, -5.4)), float(_GLF_FUZZED(4067.0166)), bool(false))), max(-5.4, -5.4))), (max(-5.4, -5.4)) + length(vec2(0.0, 0.0)))), 0.0, 1.0, 1.0))) : _GLF_FUZZED(4.2))))), 98.59, _GLF_IDENTITY(-20.72, _GLF_IDENTITY(min(-20.72, -20.72), (min(-20.72, -20.72)) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))))))), ((-895.414 + mat3(80.21, _GLF_IDENTITY(-206.179, float(mat2(_GLF_IDENTITY(-206.179, 0.0 + (-206.179)), 1.0, 0.0, sqrt(0.0)))), -5.4, 7.2, -714.075, -46.22, -5.4, 98.59, _GLF_IDENTITY(_GLF_IDENTITY(-20.72, (true ? -20.72 : _GLF_FUZZED(6.6))), clamp(_GLF_IDENTITY(-20.72, (-20.72) + 0.0), -20.72, _GLF_IDENTITY(-20.72, clamp(-20.72, _GLF_IDENTITY(-20.72, _GLF_IDENTITY((-20.72), clamp((-20.72), (-20.72), (-20.72))) - 0.0), -20.72))))))) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(tan(atan(-6728.2996, -595.510))) : _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-1.5))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.x, 0.0, 0.0)))), (float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.x, 0.0, 0.0))))) / 1.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.1)), vec2(_GLF_FUZZED(3.8), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x))))));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))));
             case 15:
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.2), _GLF_FUZZED(2732.2064)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), false, false)))))))))), ! (! (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), false, false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), false, false))))))))))))), (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 (mat2x4(-3.2, -122.379, -113.468, -6218.8717, -4340.2535, -7432.3331, 6.0, 3.4) != mat2x4(_GLF_IDENTITY(-3593.8395, (-3593.8395) + 0.0), -2095.0471, _GLF_IDENTITY(-84.05, _GLF_IDENTITY(max(-84.05, -84.05), max(_GLF_IDENTITY(_GLF_IDENTITY(max(-84.05, -84.05), min(max(-84.05, -84.05), _GLF_IDENTITY(max(-84.05, -84.05), float(mat3(max(-84.05, -84.05), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), (true ? max(-84.05, -84.05) : _GLF_FUZZED(determinant(mat2(1794.6266, -2686.6778, 3.6, 8454.4182))))), max(-84.05, _GLF_IDENTITY(-84.05, float(vec3(-84.05, 0.0, 1.0))))))), -4364.7840, -2880.7596, 5.3, -1.0, -3.0));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             else
              {
              }
             default:
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.6) : injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
                  barrier();
                }
               else
                {
                }
               1;
              }
            }
          }
         default:
         1;
        }
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u ^ _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1), max(clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1), clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1))) : _GLF_FUZZED(workgroup_size)))), read_1, read_1)) == read_2), (uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1), max(clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1), clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1))) : _GLF_FUZZED(workgroup_size)))), read_1, read_1)) == read_2)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1), max(clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1), clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1))) : _GLF_FUZZED(workgroup_size)))), read_1, read_1)) == read_2), (uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1), max(clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1), clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1, read_1))) : _GLF_FUZZED(workgroup_size)))), read_1, read_1)) == read_2)) / 1u))) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, int(ivec2(0, 0)))))))), ~ (~ (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, 1u * (read_2))))) + 1, clamp(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1))))), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) | (uint(read_1 == read_2) + 1))) + 0u), _GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (read_1 == read_2))) + 1) << 0u))), 4, 64, 4);
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))));
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_IDENTITY((false), bool(bvec4((false), false, false, false)))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(71.28)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED(_GLF_IDENTITY((-9.8 - -73.17), (true ? _GLF_IDENTITY((-9.8 - -73.17), min((-9.8 - -73.17), _GLF_IDENTITY((-9.8 - -73.17), (false ? _GLF_FUZZED(-8.4) : (-9.8 - -73.17))))) : _GLF_FUZZED(0.3))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false, ! (! (false)))))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0))))[0], _GLF_IDENTITY(mix(float(_GLF_FUZZED(71.28)), float((injectionSwitch)[0]), bool(true)), clamp(mix(float(_GLF_FUZZED(71.28)), float((injectionSwitch)[0]), bool(true)), mix(float(_GLF_FUZZED(71.28)), float((injectionSwitch)[0]), bool(true)), mix(float(_GLF_FUZZED(71.28)), float((injectionSwitch)[0]), bool(true))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))).y)), false))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(71.28)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - _GLF_IDENTITY(-73.17, (false ? _GLF_FUZZED(-9.1) : -73.17))))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-2042.6455 * 0.1))), bool(false))) > injectionSwitch.y)), false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(_GLF_IDENTITY(71.28, float(vec4(71.28, 1.0, 0.0, 1.0))))), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false))).y)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(_GLF_IDENTITY(71.28, mix(float(71.28), float(_GLF_FUZZED(565.462)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)))), false)), true, true))))))))).y))), false || (bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)))), false)), true, true))))))))).y)))))), true, true, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)))), bool(bvec4(bool(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-671.818), (_GLF_FUZZED(-671.818)) * 1.0), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (false ? _GLF_FUZZED(831.686) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x2((injectionSwitch)[0], sqrt(0.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), true))))).y)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)))))), true, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8 - -73.17, (false ? _GLF_FUZZED(-5020.4410) : -9.8 - -73.17))))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false))).y))), true && (bool(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8 - -73.17, (false ? _GLF_FUZZED(-5020.4410) : -9.8 - -73.17))))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false))).y)))))), bool(bvec4(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))).y) || false))) || false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))).y) || false))) || false)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.8, 9.0)))))[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((_GLF_IDENTITY(-9.8, min(_GLF_IDENTITY(-9.8, mix(float(-9.8), float(_GLF_FUZZED(174.262)), bool(false))), -9.8)) - -73.17))), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))).y) || false))) || false))))) || false))))))), true, true, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-861.549), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8663.6511)), bvec2(true, false))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y) / 1.0))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-861.549), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8663.6511)), bvec2(true, false))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y) / 1.0)))))), (! (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-861.549), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8663.6511)), bvec2(true, false))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y) / 1.0))))))) && true))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-861.549), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8663.6511)), bvec2(true, false))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y) / 1.0))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-861.549), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8663.6511)), bvec2(true, false))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y) / 1.0)))))), (! (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-861.549), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8663.6511)), bvec2(true, false))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED((-9.8 - -73.17))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y) / 1.0))))))) && true))), false, false))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED(_GLF_IDENTITY((-9.8 - -73.17), min((-9.8 - -73.17), (-9.8 - -73.17))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-671.818), _GLF_FUZZED(_GLF_IDENTITY((-9.8 - -73.17), min((-9.8 - -73.17), (-9.8 - -73.17))))), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6661.0428)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))) > injectionSwitch.y)), false))).y))))))), true, true, false))))) && true))), false, true))))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, sqrt(0.0), 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false, true, true))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               switch(_GLF_SWITCH((0 ^ (0 >> _GLF_IDENTITY(int(1), int(1))))))
                {
                 case 0:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 32:
                 case 92:
                 case 77:
                 case 91:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) / 1), max(0, 0)), _GLF_IDENTITY(0, 1 * (0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 break;
                 default:
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
                    }
                   do
                    {
                     1;
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, false)), ! (! (bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, false)))))));
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     subgroupAll(true);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
