#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 vec3 _f0;
} ;

struct _GLF_struct_17 {
 mat2x4 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 int _f3;
} ;

struct _GLF_struct_16 {
 int _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 vec2 _f1;
 ivec4 _f2;
 ivec2 _f3;
 ivec4 _f4;
 mat3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_14 {
 bvec3 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_13 {
 mat3x2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_19 {
 _GLF_struct_13 _f0;
 int _f1;
 uint next_virtual_gid;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
 _GLF_struct_17 _f5;
 _GLF_struct_18 _f6;
} ;

struct _GLF_struct_20 {
 mat4x3 _f0;
 bool _f1;
 mat4 _f2;
 uvec4 _f3;
 _GLF_struct_19 _f4;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 mat2x4 _f1;
 uint _f2;
 vec4 _f3;
 mat2x3 _f4;
 mat3x2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_11 {
 uint subgroup_local_id;
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
 mat4x3 _f1;
 int _f2;
 bvec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_6 {
 bool _f0;
 mat3x4 _f1;
 uvec2 _f2;
 mat4x3 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 bool _f2;
 _GLF_struct_11 _f3;
 mat4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 bvec2 _f1;
 uint _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 ivec4 _f1;
 vec3 _f2;
 vec3 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 uvec3 _f1;
 ivec4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 uint _f1;
 vec3 _f2;
 _GLF_struct_0 _f3;
 mat3x4 _f4;
 bvec4 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 _GLF_struct_1 _f1;
 uint _f2;
 _GLF_struct_4 _f3;
 mat4 _f4;
 uint subgroup_id;
 mat3 _f5;
 uvec4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_struct_1(mat3x2(1.0), 1u, vec3(1.0), _GLF_struct_0(bvec4(true), uvec3(1u), _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1)))) | _GLF_IDENTITY(ivec4(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) << 0) * (0)), (_GLF_IDENTITY(0, max(0, 0))) - 0), 0), (_GLF_IDENTITY(ivec4(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)), (_GLF_IDENTITY(0, max(0, 0))) - 0), 0), (false ? _GLF_FUZZED(ivec4(-83245, -25777, 30901, -68718)) : ivec4(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)), (_GLF_IDENTITY(0, max(0, 0))) - 0), 0)))) >> ivec4(0, 0, 0, 0))), bvec3(true)), mat3x4(1.0), bvec4(true), uvec2(1u)), _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_struct_4(_GLF_struct_2(mat4x3(1.0), bvec2(true), 1u), ivec4(_GLF_IDENTITY(1, (1) / 1)), vec3(1.0), vec3(1.0), _GLF_struct_3(mat3(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7147.5296)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0), (false ? _GLF_FUZZED(mat3x4(3.5, 5494.2032, 688.104, -3117.3420, _GLF_IDENTITY(-70.89, 1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0)))))), 6.1, -46.24, -457.349, 2.3, 3.1, 0.8, -742.235)) : mat3x4(1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.1))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-664.970)), bool(false)), mix(float(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-664.970)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(-664.970)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-664.970)), bool(false))))), float(_GLF_FUZZED(520.634)), bool(false)))), 1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(20.57) : _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), (false ? _GLF_FUZZED(mat3x4(3.5, _GLF_IDENTITY(5494.2032, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(5494.2032, float(mat3(5494.2032, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_IDENTITY(5494.2032, float(mat3(5494.2032, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) : _GLF_FUZZED(-7.9))), float(_GLF_FUZZED(0.4)), bool(false)), float(vec2(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(5494.2032, float(mat3(5494.2032, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? float(_GLF_IDENTITY(5494.2032, float(mat3(5494.2032, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) : _GLF_FUZZED(-7.9))), float(_GLF_FUZZED(0.4)), bool(false)), 0.0)))), 688.104, -3117.3420, _GLF_IDENTITY(-70.89, 1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-5683.5542 / 6.4))), float(0.0), bool(true))), 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(8761.9465, 6094.2775, _GLF_IDENTITY(718.765, max(_GLF_IDENTITY(718.765, (718.765) - 0.0), 718.765)), 7.1))))))))), 6.1, _GLF_IDENTITY(_GLF_IDENTITY(-46.24, (-46.24) / 1.0), (-46.24) - 0.0), -457.349, 2.3, 3.1, 0.8, -742.235)) : mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), (mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7147.5296)), bool(false))))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0), (false ? _GLF_FUZZED(mat3x4(3.5, 5494.2032, 688.104, _GLF_IDENTITY(-3117.3420, clamp(-3117.3420, -3117.3420, -3117.3420)), _GLF_IDENTITY(-70.89, 1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0)))))), 6.1, -46.24, -457.349, _GLF_IDENTITY(2.3, max(2.3, 2.3)), 3.1, 0.8, -742.235)) : mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-664.970)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), mix(float(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-664.970)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(-664.970)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(-664.970)), bool(false))))), float(_GLF_FUZZED(520.634)), bool(false)))), 1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(20.57) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), (false ? _GLF_FUZZED(mat3x4(3.5, _GLF_IDENTITY(5494.2032, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(5494.2032, float(mat3(5494.2032, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_IDENTITY(5494.2032, float(mat3(5494.2032, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) : _GLF_FUZZED(-7.9))), float(_GLF_FUZZED(0.4)), bool(false)), float(vec2(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(5494.2032, float(mat3(5494.2032, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_IDENTITY(5494.2032, float(mat3(5494.2032, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) : _GLF_FUZZED(-7.9))), float(_GLF_FUZZED(0.4)), bool(false)), 0.0)))), 688.104, -3117.3420, _GLF_IDENTITY(-70.89, 1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-5683.5542 / 6.4))), float(0.0), bool(true))), 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) : _GLF_FUZZED(inverse(mat2(318.014, -520.911, 900.398, -7991.5785))))) : _GLF_FUZZED(mat2(8761.9465, 6094.2775, _GLF_IDENTITY(718.765, max(_GLF_IDENTITY(718.765, (718.765) - 0.0), 718.765)), 7.1))))))))), 6.1, _GLF_IDENTITY(_GLF_IDENTITY(-46.24, (-46.24) / 1.0), (-46.24) - 0.0), -457.349, 2.3, 3.1, 0.8, -742.235)) : mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))))), clamp(float(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))))), float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) - tan(0.0)), 1.0), vec3(0.0, exp(0.0), 0.0))))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))))), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)))))), float(_GLF_FUZZED((+ -402.273))), bool(false))), 0.0, 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))))), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)))))), float(_GLF_FUZZED((+ -402.273))), bool(false))), 0.0, 1.0, 0.0))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))))), clamp(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, exp(0.0), 0.0), (true ? _GLF_IDENTITY(vec3(0.0, exp(0.0), 0.0), vec3(mat3x4(vec3(0.0, exp(0.0), 0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(vec3(-2078.9718, 80.08, 584.241)))))))), float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))))), float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))))), clamp(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), max(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))))))), float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)))) * 1.0))), float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec3(0.0, exp(0.0), 0.0))))), clamp(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))) * _GLF_ONE(1.0, injectionSwitch.y))))), float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0))))), float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, exp(0.0), 0.0)))))))))), 1.0), (false ? _GLF_FUZZED(mat3x4(3.5, _GLF_IDENTITY(5494.2032, (5494.2032) / 1.0), 688.104, -3117.3420, _GLF_IDENTITY(-70.89, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0)), mat4(1.0) * (mat2x4(1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, tan(0.0)))))), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, length(vec2(0.0, 0.0)), sqrt(cos(0.0)), length(vec2(0.0, 0.0)), 0.0, 1.0)))), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)))))), max(_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2769.2245) : 1.0)), 1.0)), 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0))))), (true ? _GLF_IDENTITY(1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-70.89, clamp(_GLF_IDENTITY(-70.89, (-70.89) * 1.0), _GLF_IDENTITY(-70.89, max(-70.89, -70.89)), -70.89)), float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0))))), mat2(_GLF_IDENTITY(mat2(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))))), transpose(transpose(mat2(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0))))))))))))))))), float(mat2x3((_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0))))), mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0))))), (transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))))) - mat2(0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat2(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0))))))))))))))))), 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sin(0.0)))), mix(_GLF_IDENTITY(float(1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0)))))), max(_GLF_IDENTITY(float(1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0)))))), float(mat3x4(_GLF_IDENTITY(float(1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(-70.89, (-70.89) / determinant(_GLF_IDENTITY(mat3(1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0), transpose(transpose(mat3(1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0)))))), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0)))))), float(mat2x3(float(1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0)))))), 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(0.0)))), float(1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0)))))))), float(_GLF_FUZZED(_GLF_IDENTITY(208.304, min(_GLF_IDENTITY(208.304, clamp(_GLF_IDENTITY(208.304, max(208.304, 208.304)), 208.304, 208.304)), 208.304)))), bool(false))) : _GLF_FUZZED(5.1))), 1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), abs(1.0), 0.0, 1.0)) * mat2(1.0)))))))), 6.1, -46.24, -457.349, 2.3, 3.1, 0.8, -742.235)) : mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0, 1.0, 1.0)))))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), (_GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))), clamp(float(mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))) / 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0)), 1.0), (false ? _GLF_FUZZED(mat3x4(3.5, 5494.2032, 688.104, -3117.3420, _GLF_IDENTITY(-70.89, 1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * determinant(mat3(1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), abs(1.0), 0.0, 1.0)) * mat2(1.0)))))), 6.1, -46.24, -457.349, 2.3, 3.1, _GLF_IDENTITY(0.8, mix(float(0.8), float(_GLF_FUZZED(68.48)), bool(false))), -742.235)) : mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), (transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-270.149)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), (false ? _GLF_FUZZED(mat3x4(3.5, 5494.2032, 688.104, -3117.3420, _GLF_IDENTITY(-70.89, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(581.530)), float(0.0), bool(true))), 0.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, abs(0.0), 0.0, 0.0))), 1.0)) * mat2(1.0))))), max(_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(4857.1859, 45.49, 3712.2947, 7652.3407))))))), mix(float(_GLF_FUZZED((vec2(-4906.3254, 559.594) * mat4x2(87.36, -5403.0657, -84.04, 4.1, 75.59, -305.387, -5223.6531, -7366.5577)).w)), float(_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (true ? _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + tan(0.0)), 0.0)), 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0))))), _GLF_IDENTITY(mix(float(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(-70.89, (-70.89) * 1.0), float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), abs(1.0), 0.0, 1.0)) * mat2(1.0)))))), float(_GLF_FUZZED(208.304)), bool(false)), max(mix(float(1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), abs(1.0), 0.0, 1.0)) * mat2(1.0)))))), float(_GLF_FUZZED(208.304)), bool(false)), mix(float(1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(-70.89, clamp(_GLF_IDENTITY(-70.89, 1.0 * (-70.89)), _GLF_IDENTITY(-70.89, float(vec3(-70.89, 0.0, 0.0))), -70.89)), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), abs(1.0), 0.0, 1.0)) * mat2(1.0)))))), float(_GLF_FUZZED(208.304)), bool(_GLF_IDENTITY(false, true && (false))))))) : _GLF_FUZZED(5.1))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(-70.89, max(_GLF_IDENTITY(-70.89, float(mat4(-70.89, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, sin(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0))), -70.89)), float(_GLF_IDENTITY(mat2x4(-70.89, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(366.456) : 0.0)), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-6.6))), abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec3(1.0, cos(0.0), 1.0))) : _GLF_FUZZED(radians(-54.74)))), min(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec3(1.0, cos(0.0), 1.0))) : _GLF_FUZZED(radians(-54.74)))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec3(1.0, cos(0.0), 1.0))) : _GLF_FUZZED(radians(-54.74)))))), 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0)))))))), 6.1, -46.24, -457.349, 2.3, 3.1, 0.8, -742.235)) : mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), max(_GLF_IDENTITY(1.0, float(mat4x2(1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), max(_GLF_IDENTITY(1.0, float(mat4x2(1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat4x2(1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.1)), bool(false))) : _GLF_FUZZED(-1775.9648))))), 1.0), (false ? _GLF_FUZZED(mat3x4(3.5, 5494.2032, 688.104, -3117.3420, _GLF_IDENTITY(-70.89, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), clamp(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)))))) / 1.0), 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), clamp(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)))))) / 1.0), 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0))))), clamp((_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), clamp(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)))))) / 1.0), 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), clamp(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)))))) / 1.0), 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0))))), ((_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), clamp(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)))))) / 1.0), 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0)))))) - 0.0), (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), clamp(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)))))) / 1.0), 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0))))))), (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), clamp(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)))))) / 1.0), 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0))))), (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), float(_GLF_IDENTITY(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), clamp(vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)), vec3((_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.4)), float(0.0), bool(true)))), sqrt(1.0), sin(0.0)))))) / 1.0), 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0)))))))), 6.1, -46.24, -457.349, 2.3, 3.1, 0.8, -742.235)) : mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.7))), 1.0))))))))))) - mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7809.8191) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-4.6), min(_GLF_IDENTITY(_GLF_FUZZED(-4.6), (false ? _GLF_FUZZED(7.7) : _GLF_IDENTITY(_GLF_FUZZED(-4.6), (_GLF_FUZZED(-4.6)) + 0.0))), _GLF_FUZZED(-4.6)))), bool(false))), float(_GLF_IDENTITY(mat3x4(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-79.13) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-797.237))))), 1.0, 1.0), (true ? mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED((-60.33 - mat2x3(-7.0, 6634.2146, -7.8, 634.923, -7.0, -9820.6891))))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, log(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4072.0582) : 1.0)), injectionSwitch.y)), 1.0, abs(1.0)))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), (false ? _GLF_FUZZED(mat3x4(3.5, _GLF_IDENTITY(5494.2032, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(5494.2032, 1.0, sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY((vec3(5494.2032, 1.0, sqrt(1.0))), ((vec3(5494.2032, 1.0, sqrt(1.0)))) + vec3(0.0, 0.0, 0.0)) * mat3(1.0), (false ? _GLF_FUZZED(vec3(8.9, 58.49, 1.9)) : (vec3(5494.2032, 1.0, sqrt(1.0))) * mat3(1.0))))), mix(float(_GLF_FUZZED(2.7)), float(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(5494.2032, min(_GLF_IDENTITY(5494.2032, min(5494.2032, _GLF_IDENTITY(5494.2032, 0.0 + (5494.2032)))), 5494.2032)), 1.0, sqrt(1.0)), _GLF_IDENTITY((vec3(5494.2032, 1.0, sqrt(1.0))) * mat3(1.0), (false ? _GLF_FUZZED(vec3(8.9, 58.49, 1.9)) : (vec3(5494.2032, 1.0, sqrt(1.0))) * mat3(1.0)))))), bool(true)))), 688.104, -3117.3420, _GLF_IDENTITY(-70.89, 1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(_GLF_IDENTITY(-70.89, mix(float(_GLF_FUZZED((+ 85.77))), float(-70.89), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-4.4), (true ? _GLF_FUZZED(-4.4) : _GLF_FUZZED(-9.5))))), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0)))))), 6.1, -46.24, -457.349, 2.3, 3.1, 0.8, -742.235)) : mat3x4(1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, exp(tan(0.0)), 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.2)), bool(false))), 1.0, 1.0)))))), transpose(transpose(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((776.448 * -9741.6156))), bool(false))), max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((776.448 * -9741.6156))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((776.448 * -9741.6156))), bool(false)))))), float(_GLF_FUZZED(float(25710u))), bool(false))), float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(mat3x4(3.5, 5494.2032, 688.104, -3117.3420, _GLF_IDENTITY(-70.89, 1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(-70.89, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0)) * mat2(1.0)))))), 6.1, -46.24, _GLF_IDENTITY(-457.349, mix(float(_GLF_FUZZED(-165.584)), float(_GLF_IDENTITY(-457.349, mix(float(-457.349), float(_GLF_FUZZED(-486.438)), bool(false)))), bool(true))), 2.3, 3.1, 0.8, -742.235)) : mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.8))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(min(1.0, 1.0), 0.0 + (_GLF_IDENTITY(min(1.0, 1.0), clamp(min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? transpose(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(mat2x3(-6.1, -4.2, -6.6, -6099.5555, -862.631, 35.19)))))))), 1.0), min(1.0, 1.0), min(1.0, 1.0))))), clamp(_GLF_IDENTITY(min(1.0, 1.0), 0.0 + (_GLF_IDENTITY(min(1.0, 1.0), clamp(min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? transpose(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(mat2x3(-6.1, -4.2, -6.6, -6099.5555, -862.631, 35.19)))))))), 1.0), min(1.0, 1.0), min(1.0, 1.0))))), _GLF_IDENTITY(min(1.0, 1.0), 0.0 + (_GLF_IDENTITY(min(1.0, 1.0), clamp(min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? transpose(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(mat2x3(-6.1, -4.2, -6.6, -6099.5555, -862.631, 35.19)))))))), 1.0), min(1.0, 1.0), min(1.0, 1.0))))), _GLF_IDENTITY(min(1.0, 1.0), 0.0 + (_GLF_IDENTITY(min(1.0, 1.0), clamp(min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? transpose(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(mat2x3(-6.1, -4.2, -6.6, -6099.5555, -862.631, 35.19)))))))), 1.0), min(1.0, 1.0), min(1.0, 1.0)))))))), 1.0), (false ? _GLF_FUZZED(mat3x4(3.5, 5494.2032, 688.104, -3117.3420, _GLF_IDENTITY(-70.89, 1.0 * (_GLF_IDENTITY(-70.89, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(-70.89, float(mat3x2(_GLF_IDENTITY(-70.89, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(-70.89, (-70.89) - 0.0), clamp(-70.89, -70.89, -70.89)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, sin(0.0), 0.0, 0.0))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 1.0 * (0.0)) : _GLF_FUZZED(-160.952))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, 1.0), (mat2x4(-70.89, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(33.76)), float(0.0), bool(true))), abs(1.0), 0.0, 1.0)) * mat2(1.0)))))), 6.1, -46.24, -457.349, 2.3, _GLF_IDENTITY(3.1, min(3.1, 3.1)), 0.8, -742.235)) : mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) - 0.0))))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.3))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), gl_SubgroupID, mat3(1.0), uvec4(1u));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        continue;
      }
     if(_GLF_DEAD(false))
      continue;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), true)))));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true))))
  {
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))));
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), true && (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 do
  {
   for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_8(_GLF_struct_6(true, mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(uintBitsToFloat(119709u)) : 1.0), ((false ? _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(119709u, (119709u) | (119709u)))) : 1.0)) + 0.0)) : _GLF_FUZZED(smoothstep(-7.1, _GLF_IDENTITY(727.139, (true ? 727.139 : _GLF_FUZZED(9321.1221))), 953.150))))), uvec2(1u), mat4x3(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(mix(vec4(_GLF_FUZZED(-805.613), (vec4(1.0))[1], (vec4(1.0))[2], (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(float(191892u)), _GLF_FUZZED(-8.8), _GLF_FUZZED(-2369.0468)), bvec4(true, false, false, false)), max(mix(vec4(_GLF_FUZZED(-805.613), (vec4(1.0))[1], (vec4(1.0))[2], (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(float(191892u)), _GLF_FUZZED(-8.8), _GLF_FUZZED(-2369.0468)), bvec4(true, false, false, false)), mix(vec4(_GLF_FUZZED(-805.613), (vec4(1.0))[1], (vec4(1.0))[2], (vec4(1.0))[3]), vec4((vec4(1.0))[0], _GLF_FUZZED(float(191892u)), _GLF_FUZZED(-8.8), _GLF_FUZZED(-2369.0468)), bvec4(true, false, false, false)))))), _GLF_struct_7(mat4x3(1.0), mat4x3(1.0), 1, bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y)))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (bool(bool(injectionSwitch.x < injectionSwitch.y))) || false))) || false))), false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) && true)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), true && ((true)))))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec3((true), false, false))) && true)) && true, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec3((true), false, false))) && true)) && true, false, true)), (bool(bvec3((_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec3((true), false, false))) && true)) && true, false, true))) && true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) || false))) && true)), false, true, false)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), true && ((_GLF_IDENTITY(true, (true) && true)))) && true))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), true, false, true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && _GLF_IDENTITY(true, ! (! (true))))) && true)))))))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)), false))) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), false)))), ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), true && (bool(! (true)))))))))))), uvec4(1u))), _GLF_struct_9(mat2(1.0)), true, _GLF_struct_11(gl_SubgroupInvocationID, _GLF_struct_10(mat2x4(1.0), mat2x4(1.0), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), vec4(1.0), mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.2) : 1.0))), mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec3(bvec2(true), _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mat3(1.0));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)) || false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))) ^ 0)); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id, max(_GLF_struct_replacement_5.subgroup_id, _GLF_struct_replacement_5.subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + _GLF_struct_replacement_12._f3.subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id, max(_GLF_struct_replacement_5.subgroup_id, _GLF_struct_replacement_5.subgroup_id)) * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_12._f3.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_12._f3.subgroup_local_id, uint(uvec2(_GLF_struct_replacement_12._f3.subgroup_local_id, 1u))), _GLF_struct_replacement_12._f3.subgroup_local_id, _GLF_struct_replacement_12._f3.subgroup_local_id)), max(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id, max(_GLF_struct_replacement_5.subgroup_id, _GLF_struct_replacement_5.subgroup_id)) * subgroup_size + _GLF_struct_replacement_12._f3.subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_id, max(_GLF_struct_replacement_5.subgroup_id, _GLF_struct_replacement_5.subgroup_id)) * subgroup_size + _GLF_struct_replacement_12._f3.subgroup_local_id))) / 1u);
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(int(3), int(3)))) << (0 << _GLF_IDENTITY(int(3), int(3)))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0)))))).x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, (true) && true))))))
  return;
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(mat4x3(1.0), true, mat4(1.0), uvec4(1u), _GLF_struct_19(_GLF_struct_13(mat3x2(1.0), ivec4(1)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(16869))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((workgroup_base), (workgroup_base)), max(_GLF_IDENTITY(max((workgroup_base), (workgroup_base)), ~ _GLF_IDENTITY((~ (max((workgroup_base), (workgroup_base)))), clamp(_GLF_IDENTITY((~ (max((workgroup_base), (workgroup_base)))), (_GLF_IDENTITY((~ (max((workgroup_base), (workgroup_base)))), 0u | ((~ (max((workgroup_base), (workgroup_base))))))) >> 0u), (~ (max((workgroup_base), (workgroup_base)))), (~ (max((workgroup_base), (workgroup_base))))))), max((workgroup_base), (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))))))))))) >> 0u) + _GLF_struct_replacement_5.subgroup_id * subgroup_size + ((_GLF_struct_replacement_12._f3.subgroup_local_id + 1) % subgroup_size), _GLF_struct_14(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), mat3x4(1.0), mat4x2(1.0)), _GLF_struct_15(ivec4(1), vec2(1.0), ivec4(1), ivec2(1), ivec4(1), mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - _GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(705.353) : log(1.0))))), uvec4(1u)), _GLF_struct_16(1, mat4x2(1.0)), _GLF_struct_17(mat2x4(1.0), uvec3(1u), mat4x3(1.0), 1), _GLF_struct_18(vec3(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 atomicStore(buf[_GLF_struct_replacement_20._f4.next_virtual_gid], uint(1), _GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (64)), clamp((~ (64)), (~ (64)), _GLF_IDENTITY((~ (64)), ((~ (64))) ^ 0))), (_GLF_IDENTITY((~ (64)), clamp((~ (64)), (~ (64)), _GLF_IDENTITY((~ (64)), ((~ (64))) ^ 0)))) ^ 0)) : _GLF_IDENTITY(_GLF_FUZZED(2293), 0 | (_GLF_IDENTITY(_GLF_FUZZED(2293), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_FUZZED(2293)), (int(_GLF_FUZZED(2293))) << 0), max(int(_GLF_FUZZED(2293)), _GLF_IDENTITY(int(_GLF_FUZZED(2293)), ~ (~ (int(_GLF_FUZZED(2293)))))))), clamp(int(_GLF_IDENTITY(int(_GLF_FUZZED(2293)), max(int(_GLF_FUZZED(2293)), int(_GLF_FUZZED(2293))))), int(_GLF_IDENTITY(int(_GLF_FUZZED(2293)), max(int(_GLF_FUZZED(2293)), int(_GLF_FUZZED(2293))))), int(_GLF_IDENTITY(int(_GLF_FUZZED(2293)), max(int(_GLF_FUZZED(2293)), int(_GLF_FUZZED(_GLF_IDENTITY(2293, (true ? 2293 : _GLF_FUZZED(45456))))))))))))))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   return;
  }
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, false))))));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, true, true)), (bool(bvec4(! (false), true, true, true))) && true)))) && true) || false)))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          break;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (0 ^ (0 & -7689)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   return;
                  }
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (-78970 & 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, sin(_GLF_IDENTITY(0.0, (0.0) / 1.0)) + (injectionSwitch.x)) > injectionSwitch.y))) || false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) ^ 0), 4)))), max(4, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)))))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_struct_replacement_12._f3.subgroup_local_id + 1 < subgroup_size)
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-16.33)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), injectionSwitch.x))))); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), bvec2(bvec3(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), bvec2(bvec3(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), true)))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           atomicStore(buf[_GLF_struct_replacement_20._f4.next_virtual_gid], uint(read_1 == read_2) + 1, 4, _GLF_IDENTITY(64, int(ivec2(64, 0))), _GLF_IDENTITY(4, int(ivec4(4, 1, 1, 0))));
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), false)), false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec2(bvec2(false, true)))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_IDENTITY(true, bool(bool(true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_IDENTITY(true, bool(bool(true))))))), true))))))))))))), false)))))
    {
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1, int(ivec2(1, 0))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4))))), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))))) || false))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[_GLF_struct_replacement_20._f4.next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) + 1, 4, 64, 4);
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   do
    {
     subgroupAll(true);
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
