#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 uvec2 _f0;
 uint read_1;
 mat3x4 _f1;
 mat2x3 _f2;
 float _f3;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 mat3x4 _f1;
 mat2x4 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_11 {
 ivec4 _f0;
 vec3 _f1;
 uvec4 _f2;
 ivec4 _f3;
 ivec3 _f4;
 mat2x3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_10 {
 ivec3 _f0;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 int _f1;
 mat3x2 _f2;
 mat4 _f3;
 uint _f4;
 uint _f5;
 uint _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 uvec2 _f2;
 bool _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_12 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
 uvec2 GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 vec3 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 mat3x4 _f4;
 mat3x2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 uvec2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
 uvec4 _f1;
 uint _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 uint _f1;
 ivec2 _f2;
 mat2 _f3;
 mat2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 uint _f1;
 mat4 _f2;
 uvec4 _f3;
 mat4 _f4;
 ivec3 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 ivec3 _f1;
 vec4 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 uint num_workgroup;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uvec2 _f1;
 bvec2 _f2;
 mat3x2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_8 {
 float _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_7 _f2;
 mat3x2 _f3;
 mat4x2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 _GLF_struct_14 _GLF_struct_replacement_14;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_replacement_14.GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.y = subgroup_local_id;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(1.0, _GLF_struct_1(_GLF_struct_0(vec2(1.0), gl_NumWorkGroups.x), uvec2(1u), bvec2(true), mat3x2(1.0), mat3(1.0)), _GLF_struct_7(_GLF_struct_2(mat3x2(1.0), 1u, mat4(1.0), uvec4(1u), mat4(1.0), ivec3(1), vec3(1.0)), ivec3(1), vec4(1.0), _GLF_struct_3(uvec4(1u), 1u, ivec2(1), mat2(1.0), mat2(1.0), mat2x3(1.0)), _GLF_struct_4(mat2(1.0), uvec4(1u), 1u, ivec3(1)), _GLF_struct_5(mat2(1.0), uvec2(1u), mat2(1.0)), _GLF_struct_6(vec4(1.0), vec3(1.0), mat4x2(1.0), bvec2(true), mat3x4(1.0), mat3x2(1.0), ivec3(1))), mat3x2(1.0), mat4x2(1.0));
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.y = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z * GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.y;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base;
 uint virtual_gid = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_id * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x + _GLF_struct_replacement_14.GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.y;
 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_id * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x + ((_GLF_struct_replacement_14.GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.y + 1) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(uvec2(1u), atomicLoad(buf[GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x], 4, 64, 0), mat3x4(1.0), mat2x3(1.0), 1.0);
 uint read_2 = atomicLoad(buf[GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x], 4, 64, 0);
 _GLF_struct_replacement_14.GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.x = read_2;
 if(_GLF_struct_replacement_14.GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.y + 1 < GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_15.read_1 == _GLF_struct_replacement_14.GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.x) + 1, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_15.read_1 == _GLF_struct_replacement_14.GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.x) + 1, 4, 64, 4);
   subgroupAll(true);
  }
}
