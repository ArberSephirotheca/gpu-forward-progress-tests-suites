#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) ^ _GLF_IDENTITY(0u, max(0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))) | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) ^ 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, _GLF_IDENTITY(1u, 1u * (1u))), (uvec3(subgroup_size, _GLF_IDENTITY(1u, 0u | (1u)), 1u)) ^ uvec3(0u, 0u, 0u)))), 0u)))), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u))))) | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u)))))) ^ 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))) | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | (uvec2(subgroup_size, 0u)))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | (_GLF_IDENTITY(uvec2(subgroup_size, 0u), min(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u))), uvec2(subgroup_size, 0u)))))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, 0u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))) | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | (uvec2(subgroup_size, 0u)))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | (_GLF_IDENTITY(uvec2(subgroup_size, 0u), min(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u))), uvec2(subgroup_size, 0u)))))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, 0u)))))))) << 0u) ^ 0u), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))) | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | (uvec2(subgroup_size, 0u)))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | (_GLF_IDENTITY(uvec2(subgroup_size, 0u), min(_GLF_IDENTITY(uvec2(subgroup_size, 0u), max(uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u))), uvec2(subgroup_size, 0u)))))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, 0u))))))) ^ 0u)) << 0u)) << 0u)) + 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) ^ _GLF_IDENTITY(0u, max(0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) + (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))))) >> 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)), (true ? 0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)) : _GLF_FUZZED((workgroup_base ++))))) | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))) ^ 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, _GLF_IDENTITY(1u, 1u * _GLF_IDENTITY((1u), uint(_GLF_IDENTITY(uint((1u)), (uint((1u))) - 0u))))), (uvec3(subgroup_size, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))), 0u)))), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) * 1u), (uint(2u)) | 0u))) | ((_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u)))))) ^ 0u), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))) | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | (uvec2(subgroup_size, 0u)))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(0u, (0u) / 1u)), (uvec2(subgroup_size, _GLF_IDENTITY(0u, min(0u, 0u)))) | (uvec2(subgroup_size, 0u)))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, 0u))))))) ^ 0u)) << 0u)) + 0u))))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((subgroup_local_id + 1)), min(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((subgroup_local_id + 1)), clamp(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((subgroup_local_id + 1)), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((subgroup_local_id + 1)), uint(uvec2(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((subgroup_local_id + 1)), 1u))), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((subgroup_local_id + 1)), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((subgroup_local_id + 1)))), max(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((subgroup_local_id + 1)), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((subgroup_local_id + 1)))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((subgroup_local_id + 1)), (((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((subgroup_local_id + 1))) - 0u))), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((subgroup_local_id + 1))))) % _GLF_IDENTITY(subgroup_size, (0u & 4736u) + (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(7205u) : _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))));
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) >> 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) - 0))), (false ? _GLF_FUZZED(74538) : _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) - 0)))))), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), max(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64)))), _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64)))), 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) / 1u))), subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | 0))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ (29297 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), 0u + (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))) - 0u)) | (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), (_GLF_IDENTITY(min(1, 1), clamp(_GLF_IDENTITY(min(1, 1), 1 * (min(1, 1))), min(1, 1), min(1, 1)))) | (min(1, 1))), (min(1, 1)) >> 0)), subgroup_local_id + 1)), subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) / 1u), subgroup_local_id))) / 1u, uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) / 1u), subgroup_local_id))) / 1u, ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) / 1u), subgroup_local_id))) / 1u))), 1u)))) + 1)))))) | (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_local_id))) - 0u) + 1, max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), (1u | 0u) * (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))), subgroup_local_id + 1)), subgroup_local_id + 1))))) >> 0u) < subgroup_size)))
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), ! (_GLF_IDENTITY(! (read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (_GLF_IDENTITY(read_1, 0u + (read_1)) == read_2), false, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false)))))), _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! _GLF_IDENTITY((read_1 == read_2), bool(bvec4(_GLF_IDENTITY((read_1 == read_2), bool(bvec4(_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))), true, true, true))), false))))))), false || ((! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, (read_1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2), bool(bvec3(! _GLF_IDENTITY((read_1 == read_2), bool(bvec4(_GLF_IDENTITY((read_1 == read_2), bool(bvec4(_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))), true, true, true))), false))))))))) || false), ! (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), (! _GLF_IDENTITY((read_1 == read_2), false || ((read_1 == read_2)))) && true), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(_GLF_IDENTITY(bool(! (read_1 == read_2)), (bool(! (read_1 == read_2))) || false))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false)))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), ((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2)))) || false), false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), ((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2)))) || false), false, true)), (_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), ((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2)))) || false), false, true)), bool(bvec4(bool(bvec3(! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), ((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2)))) || false), false, true)), false, true, true)))) || false), true, true, false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), true, true)))) || false), false)))))), true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(bvec3(! (read_1 == read_2), false, true)), ! (! (bool(bvec3(! (read_1 == read_2), false, true)))))), true, true, true))), false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(bvec3(! (read_1 == read_2), false, true)), ! (! (bool(bvec3(! (read_1 == read_2), false, true)))))), true, true, true))), false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(bvec3(! (read_1 == read_2), false, true)), ! (! (bool(bvec3(! (read_1 == read_2), false, true)))))), true, true, true))), false))))))))))))))), true, true)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false)))))), _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! _GLF_IDENTITY((read_1 == read_2), bool(bvec4(_GLF_IDENTITY((read_1 == read_2), bool(bvec4(_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))), true, true, true))), false))))))), false || ((! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, (read_1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2), bool(bvec3(! _GLF_IDENTITY((read_1 == read_2), bool(bvec4(_GLF_IDENTITY((read_1 == read_2), bool(bvec4(_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))), true, true, true))), false))))))))) || false), ! (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), (! _GLF_IDENTITY((read_1 == read_2), false || ((read_1 == read_2)))) && true), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(_GLF_IDENTITY(bool(! (read_1 == read_2)), (bool(! (read_1 == read_2))) || false))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false)))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), ((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2)))) || false), false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), ((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2)))) || false), false, true)), (_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), ((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2)))) || false), false, true)), bool(bvec4(bool(bvec3(! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), ((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2)))) || false), false, true)), false, true, true)))) || false), true, true, false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), true, true)))) || false), false)))))), true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(bvec3(! (read_1 == read_2), false, true)), ! (! (bool(bvec3(! (read_1 == read_2), false, true)))))), true, true, true))), false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(bvec3(! (read_1 == read_2), false, true)), ! (! (bool(bvec3(! (read_1 == read_2), false, true)))))), true, true, true))), false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(bvec3(! (read_1 == read_2), false, true)), ! (! (bool(bvec3(! (read_1 == read_2), false, true)))))), true, true, true))), false))))))))))))))), true, true)))))), false, false)))))), true, false, true))))))))) | (uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), ! (_GLF_IDENTITY(! (read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), true))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (_GLF_IDENTITY(read_1, 0u + (read_1)) == read_2), false, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_local_id)))), false, true))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) | 0u), read_2))), false, true))), true, true, true))), false)))))), _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) | 0u), read_1)) == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! _GLF_IDENTITY((read_1 == read_2), bool(bvec4(_GLF_IDENTITY((read_1 == read_2), bool(bvec4(_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))), true, true, true))), false))))))), false || ((! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, (read_1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2), bool(bvec3(! _GLF_IDENTITY((read_1 == read_2), bool(bvec4(_GLF_IDENTITY((read_1 == read_2), bool(bvec4(_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), false || (bool(_GLF_IDENTITY(true, false || (true)))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true))), true, true, true))), false))))))))) || false), ! (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), (! _GLF_IDENTITY((read_1 == read_2), false || ((read_1 == read_2)))) && true), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(_GLF_IDENTITY(bool(! (read_1 == read_2)), (bool(! (read_1 == read_2))) || false))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false)))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 == read_2), false || (_GLF_IDENTITY((read_1 == read_2), true && ((read_1 == read_2))))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), ((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2)))) || false), false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), ((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2)))) || false), false, true)), (_GLF_IDENTITY(bool(bvec3(! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(1u, (1u) | (1u)) * (read_2))), ((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2)))) || false), false, true)), bool(bvec4(bool(bvec3(! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), ((read_1 == _GLF_IDENTITY(read_2, 1u * (read_2)))) || false), false, true)), false, true, true)))) || false), true, true, false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(read_2, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(uvec4(read_2, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), min(uvec4(read_2, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(read_2, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) << (uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, 1u)))), ~ (~ (uint(_GLF_IDENTITY(uvec4(read_2, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(uvec4(read_2, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), min(uvec4(read_2, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(read_2, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) << (uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, 1u))))))))), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), true, true, true))), true, true)))) || false), false)))))), true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(bvec3(! (read_1 == read_2), false, true)), ! (! (bool(_GLF_IDENTITY(bvec3(! (read_1 == read_2), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (read_1 == read_2), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(! (read_1 == read_2), false, true), false))))))))))), true, true, true))), false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(bvec3(! (read_1 == read_2), false, true)), ! (! (bool(bvec3(! (read_1 == read_2), false, true)))))), true, true, true))), false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((read_1 == read_2), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false))), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, true))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(bvec3(! (read_1 == read_2), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), false || (_GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bvec4(bool(bvec4(true, false, false, false)), true, true, false)))))))), ! (! (bool(bvec3(! (read_1 == read_2), false, true)))))), true, true, true))), false))))))))))))))), true, true))))))))), true, false, _GLF_IDENTITY(true, (true) || false)))))))))) | (uint(read_1 == read_2)))) | 0u) + 1, 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), ~ (~ (_GLF_IDENTITY(0, 0 + (0))))), 0))), (64) | _GLF_IDENTITY(_GLF_IDENTITY((64), (_GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) >> 0), (_GLF_IDENTITY((64), ((64)) >> 0)) >> 0)) | (_GLF_IDENTITY((64), 0 ^ _GLF_IDENTITY(((64)), 0 | (((64))))))), _GLF_IDENTITY(((64)) - 0, int(ivec2(_GLF_IDENTITY(((64)) - 0, ~ (~ (((64)) - 0))), 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) >> 0) + (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0)))), 0, 0)))), 0))), (64) | _GLF_IDENTITY(_GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((_GLF_IDENTITY(64, min(64, 64)))) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(int(64)))) | (64))) | (64))), clamp((64), _GLF_IDENTITY((64), ((64)) | (_GLF_IDENTITY((64), ~ (~ ((64)))))), _GLF_IDENTITY((64), max((64), (64))))), 0 ^ ((64))))), _GLF_IDENTITY(((64)) - 0, int(ivec2(_GLF_IDENTITY(((64)) - 0, ~ (~ (((64)) - 0))), 1)))))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, min(4, 4))))), _GLF_IDENTITY(min(4, 4), min(_GLF_IDENTITY(min(4, 4), 0 ^ (_GLF_IDENTITY(min(4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 1)), min(int(ivec2(4, 1)), int(ivec2(4, 1)))))), 0 | _GLF_IDENTITY((min(4, _GLF_IDENTITY(4, int(ivec2(4, 1))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? (min(4, 4)) : _GLF_FUZZED(24924)))))), min(4, 4)))));
   subgroupAll(_GLF_IDENTITY(false, (false) || false));
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | 0u) / 1u))) + 1, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u))) + 1, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u))) + 1) / 1u)))), 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || (_GLF_IDENTITY(true, true && (true))))))));
  }
}
