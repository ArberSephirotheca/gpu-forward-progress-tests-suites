#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), (bool(_GLF_DEAD(false))) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true)))))))) || false)), false)))) || false)))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), bool(bool((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, false || (true)))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && _GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true)) && true))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true)) && true)))) && true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, true))), true))), false)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true)) && true))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), true && ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true)))) && true)))) && true))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), ! (! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))) && true))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true)) && true))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))) && true)) && true)) && true)))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 1u, 1u), clamp(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 1u, 1u), max(uvec4(gl_WorkGroupID.x, 1u, 1u, 1u), uvec4(gl_WorkGroupID.x, 1u, 1u, 1u))), uvec4(gl_WorkGroupID.x, 1u, 1u, 1u), uvec4(gl_WorkGroupID.x, 1u, 1u, 1u)))) >> uvec4(0u, 0u, 0u, 0u)), clamp(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 1u, 1u, 1u), ~ (~ (uvec4(gl_WorkGroupID.x, 1u, 1u, 1u)))), uvec4(gl_WorkGroupID.x, 1u, 1u, 1u), uvec4(gl_WorkGroupID.x, 1u, 1u, 1u)))));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-7541.7861 - 989.061)), _GLF_FUZZED((-6784.0615))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))).y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))).y)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))).y)))), true, true)))))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))))), bool(bvec3(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false)))))), true, true)))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! ((bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (! ((bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), bool(bvec3(bool(bvec4((false), true, false, false)), true, true)))))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), bool(bvec3(bool(bvec4((false), true, false, false)), true, true)))))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), true, true))), true && (_GLF_IDENTITY(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), bool(bvec3(bool(bvec4((false), true, false, false)), true, true)))))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), true, true)))))))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2((false), false), true), bvec3(bvec4(bvec3(bvec2((false), false), true), true))))))), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))))))), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, false || (true)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, true)), false, false, true)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (_GLF_IDENTITY(! (false), false || (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, (false) || false) || (! (false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, true)), false, false, true)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))), bool(bvec3(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(71193)), _GLF_FUZZED(0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), true, true)))))))), true, true), false)))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y) || false)), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))))) || false))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))) && true), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)))), true && ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false))))))))))))) || false))))))), (injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true))), bool(bool(true && (bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), true))))))))), true, true)))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))))) || false))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))) && true), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)))), true && ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false))))))))))))) || false))))))), (injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true))), bool(bool(true && (bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), true))))))))), true, true)))))), true))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec3(! ((_GLF_IDENTITY(! (false), false || (! (false))))), false, true))))), _GLF_IDENTITY(false, false || (false)), true, true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec3(! ((_GLF_IDENTITY(! (false), false || (! (false))))), false, true))))), _GLF_IDENTITY(false, false || (false)), true, true)))), false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), false || (! (false))))), bool(bvec3(! ((_GLF_IDENTITY(! (false), false || (! (false))))), false, true))))), _GLF_IDENTITY(false, false || (false)), true, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), bool(_GLF_IDENTITY(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))) && true)), true, true)))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec3(! ((_GLF_IDENTITY(! (false), false || (! (false))))), false, true))))), _GLF_IDENTITY(false, false || (false)), true, true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec3(! ((_GLF_IDENTITY(! (false), false || (! (false))))), false, true))))), _GLF_IDENTITY(false, false || (false)), true, true)))), false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), false || (! (false))))), bool(bvec3(! ((_GLF_IDENTITY(! (false), false || (! (false))))), false, true))))), _GLF_IDENTITY(false, false || (false)), true, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), bool(_GLF_IDENTITY(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))) && true)), true, true))))))))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec3(! ((_GLF_IDENTITY(! (false), false || (! (false))))), false, true))))), _GLF_IDENTITY(false, false || (false)), true, true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec3(! ((_GLF_IDENTITY(! (false), false || (! (false))))), false, true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), true, true)))), false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), false || (! (false))))), bool(bvec3(! ((_GLF_IDENTITY(! (false), false || (! (false))))), false, true))))), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, true && (true)), true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), bool(_GLF_IDENTITY(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-14.97)), vec2(_GLF_FUZZED(-5.1), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-14.97)), vec2(_GLF_FUZZED(-5.1), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-14.97)), vec2(_GLF_FUZZED(-5.1), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-14.97)), vec2(_GLF_FUZZED(-5.1), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) && true)))) && true)), true, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))) && true)), true, true))))))))))))))))))))))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-40.92))), injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))))), true, true))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(-67.97)), bool(false))) > injectionSwitch.y)))), bool(bvec3(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(800.658)), bool(false))))))))), true, true)))))) || false, bool(bvec3((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(-67.97)), bool(false))) > injectionSwitch.y)))), bool(bvec3(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(800.658)), bool(false))))))))), true, true)))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))), true), false)))))), false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size) - 0u) + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), 1u), (uvec2(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id))) | 0u), subgroup_local_id)), 1u)) << (uvec2(0u, 0u) ^ uvec2(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u | (_GLF_IDENTITY(0u, 0u ^ (0u)))), 0u)), 0u)))));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))), 0u ^ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u ^ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(69.36)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), clamp(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), sqrt(1.0), 0.0, 0.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.8)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.3)), bool(false)))), bool(true))), 0.0)))), 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0))) * (injectionSwitch))[1])), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(110.115, (110.115) * exp(sqrt(0.0)))) : _GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(float(96090u))), float((false ? _GLF_FUZZED(110.115) : _GLF_ONE(1.0, injectionSwitch.y))), bool(true)))), _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(944.745)), float(sqrt(1.0)), bool(true)))), float(_GLF_FUZZED(-906.948)), bool(false))), 0.0, 0.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))).x)) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7977.3572), _GLF_FUZZED(9.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch))))[1])), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(110.115) : _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(758.031, -2168.9141))))))).y))), sqrt(1.0), 0.0, 0.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))).x, (false ? _GLF_FUZZED(-4398.2043) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch[0]) / 1.0, max((injectionSwitch[0]) / 1.0, (injectionSwitch[0]) / 1.0)), (injectionSwitch[0]) / 1.0, (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1])), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(110.115) : _GLF_ONE(1.0, injectionSwitch.y))), sqrt(1.0), 0.0, 0.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1])), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(110.115) : _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_FUZZED(-4952.1818)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(110.115) : _GLF_ONE(1.0, injectionSwitch.y)))), bool(true))), sqrt(1.0), 0.0, 0.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))).x : _GLF_FUZZED(-259.472))))))) | (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, 0.0, abs(0.0), length(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], (injectionSwitch[0]) / 1.0), _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(float(true))), bool(false)))) * (injectionSwitch))[1])), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(110.115) : _GLF_ONE(1.0, injectionSwitch.y))), sqrt(1.0), 0.0, 0.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), length(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0)))))).x)) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))).y))), sqrt(1.0), 0.0, 0.0, abs(0.0), length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), vec3(mat2x3(vec3(0.0, 0.0, 0.0), 1.0, 1.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((-2.1))))), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]) / 1.0), mix(float(_GLF_FUZZED(7.1)), float(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1])), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(110.115) : _GLF_ONE(1.0, injectionSwitch.y))), sqrt(1.0), 0.0, 0.0, abs(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))).x)) | (subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 0.0, 0.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), (_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0]) / 1.0)) / 1.0), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), 1))])), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(110.115) : _GLF_ONE(1.0, injectionSwitch.y))), sqrt(1.0), 0.0, 0.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))).x)) | (subgroup_size)), 0u, 1u, 1u)))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)))) | (subgroup_size))) + 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u) | ((_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x)) | (subgroup_size))))), _GLF_IDENTITY((false ? _GLF_FUZZED(8933u) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0)), injectionSwitch.x)) | (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size))) + 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))) - 0u, (false ? _GLF_FUZZED(34029u) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))) - 0u))) | ((_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x)) | (subgroup_size)))))), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(8933u) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0)), injectionSwitch.x)) | (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size))) + 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))) - 0u, (false ? _GLF_FUZZED(34029u) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))) - 0u))) | ((_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x)) | (subgroup_size))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), injectionSwitch.x)) | (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size))) + 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))) - 0u, (false ? _GLF_FUZZED(34029u) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))) - 0u))) | ((_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x)) | (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))))) : _GLF_FUZZED(subgroup_local_id)))), clamp((false ? _GLF_FUZZED(8933u) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0)), injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size))) + 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))) - 0u, (false ? _GLF_FUZZED(34029u) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))) - 0u))) | ((_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(22.58)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x)) | (subgroup_size)))))), (false ? _GLF_FUZZED(8933u) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0)), injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0)), injectionSwitch.x) : _GLF_FUZZED(-7887.3022)))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size))))))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size))) + 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))) - 0u, (false ? _GLF_FUZZED(34029u) : (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))) - 0u))) | ((_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x)) | (subgroup_size)))))), (false ? _GLF_FUZZED(8933u) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) | (subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0)), injectionSwitch.x)), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0)), injectionSwitch.x))) << 0u) | (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size))) + 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))) - 0u, (false ? _GLF_FUZZED(34029u) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u))))) >> 0u)) << 0u)) - 0u))) | ((_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x)) | (subgroup_size)))))))))))) / 1u)) << 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), true))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false))))), false, true), true))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true)))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(max(32765, -44736)) : _GLF_IDENTITY(1, 0 ^ (1))))), 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) | (64)))), 4);
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), 0 | ((4)))), max(_GLF_IDENTITY(4, _GLF_IDENTITY(0, 1 * (0)) ^ (4)), _GLF_IDENTITY(4, 0 ^ (4))))) ^ 0), _GLF_IDENTITY(4, 0 ^ (4))))), 0 | ((_GLF_IDENTITY(4, 0 ^ (4))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), int(ivec2(_GLF_IDENTITY(4, 0 ^ (4)), 0))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), int(ivec2(_GLF_IDENTITY(4, 0 ^ (4)), 0))), ((64925 & 0) << _GLF_IDENTITY(int(4), int(4))), 1, 1), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), int(ivec2(_GLF_IDENTITY(4, 0 ^ (4)), 0))), ((64925 & 0) << _GLF_IDENTITY(int(4), int(4))), 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, 0 ^ (4))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), 0 ^ (4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), min((_GLF_IDENTITY(4, 0 ^ (4))), _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), ((_GLF_IDENTITY(4, 0 ^ (4)))) | ((_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), (1 ^ 0) * (0 ^ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-83186) : 4)), _GLF_IDENTITY(4, (4) ^ 0), 4)))))))))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 1, 1))), 0 ^ (4)))))), 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u))))), ~ (~ (_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((subgroup_local_id)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u))))) ^ 0u) + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true)) && true))
      {
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)) && _GLF_IDENTITY(true, ! (! (true))))) + 1, 4, 64, 4);
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))))) || false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))))) || false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))))) || false)), false)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
           continue;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
            continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false, true)), false, false), bvec3(bvec3(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), false, false)))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) || false), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), false, false), bvec3(bvec3(bvec3(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), false, false)))))))))))))
          continue;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) || false))))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) + 0.0), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          break;
         break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          continue;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
          break;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec4((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))))) || false))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
     subgroupAll(true);
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acosh(vec2(-8235.7697, 18.28))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), true)))))))))), (bool(bvec2(false, false))) || false))) && true)))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      break;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
