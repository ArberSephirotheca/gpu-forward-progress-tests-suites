#version 460
struct _GLF_struct_13 {
 uvec4 _f0;
 mat2x4 _f1;
 ivec4 _f2;
 mat4 _f3;
 bvec4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
 uvec3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 mat4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_11 _f0;
 mat3x4 _f1;
 _GLF_struct_12 _f2;
 int _f3;
 mat4x2 _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_9 {
 uint _f0;
 vec4 _f1;
 bvec2 _f2;
 bvec4 _f3;
 mat2x3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_8 {
 mat4x3 _f0;
 vec4 _f1;
 mat4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 uint _f2;
 _GLF_struct_9 _f3;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 mat3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 mat2 _f1;
 mat2x3 _f2;
 mat4x3 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_3 {
 bool _f0;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 ivec3 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 uint workgroup_base;
 vec4 _f1;
 mat2 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uint subgroup_id;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 bool _f1;
 mat4x3 _f2;
 vec4 _f3;
 int _f4;
 _GLF_struct_0 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(bvec2(true), true, mat4x3(1.0), vec4(1.0), 1, _GLF_struct_0(bvec3(true), gl_SubgroupID));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(mat4x3(1.0), workgroup_size * workgroup_id, vec4(1.0), mat2(1.0), _GLF_struct_6(_GLF_struct_2(mat3x4(1.0)), _GLF_struct_3(true), _GLF_struct_4(mat3x2(1.0), mat2(1.0), mat2x3(1.0), mat4x3(1.0), bvec3(true)), ivec3(1), _GLF_struct_5(uvec3(1u), mat3(1.0), vec3(1.0))), _GLF_struct_10(_GLF_struct_7(vec4(1.0)), _GLF_struct_8(mat4x3(1.0), vec4(1.0), mat4(1.0), mat2(1.0)), 1u, _GLF_struct_9(1u, vec4(1.0), bvec2(true), bvec4(true), mat2x3(1.0), vec4(1.0))), _GLF_struct_14(_GLF_struct_11(bvec4(true), mat4(1.0), mat3x4(1.0)), mat3x4(1.0), _GLF_struct_12(vec3(1.0), uvec3(1u), mat2x4(1.0)), 1, mat4x2(1.0), _GLF_struct_13(uvec4(1u), mat2x4(1.0), ivec4(1), mat4(1.0), bvec4(true), uvec2(1u))));
 uint virtual_gid = _GLF_struct_replacement_15.workgroup_base + _GLF_struct_replacement_1._f5.subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_15.workgroup_base + _GLF_struct_replacement_1._f5.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   subgroupAll(true);
  }
}
