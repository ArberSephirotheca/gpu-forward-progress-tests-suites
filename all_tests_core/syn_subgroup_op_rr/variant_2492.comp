#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec4((false) || false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), true, false)), (_GLF_IDENTITY(bool(bvec4((false) || false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), true, false)), (bool(bvec4((false) || false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))), true, false))) || false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(883.932) : injectionSwitch.y)), float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), (vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))) / vec3(1.0, 1.0, 1.0))))), float(mat4x3((_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), (vec3(injectionSwitch.y, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, determinant(mat4(round(length(normalize(1.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(222.497)), bool(false)))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)) && (false), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)) && (false))))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)) && (false), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)) && (false))))), false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
        barrier();
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), 0u + (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-2416.5611, 138.626)))), (injectionSwitch) * mat2(1.0)))))), mat2(1.0) * ((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-2416.5611, 138.626)))), (injectionSwitch) * mat2(1.0)))))))) - vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5733.0366))), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))).y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, tan(0.0), 0.0, sin(0.0), 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, tan(0.0)))), min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), false, _GLF_IDENTITY(true, false || (true)), false))) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) || false, ! (! (((injectionSwitch.x > injectionSwitch.y)) || false))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false)), true && (bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false)))), (bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false))), false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false))))))), bool(bvec4(((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED(-64.11)), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]) - 0.0)), bvec2(true, true))).x > injectionSwitch.y))))), bool(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))), true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))), true))), false))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true))), false)))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), false, true)), _GLF_IDENTITY(! (! (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), true && (! (! (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), true)), true)))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true))), false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false, true))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))), false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))), true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))), true))), false))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true))), false)))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), false, true)), _GLF_IDENTITY(! (! (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), true && (! (! (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), true)), true)))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), true))), false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false, true))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))), false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0), (vec3(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)) - vec3(0.0, 0.0, 0.0))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.3, 4.5)))).y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))), false, false, true)), bool(bool(bool(bvec4((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.3, 4.5)))).y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))), false, false, true))))), ! (_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false, true))), ! (! (! (bool(bvec4((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))))), false, false, true)))))))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), clamp(~ (workgroup_base), ~ (workgroup_base), ~ (workgroup_base)))) / 1u))) + subgroup_id * subgroup_size) | 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) >> 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) >> 0))), min(~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) >> 0))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) >> 0))), 0 | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) >> 0))), (~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) >> 0)))) << 0))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((subgroup_local_id + 1))) % subgroup_size, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))), 1)) / ivec4(1, 1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))), 1)) / ivec4(1, 1, 1, 1))))) >> 0u)) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(26089)))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id))) >> 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))) >> 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, 0 ^ (1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, _GLF_IDENTITY(1, max(1, 1)))) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED((true ? 84314 : 94375)))), 1, 1)) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, _GLF_IDENTITY(1, (1) | (1)), 1, 1))))) / ivec4(1, 1, 1, 1))))) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), max(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 1u * ((subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id)), min(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id))), uint(uvec3(uint((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id))), 0u, 0u)))), 0u | (uint(_GLF_IDENTITY(uint((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id))), uint(uvec3(uint((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id))), 0u, 0u))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)))))), ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1))))) / ivec4(1, 1, 1, 1)))), max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1))))) / ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1))))) / ivec4(1, 1, 1, 1))))))) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), max(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) | (1)))), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_id))) >> 0u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u))))))) * 1u)) - 0u), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))), 1)) / ivec4(1, 1, 1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))), 1)) / ivec4(1, 1, 1, 1))))) >> 0u)) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(26089)))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id))) >> 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))) >> 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, 0 ^ (1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, _GLF_IDENTITY(1, max(1, 1)))) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED((true ? 84314 : 94375)))), 1, 1)) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, _GLF_IDENTITY(1, (1) | (1)), 1, 1))))) / ivec4(1, 1, 1, 1))))) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), max(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 1u * ((subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id)), min(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id))), uint(uvec3(uint((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id))), 0u, 0u)))), 0u | (uint(_GLF_IDENTITY(uint((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id))), uint(uvec3(uint((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id))), 0u, 0u))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm2x16(vec2(-87.03, 6.8))))) % subgroup_size))) : _GLF_FUZZED(workgroup_id))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)))))), ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1))))) / ivec4(1, 1, 1, 1)))), max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1))))) / ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), max(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1))))) / ivec4(1, 1, 1, 1))))))) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), max(max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), max((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) | (1)))), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(88733)))))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_id))) >> 0u), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u))))))) * 1u)) - 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)))), (((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (true ? min(1, 1) : _GLF_FUZZED(-34937)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) >> (0 | 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), _GLF_IDENTITY((min(1, 1)) ^ 0, ((min(1, 1)) ^ 0) | 0)))) + 0)) | (_GLF_IDENTITY(1, min(1, 1))))) % subgroup_size, _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u) ^ ((subgroup_local_id + 1) % subgroup_size)) - 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u) ^ ((subgroup_local_id + 1) % subgroup_size)) - 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u) ^ ((subgroup_local_id + 1) % subgroup_size)) - 0u, uint(uvec3((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u) ^ ((subgroup_local_id + 1) % subgroup_size)) - 0u, 0u, (1u | 1u)))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u) ^ ((subgroup_local_id + 1) % subgroup_size)) - 0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (0u) / 1u)))) | _GLF_IDENTITY(0u, min(0u, 0u))) ^ ((subgroup_local_id + 1) % subgroup_size)) - 0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u) ^ ((subgroup_local_id + 1) % subgroup_size)) - _GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u) ^ ((subgroup_local_id + 1) % subgroup_size)) - 0u))))))) / 1u) | ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) - ((0u | 0u) >> _GLF_IDENTITY(uint(3u), uint(3u))))) % subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0), (mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) ? (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) - (_GLF_IDENTITY((0u | 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (true ? _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(num_workgroup)))) << 0u), min((0u | 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (true ? _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(num_workgroup)))) << 0u), (0u | 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (true ? _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(num_workgroup)))) << 0u)))))) % subgroup_size : _GLF_FUZZED(num_workgroup)))))))))));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - 0), 0))) ^ 0)); _injected_loop_counter --)
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) | 0)), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(64, _GLF_IDENTITY(64, min(64, 64))), (max(_GLF_IDENTITY(64, ~ (~ (64))), 64)) - 0)), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, abs(0.0), 0.0)), vec2(_GLF_IDENTITY(mat3x4(vec2(vec4(injectionSwitch, abs(0.0), 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3x4(vec2(vec4(injectionSwitch, abs(0.0), 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) + 0), 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) + 0) : _GLF_FUZZED(4588))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false))))))), true))) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_IDENTITY(uvec2(uint(read_1 == read_2), 1u), _GLF_IDENTITY((uvec2(uint(read_1 == read_2), 1u)) | (uvec2(uint(read_1 == read_2), 1u)), max((uvec2(uint(read_1 == read_2), 1u)) | (uvec2(uint(read_1 == read_2), 1u)), _GLF_IDENTITY((uvec2(uint(_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY(0u, (0u) + 0u)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), (min(read_2, read_2)) << 0u))), 1u)) | (uvec2(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), ((uvec2(uint(_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY(0u, (0u) + 0u)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), (min(read_2, read_2)) << 0u))), 1u)) | (uvec2(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u))) | ((uvec2(uint(_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY(0u, (0u) + 0u)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), (min(read_2, read_2)) << 0u))), 1u)) | (uvec2(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u))))))))) + 1, 4, _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(4), int(4))) + (0))), max(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (max(_GLF_IDENTITY(4, max(4, 4)), 4)) << ((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-53016))) >> _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(4), int(4)))))) | 0), 0), max(ivec2(_GLF_IDENTITY(4, max(4, 4)), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 | (1 & 1))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 | (1 & 1))), max(_GLF_IDENTITY(4, (4) / (1 | (1 & 1))), _GLF_IDENTITY(4, (4) / (1 | _GLF_IDENTITY((1 & 1), ((1 & 1)) >> 0)))))) / 1), max(4, 4)), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 | (1 & 1))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 | (1 & 1))), max(_GLF_IDENTITY(4, (4) / (1 | (1 & 1))), _GLF_IDENTITY(4, (4) / (1 | _GLF_IDENTITY((1 & 1), ((1 & 1)) >> 0)))))) / 1), max(4, 4)), 0)) - ivec2(0, 0)))), ivec2(_GLF_IDENTITY(4, max(4, 4)), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(4), int(4))) + (0))), max(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), max(max(4, 4), max(4, 4))), (max(4, 4)) << ((0 >> _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(4), int(4)))))) | 0), 0), max(ivec2(_GLF_IDENTITY(4, max(4, 4)), 0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 | (1 & 1))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / (1 | (1 & _GLF_IDENTITY(1, min(1, 1))))), max(_GLF_IDENTITY(4, (4) / (1 | (1 & 1))), _GLF_IDENTITY(4, (4) / (1 | (1 & 1)))))) / 1), max(4, 4)), 0))), ivec2(_GLF_IDENTITY(4, max(4, 4)), 0))))) << 0)));
       if(_GLF_DEAD(false))
        {
         do
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (false)));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true, true)))))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))))), injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, 0u ^ (read_1)) == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, max(read_2, read_2))))) + 1, 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(4, max(4, 4)));
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))) && true, (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)) && true, ! _GLF_IDENTITY((! ((_GLF_WRAPPED_IF_TRUE(true)) && true)), ! (! ((! ((_GLF_WRAPPED_IF_TRUE(true)) && true))))))) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0)))); _injected_loop_counter ++)
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       subgroupAll(true);
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))) && true))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
