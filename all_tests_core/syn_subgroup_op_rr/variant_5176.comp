#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 bvec2 _f0;
 ivec3 _f1;
 uvec2 _f2;
 vec4 _f3;
 mat4 _f4;
 mat2x3 _f5;
 bool _f6;
} ;

struct _GLF_struct_13 {
 bvec4 _f0;
 _GLF_struct_12 _f1;
} ;

struct _GLF_struct_10 {
 mat4 _f0;
 bool _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_8 {
 uint _f0;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 bvec4 _f1;
 mat4x2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 mat3x2 _f1;
 uvec2 _f2;
 float _f3;
 mat3x2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 vec2 _f1;
 int _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 ivec4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 uvec2 _f1;
 uvec3 _f2;
 mat4x3 _f3;
 vec4 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 uint _f1;
 bvec4 _f2;
 bvec2 _f3;
 float _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 float _f1;
 mat3 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_14 {
 vec2 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_9 _f2;
 int _injected_loop_counter;
 _GLF_struct_11 _f3;
 mat2x4 _f4;
 _GLF_struct_13 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat4 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
 bvec3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1;
 uvec4 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid;
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size;
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id;
 uvec3 GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_id;
 GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz = GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uvec3 GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid;
 GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz = GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w = subgroup_id;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(bvec4(true), gl_SubgroupSize), mat4(1.0), mat3x2(1.0), mat4x2(1.0), bvec3(true), bvec4(true)));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   switch(_GLF_SWITCH(_GLF_IDENTITY(0, 0 ^ (0))))
    {
     case 19:
     if(_GLF_DEAD(false))
      return;
     {
      if(_GLF_DEAD(false))
       {
        if(_GLF_WRAPPED_IF_TRUE(true))
         {
          return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
         }
        else
         {
         }
       }
      if(_GLF_DEAD(false))
       break;
      for(mat2x3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v; false; mat2x3(0.8, 3496.5507, 2263.8792, 44.53, 4500.9203, 9.9))
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         barrier();
       }
      if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
       {
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         break;
       }
      else
       {
        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
         {
          switch(_GLF_SWITCH(0))
           {
            case 49:
            bool _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
            case 0:
            case 12:
            case 88:
            case 36:
            case 57:
            case 90:
            case 23:
            case 31:
            case 58:
            case 4:
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
             }
            else
             {
              barrier();
             }
            if(_GLF_DEAD(false))
             return;
            break;
            case 20:
            ivec4 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v;
            case 97:
            GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid;
            default:
            1;
            if(_GLF_DEAD(false))
             continue;
           }
         }
       }
      do
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         break;
        if(_GLF_DEAD(false))
         barrier();
       }
      while(_GLF_WRAPPED_LOOP(false));
      if(_GLF_DEAD(false))
       break;
      do
       {
        if(_GLF_DEAD(false))
         continue;
        bvec2 _GLF_SWITCH_1_2v[67], _GLF_SWITCH_1_3v;
        ivec3 _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v[32];
        if(_GLF_DEAD(false))
         barrier();
        (- log2(injectionSwitch));
        uvec3(165808u, 125223u, 152518u);
        _injected_loop_counter;
        if(_GLF_DEAD(false))
         return;
        uvec4(155938u, _GLF_IDENTITY(11471u, max(11471u, 11471u)), 161951u, 178314u);
        uvec4 _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v[39], _GLF_SWITCH_1_8v[66];
        if(_GLF_DEAD(false))
         continue;
       }
      while(true);
      uvec2(168852u, 55693u);
      mat2x3 _GLF_SWITCH_1_9v[9], _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v[42];
     }
     case 0:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     case 64:
     if(_GLF_DEAD(false))
      break;
     case 22:
     case 12:
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))) || false))) && true)))
      break;
     case 57:
     case 7:
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     case 9:
     switch(_GLF_SWITCH(0))
      {
       case 0:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-362.024, 79.56)) : injectionSwitch)).x > injectionSwitch.y)))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), (vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0))) * mat2(1.0))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)), true && (bool(bvec2(_GLF_DEAD(false), false))))))
            continue;
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) && true)))))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       case 11:
       ivec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[14];
       default:
       1;
      }
     break;
     case 33:
     (mat3x2(-41.87, -93.37, 8.3, -6.5, -3946.9398, -899.157) + -4.5);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     case 31:
     {
      if(_GLF_DEAD(false))
       return;
      vec3 _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v[45];
      if(_GLF_DEAD(false))
       break;
      mat4 _GLF_SWITCH_1_14v[44];
      for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
       {
        for(        _GLF_SWITCH_1_12v;
 any(bvec4(true, false, true, false)); _GLF_IDENTITY(91.24, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(91.24, 1.0), clamp(vec2(91.24, 1.0), vec2(91.24, 1.0), vec2(91.24, 1.0))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(91.24, 1.0), clamp(vec2(91.24, 1.0), vec2(_GLF_IDENTITY(91.24, (false ? _GLF_FUZZED(7.8) : 91.24)), 1.0), vec2(91.24, 1.0))))))))
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
           return;
          uvec2 _GLF_SWITCH_1_15v[15], _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v;
          if(_GLF_DEAD(false))
           return;
          do
           {
            ;
            if(_GLF_DEAD(false))
             break;
           }
          while(_GLF_WRAPPED_LOOP(false));
          ivec4 _GLF_SWITCH_1_18v, _GLF_SWITCH_1_19v[44], _GLF_SWITCH_1_20v;
          vec4 _GLF_SWITCH_1_21v[62];
          bvec3(true, true, false);
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            switch(_GLF_SWITCH(0))
             {
              case 7:
              if(_GLF_DEAD(false))
               break;
              mat4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[32], _GLF_SWITCH_3_2v[49];
              if(_GLF_DEAD(false))
               break;
              case 0:
              case 66:
              if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              case 13:
              108650u;
              case 34:
              if(_GLF_DEAD(false))
               return;
              break;
              case 75:
              vec4(537.226, 1.9, -6674.5710, 1.4);
              case 23:
              (vec3(3832.0554, -81.46, -140.994) / cross((-3504.0574 + _GLF_IDENTITY(vec3(-0.3, _GLF_IDENTITY(24.44, clamp(24.44, 24.44, 24.44)), -19.12), clamp(vec3(-0.3, _GLF_IDENTITY(24.44, clamp(24.44, 24.44, 24.44)), -19.12), _GLF_IDENTITY(vec3(-0.3, _GLF_IDENTITY(24.44, clamp(24.44, 24.44, 24.44)), -19.12), (true ? vec3(-0.3, _GLF_IDENTITY(24.44, clamp(24.44, 24.44, 24.44)), -19.12) : _GLF_FUZZED(vec3(-7649.4187, 4.2, -90.30)))), vec3(-0.3, _GLF_IDENTITY(24.44, clamp(24.44, 24.44, 24.44)), -19.12)))), uintBitsToFloat(GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_id)));
              default:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              1;
              if(_GLF_DEAD(false))
               continue;
             }
           }
          ((-7.7 + _GLF_IDENTITY(-47.22, max(-47.22, _GLF_IDENTITY(-47.22, float(vec3(-47.22, 0.0, 1.0)))))) - _GLF_IDENTITY(vec4(603.020, _GLF_IDENTITY(-7.6, 1.0 * (-7.6)), -3.2, 0.8), max(vec4(603.020, _GLF_IDENTITY(-7.6, 1.0 * (-7.6)), -3.2, 0.8), vec4(603.020, _GLF_IDENTITY(-7.6, 1.0 * (-7.6)), -3.2, 0.8))));
          ;
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true))))))))))))
           return;
          bvec2(true, false);
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
           break;
         }
        if(_GLF_DEAD(false))
         continue;
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          break;
         }
       }
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       return;
      (_GLF_IDENTITY(vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (_GLF_IDENTITY(-8.6, (_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(4.1)), bool(false)))) / 1.0))), _GLF_IDENTITY(-8.6, mix(float(-8.6), _GLF_IDENTITY(float(_GLF_FUZZED(675.007)), (true ? float(_GLF_FUZZED(675.007)) : _GLF_FUZZED(34.21))), bool(false)))))), _GLF_IDENTITY(mix(vec4(_GLF_FUZZED(-406.123), _GLF_FUZZED(-7016.9527), _GLF_FUZZED(4.9), _GLF_IDENTITY(_GLF_FUZZED(142.540), clamp(_GLF_FUZZED(142.540), _GLF_IDENTITY(_GLF_FUZZED(142.540), (_GLF_FUZZED(142.540)) - 0.0), _GLF_FUZZED(142.540)))), vec4((vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), mix(float(_GLF_FUZZED(654.409)), float(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))), bool(true)))))))[0], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), max(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))))[1], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(-8.6, (_GLF_IDENTITY(-8.6, max(-8.6, -8.6))) - 0.0)), ((_GLF_IDENTITY(-8.6, (_GLF_IDENTITY(-8.6, max(-8.6, -8.6))) - 0.0))) - 0.0)), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))[2], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))[3]), bvec4(true, true, true, true)), vec4(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mix(vec4(_GLF_FUZZED(-406.123), _GLF_FUZZED(-7016.9527), _GLF_FUZZED(4.9), _GLF_IDENTITY(_GLF_FUZZED(142.540), clamp(_GLF_FUZZED(142.540), _GLF_IDENTITY(_GLF_FUZZED(142.540), (_GLF_FUZZED(142.540)) - 0.0), _GLF_FUZZED(142.540)))), vec4((vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), mix(float(_GLF_FUZZED(654.409)), float(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))), bool(true)))))))[0], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), max(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))))[1], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(-8.6, (_GLF_IDENTITY(-8.6, max(-8.6, -8.6))) - 0.0)), ((_GLF_IDENTITY(-8.6, (_GLF_IDENTITY(-8.6, max(-8.6, -8.6))) - 0.0))) - 0.0)), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))[2], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))[3]), bvec4(true, true, true, true)), (false ? _GLF_FUZZED((9.2 / vec4(3.1, -57.91, 906.014, 5.8))) : mix(vec4(_GLF_FUZZED(-406.123), _GLF_FUZZED(-7016.9527), _GLF_FUZZED(4.9), _GLF_IDENTITY(_GLF_FUZZED(142.540), clamp(_GLF_FUZZED(142.540), _GLF_IDENTITY(_GLF_FUZZED(142.540), (_GLF_FUZZED(142.540)) - 0.0), _GLF_FUZZED(142.540)))), vec4((vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), mix(float(_GLF_FUZZED(654.409)), float(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))), bool(true)))))))[0], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), max(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))))[1], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(-8.6, (_GLF_IDENTITY(-8.6, max(-8.6, -8.6))) - 0.0)), ((_GLF_IDENTITY(-8.6, (_GLF_IDENTITY(-8.6, max(-8.6, -8.6))) - 0.0))) - 0.0)), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))[2], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))[3]), bvec4(true, true, true, true)))), _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, sqrt(1.0), abs(1.0), 0.0, 0.0, 0.0, exp(sqrt(0.0)), 1.0, 1.0, exp(0.0)), (mat4(_GLF_IDENTITY(mix(vec4(_GLF_FUZZED(-406.123), _GLF_FUZZED(-7016.9527), _GLF_FUZZED(4.9), _GLF_IDENTITY(_GLF_FUZZED(142.540), clamp(_GLF_FUZZED(142.540), _GLF_IDENTITY(_GLF_FUZZED(142.540), (_GLF_FUZZED(142.540)) - 0.0), _GLF_FUZZED(142.540)))), vec4((vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), mix(float(_GLF_FUZZED(654.409)), float(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))), bool(true)))))))[0], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), max(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))))[1], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(-8.6, (_GLF_IDENTITY(-8.6, max(-8.6, -8.6))) - 0.0)), ((_GLF_IDENTITY(-8.6, (_GLF_IDENTITY(-8.6, max(-8.6, -8.6))) - 0.0))) - 0.0)), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))[2], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))[3]), bvec4(true, true, true, true)), (false ? _GLF_FUZZED((9.2 / vec4(3.1, -57.91, 906.014, 5.8))) : mix(vec4(_GLF_FUZZED(-406.123), _GLF_FUZZED(-7016.9527), _GLF_FUZZED(4.9), _GLF_IDENTITY(_GLF_FUZZED(142.540), clamp(_GLF_FUZZED(142.540), _GLF_IDENTITY(_GLF_FUZZED(142.540), (_GLF_FUZZED(142.540)) - 0.0), _GLF_FUZZED(142.540)))), vec4((vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), mix(float(_GLF_FUZZED(654.409)), float(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))), bool(true)))))))[0], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), max(_GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false))), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))))[1], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(-8.6, (_GLF_IDENTITY(-8.6, max(-8.6, -8.6))) - 0.0)), ((_GLF_IDENTITY(-8.6, (_GLF_IDENTITY(-8.6, max(-8.6, -8.6))) - 0.0))) - 0.0)), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))[2], (vec4(-5713.3759, -995.392, -2842.8360, _GLF_IDENTITY(-8.6, max(_GLF_IDENTITY(-8.6, 0.0 + (-8.6)), _GLF_IDENTITY(-8.6, mix(float(-8.6), float(_GLF_FUZZED(675.007)), bool(false)))))))[3]), bvec4(true, true, true, true)))), _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, sqrt(1.0), abs(1.0), 0.0, 0.0, 0.0, exp(sqrt(0.0)), 1.0, 1.0, exp(0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) * mat4(-4.4, 14.91, 13.17, 67.23, -927.168, -353.143, 31.79, 9.2, -6.3, _GLF_IDENTITY(6.4, clamp(6.4, 6.4, 6.4)), -5.3, -1.9, -3120.4209, 65.33, -4223.4967, -1.1));
      mat3x4 _GLF_SWITCH_1_22v;
      if(_GLF_DEAD(false))
       barrier();
      (ivec3(46020, -60895, 48673) != _GLF_IDENTITY((_GLF_IDENTITY((-53032 ^ 45806) ^ bitfieldExtract(ivec3(39415, 67577, -35348), 96022, _injected_loop_counter), ~ (~ ((-53032 ^ 45806) ^ bitfieldExtract(ivec3(39415, 67577, -35348), 96022, _injected_loop_counter))))), ((_GLF_IDENTITY(_GLF_IDENTITY((-53032 ^ 45806), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(int(int(1)))))) * ((-53032 ^ 45806))) ^ bitfieldExtract(ivec3(39415, 67577, -35348), 96022, _injected_loop_counter), ~ (~ ((-53032 ^ 45806) ^ bitfieldExtract(ivec3(39415, 67577, -35348), 96022, _injected_loop_counter)))))) | (ivec3(0, 0, 0) << _GLF_IDENTITY(_GLF_IDENTITY(ivec3(6), ivec3(6)), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(6), ivec3(6)))))));
      4546;
      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
       {
        if(_GLF_DEAD(false))
         break;
        if(_GLF_DEAD(false))
         break;
        if(_GLF_WRAPPED_IF_TRUE(true))
         {
          do
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             {
              switch(_GLF_SWITCH(0))
               {
                case 69:
                _injected_loop_counter;
                case 0:
                case 99:
                case 13:
                if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
                 barrier();
                case 35:
                case 68:
                case 57:
                case 58:
                continue;
                break;
                case 36:
                mat3 _GLF_SWITCH_3_0v;
                default:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) | (int(1)))))) | (1));
               }
             }
            ;
            false;
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
             barrier();
            if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
             break;
            injectionSwitch;
            vec2 _GLF_SWITCH_1_23v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            mat3x2(8.4, -3.7, 2.0, 14.74, -28.73, 101.101);
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            else
             {
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               break;
              return;
             }
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
             {
              ivec2(30349, -33303);
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0))))); _injected_loop_counter --)
               {
                if(_GLF_DEAD(false))
                 continue;
                return;
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
               continue;
             }
           }
          while((sign(ivec2(-74143, -48338)) == ivec2(-79393, 85918)));
          if(_GLF_DEAD(false))
           break;
         }
        else
         {
         }
       }
      while((_GLF_IDENTITY(_injected_loop_counter, (true ? _GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter)) : _GLF_FUZZED(_injected_loop_counter))) < _injected_loop_counter))
       {
        mat2x3 _GLF_SWITCH_1_24v, _GLF_SWITCH_1_25v[87];
        bvec4 _GLF_SWITCH_1_26v, _GLF_SWITCH_1_27v, _GLF_SWITCH_1_28v[60];
        ivec4 _GLF_SWITCH_1_29v;
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         {
          do
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            barrier();
            if(_GLF_DEAD(false))
             break;
           }
          while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
          if(_GLF_DEAD(false))
           break;
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
         break;
        vec3 _GLF_SWITCH_1_30v[33];
        if(_GLF_DEAD(false))
         return;
        do
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             return;
            barrier();
           }
         }
        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        ivec3 _GLF_SWITCH_1_31v;
        if(_GLF_DEAD(false))
         break;
        do
         {
          if(_GLF_DEAD(false))
           barrier();
         }
        while(_GLF_WRAPPED_LOOP(false));
        if(_GLF_DEAD(false))
         break;
        (uvec4(126150u, 35106u, 124300u, 153941u) - GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w);
       }
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       continue;
     }
     default:
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       1;
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz.z = workgroup_id;
 uint workgroup_base = GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z * _GLF_IDENTITY(GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1, (GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1) + uvec4(0u, 0u, 0u, 0u)).xyz.z;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w, ~ (~ (GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) ? GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w : _GLF_FUZZED(workgroup_base))))), (true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) ? GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w : _GLF_FUZZED(workgroup_base))))), ~ (~ (uint(uint(_GLF_IDENTITY(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) ? GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w : _GLF_FUZZED(workgroup_base)))))))) : _GLF_FUZZED(workgroup_base))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w, max(_GLF_IDENTITY(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w, uint(uvec4(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w, 1u, 0u, 0u))), GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w)), (true ? GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w : _GLF_FUZZED(workgroup_base)))))) << _GLF_IDENTITY(0u, max(0u, 0u)))), uint(uvec2(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w, 1u)))) / 1u) * _GLF_struct_replacement_2._f0._f0.subgroup_size + subgroup_local_id;
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y = virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz.y = GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.z = GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz.y;
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.w * _GLF_struct_replacement_2._f0._f0.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))))))) % _GLF_struct_replacement_2._f0._f0.subgroup_size);
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.w = next_virtual_gid;
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x = GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.w;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(((0 ^ 1) ^ 1), (true ? ((0 ^ 1) ^ 1) : _GLF_FUZZED(-97223)))); _injected_loop_counter --)
  {
   atomicStore(buf[GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.z], 4, 64, 0);
 GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.w = read_1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.x = GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.w;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.z], (_GLF_IDENTITY(buf[GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.z], (buf[GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.z]) ^ 0u)) << _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x)) & uint(93672)), uint(uvec3((uint(_GLF_ZERO(0.0, injectionSwitch.x)) & uint(93672)), 1u, 0u)))), 4, 64, 0);
 GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz.x = read_2;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.y = GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz.x, ~ (~ _GLF_IDENTITY((GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.y = GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz.x), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.y = GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz.x), ((GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.y = _GLF_IDENTITY(GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz, min(GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz, GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz)))).x)) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.y = GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz.x), ((GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.y = GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz.x)) - 0u)), (false ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_IDENTITY((GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.y = GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz.x), ((GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.y = GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1.xyz.x)) - 0u))))) ^ 0u)))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   switch(_GLF_SWITCH(0))
    {
     case 47:
     if(true)
      {
       greaterThan(vec4(-418.584, -760.382, -11.15, -927.005), (_GLF_IDENTITY(vec4(0.4, 273.167, -677.848, 364.831), min(_GLF_IDENTITY(vec4(0.4, 273.167, -677.848, 364.831), vec4(mat3(vec4(0.4, 273.167, -677.848, 364.831), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, sin(0.0)))), _GLF_IDENTITY(vec4(0.4, 273.167, -677.848, 364.831), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(-5.3, 21.67, 9.4, 21.80)) : vec4(0.4, 273.167, -677.848, 364.831))))) / 1008.2559));
      }
     case 42:
     mat4x2((- -7393.0740), -1068.4806, sign(-130.084), 8.2, 1.4, 4.1, -4.1, -8589.0037);
     case 0:
     case 33:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     case 54:
     case 38:
     if(_GLF_DEAD(false))
      barrier();
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 59:
     ;
     case 63:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(true)
      {
       {
        vec2 _GLF_SWITCH_3_0v;
        mod(vec4(-3206.8124, -9028.5693, 8.1, -18.89), vec4(-3149.3915, 4.3, 19.00, -96.48));
        outerProduct(vec4(-34.57, -5.1, -67.88, -0.8), vec3(0.9, 7.0, 2.1));
        mat2x3(-9.0, -88.05, -236.581, 7614.6698, -6954.6703, 0.8);
        vec2 _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
        (8.9 / (mat4x2(-1.6, -2.4, -1292.7165, 7.2, -5.5, -919.818, -1.7, 9075.9215) + mat4x2(12.77, 3.4, 190.399, -3.7, 9.4, -8.5, -4.1, 9.3)));
        if(false)
         {
          vec4 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v;
         }
       }
       mat2x4(-458.870, -2499.2121, 147.797, 5257.1984, 805.595, 64.88, -8.0, -7.0);
       if(_GLF_DEAD(false))
        return;
       findLSB(ivec2(6819, -7121));
       for(mat3 _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v; (vec4(3.8, 63.87, 3570.7766, 619.473) != (mat2x4(-4.8, 37.07, -4024.2109, 46.88, 7198.7324, 1.1, 1.7, -1.8) * round(vec2(-8.5, -31.37)))); mat3x2(vec2(-2.7, 9.4), injectionSwitch, vec2(137.091, -4.1)))
        {
         {
          _GLF_SWITCH_3_6v;
          ;
          ;
          mat2x3(-157.641, 4.7, 0.9, 324.689, 32.89, -694.611);
          mat3x2(306.133, -6.0, 1212.6220, -5.2, -9565.2199, 7308.6665);
          (mat4x2(14.82, 64.63, -920.782, -1.9, -439.427, -90.56, -3852.4277, 8.3) / 4.7);
         }
         if((GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1[3] == subgroup_id))
          {
           mat3x2(43.04, -332.774, -5.0, 8.6, -2.2, -97.84);
           bvec4 _GLF_SWITCH_3_7v[64], _GLF_SWITCH_3_8v[22];
           ;
           bool _GLF_SWITCH_3_9v[85], _GLF_SWITCH_3_10v[94], _GLF_SWITCH_3_11v[11];
           if(_GLF_DEAD(false))
            continue;
           mat3x2 _GLF_SWITCH_3_12v;
           vec4 _GLF_SWITCH_3_13v, _GLF_SWITCH_3_14v[93];
          }
         else
          {
           mat2x4(76.90, 85.46, -299.825, -25.03, -342.912, 44.46, 186.056, -98.37);
           mat2x3((- mat2x4(-21.37, -2.3, 97.08, -452.429, -2015.0174, -7.5, 309.439, -52.91)));
           ;
          }
         ivec3 _GLF_SWITCH_3_15v, _GLF_SWITCH_3_16v;
         for(         ((- mat3x2(-0.4, _GLF_IDENTITY(4429.6148, (4429.6148) / 1.0), 142.696, -765.061, -3.7, -12.58)) / fma(-0.3, 440.705, 2.1));
 (ivec4(42874, 82079, -91579, 99719) , (_GLF_IDENTITY(mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9), false || (mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9), false || (mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9), false || (mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9), false || (mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), (! (_GLF_IDENTITY(mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9), false || (mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9), false || (mat2(4.8, -1.0, 2.5, -7.3) == mat2(77.02, -9.5, -7690.9835, -7.9))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))) || false)))))))); -9.2)
          {
           bvec2(false, true);
           ;
           next_virtual_gid;
           uvec3 _GLF_SWITCH_3_17v[55], _GLF_SWITCH_3_18v, _GLF_SWITCH_3_19v;
           mat3x4 _GLF_SWITCH_3_20v, _GLF_SWITCH_3_21v, _GLF_SWITCH_3_22v[91];
           int _GLF_SWITCH_3_23v, _GLF_SWITCH_3_24v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           fma(vec3(-4.6, -3.6, -8.9), vec3(1567.4824, 3.4, -4.8), vec3(488.215, 5225.1880, 362.133));
           ivec3 _GLF_SWITCH_3_25v;
           if(_GLF_DEAD(false))
            break;
          }
         for(         min(vec2(29.43, -302.315), injectionSwitch);
 (38145 < 13993); (vec3(-502.954, -5.9, -9.7) - 276.003))
          {
           mat4 _GLF_SWITCH_3_26v[89];
           (mat2(4209.8494, 7.9, 4948.8121, 5302.2982) + -9.1);
           vec3(77.97, _GLF_IDENTITY(16.20, max(16.20, 16.20)), -9.6);
           clamp(vec4(-904.190, -18.14, -30.44, 0.8), -2689.3421, -8.3);
           if(_GLF_DEAD(false))
            return;
           isnan(vec4(8.4, 3.9, 6252.4304, 3.5).qp);
           GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid;
           float _GLF_SWITCH_3_27v, _GLF_SWITCH_3_28v[40];
           uint _GLF_SWITCH_3_29v, _GLF_SWITCH_3_30v;
           uvec4 _GLF_SWITCH_3_31v, _GLF_SWITCH_3_32v[24], _GLF_SWITCH_3_33v;
          }
         if(true)
          {
           max(bitfieldReverse(GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size), GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size);
           mat2x3(5.1, 8.5, 93.00, -8.6, -6561.8090, -9005.0027);
          }
         bvec4(true, true, true, false);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       mat2x3(436.489, -352.242, -777.739, 4.5, -52.85, 3769.7059);
       {
        for(        (mat3(508.801, -80.88, 0.4, -90.80, 5.3, 3312.2158, -8.1, -440.048, 229.565) , mat2x4(694.069, 5.4, 6.4, _GLF_IDENTITY(-1.1, (-1.1) / round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), 83.23, 7.4, -62.72, 6.9));
 false; -487.219)
         {
          uvec4 _GLF_SWITCH_3_34v, _GLF_SWITCH_3_35v[20], _GLF_SWITCH_3_36v;
          vec4 _GLF_SWITCH_3_37v;
          ivec2(56504, 72102);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          greaterThan(vec2(4305.7229, -1750.2174), vec2(83.96, 63.80));
          mat3 _GLF_SWITCH_3_38v[45];
          (mat4x3(-0.9, -4.6, 7032.9897, 420.501, 3.9, 356.872, 2.8, 2936.0637, -149.657, -42.32, -4.9, -19.97) - mat4x3(-55.69, -28.03, -6163.4181, -8.4, 5693.9302, 57.94, 277.077, -3.1, 2.5, -650.588, -0.8, 50.16));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          vec2(-6703.3667, -36.78).y;
          mat4x3(55.70, -7.3, -22.28, 977.366, 3.0, -2.2, 742.674, -80.56, -6.3, 0.0, -3611.0011, 0.5);
          if(_GLF_DEAD(false))
           return;
          mix(subgroup_id, subgroup_local_id, (mat2x3(4.2, -5402.1489, 7489.4346, -1.0, -5770.0518, 5.5) == mat2x3(2672.4390, -152.407, _GLF_IDENTITY(1047.3588, min(1047.3588, 1047.3588)), -6.0, 0.6, 1587.4131)));
         }
        mat3x2(-4421.6397, 0.7, -58.43, -9.8, -24.46, -2399.7132);
        mat3x2(-214.009, 6982.5874, 8589.4415, 642.039, 63.06, 833.752);
        if(false)
         {
          ;
          mat2x3 _GLF_SWITCH_3_39v, _GLF_SWITCH_3_40v[38], _GLF_SWITCH_3_41v;
          vec2 _GLF_SWITCH_3_42v[59], _GLF_SWITCH_3_43v[17], _GLF_SWITCH_3_44v[42];
          true;
          vec4 _GLF_SWITCH_3_45v, _GLF_SWITCH_3_46v;
          uvec3(6807u, 141705u, 143386u);
          (false);
          mat3x2(_GLF_IDENTITY(-8022.7442, (false ? _GLF_FUZZED(8.9) : _GLF_IDENTITY(-8022.7442, clamp(-8022.7442, -8022.7442, -8022.7442)))), 6.0, 94.97, 52.54, 90.37, -4348.8982);
          mat4x2(-4.9, 9.1, -1.9, -5.0, -556.463, -296.394, 1.9, -9.4);
         }
        else
         {
          mat2x4(39.51, 628.460, 8.7, -386.460, 43.45, 909.076, -3467.4405, -691.043);
          ;
          bvec4(true, true, true, false);
          bvec4(false, true, false, false);
          bvec4(false, false, false, true);
          tan(vec3(871.024, 93.54, -6.7));
          uvec3 _GLF_SWITCH_3_47v, _GLF_SWITCH_3_48v;
         }
        for(        mat3x4(-5044.9768, -296.877, -4074.4234, 555.558, 9.4, -4152.6222, 59.89, 6.6, 96.35, 10.97, -9.3, 3.2);
 (GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size == GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid); (GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id ^ GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1))
         {
          -81.75;
         }
        360;
       }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       while(false)
        {
         if((mat3x4(_GLF_IDENTITY(-18.92, (true ? _GLF_IDENTITY(-18.92, 1.0 * (-18.92)) : _GLF_FUZZED(acosh(4.2)))), -87.56, 57.18, 3.8, -6.5, -3.0, _GLF_IDENTITY(32.68, (32.68) * _GLF_ONE(1.0, injectionSwitch.y)), -1.7, -4169.0223, 4.9, 2.9, -9548.0738) == (mat3x4(-28.63, -783.162, 7.9, -50.15, -819.679, -73.21, -6501.7707, -8.5, 78.22, 318.402, -406.890, -6.9) / 9444.0473)))
          {
           mat4(-40.21, -589.302, -3904.2523, 8.5, 63.89, 9.4, 64.20, 35.49, 3835.7822, 954.063, 2.2, 7.4, 9285.5256, 654.985, -26.13, 8.9);
           subgroup_local_id;
           ;
           if(_GLF_DEAD(false))
            return;
           findMSB(GLF_merged2_0_3_60_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_12read_2virtual_gidworkgroup_idread_1);
           mat2x3(mat3x4(-2.2, 6.2, -885.002, -7333.3329, 7.6, 629.259, -2.3, 787.582, 5.5, -0.3, -12.21, -6.7));
           mat2x3 _GLF_SWITCH_3_49v, _GLF_SWITCH_3_50v[87];
           -21981;
           ivec4 _GLF_SWITCH_3_51v;
           ivec4 _GLF_SWITCH_3_52v;
          }
         else
          {
           ivec3 _GLF_SWITCH_3_53v;
          }
         mat4(mat2x3(7.3, 228.610, 3.0, 196.926, 104.904, 265.448));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         ivec3 _GLF_SWITCH_3_54v, _GLF_SWITCH_3_55v, _GLF_SWITCH_3_56v;
         bitfieldInsert(-44313, -17578, -65015, -86415);
         for(mat4x2 _GLF_SWITCH_3_57v, _GLF_SWITCH_3_58v; bvec3(true, false, true).p; false)
          {
           if(_GLF_DEAD(false))
            continue;
          }
         (mat2x4(2.6, -8.0, -214.560, -1015.4127, -6592.8983, 1.8, 35.74, -5239.0706) + -39.02);
         if(_GLF_DEAD(false))
          break;
         vec3(31.83, 435.186, 9.9);
         bool _GLF_SWITCH_3_59v, _GLF_SWITCH_3_60v;
        }
       mat4x3(-33.14, -4.1, 1.9, 696.398, 15.82, _GLF_IDENTITY(4355.6120, clamp(4355.6120, 4355.6120, 4355.6120)), 11.94, 89.16, -9.5, -7.1, 596.337, 391.431);
       do
        {
         transpose(mat2x3(944.918, -2376.9203, -6.9, -32.16, 4431.1453, 1.2));
         if(_GLF_DEAD(false))
          continue;
         for(         mat4(-1873.3245, 8.9, 208.067, 7.7, -1.0, -5.0, -1.4, 2.5, 903.326, 3.7, 7.5, -50.16, 9.4, 1525.2228, 3.8, -6.4);
 true; int(-655.719))
          {
           read_1;
          }
         ivec2 _GLF_SWITCH_3_61v, _GLF_SWITCH_3_62v, _GLF_SWITCH_3_63v;
         uvec2 _GLF_SWITCH_3_64v, _GLF_SWITCH_3_65v;
         uint _GLF_SWITCH_3_66v[95], _GLF_SWITCH_3_67v;
         for(         GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_size;
 false; greaterThan(vec3(1.0, 4815.8629, -121.349), (mat2x3(-0.1, 5.3, -6.9, -8007.1388, 9.3, -687.598) * vec2(998.694, -6.1))))
          {
           mat4 _GLF_SWITCH_3_68v;
           if(_GLF_DEAD(false))
            return;
          }
         mat2(mat3x4(1.3, -3.2, -70.53, -75.08, 81.26, 406.860, 1.6, -4.9, -47.37, _GLF_IDENTITY(-83.77, (-83.77) / abs(1.0)), -2.6, 859.650));
         {
          ivec4 _GLF_SWITCH_3_69v, _GLF_SWITCH_3_70v;
          (false ? vec3(9145.3822, 7.5, 45.28) : cosh(vec3(-804.155, 89.50, _GLF_IDENTITY(443.083, clamp(443.083, 443.083, _GLF_IDENTITY(443.083, (true ? 443.083 : _GLF_FUZZED(sinh(-3.5)))))))));
          uvec4 _GLF_SWITCH_3_71v, _GLF_SWITCH_3_72v[63], _GLF_SWITCH_3_73v[71];
          if(_GLF_DEAD(false))
           continue;
          (distance(-19.64, 6.2) / matrixCompMult(mat3(-3.4, -97.42, -518.925, 1.6, 8.2, 66.59, -560.952, 7584.6286, 3.6), mat3(-1.6, 774.185, -377.648, -9.8, -9.5, -99.24, 92.68, 4.9, 7.6)));
          if(_GLF_DEAD(false))
           break;
         }
         if(_GLF_DEAD(false))
          break;
         _GLF_SWITCH_3_63v;
        }
       while((bvec3(false, true, true) != bvec3(true, false, true)));
      }
     if(_GLF_DEAD(false))
      return;
     default:
     1;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      continue;
     return;
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_struct_replacement_2._f0._f0.subgroup_size)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x], uint(_GLF_IDENTITY(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.x == GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.y, (GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.x == GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.y) && true)) + 1, 4, 64, 4);
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, false))))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     switch(_GLF_IDENTITY(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> (0 & 34983)))
      {
       case 0:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
        }
       for(_GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(vec2(1.0), _GLF_struct_5(mat4x3(1.0), 1.0, mat3(1.0), _GLF_struct_3(mat4x3(1.0), 1u, bvec4(true), bvec2(true), 1.0, ivec3(1)), _GLF_struct_4(vec3(1.0), uvec2(1u), uvec3(1u), mat4x3(1.0), vec4(1.0), vec4(1.0)), mat3x2(1.0)), _GLF_struct_9(_GLF_struct_6(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z) : 1u))), mat3x2(1.0), uvec2(1u), 1.0, mat3x2(1.0), _GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))), vec2(1.0), 1, _GLF_struct_7(mat3(1.0), bvec4(true), mat4x2(1.0), ivec2(1)), _GLF_struct_8(1u), ivec4(1), ivec4(1)), 0, _GLF_struct_11(_GLF_struct_10(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), true, bvec3(true))), mat2x4(1.0), _GLF_struct_13(bvec4(true), _GLF_struct_12(bvec2(true), ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(90478) : 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))), uvec2(1u), vec4(_GLF_IDENTITY(1.0, float(mat3x2(1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0)))), mat4(1.0), mat2x3(1.0), true)), mat4x2(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_14._injected_loop_counter < 1); _GLF_struct_replacement_14._injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 51:
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             ivec3(-80308, 85030, -2463);
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 62:
           ((ivec4(32460, 92337, -74836, -257) >> ivec4(51821, -77254, -77471, 19378)) + -99706);
           case 0:
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
           case 40:
           case 3:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               break;
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                break;
              }
             continue;
            }
           barrier();
           if(_GLF_DEAD(false))
            break;
           break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           case 81:
           {
            (bitfieldExtract(_GLF_IDENTITY(uvec3(35220u, _GLF_IDENTITY(60626u, (60626u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 179385u), (uvec3(35220u, _GLF_IDENTITY(60626u, (60626u) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) >> 0u)), 179385u)) | (uvec3(35220u, _GLF_IDENTITY(60626u, (60626u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 179385u))), -37087, _GLF_struct_replacement_14._injected_loop_counter) << _GLF_IDENTITY(uvec3(192177u, 71584u, 181172u), max(uvec3(192177u, 71584u, 181172u), uvec3(192177u, 71584u, 181172u))));
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             return;
            if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
             break;
            mat2x4(mat3(22.32, -338.835, -4.9, _GLF_IDENTITY(_GLF_IDENTITY(-4.4, max(_GLF_IDENTITY(-4.4, 0.0 + (-4.4)), -4.4)), max(_GLF_IDENTITY(-4.4, max(_GLF_IDENTITY(-4.4, 0.0 + (-4.4)), -4.4)), _GLF_IDENTITY(-4.4, max(_GLF_IDENTITY(-4.4, 0.0 + (-4.4)), -4.4)))), -22.63, 88.26, -10.37, 6.7, -1893.0461));
            do
             {
              ;
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3889.6718)), float(injectionSwitch.y), bool(true)))))));
            if(_GLF_DEAD(false))
             continue;
            ;
           }
           default:
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               1;
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 74:
               case 87:
               case 26:
               if(_GLF_DEAD(false))
                return;
               case 41:
               case 36:
               case 30:
               case 13:
               case 15:
               if(_GLF_DEAD(false))
                break;
               case 38:
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               break;
               default:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               1;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       break;
       if(_GLF_DEAD(false))
        return;
       case 68:
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
          barrier();
        }
       else
        {
        }
       ivec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[71], _GLF_SWITCH_0_2v[21];
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))), false, false, true)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false, false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))), false, false, true)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false, false, true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))), false, false, true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))), false, false, true)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))), false, false, true))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))), false, false, true)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))), false, false, true))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))), false, false, true)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))), false, false, true))))), true)))), true, false))))), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))).y))), false, false, true))))))))) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true)))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       case 6:
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(true)
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           for(vec4 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v; (3.8 > 33.84); (+ mat2x3(mat3x2(6948.2825, 0.8, -1.6, 4990.2282, -72.25, 746.111))))
            {
             uint _GLF_SWITCH_0_5v[97];
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 7:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 vec3 _GLF_SWITCH_3_0v[58], _GLF_SWITCH_3_1v;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  return;
                 case 0:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 87:
                 continue;
                 break;
                 case 99:
                 if(_GLF_DEAD(false))
                  break;
                 int _GLF_SWITCH_3_2v;
                 case 74:
                 mat2(_GLF_IDENTITY(-1.1, max(-1.1, -1.1)), -1.0, -86.71, 1820.7684);
                 default:
                 if(_GLF_DEAD(false))
                  return;
                 1;
                }
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(2823.9507)))))))))
              {
               if(_GLF_DEAD(false))
                continue;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                  }
                }
               continue;
              }
             bvec3(false, true, true);
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
              }
             bool _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
               ;
              }
             uvec2(135245u, 47619u);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
             if(_GLF_DEAD(false))
              return;
             mat3x4 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
             log2(9.4);
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               continue;
              }
             vec4(-685.531, 2386.9553, -6037.0643, _GLF_IDENTITY(-707.841, min(-707.841, -707.841))).rra;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (int(_GLF_IDENTITY(4, clamp(4, 4, 4)))))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                break;
               switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(5), int(5)))))
                {
                 case 47:
                 intBitsToFloat(ivec4(-83340, -8497, 65549, -75601));
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  continue;
                 case 4:
                 mat3(-4.0, 0.1, -7.0, 841.909, 407.289, -47.01, -46.81, 94.99, 122.665);
                 case 0:
                 if(_GLF_DEAD(false))
                  break;
                 case 27:
                 case 73:
                 case 87:
                 case 57:
                 case 52:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 break;
                 case 53:
                 mat3(-3.0, -86.86, 1.7, -566.980, 8.6, 7959.1899, -3.1, 3.5, -0.3);
                 default:
                 _GLF_IDENTITY(1, min(1, 1));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
              }
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(83459))))))) - 0))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                return;
               barrier();
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           mat3x2(7.8, 88.76, 6.4, 7478.5914, 672.302, 8.3);
           num_workgroup;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             _GLF_IDENTITY((mat4(-7.0, 8024.3680, -436.185, 4.1, _GLF_IDENTITY(-3.8, (-3.8) - 0.0), 2896.0306, -5.9, -8.1, 7.5, 4.1, 82.30, -9.8, 6.8, 53.70, -74.96, 865.186) - 4719.3111), transpose(transpose((mat4(-7.0, 8024.3680, -436.185, 4.1, _GLF_IDENTITY(-3.8, (-3.8) - 0.0), 2896.0306, -5.9, -8.1, 7.5, 4.1, 82.30, -9.8, 6.8, 53.70, -74.96, 865.186) - 4719.3111))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           ;
           mat3(-3.7, 49.03, -83.95, -104.018, _GLF_IDENTITY(3394.8881, clamp(3394.8881, 3394.8881, 3394.8881)), 5.9, 845.645, -490.658, -6.1);
           uvec3 _GLF_SWITCH_0_10v[70], _GLF_SWITCH_0_11v;
          }
         else
          {
           for(           (- mat4(4.7, -9664.1150, _GLF_IDENTITY(-4.2, clamp(-4.2, -4.2, -4.2)), -5.4, 6.4, -16.39, 87.14, 3.2, _GLF_IDENTITY(-834.741, max(-834.741, -834.741)), -37.89, -6.3, 778.347, 315.455, 8.3, 0.1, 1153.2144));
 (false != true); floatBitsToInt(vec3(_GLF_IDENTITY(81.22, (81.22) / 1.0), -9563.5574, 16.72)))
            {
             if(_GLF_DEAD(false))
              return;
             ;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               ivec2(38536, -2878);
              }
             else
              {
              }
             _GLF_IDENTITY((_GLF_IDENTITY(++ _GLF_SWITCH_0_0v, (true ? ++ _GLF_SWITCH_0_0v : _GLF_FUZZED(ivec2(91393, -15057))))), (_GLF_IDENTITY((_GLF_IDENTITY(++ _GLF_SWITCH_0_0v, (true ? ++ _GLF_SWITCH_0_0v : _GLF_FUZZED(ivec2(91393, -15057))))), ivec2(0, 0) | ((_GLF_IDENTITY(++ _GLF_SWITCH_0_0v, (true ? ++ _GLF_SWITCH_0_0v : _GLF_FUZZED(ivec2(91393, -15057)))))))) ^ ivec2(0, 0));
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
           for(int _GLF_SWITCH_0_12v; (uvec4(179658u, 21829u, 112919u, 126810u) != uvec4(163983u, 156393u, 166494u, 153072u)); mat4x2(86.22, -5.8, -3.7, 74.84, 1.1, -5.2, 50.32, -0.3))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             inverse((bvec4(false, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false) , mat2(-8651.2043, 0.0, -51.28, 4301.9779)));
             bvec2(false, true);
             GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz;
             (uvec4(174137u, 10712u, 178240u, 130070u) << uvec4(170187u, 171554u, 44326u, 642u));
             isinf(vec3(4.9, 0.1, -5508.0661));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             uvec4(148425u, 199997u, _GLF_IDENTITY(_GLF_IDENTITY(148822u, max(_GLF_IDENTITY(148822u, (148822u) / 1u), _GLF_IDENTITY(148822u, (148822u) - 0u))), _GLF_IDENTITY(uint(uint(148822u)), (uint(uint(148822u))) - 0u)), 64965u);
             mat3 _GLF_SWITCH_0_13v[37];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false)))))))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              break;
             mat4x3 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v[45], _GLF_SWITCH_0_16v;
            }
           do
            {
             switch(_GLF_SWITCH(0))
              {
               case 38:
               atomicMin(read_2, num_workgroup);
               case 0:
               case 62:
               case 83:
               case 87:
               case 10:
               if(_GLF_DEAD(false))
                barrier();
               case 33:
               case 42:
               case 48:
               ;
               break;
               case 53:
               ((workgroup_size << subgroup_local_id) % workgroup_base);
               case 70:
               _GLF_IDENTITY(roundEven(vec3(72.35, -536.485, 930.430)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (roundEven(vec3(72.35, -536.485, 930.430))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               default:
               1;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), bool(bvec4(_GLF_IDENTITY(! (true && (false)), bool(bvec2(! (true && (false)), true))), false, true, false)))))))) || false)))));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) | (1)))), max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 return;
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 29:
               (mat3x4(65.66, 2.8, 72.40, -61.21, 7.8, -2.4, 2547.3007, 1.4, -301.252, -5.4, -30.60, 236.667) - 69.58);
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                return;
               case 39:
               ivec4(-80909, 34702, -74929, -78924);
               case 0:
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
               case 36:
               case 43:
               case 17:
               case 81:
               if(_GLF_DEAD(false))
                return;
               barrier();
               break;
               case 9:
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
                return;
               mat2x4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
               case 74:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               ;
               default:
               1;
              }
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(false)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               (mat4x2(73.89, -30.50, 506.568, 6.3, _GLF_IDENTITY(-7694.1003, (false ? _GLF_FUZZED(33.62) : _GLF_IDENTITY(-7694.1003, (false ? _GLF_FUZZED(35.31) : -7694.1003)))), -7.4, -4819.3095, 1.9) != mat4x2(-1028.5104, -728.999, 360.211, -4.3, _GLF_IDENTITY(-0.9, (-0.9) * 1.0), 8376.9866, 1288.9550, 2.9));
              }
             do
              {
               if(_GLF_DEAD(false))
                break;
               mat2x4(-595.709, 6.6, -115.818, -840.668, -26.78, -3.6, 5265.3501, 6932.7384);
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               mat4x3(mat3x4(-9.3, 552.280, -8.8, -7.5, -7.3, -1.5, -50.10, -7744.7484, -5.1, -2490.5166, 6.8, 2.0));
              }
             if(_GLF_DEAD(false))
              break;
             mat4(_GLF_IDENTITY(44.33, clamp(44.33, 44.33, _GLF_IDENTITY(44.33, float(mat4(44.33, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), 4.9, -1.6, -9.5, 2028.3814, 3.9, 128.077, 8671.6835, 888.772, 4.0, -771.663, 65.61, -1694.3233, 1755.6939, -5.6, -6.4);
             uvec2 _GLF_SWITCH_0_17v[34], _GLF_SWITCH_0_18v[60], _GLF_SWITCH_0_19v[56];
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(-16414)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             mat3x2 _GLF_SWITCH_0_20v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               switch(_GLF_SWITCH((0 & -59235)))
                {
                 case 0:
                 case 18:
                 case 99:
                 case 38:
                 if(_GLF_DEAD(false))
                  return;
                 case 66:
                 case 45:
                 case 72:
                 case 32:
                 case 3:
                 case 67:
                 -91.85;
                 break;
                 case 43:
                 vec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[60], _GLF_SWITCH_3_2v;
                 if(_GLF_DEAD(false))
                  break;
                 default:
                 1;
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             mat4x2(69.76, 3.4, -0.2, 7.2, 514.432, 64.47, 2.0, 5453.3393);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             vec2 _GLF_SWITCH_0_21v;
            }
          }
        }
       else
        {
        }
       default:
       1;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               switch(_GLF_SWITCH(0))
                {
                 case 2:
                 bvec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[99], _GLF_SWITCH_3_2v;
                 case 6:
                 -4.9;
                 case 0:
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   barrier();
                  }
                 case 26:
                 case 96:
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 case 49:
                 if(_GLF_DEAD(false))
                  return;
                 case 55:
                 case 7:
                 case 67:
                 case 75:
                 case 42:
                 barrier();
                 break;
                 case 71:
                 mat4x3(67.36);
                 case 38:
                 mat4(-385.407, -866.850, -3.0, -9553.2183, -53.43, -317.160, 3.7, 69.16, -56.11, _GLF_IDENTITY(564.503, (false ? _GLF_FUZZED(-9844.7721) : _GLF_IDENTITY(564.503, (564.503) - 0.0))), -5.6, -3.5, -177.104, 6.8, 8.7, 79.13);
                 default:
                 1;
                }
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              return;
             return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) && true))
            barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(38.13)), bool(false))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))))))
    {
     switch(_GLF_SWITCH((0 | 0)))
      {
       case 9:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       mat2 _GLF_SWITCH_2_0v[74], _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
       case 0:
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         switch(_GLF_SWITCH(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) / 1)))
          {
           case 0:
           case 70:
           case 20:
           case 5:
           case 71:
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
            break;
           case 76:
           case 47:
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
              return;
             return;
            }
           barrier();
           break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             barrier();
            }
           case 52:
           {
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
             }
            mat4x2(-654.487, -3.0, -2.7, 4.3, 52.17, 85.70, 6.2, -636.673);
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))
             {
              if(_GLF_DEAD(false))
               break;
              _GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (1u ^ 1u))));
             }
            for(int _injected_loop_counter = (0 | (0 | 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_injected_loop_counter < 1), (! (_injected_loop_counter < 1)) && true)))); _injected_loop_counter ++)
             {
              do
               {
                true;
                if(_GLF_DEAD(false))
                 break;
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(false))
               break;
              do
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
               break;
              if(_GLF_DEAD(false))
               break;
             }
            do
             {
              do
               {
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   return;
                  ivec4(48615, -70848, 96889, -87443);
                  if(_GLF_DEAD(false))
                   break;
                 }
                if(_GLF_DEAD(false))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
             }
            while(_GLF_WRAPPED_LOOP(false));
            bvec3 _GLF_SWITCH_0_0v;
            ((! bvec2(false, true)[1]) ? mat2(953.889, -1518.2235, _GLF_IDENTITY(-1.2, (-1.2) / 1.0), 7.1) : mat2(7053.9946, 9693.8135, 3.8, -1.1));
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
            do
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
           if(_GLF_DEAD(false))
            continue;
           case 84:
           do
            {
             switch(_GLF_SWITCH(0))
              {
               case 68:
               (ivec3(61852, 88391, 75022) ^ _GLF_IDENTITY((- ivec3(81730, -56020, -74287)), clamp(_GLF_IDENTITY((- ivec3(81730, -56020, -74287)), ivec3(ivec4((- ivec3(81730, -56020, -74287)), 1))), (- ivec3(81730, -56020, -74287)), _GLF_IDENTITY((- ivec3(81730, -56020, -74287)), ~ (~ ((- ivec3(81730, -56020, -74287))))))));
               case 25:
               _GLF_IDENTITY((frexp(faceforward(35.71, -3.5, -39.25), _injected_loop_counter) * injectionSwitch), ((frexp(faceforward(35.71, -3.5, -39.25), _injected_loop_counter) * injectionSwitch)) - vec2(0.0, 0.0));
               case 0:
               case 40:
               case 83:
               case 98:
               case 57:
               case 15:
               case 89:
               if(_GLF_DEAD(false))
                break;
               case 41:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))
                  {
                   return;
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
               break;
               case 4:
               mat4x3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[30];
               case 52:
               int _GLF_SWITCH_3_3v;
               default:
               if(_GLF_DEAD(false))
                return;
               1;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             bvec4(true, true, false, false);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             continue;
            }
           default:
           1;
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       break;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
        }
       else
        {
        }
       default:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       1;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x], uint(_GLF_IDENTITY(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.x, max(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.x, (GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id[3]) : _GLF_IDENTITY(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.x, (GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id.xyz.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) == _GLF_IDENTITY(GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id, (GLF_merged2_0_3_53_3_1_11GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gidsubgroup_id) | uvec4(0u, 0u, 0u, 0u)).xyz.y) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(true);
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8043.8056) : 1.0)), 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8767.5576)), bool(false)))) * 1.0), 1.0, 1.0, 0.0)), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.7))), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
}
