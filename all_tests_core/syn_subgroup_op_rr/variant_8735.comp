#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 uvec4 GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, ! (! (true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), clamp(int(4), int(4), _GLF_IDENTITY(int(4), (int(4)) | 0))))), (int(4)) | (int(4)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       do
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false))))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))))))) && true)))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
      continue;
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))) : _GLF_FUZZED(-414.322))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(6.9, -192.437, -972.320).x)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) / 1.0), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x = _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(~ (subgroup_local_id), _GLF_IDENTITY(~ (subgroup_local_id), uint(_GLF_IDENTITY(uvec3(~ (subgroup_local_id), 0u, 0u), (uvec3(~ (subgroup_local_id), 0u, 0u)) >> _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) - uvec2(0u, 0u)))), 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) - uvec2(0u, 0u)))), 0u), clamp(uvec3(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) - uvec2(0u, 0u)))), 0u), uvec3(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) - uvec2(0u, 0u)))), 0u), uvec3(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (uvec2(0u, 1u)) - uvec2(0u, 0u)))), 0u)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x = _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) | 0u), ~ (~ (subgroup_local_id)))), min(clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) | 0u), ~ (~ (subgroup_local_id)))), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) | 0u), ~ (~ (subgroup_local_id))))))), 0u ^ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x = _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))))), (0u ^ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x = subgroup_local_id)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), ~ (~ (_GLF_IDENTITY(0u, 0u + (0u)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     continue;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(6.9)), vec2(_GLF_FUZZED(((-7949.9904 - -852.071))), ((injectionSwitch))[1]), bvec2(false, true))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))))).y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-597.592)), float(injectionSwitch[1]), bool(true)))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0), _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))))) + 0.0)))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(6.9)), vec2(_GLF_FUZZED(((-7949.9904 - -852.071))), ((injectionSwitch))[1]), bvec2(false, true))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))))))).y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false)))
  barrier();
 for(int _injected_loop_counter = (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), ~ (~ (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), clamp((0 << _GLF_IDENTITY(int(1), int(1))), (0 << _GLF_IDENTITY(int(1), int(1))), (0 << _GLF_IDENTITY(int(1), int(1)))))) | ((0 << _GLF_IDENTITY(int(1), int(1)))))))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.w = workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.w = workgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.w = workgroup_size, ~ (~ (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.w = workgroup_size))))))));
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.w * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))));
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 & 1) ^ (30541 & 0))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(1 ^ 0, max(1 ^ 0, 1 ^ 0)), _GLF_IDENTITY((1 ^ 0) - 0, _GLF_IDENTITY(int(ivec2((1 ^ 0) - 0, 0)), (int(ivec2((1 ^ 0) - 0, 0))) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) - 0) != (1 ^ 0))) || false, false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), (false ? _GLF_FUZZED(-68958) : (1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)))))) - 0) != (1 ^ 0))) || false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) - 0) != (1 ^ 0))) || false, false || ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), (false ? _GLF_FUZZED(-68958) : (1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)))))) - 0) != (1 ^ 0)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), (false ? _GLF_FUZZED(-68958) : (1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x)))))) - 0) != (1 ^ 0)))))) || false)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_base;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint virtual_gid = GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY((subgroup_size / subgroup_size), max((subgroup_size / subgroup_size), (subgroup_size / subgroup_size)))))), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))), min((_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) | 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((subgroup_size / subgroup_size)))), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))), min((_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) | 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((subgroup_size / subgroup_size)))), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))), min((_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) | 0u))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((subgroup_size / subgroup_size)))), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))), min((_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) | 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((subgroup_size / subgroup_size)))), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))), min((_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) | 0u))))), 1u))), 1u, (1u ^ _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(1u, min(1u, 1u)))))))) * _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size)).y + GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))) || false))), true)))))) && true))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), 0 ^ ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, true)))), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, true)))))) && true)); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y = virtual_gid;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch)))).y))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false), false)), true)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false), false)), true)))))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) || false)), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) || false)), true)), false), bvec2(bvec4(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) || false)), true)), false), true, false)))))))) || false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = (1 & _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) << 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter --)))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), (injectionSwitch.x > injectionSwitch.y) && true)))))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0)), clamp(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0)), vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0)), vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0))))).x > injectionSwitch.y))))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.z + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y) | (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y)) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x) | (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)) + 1) % _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))))).y) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, min(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), (_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), (uvec4(0u, 0u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u))))) - 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y)), GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y)))), ((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y), min((GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y), (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y))) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y)))), 1u * (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y), min((GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y), (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y))) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y))))))) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (0u))), (uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))) + (0u)))) | (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) << _GLF_IDENTITY(uint(2u), uint(2u))))), ((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x) | (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)) + 1) % _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))))).y) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y) - 0u), (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u)))), 0u | ((_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))))))))) - 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y)), GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y)))), ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, uint(_GLF_IDENTITY(uvec2(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, 1u), ~ (~ (uvec2(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, 1u)))))) + 1) % _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) / uvec4(1u, 1u, 1u, 1u)).y), min((GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y), (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size)).y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y))))) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), (uint(_GLF_IDENTITY(0u, 0u + (0u)))) | (uint(_GLF_IDENTITY(0u, 0u + (0u))))))) << _GLF_IDENTITY(uint(2u), uint(2u)))))) + (1u ^ 1u)), (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, (subgroup_id * GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y) + 0u) + (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, clamp(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y)), (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y) / 1u))))), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y), ~ (~ ((GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y)))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), ~ (~ (uvec4(6u)))), (uvec4(0u, 0u, 0u, 0u) & uvec4(172800u, 1762u, 166274u, 169990u)) | (_GLF_IDENTITY(uvec4(6u), ~ (~ (uvec4(6u)))))))) ^ (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size)).y, _GLF_IDENTITY(max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, uint(uvec4(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, 1u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y))), min(_GLF_IDENTITY(max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y), (max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y)) / (0u ^ 1u)), max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y)))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y))))))) / 1u), _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x) / 1u)) | 0u), ~ (~ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)))) >> _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm2x16(injectionSwitch)) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))), min(false ? _GLF_FUZZED(packSnorm2x16(injectionSwitch)) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))), false ? _GLF_FUZZED(packSnorm2x16(injectionSwitch)) : _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))))), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))))) + 1) % _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))), 0u, 0u)).y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))), 0u, 0u)).y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))), 0u, 0u)).y))))), min(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))), 0u, 0u)).y))))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))), 0u, 0u)).y))))))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))), 0u, 0u)).y))))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))), 0u, 0u)).y))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))), 0u, 0u)).y))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))), 0u, 0u)).y))))), uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))), 0u, 0u)).y))))), 1u, 1u, 1u)))) + 0u)))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, 1u * (2u)), 2u)), (_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, 1u * (2u)), 2u))) << 0u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), clamp((0u << _GLF_IDENTITY(uint(2u), uint(2u))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) | 0u)), (_GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x) / 1u), (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, max(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)), GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 1u * (0u))))), uint(uvec4(0u, 1u, _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(workgroup_size))), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))))) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, uint(uvec4(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, 0u, 0u, 0u))), (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u ^ (_GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))), (true ? (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u ^ (_GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) : _GLF_FUZZED(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size))) | uvec4(0u, 0u, 0u, 0u)).y)))))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec2(_GLF_IDENTITY(2u, (2u) | (_GLF_IDENTITY(2u, (2u) ^ 0u))), (1u ^ 1u))))), uint(_GLF_IDENTITY(2u, min(2u, 2u)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)), _GLF_IDENTITY((((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, min(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, clamp(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)), GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, clamp(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid) << uvec2(0u, 0u)).x, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)))), _GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)), max(~ (~ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)), _GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)), min(~ (~ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)), ~ (~ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)))))))) >> _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))))) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))) % _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size)).y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) | uvec4(0u, 0u, 0u, 0u))) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? -1.9 : -1.1)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3708.1280)), bvec2(true, false))).x), _GLF_ZERO(0.0, injectionSwitch.x))).y, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, 0u, 0u, 0u)).y)), ((~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, 0u, 0u, 0u)).y))) >> 0u))))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, min(2u, 2u)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u))), ((((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, min(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, clamp(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)), GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, clamp(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid) << uvec2(0u, 0u)).x, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)))), _GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)), max(~ (~ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)), _GLF_IDENTITY(~ (~ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)), min(~ (~ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)), ~ (~ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)))))))) >> _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))))) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1))) % _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size)).y, max(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) | uvec4(0u, 0u, 0u, 0u))) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? -1.9 : -1.1)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3708.1280)), bvec2(true, false))).x), _GLF_ZERO(0.0, injectionSwitch.x))).y, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, 0u, 0u, 0u)).y)), ((~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))) | uvec4(0u, 0u, 0u, 0u)).y))) >> 0u))))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, min(2u, 2u)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | 0u)))) - (1u ^ 1u)) / 1u)) | 0u)))) / _GLF_IDENTITY(1u, 1u * (1u)));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) << 0), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), max(0 << _GLF_IDENTITY(int(3), int(3)), 0 << _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | 0), int(ivec3(0 << _GLF_IDENTITY(int(3), int(3)), 1, 1))), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), 0 ^ (0 << _GLF_IDENTITY(int(3), int(3))))))) ^ 0))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          break;
         return;
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = ((_GLF_IDENTITY(0 ^ 0, _GLF_IDENTITY(min(_GLF_IDENTITY(0 ^ 0, 0 | (0 ^ 0)), 0 ^ 0), min(_GLF_IDENTITY(min(_GLF_IDENTITY(0 ^ 0, 0 | (0 ^ 0)), 0 ^ 0), (min(_GLF_IDENTITY(0 ^ 0, 0 | (0 ^ 0)), 0 ^ 0)) * 1), min(_GLF_IDENTITY(0 ^ 0, _GLF_IDENTITY(0, ~ (~ (0))) | (0 ^ 0)), 0 ^ 0))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 1 * (_GLF_IDENTITY(int(0), ~ (~ (_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))))))))) >> _GLF_IDENTITY(int(0), int(0)), int(int((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 1 * (_GLF_IDENTITY(int(0), ~ (~ (_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))))))), 0 ^ (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 1 * (_GLF_IDENTITY(int(0), ~ (~ (_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))))))))))) >> _GLF_IDENTITY(int(0), int(0))))))); _injected_loop_counter ++)
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-87897) : 1))), (true ? _GLF_IDENTITY(uint(1), clamp(_GLF_IDENTITY(uint(1), min(uint(1), uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) * 1)))), uint(1), uint(1))) : _GLF_FUZZED(uaddCarry(num_workgroup, subgroup_id, workgroup_base)))), 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))).y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          continue;
         barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = (-42389 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, cos(0.0), _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))), 1.0, 1.0)), clamp(vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0), _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))), 1.0, 1.0)), vec2(mat4x2(injectionSwitch, 0.0, 0.0, cos(0.0), _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))), 1.0, 1.0)), vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(0.0))), float(mat2x3(float(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(0.0))), 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) + abs(0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_FUZZED(-77.12)), float(min(0.0, 0.0)), bool(true)))))), 0.0, cos(0.0), _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))), 1.0, 1.0))))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 0.0))).y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) || false)))) || false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(! ((false)), true && (! ((false))))), bool(_GLF_IDENTITY(bvec2(false || (_GLF_IDENTITY(! ((false)), true && (! ((false))))), false), bvec2(bvec3(bvec2(false || (_GLF_IDENTITY(! ((false)), true && (! ((false))))), false), false))))), false || (false || (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(true && (! ((false))), bool(bvec3(_GLF_IDENTITY(true && (! ((false))), ! (! (true && (! ((false)))))), true, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(! ((false)), true && (! (_GLF_IDENTITY((false), false || ((false))))))), bool(_GLF_IDENTITY(bvec2(false || (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(true && (! ((false))), (true && (! ((false)))) || false))), false), bvec2(bvec3(bvec2(false || (_GLF_IDENTITY(! ((false)), true && (! ((false))))), false), false))))), false || (false || (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(true && (! ((false))), bool(bvec3(_GLF_IDENTITY(true && (! ((false))), ! (! (true && (! ((false)))))), true, true)))))))) || false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bool(true))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bool(true))))), (_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bool(true))))), ! (! ((_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bool(true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bool(true))))), (_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bool(true))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ((false)) && _GLF_IDENTITY(true, bool(bool(true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! _GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), (((false))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), (((false))) && true)))), ! (! (! (_GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), (((false))) && true)))))))))))), ((_GLF_IDENTITY(! ((false)), true && (! ((false)))))) || false), (false || _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! _GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), ((_GLF_IDENTITY((false), ((false)) || false))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), ((_GLF_IDENTITY((false), bool(bvec4((false), true, false, false))))) && true)))), ! (! (! (_GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), ((_GLF_IDENTITY((false), ! (! ((false)))))) && true)))))))))))), ((_GLF_IDENTITY(! ((false)), true && (! ((false)))))) || false)) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true) || _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! _GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), (((false))) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), (((false))) && true)))), ! (! (! (_GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), (((false))) && true))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(((false)), (((false))) && true), (_GLF_IDENTITY(((false)), _GLF_IDENTITY((((false))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((((false))) && true)))) || false)))), ! (! (! (_GLF_IDENTITY(((false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(((false)), (((false))) && true)), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec4(((false)), false, false, true)), ! (! (bool(bvec4(((false)), false, false, true)))))), (((false))) && true))))))))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(! ((false)), true && _GLF_IDENTITY((! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), (((false))) && true)), ! (! (bool(_GLF_IDENTITY(((false)), (((false))) && true)))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), (((false))) && true)), ! (! (bool(_GLF_IDENTITY(((false)), (((false))) && true)))))), true)), false || (bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), (((false))) && true)), ! (! (bool(_GLF_IDENTITY(((false)), (((false))) && true)))))), true))))))), bool(_GLF_IDENTITY(bool((! ((false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((! ((false))), ((! ((false)))) && true)), ! (! (bool(_GLF_IDENTITY((! ((false))), ((! ((false)))) && true))))))))))))), true && (((_GLF_IDENTITY(! ((false)), true && _GLF_IDENTITY((! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), (((false))) && true)), ! (! (bool(_GLF_IDENTITY(((false)), (((false))) && true)))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), (((false))) && true)), ! (! (bool(_GLF_IDENTITY(((false)), (((false))) && true)))))), true)), false || (bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((false)), (((false))) && true)), ! (! (bool(_GLF_IDENTITY(((false)), (((false))) && true)))))), true))))))), bool(_GLF_IDENTITY(bool((! ((false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((! ((false))), ((! ((false)))) && true)), ! (! (bool(_GLF_IDENTITY((! ((false))), ((! ((false)))) && true))))))))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (0 & -73392) | (_injected_loop_counter)), _injected_loop_counter)) != _GLF_IDENTITY(1, (1) | (1)), (_injected_loop_counter != 1) || false)); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0))) * 1.0) > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY((1 | 1), ((1 | 1)) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))), ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))) / ((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))) | (~ (0)))))))) >> _GLF_IDENTITY(int(0), int(0)))) | 0)); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
        }
       barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(7374.7854) : _GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))), (injectionSwitch.x))))) + 0.0) > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
        }
       else
        {
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
      {
       GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x = read_1;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false)) && true))
    barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y, (true ? _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y, (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), max(_GLF_FUZZED(next_virtual_gid), _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), _GLF_IDENTITY((_GLF_FUZZED(next_virtual_gid)) | (_GLF_FUZZED(next_virtual_gid)), ((_GLF_FUZZED(next_virtual_gid)) | (_GLF_FUZZED(next_virtual_gid))) << 0u))))))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (_GLF_IDENTITY(0u, max(0u, 0u)))))], _GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)) - 0, max(((4)) - 0, ((4)) - 0))) / 1), 64, 0);
 if(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, max(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid)).x + 1 < GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.y)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2), (uint(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1, 4, 64, 4);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec3((false), false, true)))))), (! (false)) || false)))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
    }
   else
    {
    }
   subgroupAll(false);
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
      return;
    }
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(5.8), _GLF_FUZZED(-1.0)), vec2(mat4x2(vec2(_GLF_FUZZED(5.8), _GLF_FUZZED(-1.0)), 0.0, 0.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))), bvec2(false, false))), min(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) / exp(vec2(0.0, 0.0))))), _GLF_IDENTITY(vec2(mat4x2(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0)), max(vec2(mat4x2(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), vec2(mat4x2(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0)))))))).x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false)))))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.8))), (false ? _GLF_FUZZED(5.1) : injectionSwitch.x))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.8))), (false ? _GLF_FUZZED(5.1) : injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.8))), (false ? _GLF_FUZZED(5.1) : injectionSwitch.x))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.8))), (false ? _GLF_FUZZED(5.1) : injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.8))), (false ? _GLF_FUZZED(5.1) : injectionSwitch.x))) - 0.0)) / 1.0))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.9), _GLF_FUZZED(91.76)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) + (0 ^ 0))], ((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))]) / 1.0), (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
              return;
             continue;
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? int(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(_injected_loop_counter)))))), int(ivec2(~ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? int(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(_injected_loop_counter)))))), 1)))))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))))));
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0))
          {
           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))
              return;
            }
          }
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             else
              {
              }
            }
          }
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ 0)); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) != 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (_GLF_IDENTITY(-19256, int(ivec4(_GLF_IDENTITY(-19256, (true ? -19256 : _GLF_FUZZED(14943))), 1, 1, 1))) & _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) / int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-511.612)))) - 0.0) : _GLF_FUZZED(807.521))), injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(_GLF_IDENTITY(56944, (56944) ^ (0 << _GLF_IDENTITY(int(8), int(8))))) : int(5))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false))))))
            barrier();
          }
        }
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), int(ivec4(0 ^ (1), 0, 0, 0))))) | 0), (_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, max(1, 1))))) | 0), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(0), int(0)))), 0 ^ (1))) | 0), clamp(uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0), uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) | uvec4(0u, 0u, 0u, 0u)).x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0), uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(0), int(0)))), 0 ^ (1))) | 0), clamp(uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0), uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) | uvec4(0u, 0u, 0u, 0u)).x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0), uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0))), _GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(0), int(0)))), 0 ^ (1))) | 0), clamp(uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0), uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) | uvec4(0u, 0u, 0u, 0u)).x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0), uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0))), _GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(0), int(0)))), 0 ^ (1))) | 0), clamp(uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0), uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size) | uvec4(0u, 0u, 0u, 0u)).x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0), uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2, true && (GLF_merged4_0_1_6_1_1_13_2_1_14_3_1_14read_1subgroup_sizeworkgroup_baseworkgroup_size.x == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0)))))))) << 0u), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (_GLF_IDENTITY(max(64, 64), ~ (~ (max(64, 64))))) - 0)), 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       subgroupAll(true);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, sin(length(vec2(0.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-15.29))), 0.0, length(vec2(0.0, 0.0)))), max(float(mat4x2(injectionSwitch.x, 1.0, 0.0, sin(length(vec2(0.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-15.29))), 0.0, length(vec2(0.0, 0.0)))), float(mat4x2(injectionSwitch.x, 1.0, 0.0, sin(length(vec2(0.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-15.29))), 0.0, length(vec2(0.0, 0.0)))))), (float(mat4x2(injectionSwitch.x, 1.0, 0.0, sin(length(vec2(0.0, 0.0))), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))) + _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-294.662) : 0.0)), injectionSwitch.x))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false)))
          return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
  }
}
