#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2;
 uvec4 GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id;
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base;
 GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2.xyz = GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base;
 uvec4 GLF_merged3_0_2_48_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidread_2;
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged3_0_2_48_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidread_2.xy = GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.xy;
  }
 else
  {
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.w = subgroup_id;
 GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2.xyz.x = GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.w;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z = GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2.xyz.x;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2.xyz.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))
  {
   GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.z = num_workgroup;
  }
 else
  {
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.y = GLF_merged3_0_2_48_2_1_13_3_1_11GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnum_workgroupsubgroup_id.z;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged3_0_2_48_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidread_2.xy.y = workgroup_id;
    }
  }
 uint workgroup_base = workgroup_size * GLF_merged3_0_2_48_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidread_2.xy.y;
 GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2.xyz.z = workgroup_base;
 uint virtual_gid = GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2.xyz.z + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2.xyz.y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w;
 do
  {
   GLF_merged3_0_2_48_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidread_2.xy.x = virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2.xyz.z + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.z * GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2.xyz.y + ((GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1) % GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2.xyz.y);
 GLF_merged3_0_2_48_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidread_2.z = next_virtual_gid;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x = GLF_merged3_0_2_48_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidread_2.z;
    }
   else
    {
    }
  }
 do
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_1 = atomicLoad(buf[GLF_merged3_0_2_48_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidread_2.xy.x], 4, 64, 0);
 uint read_2 = atomicLoad(buf[GLF_merged3_0_2_48_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidread_2.xy.x], 4, 64, 0);
 GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2.w = read_2;
 GLF_merged3_0_2_48_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidread_2.w = GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2.w;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) - 0)))); _injected_loop_counter --)
  {
   if(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.w + 1 < GLF_merged2_0_3_70_3_1_6GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_baseread_2.xyz.y)
    {
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x], uint(read_1 == GLF_merged3_0_2_48_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidread_2.w) + 1, 4, 64, 4);
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       subgroupAll(false);
      }
    }
   else
    {
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidnum_workgroupsubgroup_idsubgroup_local_id.x], uint(read_1 == GLF_merged3_0_2_48_2_1_16_3_1_6GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idnext_virtual_gidread_2.w) + 1, 4, 64, 4);
     subgroupAll(true);
    }
  }
}
