#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) : _GLF_FUZZED(round(vec2(-196.036, 725.085))), mat2(1.0) * (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) : _GLF_FUZZED(round(vec2(-196.036, 725.085))))))).x, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) : _GLF_FUZZED(round(vec2(-196.036, 725.085))), mat2(1.0) * (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))) : _GLF_FUZZED(round(vec2(-196.036, 725.085))))))).x : _GLF_FUZZED(-25.11))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(211.432), _GLF_FUZZED(8276.2447)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, exp(0.0), 1.0, sin(0.0)))), mix(vec2(_GLF_FUZZED(-63.59), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(round(vec2(-196.036, 725.085))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(8.3)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))) || false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), max(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), min(uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), clamp(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups))))))))), gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))) * (gl_NumWorkGroups)).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)))).x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) * (gl_NumWorkGroups)).x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u)))) * (gl_NumWorkGroups)).x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x)))))), 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size, subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (bool(true))))), false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (bool(true))))))))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-7.5), max(_GLF_IDENTITY(_GLF_FUZZED(-7.5), clamp(_GLF_FUZZED(-7.5), _GLF_IDENTITY(_GLF_FUZZED(-7.5), clamp(_GLF_FUZZED(-7.5), _GLF_FUZZED(-7.5), _GLF_FUZZED(-7.5))), _GLF_FUZZED(-7.5))), _GLF_IDENTITY(_GLF_FUZZED(-7.5), mix(float(_GLF_FUZZED(-7.5)), float(_GLF_FUZZED((false ? -3.5 : -738.545))), bool(false)))))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_IDENTITY(bool(true), false || (bool(true))))))) ? workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), subgroup_id)) * subgroup_size : _GLF_FUZZED(workgroup_base)) / 1u))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) << 0u), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base), ~ (~ (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)))))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) * 1u))) / 1u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)), min((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base))))) * 1u), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u | (1u))))))), ((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u | (1u)))))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) / 1u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) << 0u), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base), ~ (~ (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)))))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) * 1u))) / 1u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)), min((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base))))) * 1u), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u | (1u))))))), ((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))), false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) * _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u | (1u)))))))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) / 1u))))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_id)) | ((false ? _GLF_FUZZED(num_workgroup) : subgroup_id))), uint(uvec4(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), ((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uint(_GLF_FUZZED(num_workgroup)), uint(uint(uint(_GLF_FUZZED(num_workgroup))))))), _GLF_FUZZED(num_workgroup))) : subgroup_id)) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup))) : subgroup_id))), 1u, _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) ^ 0u)))), 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_id)) | ((false ? _GLF_FUZZED(num_workgroup) : subgroup_id))), 1u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_id)) | ((false ? _GLF_FUZZED(num_workgroup) : subgroup_id))), 1u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_id), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_id)) | ((false ? _GLF_FUZZED(num_workgroup) : subgroup_id))), 1u, 1u, 0u))) ^ 0u)) - 0u)) : _GLF_FUZZED(atomicExchange(virtual_gid, subgroup_size))))) * subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y), bool(true))))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u ^ (_GLF_FUZZED(workgroup_base))), _GLF_FUZZED(workgroup_base))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true)))) || false))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)) ^ 0u))) + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec2(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true))), true))), false), true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED(8110.9323)), bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(_GLF_IDENTITY(((false)), (((false))) && true), false || (((false))))) || false)))))))))))).y)))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(false), true))), true, false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))))))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true)))) && true)) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0)), max(float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0)), float(vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0)))) / 1.0), 1.0), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0) * (vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0))), vec4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0))))), 0.0, 0.0))))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0)), max(float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0)), float(vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0)))) / 1.0), 1.0), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0) * (vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0))), vec4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0))))), 0.0, 0.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0)), max(float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0)), float(vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0)))) / 1.0), 1.0), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0) * (vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0))), vec4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0))))), 0.0, 0.0))))) > injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0)), max(float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0)), float(vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0)))) / 1.0), 1.0), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0) * (vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0))), vec4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0))))), 0.0, 0.0))))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0)), max(float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0)), float(vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0)))) / 1.0), 1.0), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0) * (vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0))), vec4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0))))), 0.0, 0.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0)), max(float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0)), float(vec4(injectionSwitch.x, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0)))) / 1.0), 1.0), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0) * (vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0))), vec4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0))))), 0.0, 0.0))))) > injectionSwitch.y))))))), false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), true, true, true))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), true, true, _GLF_IDENTITY(true, (true) && true))))) || false)), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))), true))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bool(true))), true)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, true, true, true)))), ! (! (bool(bvec4(false, true, true, true)))))) || false, false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, true, true, true)))), ! (! _GLF_IDENTITY((bool(bvec4(false, true, true, true))), bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, true)))), ! (_GLF_IDENTITY(! (bool((bool(bvec4(false, true, true, true))))), (! (bool((bool(bvec4(false, true, true, true)))))) || false)))))))) || false))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), (false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))) || false))))), false)))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))[0], _GLF_FUZZED(394.281)), vec2(_GLF_FUZZED(3926.9808), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))[1]), bvec2(false, true))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3735.8275), _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), bvec2(true, false)))[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).x > injectionSwitch.y))) && true)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)), true)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y) || false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))), _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), (subgroup_size))) / _GLF_IDENTITY(1u, 0u | (1u))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u * _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), clamp(((subgroup_size)), ((subgroup_size)), ((subgroup_size)))) + 0u)) | 0u)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), ~ (_GLF_IDENTITY(~ (1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((~ (1u * (subgroup_size))) | (~ (1u * (subgroup_size))), ~ (~ (_GLF_IDENTITY((~ (1u * (subgroup_size))) | (~ (1u * (subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (1u * (subgroup_size))) | (~ (1u * (subgroup_size)))))))), max((~ (_GLF_IDENTITY(1u * (subgroup_size), min(1u * (subgroup_size), 1u * (subgroup_size))))) | (~ (1u * (subgroup_size))), (~ (1u * (subgroup_size))) | (~ (1u * (subgroup_size))))))))) ^ 0u))))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u) / 1u), subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(read_2) : subgroup_size))))) | 0u, ((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size))) | 0u) << 0u)) : _GLF_FUZZED(workgroup_base))))
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u) + 1, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), false)), (bool(bvec2(! (_GLF_DEAD(false)), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, true, false)), true, true, false)))), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true)) || false))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bool(true))), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bool(true))), false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.4)), min((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false) ? injectionSwitch.y : _GLF_FUZZED(-8.4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-544.921, -4.0)) : injectionSwitch)).y : _GLF_FUZZED(-8.4)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.4)))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(7.8, 88.41, -202.850, -3502.1603).a)), bool(false))) < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.4))))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-11.64), _GLF_FUZZED((-224.257 / 876.018))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))).y : _GLF_FUZZED(-8.4)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))) ? injectionSwitch.y : _GLF_FUZZED(-8.4)))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-8.4))))))) || false)))))))) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (! (false))))) || false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 ^ (0))), 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), 1, 1))), clamp(clamp(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 ^ (0))), 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), 1, 1))), clamp(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 ^ (0))), 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), 1, 1))), clamp(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 ^ (0))), 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), 1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), clamp(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)))), 1)), 4, 64, _GLF_IDENTITY(4, (4) - 0));
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0)), 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(579.320) : 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(579.320) : 0.0))) * 1.0), 0.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY((2933.6768 * 2.2), min((2933.6768 * 2.2), (2933.6768 * 2.2))))), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY((2933.6768 * 2.2), min((2933.6768 * 2.2), (2933.6768 * 2.2))))), (float(_GLF_FUZZED(_GLF_IDENTITY((2933.6768 * 2.2), min((2933.6768 * 2.2), (2933.6768 * 2.2)))))) / 1.0) : _GLF_FUZZED(95.52))), float(0.0), bool(true))), 0.0, 0.0))), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))), mix(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(66.82), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_FUZZED(66.82)), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (vec4(1.0, 0.0, 0.0, 0.0)) * mat4(1.0)), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), min(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))))[1], _GLF_FUZZED((4399.1177 - 9.9)), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[3]), max(vec4(_GLF_FUZZED(66.82), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[1], _GLF_FUZZED((4399.1177 - 9.9)), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[3]), _GLF_IDENTITY(vec4(_GLF_FUZZED(66.82), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[1], _GLF_FUZZED((4399.1177 - 9.9)), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[3]), mat4(1.0) * (vec4(_GLF_FUZZED(66.82), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.9)))))), 0.0))), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[1], _GLF_FUZZED((4399.1177 - 9.9)), (_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[3]))))), vec4((_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (vec4(1.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-2166.7443), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[2], _GLF_FUZZED(8.7)), bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, _GLF_IDENTITY(false, true && (false))))))), 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), max(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0 * (_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), clamp(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), min(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)))))), max(_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), (true ? _GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-5.2, 297.302, 299.553, 9.2, 8.1, -2.2, 1299.3608, 1.3, 495.660, -516.008, -989.187, -2543.6341, -652.341, -7.6, 794.551, -910.922)))) : _GLF_FUZZED(mat4(1.1, 168.744, 925.690, 9.7, -7589.0847, -132.157, -4102.4030, 5.3, -7986.1521, 5.9, -6.5, -2.8, -0.8, -9157.4138, -2741.2472, -8480.9190))))), (determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))) - 0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), (_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), max(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0 * (_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), clamp(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), min(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)))))), max(_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), (true ? _GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-5.2, 297.302, 299.553, 9.2, 8.1, -2.2, 1299.3608, 1.3, 495.660, -516.008, -989.187, -2543.6341, -652.341, -7.6, 794.551, -910.922)))) : _GLF_FUZZED(mat4(1.1, 168.744, 925.690, 9.7, -7589.0847, -132.157, -4102.4030, 5.3, -7986.1521, 5.9, -6.5, -2.8, -0.8, -9157.4138, -2741.2472, -8480.9190))))), (determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))) - 0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), min(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), max(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0 * (_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), clamp(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), min(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)))))), max(_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), (true ? _GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-5.2, 297.302, 299.553, 9.2, 8.1, -2.2, 1299.3608, 1.3, 495.660, -516.008, -989.187, -2543.6341, -652.341, -7.6, 794.551, -910.922)))) : _GLF_FUZZED(mat4(1.1, 168.744, 925.690, 9.7, -7589.0847, -132.157, -4102.4030, 5.3, -7986.1521, 5.9, -6.5, -2.8, -0.8, -9157.4138, -2741.2472, -8480.9190))))), (determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))) - 0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), max(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0 * (_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), clamp(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), min(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)))))), max(_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), (true ? _GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-5.2, 297.302, 299.553, 9.2, 8.1, -2.2, 1299.3608, 1.3, 495.660, -516.008, -989.187, -2543.6341, -652.341, -7.6, 794.551, -910.922)))) : _GLF_FUZZED(mat4(1.1, 168.744, 925.690, 9.7, -7589.0847, -132.157, -4102.4030, 5.3, -7986.1521, 5.9, -6.5, -2.8, -0.8, -9157.4138, -2741.2472, -8480.9190))))), (determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))) - 0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))))) / 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-1.0)), bool(false)), max(mix(float(0.0), float(_GLF_FUZZED(-1.0)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(-1.0)), bool(false))))), 1.0)), mix(float(float(mat4x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0)), 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(579.320) : 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(579.320) : 0.0))) * 1.0), 0.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((mix(-5.6, 7154.7637, -3726.9366) + (- -31.99))) : 0.0)), 0.0, 1.0)), 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((2933.6768 * 2.2))), float(0.0), bool(true))), 0.0, 0.0))), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))), mix(_GLF_IDENTITY(vec4(_GLF_FUZZED(66.82), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[1], _GLF_FUZZED((4399.1177 - 9.9)), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[3]), max(vec4(_GLF_FUZZED(66.82), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[1], _GLF_FUZZED((4399.1177 - 9.9)), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((vec4(1.0, 0.0, 0.0, 0.0)), mix(vec4(((vec4(1.0, 0.0, 0.0, 0.0)))[0], _GLF_FUZZED(9.3), ((vec4(1.0, 0.0, 0.0, 0.0)))[2], _GLF_FUZZED(-65.84)), vec4(_GLF_FUZZED(5.7), ((vec4(1.0, 0.0, 0.0, 0.0)))[1], _GLF_FUZZED(8.2), ((vec4(1.0, 0.0, 0.0, 0.0)))[3]), bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), (false ? _GLF_FUZZED(mix(vec4(-5.4, 91.67, 378.137, -7.8), vec4(6.8, 6.2, -1.0, 5.3), -788.826)) : (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((vec4(1.0, 0.0, 0.0, 0.0)), mix(vec4(((vec4(1.0, 0.0, 0.0, 0.0)))[0], _GLF_FUZZED(9.3), ((vec4(1.0, 0.0, 0.0, 0.0)))[2], _GLF_FUZZED(-65.84)), vec4(_GLF_FUZZED(5.7), ((vec4(1.0, 0.0, 0.0, 0.0)))[1], _GLF_FUZZED(8.2), ((vec4(1.0, 0.0, 0.0, 0.0)))[3]), bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))[3]), _GLF_IDENTITY(vec4(_GLF_FUZZED(66.82), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[1], _GLF_FUZZED((4399.1177 - 9.9)), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[3]), mat4(1.0) * (vec4(_GLF_FUZZED(66.82), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0), max((_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0))))), mix(vec4(((_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0), max((_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0))))))[0], _GLF_FUZZED(-2.9), _GLF_FUZZED(97.63), ((_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0), max((_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0))))))[3]), vec4(_GLF_FUZZED(-66.03), ((_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0), max((_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0))))))[1], ((_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0), max((_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0)))) * mat4(1.0))))))[2], _GLF_FUZZED(-8.1)), bvec4(false, true, true, false)))[1], _GLF_FUZZED((4399.1177 - 9.9)), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, 0.0))))[3]))))), vec4((_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (vec4(1.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-2166.7443), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5640.0707)), float(0.0), bool(true)))) + 0.0)))))[2], _GLF_FUZZED(8.7)), bvec4(true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, false))))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0 * (_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), clamp(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), min(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0))))), 0.0 + (max(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat3x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0)), 1.0 * (_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), clamp(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, exp(0.0), 1.0, abs(1.0)))) : _GLF_FUZZED(-28.80))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), min(determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)))))))), max(_GLF_IDENTITY(determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(49.26)), float(0.0), bool(true)))) + length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), mat4(1.0) * (mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(49.26)), float(0.0), bool(true)))) + length(vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), (true ? _GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), (true ? mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-5.2, 297.302, 299.553, 9.2, 8.1, -2.2, 1299.3608, 1.3, 495.660, -516.008, -989.187, -2543.6341, -652.341, -7.6, 794.551, -910.922)))) : _GLF_FUZZED(mat4(1.1, 168.744, 925.690, 9.7, -7589.0847, -132.157, -4102.4030, 5.3, -7986.1521, 5.9, -6.5, -2.8, -0.8, -9157.4138, -2741.2472, -8480.9190))))), (determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / determinant(mat3(1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, sin(0.0), 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))) - 0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.0)), bool(false))), 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-7.4), float(mat2(_GLF_FUZZED(-7.4), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-7.4), float(mat2(_GLF_FUZZED(-7.4), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), (true ? float(_GLF_IDENTITY(_GLF_FUZZED(-7.4), float(mat2(_GLF_FUZZED(-7.4), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(-36.34)))), bool(true))), bool(false)))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))), true)), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_IDENTITY(true, true && (true))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))))))))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true)))))))))))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), (true) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec4(! ((true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))) && true)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))) && true))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))) && true)))) || false)))))), false), bvec3(bvec4(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), max(vec2(vec4(injectionSwitch, 1.0, 1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), max(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), min(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(vec4(injectionSwitch, 1.0, 1.0)))), vec2(vec4(injectionSwitch, 1.0, 1.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
