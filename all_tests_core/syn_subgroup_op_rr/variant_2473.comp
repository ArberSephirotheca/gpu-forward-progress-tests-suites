#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 40:
     for(mat3x4 _GLF_SWITCH_0_0v[91]; true; mat3x2(-78.56, -9.5, 411.245, -5304.1637, 9.0, _GLF_IDENTITY(-521.642, mix(float(-521.642), float(_GLF_FUZZED(96.68)), bool(false)))))
      {
       if((uvec2(130729u, 84512u) != _GLF_IDENTITY(uvec2(14158u, 34918u), uvec2(uvec3(uvec2(14158u, 34918u), 0u)))))
        {
         mat3x4 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v[37];
         if(true)
          {
           mat3x4 _GLF_SWITCH_0_4v;
           uvec3 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
            barrier();
           ivec2(-74540, -88497);
           vec3 _GLF_SWITCH_0_8v;
           ivec4 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v[90];
          }
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + (1 ^ 1)))
          {
           ivec3 _GLF_SWITCH_0_11v;
          }
         if(_GLF_DEAD(false))
          barrier();
         {
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            do
             {
              barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          switch(_GLF_SWITCH(0))
           {
            case 52:
            mat3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
            case 0:
            if(_GLF_DEAD(false))
             barrier();
            case 75:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              do
               {
                barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            if(_GLF_DEAD(false))
             break;
            ;
            do
             {
              switch(_GLF_SWITCH(0))
               {
                case 47:
                bitfieldExtract(uvec4(189674u, 35660u, 101375u, 58721u), findMSB(96024), 96281);
                case 0:
                outerProduct(vec4(-830.995, 7.3, -39.93, -2119.3934), vec4(7.4, -5.1, 7.9, 58.67));
                break;
                case 54:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                ivec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                default:
                1;
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_DEAD(false))
             barrier();
            mat4x2(378.442, -13.53, 5.7, 9.5, -2.4, 0.0, -9.0, -7.4);
            case 61:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               break;
              continue;
              if(_GLF_DEAD(false))
               barrier();
             }
            case 9:
            if(_GLF_DEAD(false))
             barrier();
            break;
            case 18:
            ivec4(-12697, _GLF_IDENTITY(-30568, ~ (~ (-30568))), -79146, -4941);
            default:
            if(_GLF_DEAD(false))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                barrier();
               }
              else
               {
               }
             }
            1;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              continue;
             }
           }
          if(_GLF_DEAD(false))
           barrier();
         }
         {
          bvec2 _GLF_SWITCH_0_12v;
          if(_GLF_DEAD(false))
           {
            do
             {
              barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
           barrier();
          (128723u ^ (uvec4(15942u, 60815u, 12416u, 188139u) / uvec4(66538u, 96065u, 196760u, 47464u)));
          vec2 _GLF_SWITCH_0_13v[67];
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          bvec4 _GLF_SWITCH_0_14v;
          mat2x3 _GLF_SWITCH_0_15v[98], _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
             barrier();
           }
          mat4x2 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
          if(_GLF_DEAD(false))
           {
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
             barrier();
            do
             {
              switch(_GLF_SWITCH(0))
               {
                case 18:
                mat2 _GLF_SWITCH_2_0v;
                case 0:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                case 93:
                case 9:
                case 6:
                case 22:
                case 30:
                if(_GLF_DEAD(false))
                 continue;
                case 58:
                case 33:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 break;
                case 73:
                return;
                break;
                default:
                1;
                if(_GLF_DEAD(false))
                 return;
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          ivec3(35881, 94498, 80928);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          vec3 _GLF_SWITCH_0_20v[4], _GLF_SWITCH_0_21v;
          ;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
         }
         {
          if(_GLF_DEAD(false))
           continue;
          mat3x2 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          uvec4 _GLF_SWITCH_0_24v[35], _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
          if(_GLF_DEAD(false))
           barrier();
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       mat3x4 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[70];
       if(false)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         for(         ldexp(uintBitsToFloat(uvec2(42746u, 73860u)), ivec2(78009, 92810));
 (_GLF_IDENTITY(mat3x2(-817.381, -3014.8500, -4493.0160, 0.6, -2.8, -584.015) != mat3x2(3.2, 6.1, 8.5, -4459.0569, 64.27, 89.63), true && (mat3x2(-817.381, -3014.8500, -4493.0160, 0.6, -2.8, -584.015) != mat3x2(3.2, 6.1, 8.5, -4459.0569, 64.27, 89.63)))); _GLF_SWITCH_0_28v)
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             ;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           ((ivec3(84613, 25246, -79179) , mat2x4(7225.6978, 9.1, -6.5, 8.1, -77.58, 2.7, 3498.6038, -972.046)) / mat2x4(224.288, 7748.1005, 7.7, 5011.2653, -7038.9666, -73.40, 2.8, 4.9));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           mat2x4 _GLF_SWITCH_0_30v[15], _GLF_SWITCH_0_31v[13];
           ivec4 _GLF_SWITCH_0_32v[6], _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
           (_GLF_IDENTITY((uvec3(171616u, 180767u, 94446u) & uvec3(100009u, 119612u, 65100u)) & 182789u, (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)) * (_GLF_IDENTITY((uvec3(171616u, 180767u, 94446u) & uvec3(100009u, 119612u, 65100u)) & 182789u, ~ (~ ((uvec3(171616u, 180767u, 94446u) & uvec3(100009u, 119612u, 65100u)) & 182789u))))));
           mat3 _GLF_SWITCH_0_35v[57], _GLF_SWITCH_0_36v[50], _GLF_SWITCH_0_37v;
           if(_GLF_DEAD(false))
            barrier();
          }
         vec2 _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v[69];
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         ;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       while((mat3x2(925.752, -22.20, 13.83, -99.98, -962.727, -2313.1837) == mat3x2(-4052.5265, -5.1, -4891.9062, -9024.4782, -16.75, 55.90)))
        {
         mat3x2 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v[89];
         while(equal(vec4(5.5, -61.68, 0.8, 721.705), vec4(7823.0649, -6019.0455, -3.8, 81.74))[2])
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           false;
           mat4(-16.25, -267.880, 15.09, -80.95, -1.9, 5.2, 1654.3839, 7.5, -7.0, -51.03, -691.130, 5.3, 2.1, -4.9, -719.039, -6.9);
           if(_GLF_DEAD(false))
            barrier();
           bvec2(bvec4(true, false, true, true));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           uvec4(194046u, 73854u, 71307u, 160411u);
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         ;
         do
          {
           for(bvec4 _GLF_SWITCH_0_43v[69], _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v[45]; (mat4x2(-8369.4935, 795.118, -5.0, 3428.3643, _GLF_IDENTITY(_GLF_IDENTITY(72.25, (72.25) / sqrt(1.0)), (true ? 72.25 : _GLF_FUZZED(-3932.5360))), -9020.0246, 366.500, 24.49) != mat4x2(-932.715, 0.4, 2.5, -7.5, -1.3, _GLF_IDENTITY(6.3, max(6.3, _GLF_IDENTITY(6.3, mix(float(6.3), float(_GLF_FUZZED(-7.4)), bool(false))))), 5.3, 0.8)); 67992)
            {
             true;
             uvec4(39381u, 33508u, 103078u, 171309u);
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
              {
               5743.5332;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat4x2 _GLF_SWITCH_0_46v[85];
             clamp(-79665, 62171, 47788);
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         {
          bvec3 _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v;
          mat2 _GLF_SWITCH_0_49v[3], _GLF_SWITCH_0_50v;
          ;
          45298;
         }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         uvec2(158536u, 142520u);
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         while(all(bvec2(false, false)))
          {
           if((clamp(vec2(-5608.8818, -338.245), injectionSwitch, vec2(73.44, -63.85)) != vec2(-4.2, 6.5)))
            {
             bvec2 _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v, _GLF_SWITCH_0_53v;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               vec4(-96.53, 1.6, -5415.1182, 0.8);
              }
             else
              {
              }
             58732;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             ;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(true)
            {
             mat3x4 _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v;
             _GLF_IDENTITY(true, (true) || false);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat4(mat3(-9127.8175, -6.7, -6.0, 58.79, -750.500, 68.84, 4.6, -369.916, 7661.5463));
             if(_GLF_DEAD(false))
              break;
             vec3 _GLF_SWITCH_0_57v[4], _GLF_SWITCH_0_58v, _GLF_SWITCH_0_59v[84];
            }
           for(uvec4 _GLF_SWITCH_0_60v; false; greaterThanEqual(uvec3(14038u, 147979u, 78778u), uvec3(191778u, 98898u, 146591u)))
            {
             (7.4 / mat3x2(5.4, 3956.2912, -2112.4323, 5.0, -883.486, -7.5));
             vec4 _GLF_SWITCH_0_61v, _GLF_SWITCH_0_62v[20], _GLF_SWITCH_0_63v[87];
             mat4 _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v, _GLF_SWITCH_0_66v;
            }
          }
        }
       else
        {
        }
       float _GLF_SWITCH_0_67v, _GLF_SWITCH_0_68v[81], _GLF_SWITCH_0_69v;
       mat2x4 _GLF_SWITCH_0_70v[6], _GLF_SWITCH_0_71v;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       else
        {
        }
       {
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 1.0))).y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > injectionSwitch.y)), true && (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))))
         {
         }
        else
         {
          do
           {
            mat3(-778.748, -9205.7149, 17.38, 5544.4153, 8581.2483, 5.6, -14.57, 3.1, 3142.3772);
           }
          while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y))))
         continue;
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         continue;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
       }
      }
     if(_GLF_DEAD(false))
      return;
     case 0:
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 42:
         case 91:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 30:
         case 39:
         case 22:
         case 37:
         case 72:
         case 43:
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         break;
         case 90:
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(false)
            {
             isinf(radians(vec2(-9.1, -138.703)));
             (mat3x2(-9.9, 3.5, -824.314, 6822.8954, -9.4, -84.84) != mat3x2(vec2(1.0, -8399.5744), vec2(-4.2, 57.79), vec2(-94.48, -1.0)));
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
              barrier();
             if((float(true) != -1.6))
              {
               ivec3(83782, 93534, -596);
               bvec3(true, true, false);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
               bvec4(true, false, true, true);
               uvec2(151065u, 75148u);
               ;
               (mat2(-57.56, 9.3, 461.716, -425.967) + -6306.9504);
              }
             {
              notEqual((_GLF_IDENTITY(uvec2(149562u, 96794u), max(_GLF_IDENTITY(uvec2(149562u, 96794u), min(_GLF_IDENTITY(uvec2(149562u, 96794u), uvec2(0u, 0u) | (uvec2(149562u, 96794u))), uvec2(149562u, 96794u))), uvec2(149562u, 96794u))) >> 199716u), uvec2(166505u, 48022u));
              mat4x3(-819.355, 71.17, 87.51, 8.8, -69.71, -43.81, -6.9, 5.0, -89.88, -69.54, 2.7, -416.131);
              if(_GLF_DEAD(false))
               barrier();
              vec3(-9.5, 9066.5650, -620.631);
              mat2x3(-0.8, -8278.0373, -0.6, -91.35, -9.4, 8.2);
              mat4x3(190.191, 8065.3437, 1.7, -6777.7488, -1968.5052, 54.18, _GLF_IDENTITY(-290.710, mix(float(-290.710), float(_GLF_FUZZED(-545.482)), bool(false))), 679.580, 226.371, -4965.7224, -72.82, 5.8);
             }
             float _GLF_SWITCH_2_0v;
             atan((mat4(0.4, 36.68, -2.3, -1.6, -6.0, -0.3, -2.3, -5509.6477, -86.44, 1.4, -4538.8707, 350.283, 32.79, -36.65, 99.66, -9.0) * vec4(-3.9, 6497.0318, 2.2, 3672.2889)), mix(vec4(-6147.8825, _GLF_IDENTITY(-5.3, mix(float(_GLF_FUZZED(83.70)), float(_GLF_IDENTITY(-5.3, (-5.3) / 1.0)), bool(true))), 5.0, -37.45), vec4(-5.9, -4.3, -4246.0465, -7392.9199), _GLF_SWITCH_2_0v));
             bvec3(_GLF_IDENTITY(false, false || (false)), lessThanEqual(vec2(-297.813, 6.0), vec2(1138.0141, 654.324)));
             {
             }
             if(_GLF_DEAD(false))
              return;
             vec4 _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v[19];
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat2x4(-174.552, -1.2, 7.9, 5853.2759, 2.4, -73.15, -3.8, -884.055);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               mat4x3(94.49, 2962.2524, -629.320, 619.298, 6.5, 8.3, -8.5, 7969.5352, -3437.5936, 46.96, -7.1, 7.8);
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               for(uvec4 _GLF_SWITCH_2_4v; any(bvec2(true, true)); mat4(4.4, 52.96, 7.0, 816.892, 100.029, 9983.8079, -4956.7531, 3.3, -7344.9080, -2.9, 61.04, -764.993, 78.29, -24.93, 57.46, -583.160))
                {
                 mat4x2(6637.5132, -3.9, 43.56, 3533.0851, -2730.0596, 0.1, 7.6, -5.9);
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             ;
             mat2(-65.07, 6.3, -85.16, -8758.8956);
             if(true)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat3x2 _GLF_SWITCH_2_5v;
               uvec3(24043u, 11445u, 172122u);
              }
             if(_GLF_DEAD(false))
              barrier();
             vec3 _GLF_SWITCH_2_6v[5], _GLF_SWITCH_2_7v[67], _GLF_SWITCH_2_8v[98];
             if((989.533 > -151.079))
              {
               ivec3 _GLF_SWITCH_2_9v, _GLF_SWITCH_2_10v[83];
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               return;
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              (ivec3(-81563, 17889, -59356) >> ivec3(-61644, 78167, 51368));
              uvec4(194355u, 79907u, 143979u, 115018u);
              uvec3 _GLF_SWITCH_2_11v[82];
             }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         default:
         1;
        }
      }
     case 4:
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
     case 74:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 19:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     case 98:
     case 67:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     break;
     if(_GLF_DEAD(false))
      barrier();
     case 71:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     (true ? mat4x2(-4.1, 8.4, 4569.9208, 29.90, -772.531, 955.970, -5.8, -3579.6760) : mat4x2(mat4(4149.2512, 3.0, -8.7, 68.53, 569.441, -7.4, -8.0, -6.9, 4249.7638, 635.695, -55.94, 1880.7310, -693.895, -1681.9145, -294.475, -6.2)));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     case 14:
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if((mat2x4(828.804, 5535.2707, -66.67, 736.048, 227.396, 7.4, -5.2, 5.7) == (+ mat2x4(3268.9408, 6.3, -26.86, 0.1, -0.0, -376.640, -9.9, -3.5))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             while((uvec2(84691u, 58808u) == (uvec2(95130u, 45401u) / 41577u)))
              {
               (max(ivec3(63865, -74964, -17735), (ivec3(72638, -50582, -34678) % 61655)));
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   return;
                  }
                }
               else
                {
                }
               ;
               uvec3 _GLF_SWITCH_0_72v, _GLF_SWITCH_0_73v;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                {
                }
               else
                {
                 ivec4(-70910, -49253, 80519, 2539);
                }
               ;
               if(_GLF_DEAD(false))
                return;
               bvec3(true, bvec2(true, true));
               if(_GLF_DEAD(false))
                break;
              }
            }
          }
         uint _GLF_SWITCH_0_74v, _GLF_SWITCH_0_75v[41], _GLF_SWITCH_0_76v;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           bitfieldInsert(uvec3(66721u, 161534u, 9119u), uvec3(146962u, 49178u, 150358u), 8991, -55428);
          }
         while(true)
          {
           uint _GLF_SWITCH_0_77v;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           (74115u + _GLF_SWITCH_0_74v);
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           uvec4(85105u, 126043u, 90578u, 25166u);
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           -47144;
           matrixCompMult(mat2x4(-797.166, -473.231, -4.5, -618.662, 0.5, -21.55, -61.09, -478.102), mat2x4(6.4, -7.0, 8.5, -28.58, 462.346, 657.312, 7022.7078, -7.7));
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           for(           uvec2(198580u, 135530u);
 false; mat2x4(vec4(895.892, 6863.3056, 7.4, -1.1), vec4(9.5, 5.8, 9413.3677, -24.76)))
            {
            }
           uvec4 _GLF_SWITCH_0_78v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             else
              {
              }
            }
          }
         for(         mat2x3(-660.127, 386.586, -72.65, 25.70, -7441.9657, 3.3);
 false; notEqual(ivec4(17175, 16952, -18746, -70844), ivec4(-47730, -26116, -6168, -32252)))
          {
           if(false)
            {
             ivec4 _GLF_SWITCH_0_79v, _GLF_SWITCH_0_80v[88], _GLF_SWITCH_0_81v;
             _GLF_SWITCH_0_74v;
             (9.3 + mat4x2(1801.3805, 70.74, 6512.3068, 6.4, -19.77, -44.60, -2326.1338, -8.4));
             mat3x2 _GLF_SWITCH_0_82v, _GLF_SWITCH_0_83v, _GLF_SWITCH_0_84v;
             mat3x4(-755.592, -9.1, -95.55, -6.2, 7600.2257, -320.554, -77.64, 1868.1286, -239.486, 26.39, -82.58, 2.8);
             mat2 _GLF_SWITCH_0_85v[77], _GLF_SWITCH_0_86v;
             _GLF_SWITCH_0_86v;
            }
           else
            {
             for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               (3175.0852 + mat2(-611.896, -6.5, 8.4, -2878.4558));
              }
             uvec2 _GLF_SWITCH_0_87v, _GLF_SWITCH_0_88v, _GLF_SWITCH_0_89v;
             if(_GLF_DEAD(false))
              break;
             false;
             (mat4x3(3.2, 0.1, -2.3, -38.30, 8229.9453, -7.1, -24.49, 1302.0831, _GLF_IDENTITY(7.2, min(7.2, 7.2)), -3.9, 18.31, 5041.1602) * mat2x4(mat3x2(2.7, -0.7, -4407.8755, 36.33, 27.70, 8.5)));
             (_GLF_SWITCH_0_88v % 197355u);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             mat2x4 _GLF_SWITCH_0_90v, _GLF_SWITCH_0_91v;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             ivec3 _GLF_SWITCH_0_92v, _GLF_SWITCH_0_93v[15];
            }
           if(_GLF_DEAD(false))
            continue;
           ;
           for(           ivec2(-2570, -3013);
 (uvec2(112445u, 165114u) == uvec2(146482u, 164043u)); bvec4(true, bvec3(false, true, false)))
            {
             switch(_GLF_SWITCH(0))
              {
               case 57:
               if(_GLF_DEAD(false))
                barrier();
               float _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
               if(_GLF_DEAD(false))
                break;
               case 60:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat2x3 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v[55];
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               mat4(-8.9, 4472.4979, 0.5, -4.3, 21.19, -32.74, -30.89, -1.1, -3605.6362, 53.66, 46.63, -132.253, -13.29, 185.244, 2.5, 7.9);
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                 atomicAdd(_GLF_SWITCH_0_74v, _GLF_SWITCH_0_74v);
                }
               ;
               ;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               break;
               case 73:
               uvec2(145232u, 22453u);
               case 97:
               if(_GLF_DEAD(false))
                barrier();
               ivec4(85349, 6085, 64037, -9261);
               default:
               if(_GLF_DEAD(false))
                barrier();
               1;
              }
            }
           mat3x2(vec2(-9977.2061, 542.851), vec2(-8.1, 5.7), injectionSwitch);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           bvec3(true, true, false);
           if((4.3 > _GLF_IDENTITY(5.4, float(vec3(_GLF_IDENTITY(5.4, clamp(5.4, 5.4, _GLF_IDENTITY(5.4, (5.4) - 0.0))), 1.0, cos(sqrt(0.0)))))))
            {
             vec4 _GLF_SWITCH_0_94v;
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             switch(_GLF_SWITCH(0))
              {
               case 0:
               do
                {
                 for(int _injected_loop_counter = ((0 ^ 0) & -76677); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               case 85:
               uvec2 _GLF_SWITCH_0_95v;
               mat4x2 _GLF_SWITCH_0_96v[32], _GLF_SWITCH_0_97v, _GLF_SWITCH_0_98v[50];
               case 74:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 continue;
                }
               case 96:
               (mat2(2192.1776, -75.65, -550.640, -6.5) - mat2(-91.96, 539.345, 773.911, -0.4));
               case 23:
               (ivec3(_GLF_IDENTITY(-67123, 0 + (_GLF_IDENTITY(-67123, (-67123) - 0))), -72878, 65292) | 33152);
               if(_GLF_DEAD(false))
                continue;
               case 71:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 mat3x2(2.7, -8210.4712, 593.949, 8.9, -648.142, -4.5);
                }
               if(_GLF_DEAD(false))
                return;
               case 63:
               case 56:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               not(bvec2(false, false));
               break;
               if(_GLF_DEAD(false))
                barrier();
               case 83:
               ;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               default:
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 1;
                }
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true))))) || false))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             ;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         for(         matrixCompMult(mat2x3(-531.995, -6.5, 3.0, -4848.1811, -422.398, 582.868), mat2x3(-3.6, -630.815, 427.577, _GLF_IDENTITY(3735.0955, min(3735.0955, _GLF_IDENTITY(3735.0955, float(vec4(3735.0955, 0.0, 0.0, 1.0))))), -737.510, -20.69));
 bool(-61.93); greaterThanEqual((bitfieldExtract(100265u, -3898, 65716) ^ uvec4(167682u, 165505u, 43534u, _GLF_IDENTITY(10961u, 1u * (10961u)))), uvec4(143638u, 21095u, 45555u, 40759u)))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   injectionSwitch;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
            }
           else
            {
            }
           uvec4 _GLF_SWITCH_0_99v[91], _GLF_SWITCH_0_100v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.1) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               continue;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat4(4.6, -2382.2867, 4.3, -2.5, -6.7, 399.911, -8.2, -5.7, 510.223, 8.0, 637.780, 150.451, 80.18, -2.6, _GLF_IDENTITY(7.7, (false ? _GLF_FUZZED(mix(-8.8, -969.704, -9.4)) : 7.7)), 2943.5965);
            }
           while(_GLF_IDENTITY((25484u >= 60695u), bool(bvec2((25484u >= 60695u), false))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 96749)); _injected_loop_counter --)
              {
               ivec2(29923, -57233);
              }
            }
           else
            {
            }
           while(false)
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            ;
            mat4x3(944.246, -306.011, 8304.3928, -75.43, -33.03, -470.846, 5559.1880, -6.8, -8606.9108, 23.49, 3544.9035, -7366.5347);
            mat2x3(_GLF_IDENTITY(mat3(1.4, -87.24, 6015.1515, -4.9, -7.0, 8.8, 24.96, -913.905, -1.1), (mat3(1.4, -87.24, 6015.1515, -4.9, -7.0, 8.8, 24.96, -913.905, -1.1)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)));
            mat4 _GLF_SWITCH_0_101v, _GLF_SWITCH_0_102v, _GLF_SWITCH_0_103v;
            bvec3(true, true, true);
            if(_GLF_DEAD(false))
             barrier();
            mat3x2 _GLF_SWITCH_0_104v, _GLF_SWITCH_0_105v, _GLF_SWITCH_0_106v;
            mat2x3 _GLF_SWITCH_0_107v, _GLF_SWITCH_0_108v;
            mat2x3 _GLF_SWITCH_0_109v[17], _GLF_SWITCH_0_110v;
           }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
           else
            {
            }
           ivec2 _GLF_SWITCH_0_111v, _GLF_SWITCH_0_112v, _GLF_SWITCH_0_113v[44];
           if(_GLF_DEAD(false))
            break;
           if(false)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             mat4x2 _GLF_SWITCH_0_114v[11];
             bool _GLF_SWITCH_0_115v, _GLF_SWITCH_0_116v[35];
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                barrier();
               continue;
              }
             int _GLF_SWITCH_0_117v[86];
             mat3x4(-0.2, 845.146, 9151.7116, -2273.1471, _GLF_IDENTITY(5.7, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-91.75) : 5.7)), 8.1, -7.7, -6.6, 218.004, -7700.2202, -8.0, -76.03);
             if(_GLF_DEAD(false))
              barrier();
             mat2 _GLF_SWITCH_0_118v;
             (mat2x4(5.9, 4.6, 7.7, 5281.8692, -6504.9954, -1.5, -2.6, 18.16) * mat4x2(0.1, 824.944, 83.69, 8.8, 47.76, 3.8, -309.501, _GLF_IDENTITY(-529.902, min(-529.902, -529.902))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ;
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
           else
            {
             mat2x3 _GLF_SWITCH_0_119v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               mat2(587.312, 7.3, -2.6, -7.8);
              }
             uvec4 _GLF_SWITCH_0_120v[57], _GLF_SWITCH_0_121v[91], _GLF_SWITCH_0_122v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           equal(vec4(-32.91, -612.323, 53.75, -5.1), vec4(-8.2, -14.69, -4.2, 2.5));
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.0)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         137861u;
         if(_GLF_DEAD(false))
          return;
         mat4x2(6.1, 2.9, -1843.8936, 280.835, 297.271, 0.5, 1.4, -1.1);
         if((mat2x3(-1.1, -0.1, 3432.9269, 8.8, -337.744, -77.28) != (- (false ? mat2x3(99.19, -648.798, 8.6, 612.598, -393.022, 935.378) : mat2x3(681.663, -45.37, 5.2, -3.0, -120.755, -0.7)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           do
            {
             do
              {
               uvec4(20632u, 25794u, 98079u, 109816u);
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           vec3(0.5, -7.9, 59.91);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           mat2x3 _GLF_SWITCH_0_123v[30], _GLF_SWITCH_0_124v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           ;
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
               continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             (mat4x2(-3368.9299, 78.88, -7.5, 3052.4042, -9.9, 2228.9901, 2.5, 9.9) * mat3x4(-6.9, -795.123, 7.0, 9.9, -8.5, _GLF_IDENTITY(7.9, (7.9) - 0.0), -5737.7630, 5331.0489, -0.9, 4417.8635, -999.225, -4936.9064));
            }
          }
         for(         bvec2(false, true);
 true; (false ? bvec4(true, true, false, true) : bvec4(false, true, false, true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     default:
     1;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), ((subgroup_local_id + 1)) - 0u), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))), ~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))))))) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((92969 / -42944) & 0)); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) >> 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -89708)); _injected_loop_counter --)
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       case 12:
       case 10:
       if(_GLF_DEAD(false))
        return;
       case 93:
       case 59:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       case 53:
       case 88:
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         continue;
        }
       break;
       case 43:
       ivec4(-72846, 9309, 6370, -15624);
       case 65:
       while(false)
        {
         mat2x4(9.0);
         for(mat4x2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v[24]; (uvec3(101920u, 17611u, 189887u) != uvec3(151442u, _GLF_IDENTITY(146168u, (146168u) + 0u), 8919u)); vec2(-11.40, 94.38))
          {
           for(           (mat4x3(32.14, 9.2, 45.57, -97.89, -668.685, 5.5, 4.3, -86.39, 815.722, -6160.1421, 692.541, 3.6));
 (true ? false : true); mat2x3(-7.8, -3248.3542, -388.366, 51.81, 4.1, -863.806))
            {
             mat4x3 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v[36], _GLF_SWITCH_1_5v;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               ivec2(56023, 71023);
              }
             else
              {
              }
             outerProduct(injectionSwitch, _GLF_IDENTITY(vec3(-2.8, -45.89, 798.034), mix(vec3(_GLF_FUZZED(-10.84), (vec3(-2.8, -45.89, 798.034))[1], (vec3(-2.8, -45.89, 798.034))[2]), vec3((vec3(-2.8, -45.89, 798.034))[0], _GLF_FUZZED(-182.533), _GLF_FUZZED(-4623.8928)), bvec3(true, false, false))));
             uvec2(199134u, 161805u);
             _GLF_SWITCH_1_1v;
             do
              {
               mat3(5.2, 8345.2981, 6118.0411, -8.3, _GLF_IDENTITY(1.1, clamp(_GLF_IDENTITY(1.1, clamp(_GLF_IDENTITY(1.1, (false ? _GLF_FUZZED(-1570.7288) : 1.1)), 1.1, _GLF_IDENTITY(1.1, mix(float(_GLF_FUZZED(-1890.4332)), float(1.1), bool(true))))), _GLF_IDENTITY(1.1, 0.0 + (_GLF_IDENTITY(1.1, min(1.1, 1.1)))), 1.1)), -1.1, -23.80, -9.0, -64.32);
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
             if(_GLF_DEAD(false))
              return;
             (mat2x3(7.1, -6.0, -6.5, -98.38, -2.2, 1.8) * (mat2(981.169, 7683.7605, 4.3, 6831.0002) + -3.8));
             if(_GLF_DEAD(false))
              barrier();
            }
           uvec4(47164u, 198279u, 137547u, 66970u);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))
            {
             if(_GLF_DEAD(false))
              break;
             for(uint _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v; true; (vec3(7.6, -79.11, 3.9) , round((vec3(-616.705, 3.8, 5.1) + 99.28))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 floor((vec3(34.67, -7503.7721, -678.912)));
                }
               else
                {
                }
               vec3(-5.7, -9772.3107, -45.54);
               mat4x2 _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v;
               vec4(-9.4, -4.6, 4.3, 29.76);
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(_injected_loop_counter) : int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           uvec3 _GLF_SWITCH_1_12v[74], _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v;
           uvec2 _GLF_SWITCH_1_15v[5], _GLF_SWITCH_1_16v;
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             (max(-801.022, -3189.1030) - (mat2x4(8036.2807, -7.7, 636.747, 52.69, -8.4, 3898.0574, -5479.3168, -21.70) * mat3x2(-877.082, 2.6, -6.4, 9.0, -99.10, 8.1)));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(true)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       default:
       1;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -14257)); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(atomicXor(_injected_loop_counter, _injected_loop_counter)) : _injected_loop_counter --)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), true && (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) / _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0))))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) / _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))))) >> 0)) >> 0) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
    }
   else
    {
    }
   subgroupAll(false);
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
