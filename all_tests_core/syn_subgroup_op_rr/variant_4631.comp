#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 uvec2 _f0;
 vec4 _f1;
 ivec2 _f2;
 bvec4 _f3;
 bvec4 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_12 {
 bvec2 _f0;
 bvec3 _f1;
 mat4x3 _f2;
 bool _f3;
 float _f4;
 uint _f5;
 vec2 _f6;
} ;

struct _GLF_struct_11 {
 mat3x4 _f0;
 bool _f1;
 mat4x2 _f2;
 mat2 _f3;
 ivec4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_11 _f0;
 uint subgroup_id;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
} ;

struct _GLF_struct_9 {
 int _f0;
 vec2 _f1;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 mat3 _f1;
 mat2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 mat4x3 _f1;
 bool _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 mat4x3 _f1;
 mat4x2 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 int _injected_loop_counter;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_0 {
 int _f0;
 vec2 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 bvec2 _f3;
 mat3x2 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 uint _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_14(_GLF_struct_11(mat3x4(1.0), true, mat4x2(1.0), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(sin(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1642.3442) : 1.0))) / exp(0.0)))), 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), _GLF_IDENTITY((float(mat2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), max((float(mat2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), _GLF_IDENTITY((float(mat2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), (true ? (float(mat2(1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))) : _GLF_FUZZED(67.68))))) / 1.0))), ivec4(1), ivec3(1)), gl_SubgroupID, _GLF_struct_12(bvec2(true), bvec3(true), mat4x3(1.0), true, 1.0, 1u, vec2(1.0)), _GLF_struct_13(uvec2(_GLF_IDENTITY(1u, min(1u, 1u))), vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), ivec2(1), bvec4(true), bvec4(true), mat4(1.0)), mat2x4(1.0)));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5635.4763)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (false ? _GLF_FUZZED(745.350) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), bool(true)))) + 0.0), mix(float(_GLF_FUZZED(-910.192)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5635.4763)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(745.350) : injectionSwitch.y))), bool(true)))) + 0.0), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5635.4763)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((true ? determinant(mat2(-7404.9583, 891.939, -70.34, 0.5)) : radians(-186.868))))), (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((true ? determinant(mat2(_GLF_IDENTITY(-7404.9583, min(_GLF_IDENTITY(-7404.9583, mix(float(-7404.9583), float(_GLF_FUZZED(-47.25)), bool(false))), -7404.9583)), 891.939, -70.34, 0.5)) : radians(-186.868)))))) - 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(745.350, mix(float(745.350), float(_GLF_FUZZED(9039.1374)), bool(false)))) : injectionSwitch.y))), bool(true)))) + 0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), vec4(mat2x3(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), 1.0, 0.0)))), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), mix(float(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5635.4763)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(745.350) : injectionSwitch.y))), bool(true)))) + 0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), (float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5635.4763)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(745.350) : injectionSwitch.y))), bool(true)))) + 0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(95.39) : 0.0)), 1.0)))))) / 1.0)), float(_GLF_FUZZED(68.27)), bool(false)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-910.192), min(_GLF_FUZZED(-910.192), _GLF_FUZZED(-910.192)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) : _GLF_FUZZED(2481.1753)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))) || _GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.3) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4069.0041), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.4)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-72.84), _GLF_FUZZED(vec2(-84.52, -2952.0367).y)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec3(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-72.84), _GLF_FUZZED(vec2(-84.52, -2952.0367).y)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) * mat2(1.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), vec2(_GLF_FUZZED(885.802), _GLF_FUZZED(8.9)), bvec2(false, false))).y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), false)), ! (! (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), ! (! (true && (_GLF_IDENTITY(false, false || (false)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_15._f0.subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_15._f0.subgroup_id * subgroup_size, 0u ^ (_GLF_struct_replacement_15._f0.subgroup_id * subgroup_size)), min(workgroup_base + _GLF_struct_replacement_15._f0.subgroup_id * subgroup_size, workgroup_base + _GLF_struct_replacement_15._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + (_GLF_IDENTITY((0u | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u ^ (_GLF_IDENTITY((0u | 0u), 0u ^ ((0u | 0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) + _GLF_IDENTITY(0, int(ivec4(0, 0, (0 >> _GLF_IDENTITY(int(2), int(2))), 0)))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)).y)))))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-6125)), _GLF_FUZZED(-42.59)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)))), min((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)))))) * 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-25.50), (injectionSwitch)[1]), vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(-25.50), (injectionSwitch)[1]))), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(-914.935)), bvec2(true, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-25.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-914.935, (_GLF_IDENTITY(-914.935, (false ? _GLF_FUZZED(-1156.1418) : -914.935))) / abs(1.0)))), bvec2(true, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-25.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-914.935)), bvec2(true, false)))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-25.50), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 0), max(_GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), ivec3(0, 0, 0))), ivec3(0, 0, 0)))))], _GLF_FUZZED(-914.935)), bvec2(true, false)))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-25.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-914.935)), bvec2(true, false)))) - vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-25.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-914.935)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-25.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-914.935)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-25.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-914.935)), bvec2(true, _GLF_IDENTITY(false, ! (! (false)))))))))).y)), false, true, true)), bool(bool(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (false), false || (! (false)))) || false)))))), _GLF_IDENTITY(true, false || (true)), true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-68.91, 906.556)) : injectionSwitch)).y)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (1.0) - tan(sqrt(0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) + tan(0.0)), 0.0, 1.0, 0.0), mat3(_GLF_IDENTITY(mat4(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (1.0) - tan(sqrt(0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) + tan(0.0)), 0.0, 1.0, 0.0)), transpose(transpose(mat4(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0))))), _GLF_IDENTITY((1.0) - tan(sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY((1.0) - tan(sqrt(0.0)), (false ? _GLF_FUZZED(-752.022) : (1.0) - tan(sqrt(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0))), 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))))), _GLF_IDENTITY((1.0) - tan(sqrt(0.0)), float(mat4((1.0) - tan(sqrt(0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.0) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8003.9841)), float(0.0), bool(true))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (1.0) - tan(sqrt(0.0))))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + tan(0.0)), 0.0, 1.0, 0.0))))))), mat3(1.0) * (mat3(injectionSwitch, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))).y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (true && (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (true && (injectionSwitch.x > injectionSwitch.y))), ! (! (! (! (true && (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, max((0) << 0, (0) << 0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, (59426u & 0u) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, int(ivec3(4, ((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> (0 >> _GLF_IDENTITY(int(5), int(5)))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) + 0)) << 0), (int(5)) << 0))), _GLF_IDENTITY(1, (1) - 0)))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) || false)))), true)))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))))) || false), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))))) || false), false, false, false)))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   for(_GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(bvec2(true), _GLF_struct_4(_GLF_struct_0(1, vec2(1.0)), _GLF_struct_1(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && _GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && _GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec4(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && _GLF_IDENTITY(true, ! (! (true)))))))), false)))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))), (bool(true)) && true), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) || false, ! (! ((! (true)) || false))))))))), (bool(true)) && true))))))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), bool(bvec2((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false)))) && true))))) && true))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), (bool(true)) || false)), (! (_GLF_IDENTITY(bool(true), (bool(true)) || false))) || false))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))) && true))))) && _GLF_IDENTITY(true, (true) && true))))) || false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))), (bool(true)) && true), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) || false, ! (! ((! (true)) || false))))))))), (bool(true)) && true))))))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, false)))), bool(bvec2((_GLF_IDENTITY(true, bool(bvec2(true, false)))), false)))) && true))))) && true))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), (bool(true)) || false)), (! (_GLF_IDENTITY(bool(true), (bool(true)) || false))) || false))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))) && true))))) && _GLF_IDENTITY(true, (true) && true))))) || false))))))), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), false || (bool(true))), (bool(true)) && true)) && true))))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))))))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))))))), true)), true, false, true)))) || false)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) && true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) && true)))))))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), true && (bool(true)))) && true))))))))), false)), true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) && true), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(true), false || (bool(true))), (bool(true)) && true)), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(bool(true), false || (bool(true))), (bool(true)) && true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(true), false || (bool(true))), (bool(true)) && true))) || false) && true))))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))))))), _GLF_IDENTITY(false, ! (! (false))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))))))), false)), true)))))), _GLF_IDENTITY(true, false || (true)))))))))))), mat2(1.0)), _GLF_struct_2(mat3x4(1.0), (_GLF_IDENTITY((((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 1 * (int(0)))), (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) - 0)) * _GLF_IDENTITY(1, max(1, 1))), 1 * (int(0))))) ^ 0)) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / (0 ^ 1))), ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), max(int(0), int(0)))) | (0 << _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(0), 1 * (int(0)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 1 * (int(0)))), 0 + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 1 * (_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0), _GLF_IDENTITY(int(0), (int(0)) | 0))))))))) ^ 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 1 * (int(0)))), 0 + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 1 * (_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0), _GLF_IDENTITY(int(0), (int(0)) | 0))))))))) ^ 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 1 * (int(0)))), 0 + (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 1 * (_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0), _GLF_IDENTITY(int(0), (int(0)) | 0))))))))) ^ 0) / 1)) >> 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << 0))), bvec2(true), mat3x2(1.0), _GLF_struct_3(ivec4(1), mat4x3(1.0))), _GLF_struct_8(_GLF_struct_5(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), vec2(1.0)), mat4x3(1.0), mat4x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-69.81)), bool(false)))), _GLF_struct_6(mat3x4(1.0), mat4x3(1.0), true, mat3x2(1.0)), _GLF_struct_7(_GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED(uvec3(14761u, 164885u, 9711u)) : uvec3(_GLF_IDENTITY(1u, (1u) << 0u)))), mat3(1.0), mat2(1.0), uvec4(1u)), mat2x3(1.0)), _GLF_struct_9(1, vec2(1.0)), 1u); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_10._f1._f2._injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-20.69))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).x))); _GLF_struct_replacement_10._f1._f2._injected_loop_counter --)
    {
     subgroupAll(true);
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((mat4x2(mat3x2(-2.2, -8.5, 2.2, 7.7, 5.1, 337.287)) * vec4(-180.114, 469.445, -727.774, 41.11))))).y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-75.73) : injectionSwitch.y))) - log(1.0))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
  barrier();
}
