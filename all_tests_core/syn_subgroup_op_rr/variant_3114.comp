#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))), true, true))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0), (mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0))))), (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-526.256), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, ~ (~ (1)))))]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-26.94), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-26.94), mix(float(_GLF_FUZZED(-26.94)), float(_GLF_FUZZED(-5902.6981)), bool(false)))), float(_GLF_FUZZED(7.7)), bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u | 0u)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u | 0u))))) >> 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(107.268), _GLF_FUZZED(-8.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))).y)) || false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), (_GLF_IDENTITY(int(4), (int(4)) << 0)) >> 0), _GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) << 0), min(_GLF_IDENTITY(int(4), (int(4)) << 0), _GLF_IDENTITY(int(4), (int(4)) << 0))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) | (virtual_gid)), max(virtual_gid, virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, determinant(mat2(0.0, 0.0, 1.0, 0.0))), (vec2(injectionSwitch.y, determinant(mat2(0.0, 0.0, 1.0, 0.0)))) * vec2(1.0, 1.0)))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, determinant(mat2(0.0, 0.0, 1.0, 0.0))), (vec2(injectionSwitch.y, determinant(mat2(0.0, 0.0, 1.0, 0.0)))) * vec2(1.0, 1.0)))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, determinant(mat2(0.0, 0.0, 1.0, 0.0))), (vec2(injectionSwitch.y, determinant(mat2(0.0, 0.0, 1.0, 0.0)))) * vec2(1.0, 1.0)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) && true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) && true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))))) || false)) || false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u + (_GLF_IDENTITY(read_2, 0u + (read_2)))), (_GLF_IDENTITY(read_2, 0u + (_GLF_IDENTITY(read_2, 0u + (read_2))))) / 1u), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, (0 | _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(14630))))) ^ (1)), clamp(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1, (read_1) / 1u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 1u), (uvec4(_GLF_IDENTITY(read_1, (read_1) / 1u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 1u)) | (uvec4(_GLF_IDENTITY(read_1, (read_1) / 1u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 1u))), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1, (read_1) / 1u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 1u), (uvec4(_GLF_IDENTITY(read_1, (read_1) / 1u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 1u)) | (uvec4(_GLF_IDENTITY(read_1, (read_1) / 1u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 1u))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1, (read_1) / 1u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 1u), (uvec4(_GLF_IDENTITY(read_1, (read_1) / 1u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 1u)) | (uvec4(_GLF_IDENTITY(read_1, (read_1) / 1u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 1u))))))) == read_2))) + 1, uint(read_1 == read_2) + 1))))), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, (0 | _GLF_IDENTITY(0, (0) << 0)) ^ (1)), clamp(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2))) + 1, uint(read_1 == read_2) + 1)))))) / 1u)), _GLF_IDENTITY(max((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2) + 1, ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 | 0) ^ (1), 0 | ((0 | 0) ^ (1)))), clamp(uint(read_1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) << 0), uint(read_1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | 0u), (uint(read_1 == read_2)) | (uint(read_1 == read_2))) + 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, (0 | 0) ^ (1)), clamp(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u), min(read_1, read_1)) == read_2) + 1, max(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1, ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1), uint(uvec4(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1), (~ (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1)) * 1u), 0u, 1u, 0u)))))) ^ 0u))), uint(read_1 == read_2) + 1)))))), (0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) << 0u)))) ^ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, (0 | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) - 0), (_GLF_IDENTITY(~ (0), (~ (0)) - 0)) ^ 0)))) ^ (1)), clamp(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2))))), ! (! (read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2))))), ! (! (read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2)))))))), bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2))))), ! (! (read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2))))))))))), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1))))) == read_2, false || (read_1 == read_2))) + 1, uint(_GLF_IDENTITY(read_1, 0u ^ (read_1)) == read_2) + 1)))), ((~ (_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(1), (int(1)) + 0), _GLF_IDENTITY(int(1), max(int(1), int(1))))))), (0 | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))), 0)), (int(ivec4(0, 0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(24615) : 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))), 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(0, 1, 0, 0)), 0 ^ (int(ivec4(0, 1, 0, 0)))), (int(ivec4(0, 1, 0, 0))) - 0))))), 0 ^ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(_GLF_IDENTITY(23448, (23448) | 0)) : 0 >> _GLF_IDENTITY(int(3), int(3)))), 1, 0, 1)), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(23448) : 0 >> _GLF_IDENTITY(int(3), int(3)))), 1, 0, 1)), (true ? int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(23448) : 0 >> _GLF_IDENTITY(int(3), int(3)))), 1, 0, 1)) : _GLF_FUZZED(-67598)))) ^ 0))), 0)), (int(ivec4(0, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, max(3, 3)))))), int(3))), 0))) | 0)))))))) ^ (1)), _GLF_IDENTITY(clamp(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 == read_2), (true ? _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | 0u) : _GLF_FUZZED(max(subgroup_size, 87786u)))) + 1), (clamp(_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2))), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (uint(read_1 == read_2))))) / 1u))) + 1, uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)) << 0u))))) ^ 0u)))))), (max((_GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY((0 | 0) ^ (1), 0 | ((0 | 0) ^ (1)))), clamp(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 == read_2) + 1, 0u | (uint(read_1 == read_2) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | 0u), (uint(read_1 == read_2)) | (uint(read_1 == read_2))) + 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, (0 | 0) ^ (1)), clamp(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u), min(read_1, read_1)) == read_2) + 1, max(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1, ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1), uint(uvec4(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1), (~ (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1)) * 1u), 0u, 1u, 0u)))))) ^ 0u))), uint(read_1 == read_2) + 1)))))), (0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) << 0u)))) ^ ((_GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, (0 | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) - 0), (_GLF_IDENTITY(~ (0), (~ (0)) - 0)) ^ 0)))) ^ (1)), clamp(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2))))), ! (! (read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2))))), ! (! (read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2)))))))), bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2))))), ! (! (read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, max(read_2, read_2))))))))))), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) + 1, uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))) + 1, uint(_GLF_IDENTITY(read_1, 0u ^ (read_1)) == read_2) + 1)))), ((~ (_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(1), (int(1)) + 0), _GLF_IDENTITY(int(1), max(int(1), int(1))))))), (0 | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, (0 >> _GLF_IDENTITY(int(3), int(3))), 0)), (int(ivec4(0, 0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(24615) : 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(int(3), int(3)))))), 0))) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, 0, 0)), (int(ivec4(0, 1, 0, 0))) - 0))))), 0 ^ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(23448) : 0 >> _GLF_IDENTITY(int(3), int(3)))), 1, 0, 1)), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(23448) : 0 >> _GLF_IDENTITY(int(3), int(3)))), 1, 0, 1)), (true ? int(ivec4(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(23448) : 0 >> _GLF_IDENTITY(int(3), int(3)))), 1, 0, 1)) : _GLF_FUZZED(-67598)))) ^ 0))), 0)), (int(ivec4(0, 0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(3, max(3, 3))), ((_GLF_IDENTITY(3, max(3, 3)))) + 0)))), int(3))), 0))) | 0)))))))) ^ (1)), _GLF_IDENTITY(clamp(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1), (clamp(_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), max((uint(read_1 == read_2)), (uint(read_1 == read_2)))) | (uint(read_1 == read_2))), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (uint(read_1 == read_2))))) / 1u))) + 1, uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)) << 0u))))) ^ _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u))))))))) | 0u)) * 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))))), (uint(read_1 == read_2)) << (0u & 193775u))) | (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2))))) + 1, uint(uvec4(uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (! _GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(bool(bvec2((read_1 == read_2), false)), false || (bool(bvec2((read_1 == read_2), false)))))) || false)))) + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, clamp(uint(read_1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0))), _GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89184) : 1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1, ~ _GLF_IDENTITY((~ (read_1)), ~ (~ ((~ (read_1)))))) == read_2) + 1, 1u, 0u, 1u), clamp(uvec4(uint(read_1 == read_2) + 1, 1u, 0u, _GLF_IDENTITY(1u, (1u) | 0u)), uvec4(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), 1u, 1u))), uvec4(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), max((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) + 1, 1u, 0u, 1u)))), (uint(_GLF_IDENTITY(uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), clamp(uvec4(uint(read_1 == read_2) + 1, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uvec2(~ (1u), 0u))))))), 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), _GLF_IDENTITY(uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))) + 1, _GLF_IDENTITY(1u, (1u) - 0u), 0u, 1u), min(_GLF_IDENTITY(uvec4(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))) + 1, _GLF_IDENTITY(1u, (1u) - 0u), 0u, 1u), (uvec4(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))) + 1, _GLF_IDENTITY(1u, (1u) - 0u), 0u, 1u)) >> (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(2u), uvec4(2u)))), uvec4(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))) + 1, _GLF_IDENTITY(1u, (1u) - 0u), 0u, 1u))), ~ (~ (uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u))))) + uvec4(0u, 0u, 0u, 0u)))))) + 0u)))))), (false ? _GLF_FUZZED(subgroup_size) : (~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, clamp(uint(read_1 == read_2) + 1, uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))) + _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89184) : 1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1, ~ _GLF_IDENTITY((~ (read_1)), 0u ^ ((~ (read_1))))) == read_2) + 1, 1u, 0u, 1u), _GLF_IDENTITY(clamp(uvec4(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (read_1)), 0u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (read_1)), 0u, 1u)))))) == read_2))) + 1, 1u, 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u)), _GLF_IDENTITY(~ (~ (clamp(uvec4(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (read_1)), 0u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (read_1)), 0u, 1u)))))) == read_2))) + 1, 1u, 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u)))), (true ? ~ (~ (clamp(uvec4(uint(_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (read_1)), 0u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (read_1), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (read_1), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), (uint(uvec4((_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (read_1), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))) >> (1u ^ 1u)))), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << 0u))), 1u)))))) == read_2), ((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (read_1)), 0u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (read_1), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (read_1), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)), (uint(uvec4((_GLF_IDENTITY(read_1, ~ (~ (read_1)))) | (read_1), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u))) >> (1u ^ 1u)))), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << 0u))), 1u)))))) == read_2)) || false))) + 1, 1u, 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u)))) : _GLF_FUZZED(uvec4(103804u, 143393u, 67884u, 51673u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(read_1 == read_2) + 1, _GLF_IDENTITY(1u, (1u) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 1u), ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) / 1u, min((6u) / 1u, (6u) / 1u)))), _GLF_IDENTITY(uvec4(6u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(6u))))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) * (uvec4(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) * 1)))) - 0), 1u, 0u, 1u))), clamp(uvec4(uint(read_1 == read_2) + 1, _GLF_IDENTITY(1u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) / 1u)))) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))), uint(uint(0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / (1u & 1u)), ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))))))))), 0u, 1u), uvec4(_GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ (uint(read_1 == read_2) + 1))), 1u, 0u, 1u), _GLF_IDENTITY(uvec4(uint(read_1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1)), 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), ~ (~ (uvec4(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))) + 1, 1u, 0u, 1u))))) + uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), (_GLF_IDENTITY((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ 0u)) - 0u), 0u) ^ (uvec4(6u))))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ 0u)) - 0u), 0u) ^ (uvec4(6u))))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ 0u)) - 0u), 0u) ^ (uvec4(6u))))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u)), uvec4(1u, 1u, 1u, 1u) * ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ 0u)) - 0u), 0u) ^ (uvec4(6u))))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u)))), (uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) ^ 0u)) - 0u), 0u) ^ (uvec4(6u))))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))))) * (uvec4(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)) + 1, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))) - 0u), 0u, _GLF_IDENTITY(1u, max(1u, 1u))))), clamp(uvec4(uint(read_1 == read_2) + 1, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) >> 0u)))) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))), 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), _GLF_IDENTITY(uvec4(uint(read_1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0), (1) - 0)) | (1)), 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((subgroup_local_id + subgroup_size)) : read_1)) == read_2) + 1, 1u, 0u, 1u), ~ (~ (uvec4(uint(read_1 == read_2) + _GLF_IDENTITY(1, (1) | 0), 1u, 0u, 1u))))) + uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), ((uvec4(1u, _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u) << _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(6u))))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))) * (uvec4(uint(read_1 == read_2) + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), 1u, 0u, 1u))), clamp(uvec4(uint(read_1 == read_2) + 1, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), uint(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u & 1476u))))) | (_GLF_IDENTITY(1u, ~ (~ (1u))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))))), 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), _GLF_IDENTITY(uvec4(uint(read_1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1)), 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), ~ (~ (uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u))))) + uvec4(0u, 0u, 0u, 0u))))) >> uvec4(0u, 0u, 0u, 0u))) / (uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u))))) + 0u)), ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89184) : 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 0u, 1u))), ~ (~ (read_1))) == read_2) + 1, _GLF_IDENTITY(1u, 0u | (1u)), 0u, 1u), clamp(uvec4(uint(read_1 == read_2) + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(3312))), 1u, 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u)))), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 0u, 0u, 1u)), _GLF_IDENTITY(uint(uvec3(uint(uvec4(read_1, 0u, 0u, 1u)), 1u, 0u)), (uint(uvec3(uint(uvec4(read_1, 0u, 0u, 1u)), 1u, 0u))) >> 0u))), ~ (~ (read_1))) == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(197479u, 103655u, 55699u).s) : _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(1u, 0u | (1u))) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), min(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, 0u | (1u)))))), _GLF_IDENTITY(0u, (0u) >> 0u), 1u), clamp(uvec4(uint(read_1 == read_2) + 1, 1u, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), uvec4(_GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) | (uint(read_1 == read_2) + 1))))), 1u, 0u, 1u)))), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 0u, 1u))), ~ (_GLF_IDENTITY(~ (read_1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (read_1), (~ (read_1)) / 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (read_1), (~ (read_1)) / 1u)), ~ (~ (uint(_GLF_IDENTITY(~ (read_1), (~ (read_1)) / 1u)))))) >> (69131u & 0u)))))) == _GLF_IDENTITY(read_2, max(read_2, read_2))) + 1, _GLF_IDENTITY(1u, 0u | (1u)), 0u, 1u), clamp(uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u)))), 1u, 1u, 1u), (uvec4(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 0u, 1u))), ~ (~ (read_1))) == read_2) + 1, _GLF_IDENTITY(1u, 0u | (1u)), 0u, 1u), clamp(uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u)))), _GLF_IDENTITY(1u, (1u) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))))))), (uint(_GLF_IDENTITY(uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), clamp(uvec4(uint(read_1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (34667u & 0u))))) : _GLF_IDENTITY(1u, ~ (~ (1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, ~ (~ (1u))))), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, ~ (~ (1u)))))) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, ~ (~ _GLF_IDENTITY((7u), ((7u)) | ((7u)))))), uint(7u))))) << _GLF_IDENTITY(0u, (0u) ^ 0u)), 0u, 1u), uvec4(uint(read_1 == read_2) + _GLF_IDENTITY(1, max(1, 1)), 1u, 0u, 1u), _GLF_IDENTITY(uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), int(int(1))), 1u, 0u, 1u), ~ (~ (uvec4(uint(read_1 == read_2) + 1, 1u, 0u, 1u))))) + uvec4(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u), 0u)))))) + 0u))))))))))))) * 1u) ^ 0u)), 4, 64, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, 0 | (4)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))), ((true)) && true))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(true, false || (true))))), bool(bvec4(bool(bool((_GLF_IDENTITY(true, false || (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), ! (! (true))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-424.047) : 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, log(1.0), sqrt(0.0), 1.0))), sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(sin(0.0)), exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(7.5)), vec2(_GLF_FUZZED(5743.0644), (vec2(1.0, 1.0))[1]), bvec2(false, true))), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), min(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(7.5)), vec2(_GLF_FUZZED(5743.0644), (vec2(1.0, 1.0))[1]), bvec2(false, true))), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(7.5)), vec2(_GLF_FUZZED(5743.0644), (vec2(1.0, 1.0))[1]), bvec2(false, true))), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))))))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-424.047) : 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, log(1.0), sqrt(0.0), 1.0))), sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(sin(0.0)), exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(7.5)), vec2(_GLF_FUZZED(5743.0644), (vec2(1.0, 1.0))[1]), bvec2(false, true))), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), min(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(7.5)), vec2(_GLF_FUZZED(5743.0644), (vec2(1.0, 1.0))[1]), bvec2(false, true))), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(7.5)), vec2(_GLF_FUZZED(5743.0644), (vec2(1.0, 1.0))[1]), bvec2(false, true))), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, tan(0.0)), (false ? _GLF_FUZZED(vec2(8622.0575, 6.8)) : vec2(0.0, tan(0.0))))))))))))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(sin(0.0)), exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))))))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sin(-32.93)) : 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), sqrt(sin(0.0)), exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 1.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2597.6137) : 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(sin(0.0)), exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))) + (0.0)), tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(sin(0.0))))))), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(0.0), 1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(sin(0.0)), exp(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))))))).y), float(_GLF_FUZZED(8500.3447)), bool(false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), vec2(vec4(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0)))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) / vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), vec2(vec4(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0)))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), vec2(vec4(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0)))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), vec2(vec4(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0)))).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), false, false))), false, false))), false, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), vec2(vec4(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((9.9 - 6787.1397))), vec2(_GLF_FUZZED((- 8.7)), (injectionSwitch)[1]), bvec2(false, true))).y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), vec2(vec4(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)), 0.0, 1.0)))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), vec2(vec4(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0)))).x > injectionSwitch.y, false, false, false))), false, false))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), vec2(vec4(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0)))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), vec2(vec4(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), vec2(vec4(vec2(mat4x3(injectionSwitch, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), vec4(mat3x2(vec4(0.0, 0.0, 0.0, 0.0), 0.0, exp(0.0))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0)))).x > injectionSwitch.y, false, false, false))), false, false))), false, false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(33.02)), bool(false))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, cos(0.0), tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.4) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
