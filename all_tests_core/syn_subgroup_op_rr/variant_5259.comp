#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y) && true)), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true))) || false))), true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), true), bvec2(bvec3(bvec2(! (_GLF_DEAD(false)), true), false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), true), bvec2(bvec3(bvec2(! (_GLF_DEAD(false)), true), false))))))), true && (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), true), bvec2(bvec3(bvec2(! (_GLF_DEAD(false)), true), false))))))))))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.0))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.0))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.0))) > injectionSwitch.y))))), false || (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.0))) > injectionSwitch.y))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), min((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))))))).x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), (gl_WorkGroupID)))) / uvec3(1u, 1u, 1u), ((_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))), (gl_WorkGroupID)))) / uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) / ((((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))), ~ (_GLF_IDENTITY(~ ((uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), ~ (~ (~ ((uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))), gl_WorkGroupID))) << uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (0u)), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((0u), uint(uvec3(_GLF_IDENTITY((0u), max((0u), (0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1u * (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((0u), uint(uvec3(_GLF_IDENTITY((0u), max((0u), (0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (~ (~ _GLF_IDENTITY((0u), uint(uvec3(_GLF_IDENTITY((0u), max((0u), (0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | 0u)))) ^ 0u)), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))), clamp(~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))), ~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))), (0u ^ 0u) ^ (~ (_GLF_IDENTITY(~ (0u), 0u ^ (~ (0u)))))))))) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(workgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(workgroup_size)), clamp(~ (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(workgroup_size)), ~ (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(workgroup_size)), ~ (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(workgroup_size)))))))), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u, 0u))) + _GLF_IDENTITY(0u, max(0u, 0u))))))), 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))), gl_WorkGroupID))) << uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (0u)), (~ (~ _GLF_IDENTITY((0u), uint(uvec3(_GLF_IDENTITY((0u), max((0u), (0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u)), (~ (~ (_GLF_IDENTITY(~ (0u), 0u ^ _GLF_IDENTITY((~ (0u)), ((~ (0u))) - 0u))))) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, false, true), false))))))) ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u, 0u))) + _GLF_IDENTITY(0u, max(0u, 0u)), ((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u, 0u))) + _GLF_IDENTITY(0u, max(0u, 0u))) | (1u ^ 1u))))))), 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID))))) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - _GLF_IDENTITY(0u, (0u) - 0u), ((_GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))))) | (subgroup_size))) - _GLF_IDENTITY(0u, (0u) - 0u)) - 0u)), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size, 1u * _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_id)) * subgroup_size : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(~ (~ (true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(num_workgroup))), (~ (~ (true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(num_workgroup)))) | (~ (~ (true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(num_workgroup))))))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(virtual_gid))), ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY(clamp(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : clamp(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))))), (_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) - 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))) / 1u)) / 1u) + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size) >> 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (false ? _GLF_FUZZED(packUnorm4x8(vec4(180.597, 1.7, 711.705, 28.92))) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u))))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), min((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))) % subgroup_size), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - _GLF_IDENTITY(0u, (0u) - 0u), ((_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))))) | (subgroup_size))) - _GLF_IDENTITY(0u, (0u) - 0u)) - 0u)), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_id)) * subgroup_size : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(num_workgroup), ~ (~ (true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(virtual_gid))), ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), clamp(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), (_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) - 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))) / 1u)) / 1u) + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size) >> 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (false ? _GLF_FUZZED(packUnorm4x8(vec4(180.597, 1.7, 711.705, 28.92))) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u))))) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - _GLF_IDENTITY(0u, (0u) - 0u), ((_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))))) | (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : ~ (subgroup_size))), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), _GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : ~ (subgroup_size))), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), _GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : ~ (subgroup_size))), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), _GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))))))))) | (subgroup_size)))))) - _GLF_IDENTITY(0u, (0u) - 0u)) - 0u)), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_id)) * subgroup_size : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size) : _GLF_FUZZED(num_workgroup), ~ (~ (true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(virtual_gid))), ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(virtual_gid))), ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(virtual_gid))), ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(virtual_gid))), ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), clamp(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), (_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) - 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), clamp(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), (_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) - 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))) / 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), clamp(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), (_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) - 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))) / 1u)), uint(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), clamp(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), (_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) - 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))) / 1u)))))) << 0u)), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), clamp(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), (_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) - 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))) / 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), clamp(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), (_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) - 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))) / 1u)), uint(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), clamp(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), (_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) - 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))))))) / 1u)))))) << 0u))) >> 0u))) / 1u) + _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size) >> 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> (0u | 0u))))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (false ? _GLF_FUZZED(packUnorm4x8(vec4(180.597, 1.7, 711.705, 28.92))) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u))))) + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size)))), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - _GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))))) | (subgroup_size)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), (true ? _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) : _GLF_FUZZED(workgroup_id))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))), min(~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))), ~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))))))), 0u ^ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))), min(~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))), ~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))))))))) | (subgroup_size))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))))) | (subgroup_size)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), (true ? _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) : _GLF_FUZZED(workgroup_id))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))), min(~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))), ~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))))))), 0u ^ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))), min(~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))), ~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 1u, 1u))), ~ (subgroup_size)))))))))) | (subgroup_size))))) : _GLF_FUZZED(123822u))) - _GLF_IDENTITY(0u, (0u) - 0u)) - 0u)), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_id)) * subgroup_size : _GLF_FUZZED(num_workgroup), 0u | (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_id)) * subgroup_size : _GLF_FUZZED(num_workgroup), ~ (~ (true ? _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_id)) * subgroup_size : _GLF_FUZZED(num_workgroup))))))))), (_GLF_IDENTITY(true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(num_workgroup), ~ (~ (true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))))))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(virtual_gid))), ~ (~ (workgroup_base))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), (0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) | (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), 0u | (0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), clamp(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (workgroup_base)), clamp(~ (~ (workgroup_base)), _GLF_IDENTITY(~ (~ (workgroup_base)), 1u * (~ (~ (workgroup_base)))), ~ (~ (workgroup_base))))), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) : _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) - 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))) << 0u))), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) - 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))) << 0u)))) - 0u)))) / 1u)) / 1u) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))) | 0u) * subgroup_size) >> 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (subgroup_size)))), (false ? _GLF_FUZZED(packUnorm4x8(vec4(180.597, 1.7, 711.705, 28.92))) : workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u))))))) + ((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size))), 1u, 0u, 0u)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(6.2)), bvec2(false, false))).y)))))) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3473.4357)), bool(false))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(-769.073, 2.6, 865.764, 7.0) * mat2x4(5.4, -9.3, -8.8, 3.1, 3.5, 5810.3811, -10.77, 8.5))) : injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true, ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! _GLF_IDENTITY((false), true && ((false)))))))) || false)), ! (! (true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-896.657)), bool(false))) > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(-33.47)), float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), bool(true))), 0.0))) : _GLF_FUZZED(9576.7184))), 0.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))) && true, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))))))))) && true))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false, true, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).y, float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).y, float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).y, float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).y))))))))))))
      barrier();
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-12639), (_GLF_FUZZED(-12639)) / 1) : 4, (false ? _GLF_IDENTITY(_GLF_FUZZED(-12639), (_GLF_FUZZED(-12639)) / 1) : 4) << 0))), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(23057) : _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) | (_GLF_IDENTITY(4, min(4, 4))))))), max(clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-12639), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-12639, (true ? -12639 : _GLF_FUZZED(-69124)))), (_GLF_FUZZED(-12639)) - (0 ^ 0))) / 1) : 4, 1 * (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-12639, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(-12639, clamp(-12639, -12639, -12639))))), (_GLF_IDENTITY(_GLF_FUZZED(-12639), (_GLF_FUZZED(-12639)) - (0 ^ 0))) / 1) : 4)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(23057), int(int(_GLF_FUZZED(23057)))) : _GLF_IDENTITY(4, min(4, 4))))), clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-12639, clamp(-12639, -12639, _GLF_IDENTITY(-12639, (true ? -12639 : _GLF_FUZZED(-65416)))))), (_GLF_FUZZED(-12639)) / 1) : 4, _GLF_IDENTITY(clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(-12639), (_GLF_FUZZED(-12639)) / 1) : 4, false ? _GLF_IDENTITY(_GLF_FUZZED(-12639), (_GLF_FUZZED(-12639)) / 1) : 4, false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-12639, clamp(-12639, _GLF_IDENTITY(-12639, (true ? -12639 : _GLF_FUZZED(-80965))), _GLF_IDENTITY(-12639, min(-12639, _GLF_IDENTITY(-12639, (-12639) >> 0)))))), (_GLF_FUZZED(-12639)) / 1) : _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(4, 4)), 4))))), (clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(-12639), (_GLF_FUZZED(-12639)) / 1) : 4, false ? _GLF_IDENTITY(_GLF_FUZZED(-12639), (_GLF_FUZZED(-12639)) / 1) : 4, false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-12639, clamp(-12639, _GLF_IDENTITY(-12639, (true ? -12639 : _GLF_FUZZED(-80965))), _GLF_IDENTITY(-12639, min(-12639, _GLF_IDENTITY(-12639, (-12639) >> 0)))))), (_GLF_FUZZED(-12639)) / 1) : _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(4, 4)), 4)))))) << 0)))), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(23057) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) - 0), _GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | (4)), 4, 4)), min(4, 4))))))))))), 64, 0);
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)) >> 0u), uint(uvec2(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)) >> 0u), 1u))), ~ (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)) >> 0u))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_IDENTITY(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))), 1u), max(uvec3(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(5u))), uint(5u))), 1u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) / 1u), _GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_IDENTITY(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), max(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))))))), max(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) + (read_1)) == read_2), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (_GLF_IDENTITY(uint(5u), (uint(5u)) * 1u)))), uint(5u))), 1u), max(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), _GLF_IDENTITY(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), clamp(_GLF_IDENTITY(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), (uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)) >> uvec3(0u, 0u, 0u)), uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), _GLF_IDENTITY(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), (_GLF_IDENTITY(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), (uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)) ^ uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_IDENTITY(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), max(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), uvec3(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), 0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), 1u))))))), (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), uint(_GLF_IDENTITY(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), max(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) >> 0u))), 1u)))))))) >> 0u))), _GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == _GLF_IDENTITY(read_2, 0u ^ (read_2))), _GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_IDENTITY(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, max(5u, 5u))) >> 0u)), uint(5u))), 1u), max(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))))))), _GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))), 1u), max(uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u), uint(5u))), 1u), uvec3(uint(read_1 == read_2), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))))))))) + 1, 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, min(64, 64)))), 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, false, false)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && true)) && true)))) || false), false, false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)], uint(read_1 == read_2) + 1, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(4, min(4, 4))) | (_GLF_IDENTITY(4, min(4, 4)))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), true)), true))), false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
