#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-81.05)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-8.0, -3652.2913)))), injectionSwitch)).y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0)), min(float(mat3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4481.3698)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-5.0))), 1.0)), abs(0.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(7.9, mix(float(_GLF_FUZZED(-12.57)), float(7.9), bool(true))))), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat3(mat3(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), clamp(max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), 0.0, 0.0, 1.0)), _GLF_IDENTITY(min(float(mat3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4481.3698)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), mat3(mat3(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))), min(min(float(mat3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4481.3698)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.8)), bool(false))), 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat3(mat3(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, abs(tan(0.0)), 1.0, sqrt(1.0), 0.0, 0.0, 1.0))), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, abs(tan(0.0)), 1.0, sqrt(1.0), 0.0, 0.0, 1.0))), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, abs(tan(0.0)), 1.0, sqrt(1.0), 0.0, 0.0, 1.0))), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat3(mat3(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(min(float(mat3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.1))), mix(float(0.0), float(_GLF_FUZZED(4481.3698)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), _GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0))), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat3(mat3(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.6))), 1.0)), 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true)), (true ? mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true)) : _GLF_FUZZED(4.4))), mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))), max(min(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(4481.3698)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0), (true ? mat3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(4481.3698)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(129.202, 408.627, 97.00, -8202.5682, -9.6, 8.0, -4.5, 3734.8255, -32.75))))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) : _GLF_FUZZED(-5.2))), 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0))), (vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))) * mat2(1.0))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(mat3(mat3(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y), float(_GLF_FUZZED(7.9)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), false, false)))))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), transpose(transpose(mat3(mat3(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y), float(_GLF_FUZZED(7.9)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bvec3(! (bool(true)), false, false)))))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))))))), min(float(mat3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(4481.3698)), bool(false)), max(_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(4481.3698)), bool(false)), (mix(float(0.0), float(_GLF_FUZZED(4481.3698)), bool(false))) * 1.0), mix(float(0.0), float(_GLF_FUZZED(4481.3698)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), clamp(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0), (mat3x2(_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), clamp(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(6091.1183)))))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat3(mat3(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))).y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(7.9, mix(float(_GLF_FUZZED(0.2)), float(7.9), bool(true))))), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))))))))) : _GLF_FUZZED(-0.7)))), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, cos(0.0))), min(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, cos(0.0))), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, cos(0.0)))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, cos(0.0))), min(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, cos(0.0))), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, cos(0.0)))))).x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(1.9, (true ? 1.9 : _GLF_FUZZED(-1.7))))), float(injectionSwitch.x), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.9)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, ! (! (true))))))), float(_GLF_FUZZED(_GLF_IDENTITY(-4.7, min(-4.7, _GLF_IDENTITY(-4.7, (true ? _GLF_IDENTITY(-4.7, mix(float(_GLF_FUZZED(8278.8589)), float(-4.7), bool(true))) : _GLF_FUZZED((uvec4(15616u, 140431u, 190959u, 195765u) , -4753.2665)))))))), bool(_GLF_IDENTITY(false, false || (false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(1.9, (true ? 1.9 : _GLF_FUZZED(-1.7))))), float(injectionSwitch.x), bool(true))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))), mix(float(_GLF_FUZZED(1.9)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-55.46) : injectionSwitch.x))))), bool(true)))), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4.7, mix(float(_GLF_FUZZED(-4.0)), float(-4.7), bool(true))), min(-4.7, -4.7)))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(1.9, (true ? 1.9 : _GLF_FUZZED(-1.7))))), float(injectionSwitch.x), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.9)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((1.2 / -8959.2146))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x))), bool(true)))), float(_GLF_FUZZED(_GLF_IDENTITY(-4.7, min(-4.7, -4.7)))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(1.9, (true ? 1.9 : _GLF_FUZZED(-1.7))))), float(injectionSwitch.x), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.9)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(2.4), _GLF_FUZZED(-4266.1018)), bvec2(false, false))), log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0)))).x))), bool(true)))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-4.7, min(_GLF_IDENTITY(-4.7, (-4.7) - sin(0.0)), -4.7))), mix(float(_GLF_FUZZED((float(-61372) * -0.4))), float(_GLF_FUZZED(_GLF_IDENTITY(-4.7, _GLF_IDENTITY(min(-4.7, _GLF_IDENTITY(-4.7, 1.0 * (-4.7))), float(_GLF_IDENTITY(mat2(min(-4.7, -4.7), sin(0.0), 0.0, 1.0), (_GLF_IDENTITY(mat2(min(-4.7, -4.7), sin(0.0), 0.0, 1.0), mat2(1.0) * (mat2(min(-4.7, -4.7), sin(0.0), 0.0, 1.0)))) * mat2(1.0))))))), bool(true)))), bool(false))))) > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bool(true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (uvec4(gl_WorkGroupSize, 1u)) | (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(uvec4(186423u, 21455u, 184206u, 129918u)) : uvec4(gl_WorkGroupSize, 1u))))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (uvec4(gl_WorkGroupSize, 1u)) | (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(uvec4(186423u, 21455u, 184206u, 129918u)) : uvec4(gl_WorkGroupSize, 1u)))))))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (uvec4(gl_WorkGroupSize, 1u)) | (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(uvec4(186423u, 21455u, 184206u, 129918u)) : uvec4(gl_WorkGroupSize, 1u))))))))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true), bvec3(bvec3(bvec3(false, false, true)))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.3)), float(injectionSwitch.x), bool(true)))) - 0.0) > injectionSwitch.y)) || _GLF_IDENTITY((false), ((false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size), uint(uvec2(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), (false ? _GLF_FUZZED(bitfieldInsert(subgroup_local_id, workgroup_id, 17211, -32583)) : _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), clamp(4, 4, 4)), 64, 0);
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)) | (virtual_gid))) - 0u)], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(uint(buf[virtual_gid]))), clamp(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), (buf[virtual_gid]) >> 0u), _GLF_IDENTITY(1u, min(1u, 1u)) * (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 1u)))], buf[virtual_gid])), ~ (~ (buf[virtual_gid]))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(0u & 192075u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), 0u + (uint(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))) & 192075u, 0u & 192075u))) ^ (~ (virtual_gid)))))) | (virtual_gid))], _GLF_IDENTITY(buf[virtual_gid], 0u + (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))) / 1u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], max(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))) & 192075u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) & 192075u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u) & 192075u))) ^ (~ (virtual_gid)))))) | (virtual_gid))], buf[virtual_gid]))), clamp(~ (_GLF_IDENTITY(buf[virtual_gid], max(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) & 192075u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) & 192075u, _GLF_IDENTITY(0u, 0u ^ (0u)) & 192075u))) ^ (~ (virtual_gid)))))) | (virtual_gid))], buf[virtual_gid]))), ~ (_GLF_IDENTITY(buf[virtual_gid], max(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) / 1u))) & 192075u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) & 192075u, 0u & 192075u))) ^ (~ (virtual_gid)))))) | (virtual_gid))], buf[virtual_gid]))), ~ (_GLF_IDENTITY(buf[virtual_gid], max(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(0u & 192075u, max(_GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) & 192075u, 0u & 192075u))) ^ (~ (virtual_gid)))))) | (virtual_gid))], buf[virtual_gid]))))))))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 1.0, abs(1.0), 0.0), vec4(abs(1.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, abs(1.0), 0.0), vec4(abs(1.0), 0.0, 0.0, 1.0)))))))))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) : injectionSwitch)).y)))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u + (read_1)), (_GLF_IDENTITY(read_1, 0u + (read_1))) | 0u) == read_2) + 1, 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) && true), (((false) && true)) && true), (! ((false) && true)) || false)))), true && (! (_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) || false)))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)))))) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((bvec2(false, true) , vec2(9.8, -4.1))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))))))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) + 0u)), _GLF_IDENTITY(max(uint(read_1 == read_2), uint(read_1 == read_2)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(max(uint(read_1 == read_2), uint(read_1 == read_2)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u, 1u), (_GLF_IDENTITY(uvec4(max(uint(read_1 == read_2), uint(read_1 == read_2)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(max(uint(read_1 == read_2), uint(read_1 == read_2)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u, 1u)))) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(max(uint(read_1 == read_2), uint(read_1 == read_2)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u, 1u), (_GLF_IDENTITY(uvec4(max(uint(read_1 == read_2), uint(read_1 == read_2)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(max(uint(read_1 == read_2), uint(read_1 == read_2)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u, 1u)))) + uvec4(0u, 0u, 0u, 0u)))) ^ 0u)))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, false, true))))))) << 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), 0u ^ (uint(read_1 == read_2))), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(uint(read_1))) == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2))))))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), uint(read_1 == read_2)), (max(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), uint(read_1 == read_2))) >> 0u))) << 0u, clamp((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(uint(read_1))) == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_size)))))), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2))))))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)))), 1u, 0u), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, (read_1) + 0u) == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u)), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u)) << uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(uint((47.04 >= 539.211))) : read_1)) == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(read_1, (read_1) | 0u))), (read_1) >> 0u) == read_2)))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), min(uint(read_1 == read_2), uint(read_1 == read_2))), max(uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((~ (read_2)), min(_GLF_IDENTITY((~ (read_2)), uint(uvec2((~ (read_2)), 1u))), (~ (read_2)))) * 1u)))))), uint(read_1 == read_2)))) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(64558u))), 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) >> (2499u & 0u)), 0u)))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(uint((47.04 >= 539.211))) : read_1)) == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(read_1, (read_1) | 0u))), (read_1) >> 0u) == read_2)))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), min(uint(read_1 == read_2), uint(read_1 == read_2))), max(uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((~ (read_2)), min(_GLF_IDENTITY((~ (read_2)), uint(uvec2((~ (read_2)), 1u))), (~ (read_2)))) * 1u)))))), uint(read_1 == read_2)))) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(64558u))), 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) >> (2499u & 0u)), 0u)))), 1u, 0u))), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << (118696u & 0u))) << 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(max(uint(read_1 == read_2), uint(read_1 == read_2)), (true ? max(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == read_2)) : _GLF_FUZZED(subgroup_local_id))))) | (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(workgroup_size) : read_2))) - 0u)), uint(read_1 == read_2)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))))))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))), uint(uvec4(~ (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))), 0u, 1u, 0u)))))) | (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))))))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u)) << uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u), (true ? uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u) : _GLF_FUZZED((uvec3(151163u, 160725u, 27713u) & virtual_gid)))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u), (true ? uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u) : _GLF_FUZZED((uvec3(151163u, 160725u, 27713u) & virtual_gid)))), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u), (true ? uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u) : _GLF_FUZZED((uvec3(151163u, 160725u, 27713u) & virtual_gid))))))), 1u))), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((next_virtual_gid * read_1)) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), 1u * (_GLF_IDENTITY(0u, (0u) / 1u))))), clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), (true ? _GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), uint(read_1 == read_2))) : _GLF_FUZZED(num_workgroup)))))) << 0u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))), max(uint(read_1 == read_2), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | 0u))))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u)) << uvec3(0u, 0u, 0u))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) - (0u ^ (0u | 0u))) == _GLF_IDENTITY(read_2, 0u ^ (read_2))), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u), _GLF_IDENTITY((true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u)))) : _GLF_IDENTITY(_GLF_FUZZED((uvec3(151163u, 160725u, 27713u) & virtual_gid)), (_GLF_FUZZED((uvec3(151163u, 160725u, 27713u) & virtual_gid))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY(uvec3(8u), (uvec3(8u)) | (uvec3(8u))))))), (uvec3(0u, 0u, 0u) & uvec3(110364u, 15508u, 153441u)) ^ (_GLF_IDENTITY((true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u)))) : _GLF_IDENTITY(_GLF_FUZZED((uvec3(151163u, 160725u, 27713u) & virtual_gid)), (_GLF_FUZZED((uvec3(151163u, 160725u, 27713u) & virtual_gid))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY(uvec3(8u), (uvec3(8u)) | (uvec3(8u))))))), uvec3(0u, 0u, 0u) ^ ((true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u)))) : _GLF_IDENTITY(_GLF_FUZZED((uvec3(151163u, 160725u, 27713u) & virtual_gid)), (_GLF_FUZZED((uvec3(151163u, 160725u, 27713u) & virtual_gid))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY(uvec3(8u), (uvec3(8u)) | (uvec3(8u)))))))))))), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((next_virtual_gid * read_1)) : _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY((0u) / 1u, (_GLF_IDENTITY((0u) / 1u, 0u ^ ((0u) / 1u))) - 0u)))), clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u)) << uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, 0u ^ (read_1))))) == read_2), max(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), uint(read_1 == read_2)))) << 0u)), 1u, 0u), (true ? uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_local_id)))), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, ((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u) - 0u), (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) / 1u) == read_2)))) << 0u)), 1u, 0u) : _GLF_FUZZED((uvec3(151163u, 160725u, 27713u) & virtual_gid)))), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((next_virtual_gid * read_1)) : _GLF_IDENTITY(0u, (0u) / 1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, 1u * ((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(uvec2(_GLF_IDENTITY(read_1, (read_1) << 0u), 0u))) == _GLF_IDENTITY(read_2, (read_2) >> 0u)), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u, (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), uint(read_1 == read_2)))) << 0u)), 1u, 0u)) << uvec3(0u, 0u, 0u)))) | 0u))))))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == read_2)))), ! (! (_GLF_IDENTITY(! (read_1 == read_2), bool(bool(! (read_1 == read_2)))))))) || false)))), (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (read_2) >> 0u)))), uint(read_1 == read_2)))) << 0u), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, false, true)))), max(uint(read_1 == read_2), uint(read_1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))))) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(read_1)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(uint(read_1)), clamp(uint(uint(read_1)), uint(uint(read_1)), uint(uint(read_1))))))) == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2))))), max(_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), 1u))), uint(read_1 == read_2)))) << 0u)))) | 0u) + 1, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) / 1)))) / 1), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false))), true, false, false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
