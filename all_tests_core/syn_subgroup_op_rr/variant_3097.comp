#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), bool(bvec3(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) || false))) && true))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(739.974)), vec2(_GLF_FUZZED((0.8 / 6.2)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        {
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, _GLF_IDENTITY(50.17, max(50.17, 50.17)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, _GLF_IDENTITY(50.17, max(50.17, 50.17)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, _GLF_IDENTITY(50.17, max(50.17, 50.17)))))).x)), 1.0 * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, _GLF_IDENTITY(50.17, clamp(50.17, _GLF_IDENTITY(50.17, mix(float(50.17), float(_GLF_FUZZED(8171.6692)), bool(false))), 50.17)))))).x)) > injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-4.3, 50.17), vec2(mat2x3(vec2(-4.3, _GLF_IDENTITY(50.17, log(1.0) + (50.17))), 1.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(-4.3, 50.17), vec2(mat2x3(vec2(-4.3, 50.17), 1.0, 0.0, 0.0, 1.0))), mix(vec2((_GLF_IDENTITY(vec2(-4.3, 50.17), vec2(mat2x3(vec2(-4.3, 50.17), 1.0, 0.0, 0.0, 1.0))))[0], _GLF_FUZZED(77.92)), vec2(_GLF_FUZZED(-9721.9447), (_GLF_IDENTITY(vec2(-4.3, 50.17), vec2(mat2x3(vec2(-4.3, 50.17), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, 1.0))))[1]), bvec2(false, true)))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-4.3, 50.17), vec2(mat2x3(vec2(-4.3, _GLF_IDENTITY(50.17, log(1.0) + (50.17))), 1.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(-4.3, 50.17), vec2(mat2x3(vec2(-4.3, 50.17), 1.0, 0.0, 0.0, 1.0))), mix(vec2((_GLF_IDENTITY(vec2(-4.3, 50.17), vec2(mat2x3(vec2(-4.3, 50.17), 1.0, 0.0, 0.0, 1.0))))[0], _GLF_FUZZED(77.92)), vec2(_GLF_FUZZED(-9721.9447), (_GLF_IDENTITY(vec2(-4.3, 50.17), vec2(mat2x3(vec2(-4.3, 50.17), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, 1.0))))[1]), bvec2(false, true)))))))).x > injectionSwitch.y)) || false))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > injectionSwitch.y)))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).y)))))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > injectionSwitch.y)))))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4.3, 50.17)), mix(vec2(_GLF_FUZZED(-0.3), (_GLF_FUZZED(vec2(-4.3, 50.17)))[1]), vec2((_GLF_FUZZED(vec2(-4.3, 50.17)))[0], _GLF_FUZZED(-96.20)), bvec2(true, false))))).x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4.3, 50.17)), clamp(_GLF_FUZZED(vec2(-4.3, 50.17)), _GLF_FUZZED(vec2(-4.3, 50.17)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-4.3, 50.17)), (true ? _GLF_FUZZED(vec2(-4.3, 50.17)) : _GLF_FUZZED(vec2(-394.276, -2.4)))))))).x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-4.3, 50.17), vec2(mat2x3(vec2(-4.3, 50.17), 1.0, 0.0, 0.0, 1.0)))))).x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bool((true) && true)))) && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-4.3, 50.17), vec2(mat2x3(vec2(-4.3, 50.17), 1.0, 0.0, 0.0, 1.0)))))).x > injectionSwitch.y))))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-4.3, 50.17), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2(-4.3, 50.17), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)), (mat2x4(vec2(-4.3, 50.17), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0))) * mat2(1.0))), clamp(vec2(_GLF_IDENTITY(mat2x4(vec2(-4.3, 50.17), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)), (mat2x4(vec2(-4.3, 50.17), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0))) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2x4(vec2(-4.3, 50.17), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)), (mat2x4(vec2(-4.3, 50.17), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0))) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2x4(vec2(-4.3, 50.17), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)), (mat2x4(vec2(-4.3, 50.17), 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0))) * mat2(1.0))))))))).x > injectionSwitch.y)))))), false || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > injectionSwitch.y)))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > injectionSwitch.y))) || false)))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-4.3, 50.17), clamp(_GLF_IDENTITY(vec2(-4.3, 50.17), (vec2(-4.3, 50.17)) * mat2(1.0)), _GLF_IDENTITY(vec2(-4.3, 50.17), mat2(1.0) * (vec2(-4.3, 50.17))), _GLF_IDENTITY(vec2(-4.3, _GLF_IDENTITY(50.17, clamp(50.17, 50.17, _GLF_IDENTITY(50.17, (50.17) + 0.0)))), max(vec2(-4.3, 50.17), vec2(-4.3, 50.17))))))), min((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-4.3, 50.17), clamp(_GLF_IDENTITY(vec2(-4.3, 50.17), (vec2(-4.3, 50.17)) * mat2(1.0)), _GLF_IDENTITY(vec2(-4.3, 50.17), mat2(1.0) * (vec2(-4.3, 50.17))), _GLF_IDENTITY(vec2(-4.3, 50.17), max(vec2(-4.3, 50.17), vec2(-4.3, 50.17))))))), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-4.3, 50.17), clamp(_GLF_IDENTITY(vec2(-4.3, 50.17), (vec2(-4.3, 50.17)) * mat2(1.0)), _GLF_IDENTITY(vec2(-4.3, 50.17), mat2(1.0) * (vec2(-4.3, 50.17))), _GLF_IDENTITY(vec2(-4.3, 50.17), max(vec2(-4.3, 50.17), vec2(-4.3, 50.17)))))))))).x > injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4.3, 50.17)), mix(vec2(_GLF_FUZZED(-0.3), (_GLF_FUZZED(vec2(-4.3, 50.17)))[1]), vec2((_GLF_FUZZED(vec2(-4.3, 50.17)))[0], _GLF_FUZZED(-96.20)), bvec2(true, false))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4.3, 50.17)), mix(vec2(_GLF_FUZZED(-0.3), (_GLF_FUZZED(vec2(-4.3, 50.17)))[1]), vec2((_GLF_FUZZED(vec2(-4.3, 50.17)))[0], _GLF_FUZZED(-96.20)), bvec2(true, false))))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-4.3, 50.17)), mix(vec2(_GLF_FUZZED(-0.3), (_GLF_FUZZED(vec2(-4.3, 50.17)))[1]), vec2((_GLF_FUZZED(vec2(-4.3, 50.17)))[0], _GLF_FUZZED(-96.20)), bvec2(true, false))), vec2(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(vec2(-4.3, 50.17)), mix(vec2(_GLF_FUZZED(-0.3), (_GLF_FUZZED(vec2(-4.3, 50.17)))[1]), vec2((_GLF_FUZZED(vec2(-4.3, 50.17)))[0], _GLF_FUZZED(-96.20)), bvec2(true, false))), 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, log(1.0), 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, abs(0.0)))))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4.3, 50.17)), mix(vec2(_GLF_FUZZED(-0.3), (_GLF_FUZZED(vec2(-4.3, 50.17)))[1]), vec2((_GLF_FUZZED(vec2(-4.3, 50.17)))[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) ^ 0), 0))], _GLF_FUZZED(-96.20)), bvec2(true, false))))).x)) > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > injectionSwitch.y)))))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))))[1]), vec2(_GLF_FUZZED(89.35), _GLF_FUZZED(-3390.7103)), bvec2(false, false)))) * vec2(1.0, 1.0)))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-4.3, 50.17), vec2(mat2x3(vec2(-4.3, 50.17), 1.0, 0.0, 0.0, 1.0)))))).x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))), min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17))))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4.3, 50.17)), mix(vec2(_GLF_FUZZED(-0.3), (_GLF_FUZZED(vec2(-4.3, 50.17)))[1]), vec2((_GLF_IDENTITY(_GLF_FUZZED(vec2(-4.3, 50.17)), vec2(_GLF_IDENTITY(mat4(_GLF_FUZZED(vec2(-4.3, 50.17)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, abs(1.0), _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.4))), 0.0)), 0.0), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_FUZZED(vec2(-4.3, 50.17)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), (determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4256.3561)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true)))) + 0.0), 0.0, 0.0, 1.0))) / 1.0), 1.0, abs(1.0), _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0, 0.0, 0.0), (mat4(_GLF_FUZZED(vec2(-4.3, 50.17)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, abs(1.0), _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 1.0)), 0.0, 0.0, 0.0)) * mat4(1.0))))))))[0], _GLF_FUZZED(-96.20)), bvec2(true, false))))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, 50.17)))).x > injectionSwitch.y))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           for(int _injected_loop_counter = (1 & _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) | (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ _GLF_IDENTITY(1, int(ivec2(1, 0))))); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((true), true && ((true)))), bool(bvec2((! (true)), true))))))) && _GLF_IDENTITY((false), true && ((false))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size))) | 0u), subgroup_size, subgroup_size)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size, subgroup_size))))) | 0u)) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> _GLF_IDENTITY(0u, (0u) | 0u)), _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u), (subgroup_id), (subgroup_id))))) | 0u)) / _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u | (1u))))), clamp(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u | (1u))))), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u | (1u))))), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u | (1u)))))))) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY(max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), ~ (~ (max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))) << 0u)))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), uint(uint(min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(min(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 0u))))) + 1) % subgroup_size)), (true ? min(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 0u))))) + 1) % subgroup_size)) : _GLF_FUZZED(num_workgroup)))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
  {
   do
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(0.0, 0.0) + (vec2(vec2(injectionSwitch)))), (_GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-19.93 * 1.1))), float(0.0), bool(true)))) + (vec2(vec2(injectionSwitch))))) + vec2(0.0, 0.0))).y))));
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(911.270)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-9.3)))))) || false)))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))));
    }
   else
    {
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))) < 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), ! (! (! (false))))))));
      }
    }
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), (ivec4(_injected_loop_counter, 0, (_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec4(5, _GLF_IDENTITY(1, (1) / 1), 0, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (ivec4(5, _GLF_IDENTITY(1, (1) / 1), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(ivec4(5, _GLF_IDENTITY(1, (1) / 1), 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(5, _GLF_IDENTITY(1, (1) / 1), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) >> ivec4(0, 0, 0, 0))))))), int(5))), 0)) >> ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (_GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (false ? _GLF_FUZZED(bitfieldInsert(-80768, _injected_loop_counter, -79242, 32389)) : 0)), 0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, _GLF_IDENTITY(0, int(ivec2(0, 1))), 0))), (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(5, 0 | (5))))))), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(10532)))), int(5))), 0)) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))) | (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(28392)))), (ivec4(_injected_loop_counter, _GLF_IDENTITY(0, max(0, 0)), (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0)))))) | (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(5, _GLF_IDENTITY(1, (1) / 1), 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(5, _GLF_IDENTITY(1, (1) / 1), 0, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0), mat2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))))))))) / ivec4(1, 1, 1, 1)), (ivec4(5, _GLF_IDENTITY(1, (1) / 1), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) | (ivec4(5, _GLF_IDENTITY(1, (1) / 1), 0, int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)))))))), int(5))), 0)) >> ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5)))))), 0), (ivec4(_injected_loop_counter, 0, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), int(_GLF_IDENTITY(ivec3(0 << _GLF_IDENTITY(int(5), int(5)), 0, 0), _GLF_IDENTITY(~ (~ (ivec3(0 << _GLF_IDENTITY(int(5), int(5)), 0, 0))), ~ (~ (~ (~ (ivec3(0 << _GLF_IDENTITY(int(5), int(5)), 0, 0)))))))))), 0)) >> ivec4(0, 0, _GLF_IDENTITY(0, (0) >> 0), 0))), clamp(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5)))))), 0), (ivec4(_injected_loop_counter, 0, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), int(_GLF_IDENTITY(ivec3(0 << _GLF_IDENTITY(int(5), int(5)), 0, 0), _GLF_IDENTITY(~ (~ (ivec3(0 << _GLF_IDENTITY(int(5), int(5)), 0, 0))), ~ (~ (~ (~ (ivec3(0 << _GLF_IDENTITY(int(5), int(5)), 0, 0)))))))))), 0)) >> ivec4(0, 0, _GLF_IDENTITY(0, (0) >> 0), 0))), int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5)))))), 0), (ivec4(_injected_loop_counter, 0, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), int(_GLF_IDENTITY(ivec3(0 << _GLF_IDENTITY(int(5), int(5)), 0, 0), _GLF_IDENTITY(~ (~ (ivec3(0 << _GLF_IDENTITY(int(5), int(5)), 0, 0))), ~ (~ (~ (~ (ivec3(0 << _GLF_IDENTITY(int(5), int(5)), 0, 0)))))))))), 0)) >> ivec4(0, 0, _GLF_IDENTITY(0, (0) >> 0), 0))), int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5)))))), 0), (ivec4(_injected_loop_counter, 0, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), int(_GLF_IDENTITY(ivec3(0 << _GLF_IDENTITY(int(5), int(5)), 0, 0), _GLF_IDENTITY(~ (~ (ivec3(0 << _GLF_IDENTITY(int(5), int(5)), 0, 0))), ~ (~ (~ (~ (ivec3(0 << _GLF_IDENTITY(int(5), int(5)), 0, 0)))))))))), 0)) >> ivec4(0, 0, _GLF_IDENTITY(0, (0) >> 0), 0))))), (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, _GLF_IDENTITY(0, (0) | (0)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(5, 0 | (5)), 0 | (_GLF_IDENTITY(5, 0 | (5))))))))), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(10532)))), int(5))), 0)) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), max(0, 0)))))))) | (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, _GLF_IDENTITY(0, (0) >> 0), (0 << _GLF_IDENTITY(int(5), int(5))), 0), (ivec4(_injected_loop_counter, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))), (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0)))))) | (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), _GLF_IDENTITY((ivec4(_injected_loop_counter, 0, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ((0 << _GLF_IDENTITY(int(5), int(5)))) | (0 << _GLF_IDENTITY(int(4), int(4)))), 0)), ((ivec4(_injected_loop_counter, 0, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ((0 << _GLF_IDENTITY(int(5), int(5)))) | (0 << _GLF_IDENTITY(int(4), int(4)))), 0))) | (_GLF_IDENTITY((ivec4(_injected_loop_counter, 0, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ((0 << _GLF_IDENTITY(int(5), int(5)))) | (0 << _GLF_IDENTITY(int(4), int(4)))), 0)), ivec4(0, 0, 0, 0) ^ ((ivec4(_injected_loop_counter, 0, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ((0 << _GLF_IDENTITY(int(5), int(5)))) | (0 << _GLF_IDENTITY(int(4), int(4)))), 0)))))) >> ivec4(0, 0, 0, 0)))))))) < _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) - 0))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(110.893)), vec2(_GLF_FUZZED(-766.741), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false || ((injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(34.14, 35.58)))), injectionSwitch)).y)) || false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) || false)), false, false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.8) : injectionSwitch.y))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) || false)), false, false)))), true)), false)))), false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(34.14, 35.58)))), injectionSwitch)).y)) || false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) || false)), false, false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.8) : injectionSwitch.y))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) || false)), false, false)))), true)), false)))), false))))))), (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(34.14, 35.58)))), injectionSwitch)).y)) || false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))) || false)), false, false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.8) : injectionSwitch.y))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) || false)), false, false)))), true)), false)))), false)))))))) && true))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))) || ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec4(5, _GLF_IDENTITY(1, (1) / 1), 0, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-68.85)), bool(false))))), (ivec4(5, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> (0 << _GLF_IDENTITY(int(8), int(8))))) / 1) / 1), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) | (ivec4(5, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, (1) / 1) : _GLF_FUZZED((_injected_loop_counter ++)))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))), int(5))), 0)) >> ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) - 0), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(5, 0 | (5))))))), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(10532)))), int(5))), 0)) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))) | (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) - ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) | (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0))))), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-1.4)), bool(false)))) + (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_injected_loop_counter)))) : _GLF_FUZZED(7131))), int(5))), min((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_IDENTITY(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_injected_loop_counter))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_injected_loop_counter))), ~ (~ (_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_injected_loop_counter))))))))) : _GLF_FUZZED(7131))), int(5))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_injected_loop_counter)))) : _GLF_FUZZED(7131))), int(5))))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec4(5, _GLF_IDENTITY(1, (1) / 1), 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(5, _GLF_IDENTITY(1, (1) / 1), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) | (ivec4(5, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) / 1), 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))), max(injectionSwitch, injectionSwitch)).y)))))))), int(5))), 0)) >> ivec4(0, 0, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (_GLF_IDENTITY(0, 0 + (0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5))), _GLF_IDENTITY(0, ~ (~ (0)))), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (_GLF_IDENTITY(5, max(5, 5))) | 0), (_GLF_IDENTITY(5, max(5, 5))) | (_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))), (0 >> _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))), (false ? _GLF_FUZZED(8319) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))), ((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))))) ^ 0))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(5, 0 | (5))))))), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(true ? 5 : _GLF_FUZZED(10532), max(true ? 5 : _GLF_FUZZED(10532), true ? 5 : _GLF_FUZZED(10532)))))), int(5))), 0)) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))) | (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), clamp((0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5))))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (_GLF_IDENTITY(0, 0 + (0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5))), _GLF_IDENTITY(0, ~ (~ (0)))), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (_GLF_IDENTITY(5, max(5, 5))) | 0), (_GLF_IDENTITY(5, max(5, 5))) | (_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))), (0 >> _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))), (false ? _GLF_FUZZED(8319) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))), ((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))))) ^ 0))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(5, 0 | (5))))))), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(true ? 5 : _GLF_FUZZED(10532), max(true ? 5 : _GLF_FUZZED(10532), true ? 5 : _GLF_FUZZED(10532)))))), int(5))), 0)) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))) | (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), clamp((0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5))))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0)))))), ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (_GLF_IDENTITY(0, 0 + (0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5))), _GLF_IDENTITY(0, ~ (~ (0)))), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (_GLF_IDENTITY(5, max(5, 5))) | 0), (_GLF_IDENTITY(5, max(5, 5))) | (_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))), (0 >> _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))), (false ? _GLF_FUZZED(8319) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))), ((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))))) ^ 0))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(5, 0 | (5))))))), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(true ? 5 : _GLF_FUZZED(10532), max(true ? 5 : _GLF_FUZZED(10532), true ? 5 : _GLF_FUZZED(10532)))))), int(5))), 0)) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))) | (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), clamp((0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5))))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0))))))) | ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (_GLF_IDENTITY(0, 0 + (0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, 5, 5))), int(5))), _GLF_IDENTITY(0, ~ (~ (0)))), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (_GLF_IDENTITY(5, max(5, 5))) | 0), (_GLF_IDENTITY(5, max(5, 5))) | (_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))), (0 >> _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))), (false ? _GLF_FUZZED(8319) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))), ((_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))))) ^ 0))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(5, 0 | (5))))))), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(true ? 5 : _GLF_FUZZED(10532), max(true ? 5 : _GLF_FUZZED(10532), true ? 5 : _GLF_FUZZED(10532)))))), int(5))), 0)) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))) | (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), clamp((0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5))))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0))))))))) >> 0), ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, 0 | (5)), clamp(5, 5, 5))), int(5))), _GLF_IDENTITY(0, ~ (~ (0)))), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (_GLF_IDENTITY(0, int(ivec2(0, 1))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (_GLF_IDENTITY(5, max(5, 5))) | (_GLF_IDENTITY(_GLF_IDENTITY(5, _GLF_IDENTITY(max(5, 5), min(max(5, 5), max(5, 5)))), (_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), max(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))) ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, 1.0, length(0.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), cos(0.0)))))))), _GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(5, 0 | (5))))))), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(10532)))), int(5))), 0)) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))))))) | (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, _GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), int(5))))), clamp((0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5))))), 0), _GLF_IDENTITY((ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0), ivec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * ((ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, 0))))))))) - 0) | (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), (ivec4(_injected_loop_counter, 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0)) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0)))))))))) < 1), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(110.893)), vec2(_GLF_FUZZED(-766.741), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)))), injectionSwitch)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))).x, (false ? _GLF_FUZZED(dot(-3131.4728, 4.8)) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))).x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4023.2654) : _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(-5.0, 0.0 + (-5.0))))))))) || false)), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || false)))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, log(1.0), 1.0, tan(0.0), abs(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0))))) || false)) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))).y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false), true, false, true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)) || false, ! (! ((! (injectionSwitch.x > injectionSwitch.y)) || false))))), _GLF_IDENTITY(false, true && (false)), false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)) || false, ! (! ((! (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false)))))))), false, false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, true))))) || false)), false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), true)), false)))), false)))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))), false)))))), _GLF_IDENTITY(true, bool(bool(true))) && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), true && (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), ((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, abs(1.0), sin(0.0), 1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), (! (injectionSwitch.x > injectionSwitch.y)) || false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec4(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) * 1), 0, _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), clamp(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, ((0) * 1) | (_GLF_IDENTITY((0) * 1, ((0) * 1) ^ 0)))), 0, 0)))], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) * 1), 0, 0)))], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) * 1), 0, 0)))], max(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))])), injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)) || false, ((! (injectionSwitch.x > injectionSwitch.y)) || false) || false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))) || false)), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))) || false))))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))))) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), 0.0)))), 0.0, exp(0.0), 1.0)), (float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), float(vec2(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), 0.0)))), 0.0, exp(0.0), 1.0))) - 0.0)))))))))), false)), true && (bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec4(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec4(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bvec4(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) * 1), 0, 0)))], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), clamp(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) * 1), 0, 0)))], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) * 1), 0, 0)))], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) * 1), 0, 0)))], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), true && (! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.3) : injectionSwitch.x)) > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false)), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(76775) : _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 1 * _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++))), ((_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++)))) << 0)), (_injected_loop_counter ++) ^ 0))), 0 | (_injected_loop_counter ++)) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, int(int(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))))))) | (_injected_loop_counter), 0 | ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, int(int(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))))))) | (_injected_loop_counter)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) / 1u) == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_id)))))), _GLF_IDENTITY(read_2, (read_2) | 0u))), ~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))), 0u | (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))))), (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))) | (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | 0u), clamp(_GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(read_2, (read_2) | 0u))))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_id)))))), _GLF_IDENTITY(read_2, (read_2) | 0u))), ~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))), 0u | (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))))), (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))) | (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | 0u), clamp(_GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(read_2, (read_2) | 0u))))))))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_id)))))), _GLF_IDENTITY(read_2, (read_2) | 0u))), ~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))), 0u | (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))))), (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))) | (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | 0u), clamp(_GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(read_2, (read_2) | 0u))))))))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_id)))))), _GLF_IDENTITY(read_2, (read_2) | 0u))), ~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))), 0u | (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))))), (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))) | (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | 0u), clamp(_GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(read_2, (read_2) | 0u))))))))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_id)))))), _GLF_IDENTITY(read_2, (read_2) | 0u))), ~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))), 0u | (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))))), (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))) | (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | 0u), clamp(_GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(read_2, (read_2) | 0u)))))))))))))))) >> 0u))))), bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(! (! (bool(read_1 == read_2))), (! (! (bool(read_1 == read_2)))) || false))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec2(read_1, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u)), ~ (~ (uvec2(read_1, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u)))))))) / 1u) == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_id)))), uint(uvec3(~ (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_id)))), 0u, 1u))))), _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | 0u, min((read_2) | 0u, (read_2) | 0u))))), ~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), (read_2) | 0u), _GLF_IDENTITY(read_2, (read_2) | 0u))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))) | (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) >> 0u), (read_2) | 0u)))))) | (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))))), (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), clamp((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))))) | (~ (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))))))) - 0u)) ^ 0u)))), bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(_GLF_IDENTITY(read_2, (read_2) + 0u), ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | 0u), 1u, 1u)))), ! (! (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false))))))))) ^ 0u), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) / 1u) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | 0u, max((read_2) | 0u, (read_2) | 0u))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))), (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))) - 0u)))) / 1u)), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))), clamp((_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | 0u, (_GLF_IDENTITY((read_2) | 0u, ((read_2) | 0u) ^ 0u)) | 0u))))), (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))), (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))))) / 1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_2) | 0u, ~ (~ (_GLF_IDENTITY((read_2) | 0u, uint(uint((read_2) | 0u)))))), (_GLF_IDENTITY((read_2) | 0u, ~ (~ (_GLF_IDENTITY((read_2) | 0u, uint(uint((read_2) | 0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (~ (_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)), clamp(min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)), min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)), _GLF_IDENTITY(min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)), (min(read_2, _GLF_IDENTITY(read_2, (read_2) | _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, ((0u ^ 0u) << _GLF_IDENTITY(uint(5u), uint(5u))), 1u)))))) >> 0u))))))))), 1u * (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), max(~ (read_2), ~ (read_2)))))) | _GLF_IDENTITY(0u, ~ (~ (0u))))))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) / 1u)) | 0u))))), max((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) << (1u ^ 1u)), _GLF_IDENTITY(read_2, (read_2) | 0u))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) / 1u)) | 0u))))), max((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) << (1u ^ 1u)), _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | 0u, (true ? (read_2) | 0u : _GLF_FUZZED(subgroup_id))))))))))) * 1u)), clamp((~ _GLF_IDENTITY((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), max((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))), max((_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))), (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))))))), _GLF_IDENTITY((~ _GLF_IDENTITY((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), _GLF_IDENTITY(max((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (max((~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))))))), min((~ _GLF_IDENTITY((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), max((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u + (read_2)), min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) >> 0u)))) | 0u)))) : _GLF_FUZZED(num_workgroup)))), max((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | 0u, ~ (~ ((read_2) | 0u))))))))))), 0u | ((~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) | 0u))), (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) | 0u)))) / 1u))), max((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u)))))))))))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), max((~ (_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))), (true ? _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u))) : _GLF_FUZZED(mix(subgroup_size, workgroup_id, false))))) | 0u))))))))))))) ^ 0u)), bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 0u))) == read_2)))))))) >> 0u) + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED((++ read_1)) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) / 1u), clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) / 1u), (true ? _GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) / 1u, ((_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) / 1u) >> 0u)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) / 1u))) == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false)) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false), _GLF_IDENTITY(true, false || (true)), true, true))))))), _GLF_IDENTITY(bool(bvec2((bool(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false)) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false), _GLF_IDENTITY(true, false || (true)), true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec2((bool(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false)) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false), _GLF_IDENTITY(true, false || (true)), true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) + 1, ~ (~ (false ? _GLF_FUZZED((++ read_1)) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) / 1u), clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(read_1) : 1u))), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) / 1u), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(read_1, 1u)), 0u | (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), ~ (~ (uint(uvec2(read_1, 1u))))))))) / 1u))) == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (! (read_1 == read_2)) || false), true, true, true)))))), true && (bool(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), false, false))), (! (read_1 == read_2)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (! (read_1 == read_2)) || false), true, true, true)))))))))))))) + 1))))), 4, 64, 4);
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))) || false))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ((0 >> _GLF_IDENTITY(int(6), int(6)))) ^ 0)) >> 0)); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(bvec2(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), false))), false || (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) - 0u)), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) - 0u)), (~ (_GLF_IDENTITY(read_2, (read_2) - 0u))) | 0u)) | 0u)))))), 0u | (read_2)), 0u))), (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) - 0u)), ~ (~ (~ (_GLF_IDENTITY(read_2, (read_2) - 0u))))))), 0u | (read_2)), 0u))), 0u ^ (_GLF_IDENTITY(read_2, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) - 0u)), ~ (~ (~ (_GLF_IDENTITY(read_2, (read_2) - 0u))))))), 0u | (read_2)), 0u))))), true && (read_1 == _GLF_IDENTITY(read_2, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) - 0u)), ~ (~ (~ (_GLF_IDENTITY(read_2, (read_2) - 0u))))))), 0u | (read_2)), 0u)))))) || false)) && true)))) + 1, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), int(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))) + 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) * 1))) + 0, 0 ^ ((_GLF_IDENTITY(4, min(4, 4))) + 0))) << 0)), ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, 1)), (int(ivec2(3, _GLF_IDENTITY(1, (0 ^ 0) | (1))))) * 1))))))), (_GLF_IDENTITY(0, max(0, 0)) | 1)))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, determinant(mat4(1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), 0.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, int(ivec2(4, 0))))), (0 >> _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, int(ivec2(4, 0)))))))), (int(4)) | (_GLF_IDENTITY(int(4), max(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))))))), true && (_injected_loop_counter > (_GLF_IDENTITY(0, (false ? _GLF_FUZZED((_injected_loop_counter % -55898)) : _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), ~ (~ (int(4)))))), (int(4)) | (_GLF_IDENTITY(int(4), max(int(4), int(4)))))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || (false), bool(bvec3(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec3(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)), true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-7991) : int(4))), int(4)))))); _injected_loop_counter --)
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
