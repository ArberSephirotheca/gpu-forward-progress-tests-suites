#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), cos(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))), 1.0, sin(0.0), tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0), _GLF_IDENTITY((mat4(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7712.5766) : _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), cos(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, sin(0.0), tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(inverse(mat4(33.23, -8734.1201, 329.215, 74.69, 335.462, -3759.8970, 18.89, -96.55, 2.7, -0.8, 1.7, 4350.0739, 71.22, 6303.4642, 7.6, 1.0))) : (mat4(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7712.5766) : _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), cos(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, sin(0.0), tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0)))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), true && ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), max((~ (gl_NumWorkGroups)), (~ (gl_NumWorkGroups))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(mat2x4(vec4(injectionSwitch, 1.0, 1.0), 1.0, 0.0, 0.0, 1.0)), (vec4(mat2x4(vec4(injectionSwitch, 1.0, 1.0), 1.0, 0.0, 0.0, 1.0))) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.1) : 1.0)), 1.0, 1.0)), (false ? _GLF_FUZZED(vec4(4741.5427, 4.9, 909.545, -8.6)) : _GLF_IDENTITY(vec4(mat2x4(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (true ? vec4(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED(vec4(-7.7, 80.25, -72.08, 73.95)))), 1.0, 0.0, 0.0, 1.0)), (vec4(mat2x4(vec4(injectionSwitch, 1.0, 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8068.9182) : 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0))) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-8.1), (false ? _GLF_FUZZED(810.658) : _GLF_FUZZED(-8.1))) : 1.0)), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + log(1.0)), 1.0)))))))), (false ? _GLF_FUZZED(vec2(-0.9, 429.083)) : vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(mat2x4(vec4(injectionSwitch, 1.0, 1.0), 1.0, 0.0, 0.0, 1.0)), (vec4(mat2x4(vec4(injectionSwitch, 1.0, 1.0), 1.0, 0.0, 0.0, 1.0))) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.1) : 1.0)), 1.0, 1.0)), (false ? _GLF_FUZZED(vec4(4741.5427, 4.9, 909.545, -8.6)) : _GLF_IDENTITY(vec4(mat2x4(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (true ? vec4(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED(vec4(-7.7, 80.25, -72.08, 73.95)))), 1.0, 0.0, 0.0, 1.0)), (vec4(mat2x4(vec4(injectionSwitch, 1.0, 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8068.9182) : 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0))) / vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-8.1), (false ? _GLF_FUZZED(810.658) : _GLF_FUZZED(-8.1))) : 1.0)), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + log(1.0)), 1.0))))))))))) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.9)), bool(false)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true)))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x) - _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 0.0)))) > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || false)), true && (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1661.5158)), (_GLF_IDENTITY(float(_GLF_FUZZED(1661.5158)), (true ? float(_GLF_FUZZED(1661.5158)) : _GLF_FUZZED(3910.3117)))) + log(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, length(0.0) + (injectionSwitch.y)), injectionSwitch.y))), bool(true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) && _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), bool(bvec2(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))))))))), false || (! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))), min(injectionSwitch, injectionSwitch)).y))))) && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))), bool(bvec3(true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u))), (true ? _GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 0u), uvec3(uvec3(uvec3(subgroup_id, 1u, 0u))))))), ((subgroup_id)) | 0u))) : _GLF_FUZZED(subgroup_local_id))), 1u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) >> 0u))), 1u, 0u, 0u))) | 0u, ((uint(uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) >> 0u))), 1u, 0u, 0u))) | 0u) ^ 0u), max(_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) >> 0u))), 1u, 0u, 0u))) | 0u, ((uint(uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) >> 0u))), 1u, 0u, 0u))) | 0u) ^ 0u), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) >> 0u))), 1u, 0u, 0u))) | 0u, ((uint(uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) >> 0u))), 1u, 0u, 0u))) | 0u) ^ 0u))))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), min(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))), ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) >> 0u)) >> 0u)), ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), min(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))), ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))), ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)))), (clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), min(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))), ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))) / 1u), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)), clamp(((subgroup_id)), ((subgroup_id)), ((subgroup_id)))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), min(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id))) >> 0u)), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))), ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))), ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))))), 1u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) >> 0u))), (_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) >> 0u)))) + 0u), 1u, 0u, 0u))) | 0u)) * subgroup_size) >> 0u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u)) - 0u), ~ (subgroup_size)), (false ? _GLF_FUZZED(virtual_gid) : min(_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u))))))) - 0u), ~ (subgroup_size)))))) | (~ (subgroup_size))))), ((subgroup_local_id + 1) % subgroup_size) << _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, 0u))))));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), clamp(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u)))), ((_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))))) / _GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (0u)) ^ (next_virtual_gid)), next_virtual_gid, next_virtual_gid)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))))], _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1))), 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-26121))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((false)) && true), (! (false)) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), (! (false)) && true))))), (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), (! (false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (true)))))))) && true)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), ((false)) || false)), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))) || false)), true, false))))))) && _GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-678.118, 75.41, 303.178).s)), bool(false)))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0)))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.9) : _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, injectionSwitch.y))))))), false, false, false)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(0u | (virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u | (virtual_gid), min(0u | (virtual_gid), 0u | (virtual_gid))), ~ (~ (_GLF_IDENTITY(0u | (virtual_gid), min(0u | (virtual_gid), 0u | (virtual_gid))))))), max((_GLF_IDENTITY(0u | (virtual_gid), min(0u | (virtual_gid), 0u | (virtual_gid)))), (_GLF_IDENTITY(0u | (virtual_gid), min(_GLF_IDENTITY(0u | (virtual_gid), (0u | (virtual_gid)) >> 0u), 0u | (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) - 0u))))))) << 0u), min(_GLF_IDENTITY(0u | (virtual_gid), (_GLF_IDENTITY(0u | (virtual_gid), min(0u | (virtual_gid), 0u | (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))) : _GLF_FUZZED(subgroup_size)))), 0u + (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))) : _GLF_FUZZED(subgroup_size)))))))) * 1u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))) : _GLF_FUZZED(subgroup_size)))), 0u + (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))) : _GLF_FUZZED(subgroup_size)))))))) * 1u)), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))) : _GLF_FUZZED(subgroup_size)))), 0u + (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))) : _GLF_FUZZED(subgroup_size)))))))) * 1u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))) : _GLF_FUZZED(subgroup_size)))), 0u + (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))) : _GLF_FUZZED(subgroup_size)))))))) * 1u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))) : _GLF_FUZZED(subgroup_size)))), 0u + (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))))) : _GLF_FUZZED(subgroup_size)))))))) * 1u))))) / 1u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) - 0u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(2u), (1u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (uint(2u))), uint(2u)), max(min(uint(2u), uint(2u)), min(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> (0u ^ 0u))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> (0u ^ 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> (0u ^ 0u))), uint(uvec2(uint(_GLF_IDENTITY(2u, (2u) >> (0u ^ 0u))), 1u)))) ^ 0u) : _GLF_FUZZED(subgroup_size))))))))), 0u))))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u | (virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(0u | (virtual_gid), min(_GLF_IDENTITY(0u | (virtual_gid), (false ? _GLF_FUZZED((subgroup_size / virtual_gid)) : _GLF_IDENTITY(0u | (virtual_gid), (0u | (virtual_gid)) | (0u | _GLF_IDENTITY((virtual_gid), uint(uvec3(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 1u, 1u))))))), 0u | (virtual_gid))), min(0u | (virtual_gid), _GLF_IDENTITY(0u | (virtual_gid), uint(_GLF_IDENTITY(uvec2(0u | (virtual_gid), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec2(0u | (virtual_gid), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) << 0u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u | (virtual_gid), (0u | (virtual_gid)) << 0u), (_GLF_IDENTITY(0u | (virtual_gid), min(0u | (virtual_gid), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, (_GLF_IDENTITY((0u) + 0u, (false ? _GLF_FUZZED(atomicMin(read_1, virtual_gid)) : (0u) + 0u))) ^ 0u)))) | (virtual_gid)))) << 0u))), (true ? ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (virtual_gid), (0u | (virtual_gid)) << 0u), max(_GLF_IDENTITY(0u | (virtual_gid), (0u | (virtual_gid)) << 0u), _GLF_IDENTITY(0u | (virtual_gid), (0u | (virtual_gid)) << 0u))), (_GLF_IDENTITY(0u | (virtual_gid), min(0u | (virtual_gid), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, (_GLF_IDENTITY((0u) + 0u, (false ? _GLF_FUZZED(atomicMin(read_1, virtual_gid)) : (0u) + 0u))) ^ 0u)))) | (virtual_gid)))) << 0u))) : _GLF_FUZZED(num_workgroup)))))))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(173.143), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(4633.8086)), float(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), bool(true))), min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))) * _GLF_IDENTITY(((injectionSwitch)), mix(vec2(_GLF_FUZZED(-9624.7950), ((_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))[1]), vec2((((injectionSwitch)))[0], _GLF_FUZZED(_GLF_IDENTITY((-1788.8180), min((-1788.8180), (-1788.8180))))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), clamp(1.0, 1.0, 1.0)), 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) / 1.0))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0))))), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-5.1, -1.0)) : (injectionSwitch)), mat2(1.0) * ((false ? _GLF_FUZZED(vec2(-5.1, -1.0)) : (injectionSwitch))))), mat2(1.0) * ((injectionSwitch))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED((+ -28.77))), bool(false))), min(_GLF_IDENTITY(round(length(normalize(1.0))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED((+ -28.77))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(1.0))), max(round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), log(1.0) + (round(length(normalize(1.0))))))), mix(float(round(length(normalize(1.0)))), float(_GLF_FUZZED((+ -28.77))), bool(false))))), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), 0.0, 1.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), (false ? _GLF_FUZZED(mat2(-2555.4928, -22.75, -8.7, -5.5)) : mat2(1.0))) : _GLF_FUZZED(mat2(-701.835, -55.60, 60.98, 1362.8151)))) * ((injectionSwitch))), 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(374.309)) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(1.0), clamp(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) - 0.0), normalize(1.0), normalize(1.0))), (normalize(1.0)) - log(_GLF_ONE(1.0, injectionSwitch.y))))), 0.0))))))))[0], _GLF_FUZZED(-3.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true)))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], uint(read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true, false))) || false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, true), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))) && true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), _GLF_IDENTITY(true && ((! (false))), bool(bvec4(true && ((! (false))), true, true, true)))))))), true)))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && ((! (false))))), _GLF_IDENTITY(((_GLF_IDENTITY((! (false)), true && ((! (false)))))) || false, (((_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), true && ((! (false)))))) || false) || false))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false)))))))), true), false))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.1)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y))) || false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5638.5607)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + 0.0) > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.0)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 0.0, 1.0, 1.0)), (_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 0.0, 1.0, 1.0)), mix(vec2((vec2(mat2x4(injectionSwitch, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 0.0, 1.0, 1.0)))[0], (vec2(mat2x4(injectionSwitch, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(-434.013), _GLF_FUZZED(7.3)), bvec2(false, false)))) / vec2(1.0, 1.0))).y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(448.125)), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) && true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(448.125)), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) && true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(448.125)), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) && true)))))))) || false), true, true, false)), _GLF_IDENTITY(true, false || (true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u ^ (read_2))) + 1, (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + _GLF_IDENTITY(1, min(1, 1))) - 0u)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))), 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(int(true)) : 64)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec4(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) + 0), 0, 0, 0))) | 0))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch))))).x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch))))).x > injectionSwitch.y))))), true, true, true)), false || (bool(bvec4(! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch))))).x > injectionSwitch.y))))), true, true, true)))))))))) || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) && true))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))))), true))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), bool(bool(true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || (false))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), bool(bool(true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2661.5128)), bvec2(true, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || (false))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), bool(bool(true))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), true)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || (false))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), bool(bool(true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), bool(bool(true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), bool(bool(true)))))))) && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2661.5128)), bvec2(true, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_IDENTITY(false, true && (false)))))))))) || (false))))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || _GLF_IDENTITY((bool(bvec2(true, false))), bool(bvec4((bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))), false)))))))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))))), _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))) && true)) && ((_GLF_IDENTITY(false, true && (false)))))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), ! (! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2685.6774, min(_GLF_IDENTITY(-2685.6774, 1.0 * (-2685.6774)), -2685.6774))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), bvec2(true, false)), _GLF_IDENTITY(vec2(mat2x4(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2685.6774, min(_GLF_IDENTITY(-2685.6774, 1.0 * (-2685.6774)), -2685.6774))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), bvec2(true, false)), 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), tan(tan(0.0)))), vec2(vec3(vec2(mat2x4(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2685.6774, min(_GLF_IDENTITY(-2685.6774, 1.0 * (-2685.6774)), -2685.6774))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), bvec2(true, false)), 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), tan(tan(0.0)))), 0.0))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
