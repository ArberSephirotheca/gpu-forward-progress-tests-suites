#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (1.0)), injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.9)), bool(false)))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))).x, uint(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (53594u & 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (53594u & 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (53594u & 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (53594u & 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) | (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, 0u)))) ^ (workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, (1u ^ 0u) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(195503u) : _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size))) - (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) - 0u)) >> 0u)), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ _GLF_IDENTITY(1u, uint(uvec2(1u, (0u | 0u)))))) + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(3.9), mix(float(_GLF_FUZZED(526.461)), float(_GLF_FUZZED(3.9)), bool(true)))), bool(false))), determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(3.9), mix(float(_GLF_FUZZED(526.461)), float(_GLF_FUZZED(3.9)), bool(true)))), bool(false))))))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(float(num_workgroup)))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true, false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u), ((subgroup_local_id + 1)) << 0u) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (subgroup_size))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4290.3001)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))), false || (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(64, _GLF_IDENTITY((64), (false ? _GLF_FUZZED(38593) : (64))) ^ 0), _GLF_IDENTITY(0, max(0, 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), true)))), ! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || false), bool(bool(true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, true))) || false)))))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false)), (bool(bvec3(subgroup_local_id + 1 < subgroup_size, false, false))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED(-86.20)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(radians(1436.1638)) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(vec2(5986.1252, -2443.5357))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(vec3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED(-86.20)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(radians(1436.1638)) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(vec2(5986.1252, -2443.5357))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), max(vec3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-86.20)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)), clamp(mix(float(_GLF_FUZZED(-86.20)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)), mix(float(_GLF_FUZZED(-86.20)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)), mix(float(_GLF_FUZZED(-86.20)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(radians(1436.1638)) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(_GLF_IDENTITY(vec2(5986.1252, -2443.5357), clamp(vec2(5986.1252, -2443.5357), vec2(5986.1252, -2443.5357), vec2(5986.1252, -2443.5357))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(_GLF_IDENTITY(vec2(5986.1252, -2443.5357), clamp(vec2(5986.1252, -2443.5357), vec2(5986.1252, -2443.5357), vec2(5986.1252, -2443.5357))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0))))), injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0), vec3(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED(-86.20)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(radians(1436.1638)) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(vec2(5986.1252, -2443.5357))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6412.6535), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(6412.6535))), _GLF_IDENTITY((_GLF_FUZZED(6412.6535)) * 1.0, ((_GLF_FUZZED(6412.6535)) * 1.0) - log(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6412.6535), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(6412.6535))), _GLF_IDENTITY((_GLF_FUZZED(6412.6535)) * 1.0, ((_GLF_FUZZED(6412.6535)) * 1.0) - log(1.0)))) * abs(1.0))), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED(-86.20)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(radians(1436.1638)) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(vec2(5986.1252, -2443.5357))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(radians(1436.1638)) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(vec2(5986.1252, -2443.5357))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), injectionSwitch.y, injectionSwitch.y), (clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(radians(1436.1638)) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(vec2(5986.1252, -2443.5357))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)), injectionSwitch.y, injectionSwitch.y)) - 0.0)) - 0.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(6412.6535), _GLF_IDENTITY((_GLF_FUZZED(6412.6535)) * 1.0, ((_GLF_FUZZED(6412.6535)) * 1.0) - log(1.0)))), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false))))))))) && true)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), true)), _GLF_IDENTITY(bool(bool(bool(bvec4(false, false, true, true)))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))), true && (bool(bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec4(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, true, true)), ! (! (bool(bvec4(bool(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, true, true)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y)))))))))))))))))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.3)), float(0.0), bool(true))))), 0.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5139.6713), (_GLF_FUZZED(-5139.6713)) / 1.0)), _GLF_IDENTITY(float(length(vec2(0.0, 0.0))), (float(length(vec2(0.0, 0.0)))) - log(1.0)), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) && true), true))), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))), 1.0, 0.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0))).y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false)) && true), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(float(vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), (float(vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)) / 1.0)), 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)))) * mat2(1.0)).x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), injectionSwitch.x))), float(_GLF_FUZZED(-7.6)), bool(false)), min(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), injectionSwitch.x))), float(_GLF_FUZZED(-7.6)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), injectionSwitch.x))), float(_GLF_FUZZED(-7.6)), bool(false))))) > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)))) * mat2(1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), injectionSwitch.x))), float(_GLF_FUZZED(-7.6)), bool(false))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - tan(vec2(0.0, 0.0))))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)))) * mat2(1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-1.5))), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false))) > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4)), _GLF_IDENTITY(4, max(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false)) ? (4) : _GLF_FUZZED(89048))) | _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), min((4), (4))), (4))), (_GLF_IDENTITY(_GLF_IDENTITY((4), (true ? (4) : _GLF_IDENTITY(_GLF_FUZZED(89048), max(_GLF_FUZZED(89048), _GLF_FUZZED(89048))))) | (4), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), (_GLF_IDENTITY((4), clamp((4), (4), (4)))) | (_GLF_IDENTITY((4), ((4)) << 0))) : _GLF_FUZZED(_GLF_IDENTITY(89048, (89048) ^ _GLF_IDENTITY(0, (0) ^ 0))))) | (4), max(_GLF_IDENTITY(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-49076) : (4))), (true ? (4) : _GLF_FUZZED(89048))) | (4), _GLF_IDENTITY(_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(89048))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(89048)))), (false ? _GLF_FUZZED(-47171) : int(_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(89048)))))))) | (4))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(89048))), clamp(_GLF_IDENTITY((4), _GLF_IDENTITY((true ? (4) : _GLF_FUZZED(89048)), _GLF_IDENTITY((_GLF_IDENTITY((true ? (4) : _GLF_FUZZED(89048)), clamp((true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048))))) | ((true ? (4) : _GLF_FUZZED(89048))), min(_GLF_IDENTITY((_GLF_IDENTITY((true ? (4) : _GLF_FUZZED(89048)), clamp((true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048))))) | ((true ? (4) : _GLF_FUZZED(89048))), ((_GLF_IDENTITY((true ? (4) : _GLF_FUZZED(89048)), clamp((true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048))))) | ((true ? (4) : _GLF_FUZZED(89048)))) | ((_GLF_IDENTITY((true ? (4) : _GLF_FUZZED(89048)), clamp((true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048))))) | ((true ? (4) : _GLF_FUZZED(89048))))), (_GLF_IDENTITY((true ? (4) : _GLF_FUZZED(89048)), clamp((true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048))))) | ((true ? (4) : _GLF_FUZZED(89048))))))), _GLF_IDENTITY(_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(-32821))))), (true ? _GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY((4), ((4)) ^ (0 ^ 0)))) : _GLF_FUZZED(89048))), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(89048))))) | (4), (_GLF_IDENTITY(_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(89048))), clamp(_GLF_IDENTITY((4), _GLF_IDENTITY((true ? (4) : _GLF_FUZZED(89048)), _GLF_IDENTITY((_GLF_IDENTITY((true ? (4) : _GLF_FUZZED(89048)), clamp((true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048))))) | ((true ? (4) : _GLF_FUZZED(89048))), min(_GLF_IDENTITY((_GLF_IDENTITY((true ? (4) : _GLF_FUZZED(89048)), clamp((true ? (4) : _GLF_FUZZED(89048)), (_GLF_IDENTITY(true, (true) && true) ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048))))) | ((_GLF_IDENTITY(true ? (4) : _GLF_FUZZED(89048), (false ? _GLF_FUZZED(72867) : _GLF_IDENTITY(true ? (4) : _GLF_FUZZED(89048), (true ? (4) : _GLF_FUZZED(89048)) | 0))))), ((_GLF_IDENTITY((true ? (4) : _GLF_FUZZED(89048)), clamp((true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048))))) | ((true ? (4) : _GLF_IDENTITY(_GLF_FUZZED(89048), (false ? _GLF_FUZZED(24583) : _GLF_FUZZED(89048)))))) | ((_GLF_IDENTITY((true ? (4) : _GLF_FUZZED(89048)), clamp((true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048))))) | ((true ? (4) : _GLF_FUZZED(89048))))), (_GLF_IDENTITY((true ? (4) : _GLF_FUZZED(89048)), clamp((true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048)), (true ? (4) : _GLF_FUZZED(89048))))) | ((true ? (4) : _GLF_FUZZED(89048))))))), _GLF_IDENTITY(_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(-32821))))), (true ? _GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY((4), ((4)) ^ (0 ^ 0)))) : _GLF_FUZZED(89048))), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(89048))))) | (4)) * 1), _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(89048))) | (4)))) << ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), int(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (6), (~ (6)) | (_GLF_IDENTITY(~ (6), clamp(~ _GLF_IDENTITY((6), 0 | ((6))), ~ (6), ~ (_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (true ? 6 : _GLF_FUZZED(10352)))) | (_GLF_IDENTITY(6, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(6, 0, 0, 1), (false ? _GLF_FUZZED(ivec4(-45139, -89816, -34365, 14768)) : ivec4(6, 0, 0, 1)))), clamp(int(ivec4(6, 0, 0, 1)), int(ivec4(6, 0, 0, 1)), int(ivec4(6, 0, 0, 1))))))))))))))))) & -18738))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, (false) && true));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), true))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), true))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), true))), true))), true))))))), false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, (0u) | (0u)) | (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)))))], uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), read_1), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u), max(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)))), max(read_1, read_1)))), read_1), (max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), read_1)) >> 0u), 0u)), uint(uvec2(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), read_1), (max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))), (~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))), ~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))))))), read_1)))), read_1)) >> 0u), 0u), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), read_1), (max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))))), read_1)))), read_1)) >> 0u), 0u), (uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), read_1), (max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))))), read_1)))), read_1)) >> 0u), 0u)) | (uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), read_1), (max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))))), read_1)))), read_1)) >> 0u), 0u))), 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), read_1), (max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))))), read_1)))), read_1)) >> 0u), 0u), (uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), 0u ^ (~ (read_1))))), read_1)), max(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, (read_1) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), read_1), (max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, _GLF_IDENTITY(max(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))))), read_1), ~ (~ (max(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))))), read_1))))))), read_1)) >> 0u), 0u)) | (uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))), read_1), (max(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))))), read_1)))), read_1)) >> 0u), 0u))), 0u)))))), 1u))))) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))) || false)) && true) || false))) && (false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}
