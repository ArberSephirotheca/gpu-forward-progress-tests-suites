#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! ((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))), ! (! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-5378.8771)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-16.90)))), bool(true)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1922.1530))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bool(_GLF_DEAD(false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)), true, true)))), false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0)))), float(_GLF_FUZZED(-860.257)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false), true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))))), (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, 0u | (1u))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u)))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u)))) : _GLF_FUZZED(bitfieldReverse(workgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), clamp(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u)))) / uvec4(1u, 1u, 1u, 1u)), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), _GLF_IDENTITY((uvec4(workgroup_id, 0u, 0u, 0u)), ((uvec4(workgroup_id, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), (uvec4(workgroup_id, 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : 0u)), 0u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(subgroup_id, workgroup_size, workgroup_id).bgbr) : _GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))))) / 1u)))) << (0u ^ 0u))), (0u | 0u) + (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)), 0u, 0u)) + uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(29555u, 26590u, 73692u, 190635u)) : _GLF_IDENTITY((uvec4(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) ? _GLF_FUZZED(workgroup_id) : 0u)), 0u, 0u)) + uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id)), _GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : 0u), max((false ? _GLF_FUZZED(workgroup_id) : 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : 0u), clamp((false ? _GLF_FUZZED(workgroup_id) : 0u), (false ? _GLF_FUZZED(workgroup_id) : 0u), (false ? _GLF_FUZZED(workgroup_id) : 0u)))))), 0u, 0u)) + uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) + ((uvec4(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, clamp(false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id))), clamp(~ (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, clamp(false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, clamp(false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id))), (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, clamp(false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id)))) | 0u), ~ (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, clamp(false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id, false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id))))))))), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)), 0u, 0u)) + uvec4(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))), 0u, 0u, 0u)))) >> uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)) : _GLF_FUZZED(subgroup_local_id))), 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / _GLF_IDENTITY(1u, 0u | (1u)), clamp((uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / _GLF_IDENTITY(1u, (1u) << 0u), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u))) + uvec4(0u, 0u, 0u, 0u)))) / 1u, _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u, 0u + ((uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u)))) / 1u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), max(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u))), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) - 0u)) << 0u)) / 1u)) ^ 0u)), (0u | 0u) + (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (_GLF_IDENTITY(max(0u, 0u), (true ? max(0u, 0u) : _GLF_FUZZED(atomicAdd(workgroup_id, workgroup_size))))) / 1u)), 0u, 0u), (uvec4(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)), 0u + (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)))), 0u, 0u)) + uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), min(uvec4(workgroup_id, 0u, 0u, 0u), uvec4(workgroup_id, 0u, 0u, 0u)))) - uvec4(0u, 0u, 0u, 0u)), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_FUZZED(uvec4(95462u, 150395u, 172310u, 134410u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)))))))))) / 1u, clamp((uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u, _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))) / 1u, ((uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))) / 1u) ^ 0u), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u, 0u + ((uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 0u), (uvec4(workgroup_id, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))) / 1u))))))))) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false) ? workgroup_base : _GLF_FUZZED(workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-977.103)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-977.103)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)))) || false))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))), true && (bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(bool(! (_GLF_DEAD(false))))), bool(bvec2(! (bool(bool(! (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true && (bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), false, true)), true && (bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), false, true))))))))) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * ((injectionSwitch) * mat2(1.0)))))).y)))) && true)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-443.591) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) / abs(1.0))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6178.2436)), vec2(_GLF_FUZZED(-2994.6607), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-9.3) : (injectionSwitch)[1]))), bvec2(false, true)))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)), true)))))))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(128159u) : workgroup_base))) << 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), false, false)))))), (bool(bvec2(false, true))) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, false || (true)))) ? 1 : _GLF_FUZZED(-59657))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-25740))))), _GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0), int(int(1)))), int(_GLF_IDENTITY(ivec4(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0), int(int(1)))), 1, 0, 1), (ivec4(max(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0), _GLF_IDENTITY(int(int(1)), (true ? int(int(1)) : _GLF_FUZZED(67934))))), 1, 0, 1)) | (ivec4(_GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0), int(int(1)))), (_GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0), int(int(1)))), (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0), int(int(1))))) | (_GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0), int(int(1)))), (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0), int(int(1))))) | 0)))) | (_GLF_IDENTITY(max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0), int(int(1)))), (max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0), int(int(1))))) >> 0))), 1, 0, 1)))))) / 1))), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), 0 + (_GLF_IDENTITY(64, max(64, 64)))), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.8)), bool(false)))) * 1.0), (injectionSwitch.y) * round(length(normalize(vec2(1.0, 1.0))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.8)), bool(false)))) * 1.0), (injectionSwitch.y) * round(length(normalize(vec2(1.0, 1.0))))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.8)), bool(false)))) * 1.0), (injectionSwitch.y) * round(length(normalize(vec2(1.0, 1.0))))))), false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.8)), bool(_GLF_IDENTITY(false, true && (false)))))) * 1.0), (injectionSwitch.y) * round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (_GLF_IDENTITY(! (bool(bvec2(true, false))), bool(bvec4(! (bool(bvec2(true, false))), false, false, true))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(893.109), clamp(_GLF_IDENTITY(_GLF_FUZZED(893.109), clamp(_GLF_FUZZED(893.109), _GLF_FUZZED(893.109), _GLF_IDENTITY(_GLF_FUZZED(893.109), max(_GLF_FUZZED(893.109), _GLF_FUZZED(893.109))))), _GLF_IDENTITY(_GLF_FUZZED(893.109), mix(float(_GLF_FUZZED(-24.97)), float(_GLF_FUZZED(893.109)), bool(true))), _GLF_FUZZED(893.109)))), bool(false))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), injectionSwitch.y)))))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), injectionSwitch.y), (false ? _GLF_FUZZED(-88.37) : max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-271.885), (_GLF_FUZZED(-271.885)) + 0.0)), bool(false))), injectionSwitch.y)))))))))), ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(normalize(vec2(8.7, -0.7))) : injectionSwitch)))).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))))))) || false))))) || false))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), injectionSwitch.y)))))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), injectionSwitch.y), (false ? _GLF_FUZZED(-88.37) : max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-271.885), (_GLF_FUZZED(-271.885)) + 0.0)), bool(false))), injectionSwitch.y)))))))))), ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(normalize(vec2(8.7, -0.7))) : injectionSwitch)))).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))))))) || false))))) || false))))), true, false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), injectionSwitch.y)))))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), injectionSwitch.y), (false ? _GLF_FUZZED(-88.37) : max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-271.885), (_GLF_FUZZED(-271.885)) + 0.0)), bool(false))), injectionSwitch.y)))))))))), ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(normalize(vec2(8.7, -0.7))) : injectionSwitch)))).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))))))) || false))))) || false))))), true, false, false)), false || (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), injectionSwitch.y)))))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), injectionSwitch.y), (false ? _GLF_FUZZED(-88.37) : max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-271.885), (_GLF_FUZZED(-271.885)) + 0.0)), bool(false))), injectionSwitch.y)))))))))), ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(normalize(vec2(8.7, -0.7))) : injectionSwitch)))).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(-271.885)), bool(false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))))))) || false))))) || false))))), true, false, false)))), true)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(214.505) : injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-4.8 - 2401.7414))), bool(false))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) / 1))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && _GLF_IDENTITY(true, true && (true))) || false), true))), true)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) || false), true))), true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.6)), bool(false))))))))), true && (bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) || false), true))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true)))))))))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, tan(0.0), 1.0)), mat2(1.0) * (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, tan(0.0), 1.0))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) * 1u)) | (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(_GLF_IDENTITY(false, (false) || false));
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false), _GLF_IDENTITY((read_1 == read_2) || false, true && ((read_1 == read_2) || false)))) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false), _GLF_IDENTITY(_GLF_IDENTITY((read_1 == read_2) || false, ((read_1 == read_2) || false) && true), true && ((read_1 == read_2) || false)))) + 1) >> _GLF_IDENTITY(0u, max(0u, 0u))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), max((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), min((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch)))))))).x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), max((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), min((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch)))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), max((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), min((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch)))))))).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), max((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), min((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch)))))))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), max((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), min((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch)))))))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), max((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), min((false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(105.470, -8.7)) : injectionSwitch)))))))).x)))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bool(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))), ! (! (bool(bool(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false) ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)), injectionSwitch)) : _GLF_FUZZED(asin((-7654.7047 / injectionSwitch))), (false ? _GLF_FUZZED(ceil(injectionSwitch)) : _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false) ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)), injectionSwitch)) : _GLF_FUZZED(asin((-7654.7047 / injectionSwitch))))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), false))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true))))), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
