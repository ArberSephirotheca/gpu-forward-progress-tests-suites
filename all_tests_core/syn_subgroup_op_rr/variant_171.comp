#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u))), max(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u))), (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u))) : _GLF_FUZZED(subgroup_id)))));
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.y = num_workgroup;
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), false || (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), false || (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))))))), (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), false || (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))))) && true))))))
    {
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z = workgroup_base;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))))))));
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   do
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         do
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               for(int _injected_loop_counter = _GLF_IDENTITY((((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) & 1), ((((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) & 1)) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_IDENTITY(true, bool(bool(true)))))))
                                    {
                                    }
                                   else
                                    {
                                     do
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                                          {
                                          }
                                         else
                                          {
                                           for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec4(1, 1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-65912) : 1))))) : _GLF_FUZZED(_injected_loop_counter))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                {
                                                 do
                                                  {
                                                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.2))), injectionSwitch.y)), true && (_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.2))), injectionSwitch.y))))); _injected_loop_counter ++)
                                                    {
                                                     do
                                                      {
                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                        {
                                                         do
                                                          {
                                                           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                                            {
                                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0))), 1.0)))))))
                                                              {
                                                              }
                                                             else
                                                              {
                                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                                {
                                                                }
                                                               else
                                                                {
                                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                                  {
                                                                  }
                                                                 else
                                                                  {
                                                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                                                    {
                                                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                                                                      {
                                                                      }
                                                                     else
                                                                      {
                                                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                                        {
                                                                         do
                                                                          {
                                                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                                                            {
                                                                            }
                                                                           else
                                                                            {
                                                                             do
                                                                              {
                                                                               do
                                                                                {
                                                                                 return;
                                                                                }
                                                                               while(_GLF_WRAPPED_LOOP(false));
                                                                              }
                                                                             while(_GLF_WRAPPED_LOOP(false));
                                                                            }
                                                                          }
                                                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, false)), (bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(false, ! (! (false)))))) && true))))) || false)), _GLF_IDENTITY(bool(bvec3(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), false, false)), false || (bool(bvec3(bool(bool(injectionSwitch.x > injectionSwitch.y)), false, false))))))))));
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5102.6551) : injectionSwitch.y))) && true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5102.6551) : injectionSwitch.y))) && true)))))), ! (! (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5102.6551) : injectionSwitch.y))) && true)))))))))))));
                                                        }
                                                       else
                                                        {
                                                        }
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(false));
                                                    }
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(false));
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))))))) || _GLF_IDENTITY(false, false || (false)))));
                  }
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))), (GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) / 1u)) * _GLF_IDENTITY(1u, (1u) << 0u)) + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size, uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size, 0u, 1u))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size, uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u))) + subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, _GLF_IDENTITY(uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), injectionSwitch.y)))), _GLF_IDENTITY((uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u, (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec3(0u, 0u, 0u)))) - 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - _GLF_IDENTITY(0u, (0u) - 0u) : _GLF_FUZZED(workgroup_base)))) + 0u))) + subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, (GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base) >> uvec3(0u, 0u, 0u)).z, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u)), min(uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u)), uint(_GLF_IDENTITY(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u), (uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u)) / uvec3(1u, 1u, 1u))))), _GLF_IDENTITY((uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u))) + 0u, ((uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u))) + 0u) << 0u)))), uint(uint((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, _GLF_IDENTITY(uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u)), (uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u))) + 0u))))))))) << 0u) + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, 0u, 1u))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, _GLF_IDENTITY(uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), injectionSwitch.y)))), _GLF_IDENTITY((uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u, (_GLF_IDENTITY((uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - _GLF_IDENTITY(0u, (0u) - 0u) : _GLF_FUZZED(workgroup_base)))) + 0u))) + subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u)), uint(uvec2(uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u)), 1u))), min(uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u)), uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u)))), (uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u))) + 0u))), uint(uint((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, _GLF_IDENTITY(uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), (uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u))) + 0u))))))))) << 0u) + subgroup_id * subgroup_size, 0u, 1u))) + subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, _GLF_IDENTITY(uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), injectionSwitch.y)))), _GLF_IDENTITY((uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u, (_GLF_IDENTITY((uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - _GLF_IDENTITY(0u, (0u) - 0u) : _GLF_FUZZED(workgroup_base)))) + 0u))) + subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u)), min(uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u)), uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u)))), (uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u))) + 0u))), uint(uint((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, _GLF_IDENTITY(uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u)), (uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u, 0u))) + 0u))))))))) << 0u) + subgroup_id * subgroup_size, 0u, 1u))) + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), clamp(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 0u))), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[0], GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[1], GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[2]))) - uvec3(0u, 0u, 0u)))), GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), clamp(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u))))))), (_GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), clamp(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))))))) | (_GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), clamp(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u))), uvec3(uvec3(_GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u))))))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), clamp(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))))))), clamp((_GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), clamp(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), clamp(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))))))), ((_GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), clamp(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u))))))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), clamp(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), clamp(min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))), min(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), _GLF_IDENTITY(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), uvec3(uvec4(max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base), 1u)))))))) : _GLF_FUZZED(uaddCarry(uvec3(73415u, 30291u, 73614u), GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base)))))))).z + subgroup_id * subgroup_size, uint(uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size, 0u, 1u))) + subgroup_local_id))) << 0u)) << 0u, ~ (~ (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), ! (! (! (! (false))))))))) ? _GLF_FUZZED(workgroup_base) : subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) << 0u, max((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size + subgroup_local_id) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, 0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u | _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, ((subgroup_local_id) << 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * 1u)) << 0u, clamp((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)), 0u | (_GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)), uint(uint(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u))))))), 0u)), clamp(uint(uvec2(_GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)), 0u | (_GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)), uint(uint(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u))))))), 0u)), uint(uvec2(_GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)), 0u | (_GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)), uint(uint(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u))))))), 0u)), uint(uvec2(_GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)), 0u | (_GLF_IDENTITY(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)), uint(uint(clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u))))))), 0u)))))) + subgroup_local_id) << _GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size + subgroup_local_id), ((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id)) - ((0u | 0u) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))) | (_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)))) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size + subgroup_local_id), uint(_GLF_IDENTITY(uint((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size + subgroup_local_id)), clamp(uint((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size + subgroup_local_id)), _GLF_IDENTITY(uint((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size + subgroup_local_id)), 0u ^ (uint((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size + subgroup_local_id)))), uint((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size + subgroup_local_id)))))), min((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, uvec3(uvec3(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, _GLF_IDENTITY(uvec3(uvec4(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, 0u)), (true ? uvec3(uvec4(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, 0u)) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base))))))).z + subgroup_id * subgroup_size + subgroup_local_id), (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.6)))))))) - 0.0))) ? GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base : _GLF_FUZZED((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base --)))).z + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(_GLF_IDENTITY(uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))), clamp(uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))), uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))), uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))))))), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), max(uvec3(_GLF_IDENTITY(clamp(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), 1u)), (uint(uvec2(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), 1u))) | 0u)), (subgroup_size), (subgroup_size)), max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))))), uint(uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))))), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(uint(clamp((subgroup_size), (subgroup_size), (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))))), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), min(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), 1u), (uvec3(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))), max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(uint(clamp((subgroup_size), (subgroup_size), (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))))), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), min(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | (1u)))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), 1u)) | (uvec3(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(uint(clamp((subgroup_size), (subgroup_size), (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))))), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), min(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), 1u))), (uvec3(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))))), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(_GLF_IDENTITY(2u, (2u) - 0u))), ((uint(2u))) - 0u) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)) | uvec3(0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), _GLF_IDENTITY(max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))))), clamp((subgroup_size), (subgroup_size), (subgroup_size))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))))), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u), (subgroup_size))), 0u ^ (max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))))), clamp((subgroup_size), (subgroup_size), (subgroup_size))))), max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))))), clamp((subgroup_size), (subgroup_size), (subgroup_size)))))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(1u, ~ (~ (1u)))), max(uvec3(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))))), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))))), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), (uvec3(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))))), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u), (subgroup_size)))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)) | uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))))), clamp((subgroup_size), (subgroup_size), (subgroup_size)))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), (uvec3(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), max(_GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), uint(uint(clamp((subgroup_size), (subgroup_size), (subgroup_size))))), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u), (subgroup_size)))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)) | uvec3(0u, 0u, 0u)))))))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) << 0u)), uint(5u)))))) - 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u)) | 0u))))) | (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec3((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size + subgroup_local_id), 1u, (_GLF_IDENTITY(57508u & 0u, (_GLF_IDENTITY(57508u & 0u, min(57508u & 0u, 57508u & 0u))) / 1u))))))) << 0u, _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size + subgroup_local_id) << 0u, ~ (~ ((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size + subgroup_local_id) << 0u)))))))))));
 uint next_virtual_gid = GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (subgroup_local_id + 1))) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-58158)))) | (0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), 1 * (_GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (1) << 0))), 1, 1)), true && (_injected_loop_counter < _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), 1 * (_GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, (1) << 0))), 1, 1)))), true && (_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), (true ? _GLF_IDENTITY(int(ivec3(1, 1, 1)), min(int(ivec3(1, 1, 1)), int(ivec3(1, 1, 1)))) : _GLF_FUZZED((_injected_loop_counter - 46345))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter < 1), ((_injected_loop_counter < 1)) || false), (_GLF_IDENTITY((_injected_loop_counter < 1), ((_injected_loop_counter < 1)) || false)) || false), (_GLF_IDENTITY((_injected_loop_counter < 1), ((_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) < 1)) || false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter < 1), ((_injected_loop_counter < 1)) || _GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_injected_loop_counter < 1), ((_injected_loop_counter < 1)) || false)) || false), (_GLF_IDENTITY((_injected_loop_counter < 1), ((_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) < 1)) || false)) && true)))))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.x = next_virtual_gid;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ((_GLF_IDENTITY(! (false), (! (false)) || false))) || false)) || false))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bool(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))) || false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), false, true, false))), bool(bool(! (bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), false, true, false))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))) || false)), bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), false, true, false))), false))))))))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (-61911 & _GLF_IDENTITY(0, int(ivec2(0, 1))))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) < _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           do
                            {
                             do
                              {
                               atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.x], uint(1), 4, 64, _GLF_IDENTITY(4, 0 | (4)));
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY((_GLF_FUZZED(subgroup_local_id)) - 0u, (_GLF_IDENTITY((_GLF_FUZZED(subgroup_local_id)) - 0u, clamp((_GLF_FUZZED(subgroup_local_id)) - 0u, (_GLF_FUZZED(subgroup_local_id)) - 0u, (_GLF_FUZZED(subgroup_local_id)) - 0u))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_IDENTITY(buf[virtual_gid], uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid]))) | 0u) : _GLF_FUZZED(45268u)))) | _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) << 0u)), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) - 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))), (0u ^ 1u) * ((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)), 0u | (min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))))) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))), 0u ^ ((_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))))))) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))))))) : buf[virtual_gid])), 1u, 0u))))), 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) && true, ((false) && true) && true))))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))); _injected_loop_counter ++)
              {
               if(subgroup_local_id + 1 < subgroup_size)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4497.6387)))))))
                  {
                   for(int _injected_loop_counter = (_GLF_IDENTITY(0 ^ 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, _GLF_IDENTITY((0 ^ 0), min((0 ^ 0), (0 ^ 0))) - 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(_injected_loop_counter)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 1 * (1)))))); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)) | (_injected_loop_counter)) != int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), (true ? 1.0 * (0.0) : _GLF_FUZZED(44.54)))), clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), (true ? 1.0 * (0.0) : _GLF_FUZZED(44.54)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), (true ? 1.0 * (0.0) : _GLF_FUZZED(44.54)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), (true ? 1.0 * _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(mat4x3((0.0), 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(0.0), 0.0, exp(tan(0.0))), (true ? mat4x3((0.0), 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, length(0.0), 0.0, exp(tan(0.0))) : _GLF_FUZZED(mat4x3(68.19, -6.0, -725.894, -0.4, -0.1, 6.9, 7.2, -6439.4842, 6.0, -9617.6414, 2245.4057, 4.7)))))) : _GLF_FUZZED(44.54)))))), injectionSwitch.x))); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                          {
                           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                              {
                               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), (_GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(3) : _GLF_FUZZED(_injected_loop_counter))), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                {
                                 for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                  {
                                   do
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec2(bool(bvec2(true, false)), false))))))
                                          {
                                           atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, (GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base) << (uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)) ^ uvec3(0u, 0u, 0u))).x], _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) - 0u), read_2))) | 0u)) + _GLF_IDENTITY(1, (1) - 0), (uint(read_1 == read_2) + 1) >> 0u), 4, 64, 4);
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, 1.0 * (_GLF_IDENTITY((injectionSwitch.y) + 0.0, clamp((injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0))))) : _GLF_FUZZED(979.943), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))).y))), true && ((_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, float(mat4(1.0, exp(length(vec2(0.0, 0.0))), 1.0, sqrt(0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 1.0, sqrt(1.0), 0.0))), 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) * mat2(1.0)))) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))).y))), true && ((_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), true && (bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))).y))), true && ((_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))))) ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0) : _GLF_FUZZED(979.943), float(mat3x2(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ((injectionSwitch.x < injectionSwitch.y)) && true), false), false))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0)))), ((injectionSwitch.x < injectionSwitch.y)) && true), false), false))), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false), false))), false))), true)))), false, true)))) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(159.639)), float(injectionSwitch.y), bool(true)))) + _GLF_IDENTITY(0.0, max(0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(159.639)), float(injectionSwitch.y), bool(true)))) + _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(159.639)), float(injectionSwitch.y), bool(true)))) + _GLF_IDENTITY(0.0, max(0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(159.639)), float(injectionSwitch.y), bool(true)))) + _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(159.639)), float(injectionSwitch.y), bool(true)))) + _GLF_IDENTITY(0.0, max(0.0, 0.0))))))) : _GLF_FUZZED(979.943), (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED(979.943), clamp(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED(979.943), float(vec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7640.9817) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), max(0.0, 0.0))) : _GLF_FUZZED(979.943), clamp(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), 1.0 * ((injectionSwitch.y))), (injectionSwitch.y))), (injectionSwitch.y), (injectionSwitch.y))) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7640.9817) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), max(0.0, 0.0))) : _GLF_FUZZED(979.943), max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7640.9817) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), max(0.0, 0.0))) : _GLF_FUZZED(979.943), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7640.9817) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), max(0.0, 0.0))) : _GLF_FUZZED(979.943), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7640.9817) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), max(0.0, 0.0))) : _GLF_FUZZED(979.943))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7640.9817) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), max(0.0, 0.0))) : _GLF_FUZZED(979.943))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7640.9817) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), max(0.0, 0.0))) : _GLF_FUZZED(979.943), float(mat3x4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7640.9817) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), max(0.0, 0.0))) : _GLF_FUZZED(979.943), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7640.9817) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), max(0.0, 0.0))) : _GLF_FUZZED(979.943), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7640.9817) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), max(0.0, 0.0))) : _GLF_FUZZED(979.943), float(vec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7640.9817) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), max(0.0, 0.0))) : _GLF_FUZZED(979.943), 0.0, 0.0)))) - 0.0))), 1.0, 1.0, 1.0))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x < injectionSwitch.y))))) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED(979.943), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(979.943), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_FUZZED(979.943), mix(float(_GLF_FUZZED(979.943)), float(_GLF_FUZZED(-6574.5526)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(abs(1.0))), mat3(mat4(mat3(_GLF_IDENTITY(_GLF_FUZZED(979.943), mix(float(_GLF_FUZZED(979.943)), float(_GLF_FUZZED(-6574.5526)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(abs(1.0)))))))))))), 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0) : _GLF_FUZZED(979.943), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0) : _GLF_FUZZED(979.943)))))))));
                                  }
                                }
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) << 0)))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             do
                              {
                               subgroupAll(false);
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(true, ! (! (true))))), false), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(true, ! (! (true))))), false), false, false)))))) && (bool(bool((false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && (bool(bool((false)))))), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && (bool(bool((false)))))))))) || false) && true), true && (false))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             do
                              {
                               for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.x], uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, 0u ^ (read_2)), read_2)), clamp(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(1u | 1u, (1u | 1u) - 0u)) * (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) - 0u) ^ 0u))), _GLF_IDENTITY(min(read_2, read_2), 0u ^ (min(read_2, read_2)))), _GLF_IDENTITY(read_2, min(read_2, read_2)))), _GLF_IDENTITY(read_2, min(read_2, read_2))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY((_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-52121) : (4)))) | _GLF_IDENTITY(0, (0) - 0), ((_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-52121) : (4)))) | _GLF_IDENTITY(0, (0) - 0)) | 0)) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-52121) : (4)))) | 0) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-52121) : (4)))) | 0) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) + 0)) >> 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-52121) : (4)))) | 0) | (4))) ^ 0)) ^ (0 & -35467)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), _GLF_IDENTITY(0 + ((4)), (0 + ((4))) | 0)), (4))), (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-52121) : (4)))) | _GLF_IDENTITY(0, max(0, 0))) | (4)), (0 >> _GLF_IDENTITY(int(5), int(5))) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), clamp((4), (4), (4))), _GLF_IDENTITY((4), 0 + (_GLF_IDENTITY((4), ((4)) * 1))), (4))), (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-52121) : (4)))) | _GLF_IDENTITY(0, max(0, 0))) | _GLF_IDENTITY((4), (67087 & 0) | ((4)))))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), clamp(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), max(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) | 0)))))))))), (false ? _GLF_FUZZED(-52121) : _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) | 0))), int(int((_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) | 0))))))))) | 0) | (4))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 0, 1), (ivec3(4, 0, 1)) | (ivec3(4, 0, 1)))))) / 1)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-52121) : _GLF_IDENTITY((4), ((4)) / 1)))) | 0) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-52121) : _GLF_IDENTITY((4), ((4)) / 1)))) | 0) | (4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-52121) : _GLF_IDENTITY((4), ((4)) / 1)))) | 0) | (4)), _GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-52121) : _GLF_IDENTITY((4), ((4)) / 1)))) | 0) | (4)), _GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-52121) : _GLF_IDENTITY((4), ((4)) / 1)))) | 0) | (4))))) / 1)))) ^ 0), 64, 4);
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                 subgroupAll(true);
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
}
