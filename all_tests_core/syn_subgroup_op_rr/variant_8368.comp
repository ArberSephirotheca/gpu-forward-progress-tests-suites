#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (true) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4484.8092), _GLF_FUZZED(-6.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x) / cos(0.0)) > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / cos(log(1.0))) / cos(0.0)) > injectionSwitch.y))), true, true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4484.8092), _GLF_FUZZED(-6.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x) / cos(0.0)) > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / cos(log(1.0))) / cos(0.0)) > injectionSwitch.y))), true, true))))), false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))) || false)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false))) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))) || false)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false))) && true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))) || false)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false))) && true))), false, true), true)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec4((_GLF_IDENTITY(false, (false) && true)) || false, false, false, true)))) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(77988u))), vec2(_GLF_FUZZED(-3.8), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) && true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(49.00)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(fract(6168.2837)))), 1.0), (mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(faceforward(831.094, -435.509, -4.8)) : injectionSwitch.x))) - 0.0) > injectionSwitch.y))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(log2(-55.25))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(! (! (! (false))), (! (! (! _GLF_IDENTITY((false), ((false)) && true)))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-8757.3760)), _GLF_FUZZED(825.772)), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-8757.3760)), _GLF_FUZZED(825.772)), bvec2(false, false))).y)))) || false), false, true, true)), false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(896.382))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.4)), float(injectionSwitch.y), bool(true))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.4)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.1)), vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)))).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false)), (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false))) || false)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)))))), ! (! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, tan(0.0), 1.0, 1.0, 0.0))) : _GLF_FUZZED(-46.29))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (! (! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(! (! (! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))), false, false, true))))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(! ((injectionSwitch.x > injectionSwitch.y)))))))))), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, clamp((workgroup_base) | 0u, (workgroup_base) | 0u, (workgroup_base) | 0u))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))) + 1)))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, ~ (~ (4)))), min(~ (4), ~ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) | ((4)))) ^ 0)))))) * _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))), 1)))) | 0), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) >> (7382 & 0)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) && true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (vec2(vec2(injectionSwitch))), vec2(vec2(mat2(1.0) * (vec2(vec2(injectionSwitch)))))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ((false)) && true)) || false)) && true)))))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), _GLF_IDENTITY((0u | _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u))), uint(0u))))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 1u), (false ? _GLF_FUZZED(uvec3(32994u, 84566u, 187759u)) : uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 1u))))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), ((0u | 0u)) ^ 0u)) | ((0u | 0u))), 0u | _GLF_IDENTITY((_GLF_IDENTITY((0u | 0u), min(_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) << 0u), (0u | 0u))), (0u | 0u)))), (_GLF_IDENTITY(((0u | 0u)), 1u * (((0u | 0u))))) + 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u))) | 0u), 0u ^ ((_GLF_IDENTITY(0u, uint(uint(0u))) | 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u))) | 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))) | 0u, (_GLF_IDENTITY(0u, uint(uint(0u))) | 0u) | 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))) | 0u, ~ (~ (_GLF_IDENTITY(0u, uint(uint(0u))) | 0u))))) >> 0u)) - 0u)) / 1u)) >> 0u))) ^ (_GLF_IDENTITY(uint(next_virtual_gid), (uint(next_virtual_gid)) - 0u)))))], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED((true ? virtual_gid : virtual_gid)) : read_1)), 1u))) >> 0u)) << 0u), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED((true ? virtual_gid : virtual_gid)) : read_1)), 1u))) >> 0u)) << 0u)) | 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, ~ (~ (read_1))), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(_GLF_IDENTITY(uvec2(read_1, 1u), (false ? _GLF_FUZZED(clamp(uvec2(137193u, 164961u), uvec2(189412u, 2181u), (uvec2(89625u, 126789u) & _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))))))) : uvec2(read_1, 1u))))) >> 0u)) << 0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)))) * 1u)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec2(read_1, 1u), (false ? _GLF_FUZZED(uvec2(134179u, 9444u)) : uvec2(read_1, 1u))) : _GLF_FUZZED(uvec2(104610u, 113711u))))), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))), min(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))))), ~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (uvec2(read_1, 1u)) | (uvec2(read_1, 1u)))), (uint(uvec2(read_1, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u)))))) >> 0u)) << 0u)))))))))) : _GLF_FUZZED(subgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)))) * 1u)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec2(read_1, 1u), (false ? _GLF_FUZZED(uvec2(134179u, 9444u)) : uvec2(read_1, 1u))) : _GLF_FUZZED(uvec2(104610u, 113711u))))), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))), min(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))))), ~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (uvec2(read_1, 1u)) | (uvec2(read_1, 1u)))), (uint(uvec2(read_1, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u)))))) >> 0u)) << 0u)))))))))) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)))) * 1u)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec2(read_1, 1u), (false ? _GLF_FUZZED(uvec2(134179u, 9444u)) : uvec2(read_1, 1u))) : _GLF_FUZZED(uvec2(104610u, 113711u))))), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))), min(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))))), ~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (uvec2(read_1, 1u)) | (uvec2(read_1, 1u)))), (uint(uvec2(read_1, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u)))))) >> 0u)) << 0u)))))))))) : _GLF_FUZZED(subgroup_id)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)))) * 1u)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec2(read_1, 1u), (false ? _GLF_FUZZED(uvec2(134179u, 9444u)) : uvec2(read_1, 1u))) : _GLF_FUZZED(uvec2(104610u, 113711u))))), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))), min(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))))), ~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (uvec2(read_1, 1u)) | (uvec2(read_1, 1u)))), (uint(uvec2(read_1, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u)))))) >> 0u)) << 0u)))))))))) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)))) * 1u)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec2(read_1, 1u), (false ? _GLF_FUZZED(uvec2(134179u, 9444u)) : uvec2(read_1, 1u))) : _GLF_FUZZED(uvec2(104610u, 113711u))))), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))), min(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))))), ~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (uvec2(read_1, 1u)) | (uvec2(read_1, 1u)))), (uint(uvec2(read_1, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u)))))) >> 0u)) << 0u)))))))))) : _GLF_FUZZED(subgroup_id)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)))) * 1u)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec2(read_1, 1u), (false ? _GLF_FUZZED(uvec2(134179u, 9444u)) : uvec2(read_1, 1u))) : _GLF_FUZZED(uvec2(104610u, 113711u))))), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))), min(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))))), ~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (uvec2(read_1, 1u)) | (uvec2(read_1, 1u)))), (uint(uvec2(read_1, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u)))))) >> 0u)) << 0u)))))))))) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)))) * 1u)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec2(read_1, 1u), (false ? _GLF_FUZZED(uvec2(134179u, 9444u)) : uvec2(read_1, 1u))) : _GLF_FUZZED(uvec2(104610u, 113711u))))), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))), min(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) >> 0u)) << 0u)))))), ~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_1)), 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 1u), (uvec2(read_1, 1u)) | (uvec2(read_1, 1u)))), (uint(uvec2(read_1, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u)))))) >> 0u)) << 0u)))))))))) : _GLF_FUZZED(subgroup_id)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 0u))))))))) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) | (_GLF_IDENTITY(read_2, ~ (~ (read_2)))))) + 1, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), true)))) + 1, (uint(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, 0u ^ (read_1))))) == read_2) + 1) - 0u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY(read_2, 0u + (read_2)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY(read_2, 0u + (read_2))))))), 1u * (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY(read_2, 0u + (read_2)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY(read_2, 0u + (read_2))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY(read_2, 0u + (read_2)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY(read_2, 0u + (read_2))))))) : _GLF_FUZZED(usubBorrow(workgroup_base, subgroup_size, subgroup_id)))))) + 1, 1u)), max(uint(uvec2(uint(read_1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / (1u ^ 0u)), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))) ^ (1u)))), uint(uvec2(uint(read_1 == read_2) + 1, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0)), 4)), int(ivec2(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), (0 | (4)) ^ 0)), 4)), 1))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-445.736), _GLF_FUZZED(-0.9)), bvec2(false, false)))) * vec2(1.0, 1.0)).y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(615.595, 4.7)) : injectionSwitch)).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(615.595, 4.7)) : injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(615.595, 4.7)) : injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(615.595, 4.7)) : injectionSwitch)).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(615.595, 4.7)) : injectionSwitch)).y, (false ? _GLF_FUZZED(648.346) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(615.595, 4.7)) : injectionSwitch)).y)) : _GLF_FUZZED(-6.3))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(615.595, 4.7)) : injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(615.595, 4.7)) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(615.595, 4.7)) : injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(615.595, 4.7)) : injectionSwitch)).y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(615.595, 4.7)) : injectionSwitch)).y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), ! (! (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (read_1) >> _GLF_IDENTITY(0u, (0u) >> 0u)) == _GLF_IDENTITY(read_2, (read_2) * 1u)) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
