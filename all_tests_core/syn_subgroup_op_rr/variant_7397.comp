#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uint _f0;
 float _f1;
 bvec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 _GLF_struct_0 _f1;
 uint next_virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true))))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)));
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(uvec3(1u), _GLF_struct_0(1u, 1.0, bvec2(true), uvec3(1u)), workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), 1u))), subgroup_size, subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size) | ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1)))), min(1, 1))) / 1)) % subgroup_size))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false))))) || false)), ! (! ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true)))) || false))))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -165.186))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ _GLF_IDENTITY(-165.186, (-165.186) - 0.0)))), bool(false))) : _GLF_FUZZED(-1.0))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-516.956) : injectionSwitch.x))))), float(_GLF_FUZZED((+ -165.186))), bool(false))) < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(+ -165.186, clamp(+ -165.186, _GLF_IDENTITY(+ -165.186, mix(float(_GLF_FUZZED((+ -4.8))), float(+ -165.186), bool(true))), + -165.186))))), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(+ -165.186, clamp(+ -165.186, _GLF_IDENTITY(+ -165.186, mix(float(_GLF_FUZZED((+ _GLF_IDENTITY(-4.8, (-4.8) / 1.0)))), float(+ -165.186), bool(true))), + -165.186))))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(false), true, true), bvec3(bvec3(bvec3(bool(false), true, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(false), true, true), bvec3(bvec3(bvec3(bool(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(false), true, true), bvec3(bvec3(bvec3(bool(false), true, true))))))))))))) - 0.0)) < injectionSwitch.y))))) && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))), bool(bvec2(bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))), true))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), true)))) && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true))))) && true, (_GLF_IDENTITY((bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true, false, false)))))))))) && (true)))) && true, bool(bvec4((bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) && (true)))) && true, false, false, false)))) || false))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true), false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))), true, true, false)))) && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), true && (! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true)))))), bool(bvec3(! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), true && (! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), true && (! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true)))))), bool(bvec3(! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), true && (! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), true, false)), false, true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), true, false)), false, true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), true, false)), false, true))))), false))), false, true))))), ! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), true && (! _GLF_IDENTITY((bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), false || ((bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true)))))))), bool(bvec3(! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))))) && true))) && (true))), true))), true && (! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))) && (true))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) || false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (true), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (true))))))))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y))))) && (true))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(619.101, 29.42)) : injectionSwitch)))).x < injectionSwitch.y))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (true))), false)))))), bool(bvec3(! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))) && (true))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (true))), false)), (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (true))), false)), (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))))) && (true))), false))) && true)) || false))))), true, true)))))))), (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))), false)))))) && (true)))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true)), ! (! (bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false))))) || false)), ! (! ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true)))) || false))))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -165.186))), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ _GLF_IDENTITY(-165.186, (-165.186) - 0.0)))), bool(false))) : _GLF_FUZZED(-1.0))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-516.956) : injectionSwitch.x))))), float(_GLF_FUZZED((+ -165.186))), bool(false))) < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(+ -165.186, clamp(+ -165.186, _GLF_IDENTITY(+ -165.186, mix(float(_GLF_FUZZED((+ -4.8))), float(+ -165.186), bool(true))), + -165.186))))), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(+ -165.186, clamp(+ -165.186, _GLF_IDENTITY(+ -165.186, mix(float(_GLF_FUZZED((+ _GLF_IDENTITY(-4.8, (-4.8) / 1.0)))), float(+ -165.186), bool(true))), + -165.186))))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(false), true, true), bvec3(bvec3(bvec3(bool(false), true, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(false), true, true), bvec3(bvec3(bvec3(bool(false), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(false), true, true), bvec3(bvec3(bvec3(bool(false), true, true))))))))))))) - 0.0)) < injectionSwitch.y))))) && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))), bool(bvec2(bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))), true))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y), true)))) && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))) && true))))) && true, (_GLF_IDENTITY((bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true, false, false)))))))))) && (true)))) && true, bool(bvec4((bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) && (true)))) && true, false, false, false)))) || false))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true), false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))), true, true, false)))) && (true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), true && (! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true)))))), bool(bvec3(! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), true && (! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), true && (! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true)))))), bool(bvec3(! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), true && (! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), true, false)), false, true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), true, false)), false, true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))))))))), true)), true, false)), false, true))))), false))), false, true))))), ! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), true && (! _GLF_IDENTITY((bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true))), false || ((bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))) && (true))), true)))))))), bool(bvec3(! (_GLF_IDENTITY(! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))))) && true))) && (true))), true))), true && (! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), false || (bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))) && (true))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) || false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (true), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (true))))))))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y))))) && (true))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(619.101, 29.42)) : injectionSwitch)))).x < injectionSwitch.y))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (true))), false)))))), bool(bvec3(! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))) && (true))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (true))), false)), (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (true))), false)), (bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))))) && (true))), false))) && true)) || false))))), true, true)))))))), (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))), false)))))) && (true)))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 atomicStore(buf[_GLF_struct_replacement_1.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (4)), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true), true, _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))), (! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ! (! (subgroup_local_id + 1 < subgroup_size))))) && true))), _GLF_IDENTITY(true && (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (subgroup_local_id + 1 < subgroup_size), ! (! (true && (subgroup_local_id + _GLF_IDENTITY(1, int(int(1))) < subgroup_size))))), bool(bvec4(bool(true && (subgroup_local_id + 1 < subgroup_size)), false, false, false)))), (bool(_GLF_IDENTITY(bool(true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(bool(bvec4(bool(true && (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size)), false, false, false)), (bool(bvec4(bool(true && (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size)), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))
  {
   do
    {
     atomicStore(buf[_GLF_struct_replacement_1.next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_1.next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_1.next_virtual_gid, _GLF_IDENTITY(0u ^ (_GLF_struct_replacement_1.next_virtual_gid), uint(_GLF_IDENTITY(uvec3(0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_1.next_virtual_gid, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_1.next_virtual_gid, 0u), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_1.next_virtual_gid, 0u), (uvec2(_GLF_struct_replacement_1.next_virtual_gid, 0u)) ^ uvec2(0u, 0u))) + uvec2(0u, 0u))))), 0u, 1u), uvec3(uvec3(uvec3(0u ^ (_GLF_struct_replacement_1.next_virtual_gid), 0u, 1u)))))))), min((_GLF_IDENTITY(_GLF_struct_replacement_1.next_virtual_gid, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) - 0u))), (~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) - 0u)))) >> 0u)) ^ (_GLF_struct_replacement_1.next_virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_1.next_virtual_gid, 0u ^ (_GLF_struct_replacement_1.next_virtual_gid)), max(_GLF_IDENTITY(_GLF_struct_replacement_1.next_virtual_gid, 0u ^ (_GLF_struct_replacement_1.next_virtual_gid)), _GLF_IDENTITY(_GLF_struct_replacement_1.next_virtual_gid, 0u ^ (_GLF_struct_replacement_1.next_virtual_gid))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_1.next_virtual_gid, uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_1.next_virtual_gid, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_struct_replacement_1.next_virtual_gid, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), (_GLF_struct_replacement_1.next_virtual_gid) * 1u)))], _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (0u & 86858u))) + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(read_1 == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, (0 | 1)), (false ? _GLF_FUZZED(ivec3(84093, 18185, -9109)) : ivec3(1, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) >> 0), 0)), (0 | 1))))), max(int(_GLF_IDENTITY(ivec3(1, 0, (0 | 1)), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(84093, 18185, -9109)), ivec3(0, 0, 0) ^ (_GLF_FUZZED(ivec3(84093, 18185, -9109)))) : ivec3(1, 0, (0 | 1))))), int(_GLF_IDENTITY(ivec3(1, 0, (0 | 1)), (false ? _GLF_FUZZED(ivec3(84093, 18185, -9109)) : ivec3(1, 0, (0 | 1))))))))), uint(_GLF_IDENTITY(uvec4(~ (uint(read_1 == read_2) + 1), 0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(_GLF_IDENTITY(6u, uint(uvec4(6u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), 0u ^ (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2))) + 1), _GLF_IDENTITY(0u, (0u) << 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)))))), ((_GLF_IDENTITY(~ (uint(read_1 == read_2) + 1), uint(_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2))))), 0u))) + 1)))), 0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(uint(uvec4(6u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), clamp(_GLF_IDENTITY(uint(uvec4(6u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), clamp(uint(uvec4(6u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY(uint(uvec4(6u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), clamp(uint(uvec4(6u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec4(6u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec4(6u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))), uint(uvec4(6u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(uint(uvec4(6u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), ~ (~ (uint(uvec4(6u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), uint(uvec4(6u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))))), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(~ (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1), _GLF_IDENTITY(0u, (0u) << 0u), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))))))) * (1u & 1u))), 4, 64, 4);
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            break;
          }
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), true && (! (! (! (true)))))))))))))))))))));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
