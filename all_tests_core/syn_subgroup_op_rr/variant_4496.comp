#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, true))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max(_GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))), (injectionSwitch.x))) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))) && true) && true), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(99.08)), vec2(_GLF_FUZZED(-18.72), (injectionSwitch)[1]), bvec2(false, true))).y), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false))))))) && ((injectionSwitch.x > injectionSwitch.y)))) && true, true, true)), (bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.5))) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), ((! (_GLF_IDENTITY(false, bool(bool(false)))))) && true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), ((! (_GLF_IDENTITY(false, bool(bool(false)))))) && true))), true && (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), ((! (_GLF_IDENTITY(false, bool(bool(false)))))) && true))))), false, true, true))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), true && (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))))) || false)) && true), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && _GLF_IDENTITY(true, false || (true))))))), bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), ((! (_GLF_IDENTITY(false, bool(bool(false)))))) && true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), ((! (_GLF_IDENTITY(false, bool(bool(false)))))) && true))), true && (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), ((! (_GLF_IDENTITY(false, bool(bool(false)))))) && true))))), false, true, true))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), true && (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))))) || false)) && true), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && _GLF_IDENTITY(true, false || (true))))))), false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))), false)))) || false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y))))) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x) - 0u), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x)), gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(179577u, 143132u, 59903u)) : _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(38181u, 98538u, 130006u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))))) << uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - determinant(mat2(0.0, sqrt(0.0), 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x))).x));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(-3.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)), gl_WorkGroupSize)).x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, clamp((gl_WorkGroupSize.x) - 0u, _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x)))) - 0u, (gl_WorkGroupSize.x) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, clamp((gl_WorkGroupSize.x) - 0u, _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x)))) - 0u, (gl_WorkGroupSize.x) - 0u)))), 0u | ((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, clamp((gl_WorkGroupSize.x) - 0u, _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x)))) - 0u, (gl_WorkGroupSize.x) - 0u))))))) / (0u ^ 1u)) | 0u, _GLF_IDENTITY(max((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)) | _GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(143510u, 1242u, 88492u)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) | (gl_WorkGroupSize))) - uvec3(0u, 0u, 0u)).x, (gl_WorkGroupSize.x) - 0u)) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(0u, (0u) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), ~ (~ (_GLF_IDENTITY(0u, (0u) / 1u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), (true ? max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)) >> 0u)) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(63818u, 55950u, _GLF_IDENTITY(177563u, (177563u) | (_GLF_IDENTITY(177563u, clamp(_GLF_IDENTITY(177563u, clamp(177563u, 177563u, 177563u)), 177563u, 177563u)))))))))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)) - 0u)) | 0u) : _GLF_FUZZED(subgroup_local_id)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ((_GLF_IDENTITY(! (false), true && (! (false))))) || false))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ((_GLF_IDENTITY(! (false), true && (! (false))))) || false))), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ((_GLF_IDENTITY(! (false), true && (! (false))))) || false))), true, true))), false || (! (bool(bvec3(! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ((_GLF_IDENTITY(! (false), true && (! (false))))) || false))), true, true))))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true)))) || false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), ! (! ((false)))), true && (true && (false))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), _GLF_FUZZED(9534.9517)), vec2(_GLF_FUZZED(-682.364), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true)))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * sqrt(vec2(1.0, 1.0)))))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.6, 9.3)) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || (false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))) || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))))) && true))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(-77624))), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, 0 | (4)))))), 4)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])))), ~ (~ (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) >> 0u)], (buf[virtual_gid]) + 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (true ? _GLF_IDENTITY(4, (4) / 1) : _GLF_FUZZED(-56791)))) | 0), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), false || (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), false || (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))))))))), ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(41.34) : injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(3449.5053), _GLF_FUZZED(-4633.0485)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3449.5053, (3449.5053) - 0.0)), _GLF_FUZZED(-4633.0485)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3449.5053), _GLF_FUZZED(-4633.0485)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, true)))), _GLF_IDENTITY(false || (! (injectionSwitch.x > injectionSwitch.y)), (false || (! (injectionSwitch.x > injectionSwitch.y))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) * cos(0.0)))))).x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, uint(uvec2(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 1u)))) + _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (~ (64))))), _GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (64), (64))) - 0, (_GLF_IDENTITY((64), clamp((64), (64), (64))) - 0) | (_GLF_IDENTITY((64), clamp((64), (64), (64))) - 0))), _GLF_IDENTITY(4, (4) ^ 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), false, true), true)))), _GLF_IDENTITY(! (! (bool(bvec3(false, false, true)))), (! (! (bool(bvec3(false, false, true))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (true) || false), true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-280.046) : injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0), (false ? _GLF_FUZZED(-280.046) : injectionSwitch.y)), injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-280.046) : injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-280.046) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))) - 0.0)))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-280.046) : injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-280.046) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-280.046) : injectionSwitch.y)))), injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-280.046) : injectionSwitch.y)), injectionSwitch.y))))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, sin(0.0), 1.0, 1.0, abs(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4x3(injectionSwitch.y, 1.0, sin(0.0), 1.0, 1.0, abs(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(1.4, 5893.0140, -92.32, 79.28, 0.6, -36.07, -342.580, 3728.4648, 9.1, -91.69, 1.4, -8397.4471)))))), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2429.4322)), bool(false)), float(vec4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2429.4322)), _GLF_IDENTITY(bool(false), (bool(false)) && true)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, sin(0.0), 1.0, 1.0, abs(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4x3(injectionSwitch.y, 1.0, sin(0.0), 1.0, 1.0, abs(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(1.4, 5893.0140, -92.32, 79.28, 0.6, -36.07, -342.580, 3728.4648, 9.1, -91.69, 1.4, -8397.4471)))))), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2429.4322)), bool(false)), float(vec4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2429.4322)), _GLF_IDENTITY(bool(false), (bool(false)) && true)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, sin(0.0), 1.0, 1.0, abs(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4x3(injectionSwitch.y, 1.0, sin(0.0), 1.0, 1.0, abs(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(1.4, 5893.0140, -92.32, 79.28, 0.6, -36.07, -342.580, 3728.4648, 9.1, -91.69, 1.4, -8397.4471)))))), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2429.4322)), bool(false)), float(vec4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2429.4322)), _GLF_IDENTITY(bool(false), (bool(false)) && true)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), true, false, false)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, sin(0.0), 1.0, 1.0, abs(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4x3(injectionSwitch.y, 1.0, sin(0.0), 1.0, 1.0, abs(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(1.4, 5893.0140, -92.32, 79.28, 0.6, -36.07, -342.580, 3728.4648, 9.1, -91.69, 1.4, -8397.4471)))))), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2429.4322)), bool(false)), float(vec4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2429.4322)), _GLF_IDENTITY(bool(false), (bool(false)) && true)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), true, false, false))) && true))) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0))) || false), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, abs(0.0), 0.0))).y)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED((injectionSwitch + vec2(4.6, -1.2))))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, false)))))) && true))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true, true), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(read_1 == read_2)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(read_1 == read_2)))) << 0u))) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(read_1 == read_2))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) >> 0u)))), (uint(read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) >> 0u))))) << 0u), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(read_1 == read_2))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) << 0))))) | (1))) >> 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), (false ? _GLF_FUZZED(next_virtual_gid) : uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))), ~ (~ _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))), ((uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))) | ((uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(read_1 == read_2))) + 1, (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) >> 0u)))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(read_1 == read_2))) + 1) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(read_1 == read_2))) + 1, (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u), (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u), max(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u), (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u)) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u)), ~ (~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u))))))))), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) >> 0u)))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(read_1 == read_2))) + 1) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(max(read_2, read_2), 0u + (max(read_2, read_2))))), ~ (~ (uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(max(read_2, read_2), (max(read_2, read_2)) + 0u)))))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(read_1 == read_2))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u), _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), max(read_2, read_2))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), max(read_2, read_2)))) >> 0u) >> 0u)))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(read_1 == read_2))) + 1), ((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, max(read_2, read_2)), read_2, read_2))) | 0u), _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), max(read_2, read_2))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), max(read_2, read_2)))) >> 0u) >> 0u)))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2))), uint(read_1 == read_2))) + 1)) + 0u) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) >> 0u) | (_GLF_IDENTITY(read_1, uint(uvec3(read_1, 1u, 1u))))) == _GLF_IDENTITY(read_2, max(read_2, read_2)), (read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) * 1u)), 0u | (uint(read_1 == read_2))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) - 0u) == read_2))) + _GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2)), ((uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2))) - 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), 0u ^ (uint(read_1 == read_2))), _GLF_IDENTITY(uint(read_1 == read_2), 0u + (uint(read_1 == read_2)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), 0u ^ (uint(read_1 == read_2))), _GLF_IDENTITY(uint(read_1 == read_2), 0u + (uint(read_1 == read_2)))))), min((_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), 0u ^ (uint(read_1 == read_2))), _GLF_IDENTITY(uint(read_1 == read_2), 0u + (uint(read_1 == read_2)))))), (_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), 0u ^ (uint(read_1 == read_2))), _GLF_IDENTITY(uint(read_1 == read_2), 0u + (uint(read_1 == read_2))))))))))), ~ (~ ((uint(read_1 == read_2))))))), max((uint(read_1 == read_2)), _GLF_IDENTITY((uint(read_1 == read_2)), min((uint(read_1 == read_2)), (uint(read_1 == read_2))))))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))))), (0u & 14023u) | (_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))))))))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec4(read_2, 1u, 1u, 1u), (uvec4(read_2, 1u, 1u, 1u)) | (uvec4(read_2, 1u, 1u, 1u)))))))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), 0u + (_GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ ((uint(read_1 == read_2))))))), max((uint(read_1 == read_2)), (uint(read_1 == read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), 0u + (_GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ ((uint(read_1 == read_2))))))), max((uint(read_1 == read_2)), (uint(read_1 == read_2))))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))), uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))))))))) | 0u) + 1) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), (~ (_GLF_IDENTITY(read_2, max(read_2, read_2)))) | 0u), ~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (_GLF_IDENTITY(read_2, max(read_2, read_2))))), (~ (_GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(uvec2(read_2, 0u)))) ^ 0u))))))) - 0u))), 0u + (read_2))))), uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2))) + 1, min(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (read_2) - 0u)))), max(_GLF_IDENTITY(uint(read_1 == read_2), 0u | _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_2, (read_2) + 0u), 0u, 1u, 0u), (uvec4(read_2, 0u, 1u, 0u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_2, (read_2) + 0u), 0u, 1u, 0u), (uvec4(read_2, 0u, 1u, 0u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))), ~ (~ (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_2, (read_2) + 0u), 0u, 1u, 0u), (uvec4(read_2, 0u, 1u, 0u)) / uvec4(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)))))))) | 0u))), ((uint(read_1 == read_2))) | 0u)), _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(min(uint(read_1 == read_2), uint(read_1 == read_2)), max(_GLF_IDENTITY(min(uint(read_1 == read_2), uint(read_1 == read_2)), 0u ^ (min(uint(read_1 == read_2), uint(read_1 == read_2)))), min(uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / 1u)) | (read_1)) == _GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), _GLF_IDENTITY(bool(bvec4((read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), false, false, _GLF_IDENTITY(false, ! (! (false))))), true && (bool(bvec4((read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), false, false, _GLF_IDENTITY(false, ! (! (false)))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))), (true ? uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), (_GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (read_2) + 0u)))) * 1u)) : _GLF_FUZZED((subgroup_id - _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))))))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / 1u)) | (read_1)) == _GLF_IDENTITY(read_2, max(read_2, read_2)), _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), _GLF_IDENTITY(bool(bvec4((read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), false, false, _GLF_IDENTITY(false, ! (! (false))))), true && (bool(bvec4((read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), false, false, _GLF_IDENTITY(false, ! (! (false)))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))), (true ? uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), (_GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (read_2) + 0u)))) * 1u)) : _GLF_FUZZED((subgroup_id - _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id)))))))) | 0u) ^ 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2)))))), 0u | (uint(read_1 == read_2))), uint(_GLF_IDENTITY(read_1, (read_1) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) == read_2)), (max(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2)))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2)))), (~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2))))) | 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2)))), uint(uvec4(~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2)))), 1u, 1u, 0u))))))), 0u | (uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))), (read_1) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) == read_2))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(workgroup_base) : read_2)), read_2, read_2)), ~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2)))))), 0u | (uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2))), uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), _GLF_IDENTITY(uint(uvec4((read_1), 0u, (0u & 87590u), 0u)), min(uint(uvec4((read_1), 0u, (0u & 87590u), 0u)), _GLF_IDENTITY(uint(uvec4((read_1), 0u, (0u & 87590u), 0u)), (uint(uvec4((read_1), 0u, (0u & 87590u), 0u))) << 0u)))) + (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (5351u & 0u) | (uint(5u)))))) == read_2)), (max(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), 0u ^ (~ (read_2)))))), 0u | (uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) == read_2), max(uint(_GLF_IDENTITY(read_1, (read_1) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) == read_2), uint(_GLF_IDENTITY(read_1, (read_1) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) == read_2))))) << 0u)))) + 1)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), true && (! (! (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-302.342)), bool(false))), float(mat2x4(injectionSwitch.y, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0)))), true && (false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y), 0.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))) + 0.0), 1.0, 1.0, 0.0))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))))), min(float(mat2x4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(abs(0.0), max(_GLF_IDENTITY(abs(0.0), (abs(0.0)) + 0.0), abs(0.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(0.0), bool(_GLF_IDENTITY(true, true && (true))))))), float(mat2x4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(0.0), bool(true)))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))) * 1.0)))), float(_GLF_FUZZED(-49.73)), bool(false))), mix(float(_GLF_FUZZED(0.9)), float(0.0), bool(true)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(4042.5432)))) / 1.0)), float(_GLF_FUZZED(-924.301)), bool(false))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, _GLF_IDENTITY(abs(0.0), float(mat4x3(abs(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true)), sqrt(abs(0.0)) + (mix(float(_GLF_FUZZED(_GLF_IDENTITY(0.9, float(mat2(0.9, exp(0.0), 0.0, 1.0))))), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9220.6027))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))))) : _GLF_FUZZED(_GLF_IDENTITY(9885.6958, (false ? _GLF_FUZZED(40.43) : 9885.6958))))))), _GLF_IDENTITY(max((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))))) : _GLF_FUZZED(9885.6958))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))))) : _GLF_FUZZED(9885.6958)))))), (max((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))))) : _GLF_FUZZED(9885.6958))), (_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true)))) + 0.0)) / 1.0)) + 0.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3620.5068) : clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))), bool(true))))) : _GLF_IDENTITY(_GLF_FUZZED(9885.6958), max(_GLF_FUZZED(9885.6958), _GLF_FUZZED(9885.6958)))))) / _GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))))) : _GLF_FUZZED(9885.6958)))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true)), 1.0 * (_GLF_IDENTITY(mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true)), max(mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true)), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- -645.799))), bool(false)))), bool(true))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0), (true ? mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-959.275, 9415.8769, -3.0, 5858.1159, -97.72, 152.694, -0.6, -8.7, -4.0, 152.397, 4050.6829, -9720.9479, -44.46, 78.17, -274.204, 90.38))))), min(float(_GLF_IDENTITY(mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0), (true ? mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-959.275, 9415.8769, -3.0, 5858.1159, -97.72, 152.694, -0.6, -8.7, -4.0, 152.397, 4050.6829, -9720.9479, -44.46, 78.17, -274.204, 90.38))))), float(_GLF_IDENTITY(mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0), (true ? mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-959.275, 9415.8769, -3.0, 5858.1159, -97.72, 152.694, -0.6, -8.7, -4.0, 152.397, 4050.6829, -9720.9479, -44.46, 78.17, -274.204, 90.38)))))))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY((- -645.799), ((- -645.799)) - 0.0))), bool(_GLF_IDENTITY(false, (false) && true))))), bool(true))))) : _GLF_FUZZED(9885.6958), float(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0), (true ? mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-959.275, 9415.8769, -3.0, 5858.1159, -97.72, 152.694, -0.6, -8.7, -4.0, 152.397, 4050.6829, -9720.9479, -44.46, 78.17, -274.204, 90.38))))), min(float(_GLF_IDENTITY(mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0), (true ? mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-959.275, 9415.8769, -3.0, 5858.1159, -97.72, 152.694, -0.6, -8.7, -4.0, 152.397, 4050.6829, -9720.9479, -44.46, 78.17, -274.204, 90.38))))), float(_GLF_IDENTITY(mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0), (true ? mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-959.275, 9415.8769, -3.0, 5858.1159, -97.72, 152.694, -0.6, -8.7, -4.0, 152.397, 4050.6829, -9720.9479, -44.46, 78.17, -274.204, 90.38)))))))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY((- -645.799), ((- -645.799)) - 0.0))), bool(_GLF_IDENTITY(false, (false) && true))))), bool(true))))) : _GLF_FUZZED(9885.6958))))), 1.0 * ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0), (true ? mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-959.275, 9415.8769, -3.0, 5858.1159, -97.72, 152.694, -0.6, -8.7, -4.0, 152.397, 4050.6829, -9720.9479, -44.46, 78.17, -274.204, 90.38))))), min(float(_GLF_IDENTITY(mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0), (true ? mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-959.275, 9415.8769, -3.0, 5858.1159, -97.72, 152.694, -0.6, -8.7, -4.0, 152.397, 4050.6829, -9720.9479, -44.46, 78.17, -274.204, 90.38))))), float(_GLF_IDENTITY(mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0), (true ? mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-959.275, 9415.8769, -3.0, 5858.1159, -97.72, 152.694, -0.6, -8.7, -4.0, 152.397, 4050.6829, -9720.9479, -44.46, 78.17, -274.204, 90.38)))))))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY((- -645.799), ((- -645.799)) - 0.0))), bool(_GLF_IDENTITY(false, (false) && true))))), bool(true))))) : _GLF_FUZZED(9885.6958), float(float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0), (true ? mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-959.275, 9415.8769, -3.0, 5858.1159, -97.72, 152.694, -0.6, -8.7, -4.0, 152.397, 4050.6829, -9720.9479, -44.46, 78.17, -274.204, 90.38))))), min(float(_GLF_IDENTITY(mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0), (true ? mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-959.275, 9415.8769, -3.0, 5858.1159, -97.72, 152.694, -0.6, -8.7, -4.0, 152.397, 4050.6829, -9720.9479, -44.46, 78.17, -274.204, 90.38))))), float(_GLF_IDENTITY(mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0), (true ? mat4(1.0, 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, sin(log(1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-959.275, 9415.8769, -3.0, 5858.1159, -97.72, 152.694, -0.6, -8.7, -4.0, 152.397, 4050.6829, -9720.9479, -44.46, 78.17, -274.204, 90.38)))))))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY((- -645.799), ((- -645.799)) - 0.0))), bool(_GLF_IDENTITY(false, (false) && true))))), bool(true))))) : _GLF_FUZZED(9885.6958)))))))))) / 1.0)))) - 0.0)) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(-901.057), max(_GLF_IDENTITY(_GLF_FUZZED(-901.057), min(_GLF_IDENTITY(_GLF_FUZZED(-901.057), (_GLF_FUZZED(-901.057)) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(-901.057), mix(float(_GLF_FUZZED(-901.057)), float(_GLF_FUZZED(2.7)), bool(false))))), _GLF_FUZZED(-901.057)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
      barrier();
     barrier();
    }
  }
}
