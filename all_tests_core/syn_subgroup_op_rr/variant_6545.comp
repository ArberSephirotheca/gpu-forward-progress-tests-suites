#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (subgroup_id) - 0u) * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | 0u))) + subgroup_local_id, min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) << 0u)) + 0u)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | 0u), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec2(uvec3(uvec2((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u)))), min(uint(_GLF_IDENTITY(uvec2((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec2(uvec3(uvec2((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u)))), uint(_GLF_IDENTITY(uvec2((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec2(uvec3(uvec2((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u))))))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(3u, _GLF_IDENTITY(3u, uint(uvec2(3u, 1u)))))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0) : _GLF_FUZZED(-3619.6406)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | 0u))))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-906.446) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8000.1206) : 1.0)))))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, sqrt(tan(0.0)), 1.0, 1.0)), clamp(vec2(mat3x2(injectionSwitch, 0.0, sqrt(tan(0.0)), 1.0, 1.0)), vec2(mat3x2(injectionSwitch, 0.0, sqrt(tan(0.0)), 1.0, 1.0)), vec2(mat3x2(injectionSwitch, 0.0, sqrt(tan(0.0)), 1.0, 1.0))))).x)) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), max(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) << 0u)), min((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) << 0u)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) << 0u)))) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ 0u)), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8344.2369)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), min((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp((0u << _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), ((0u << _GLF_IDENTITY(uint(3u), uint(3u)))) >> 0u), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) << 0u)), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) | 0u))) + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))), uint(3u))) * 1u)))))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(vec2(-471.978, -39.66).r)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | 0u))) + subgroup_local_id) << 0u))), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (subgroup_size) >> (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(log(cos(0.0)), float(mat3x4(log(cos(0.0)), 1.0, exp(0.0), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0)), mix(float(float(mat3(0.0, sin(0.0), 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-0.3)), bool(false)))), injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(float(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (false ? _GLF_FUZZED(5139.9070) : float(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), float(mat3x2(float(_GLF_IDENTITY(float(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (false ? _GLF_FUZZED(5139.9070) : float(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), 1.0, 1.0, 0.0, 1.0, 1.0))))))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0)), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(log(cos(0.0)), max(_GLF_IDENTITY(log(cos(0.0)), clamp(log(cos(0.0)), _GLF_IDENTITY(log(cos(0.0)), max(log(cos(0.0)), log(cos(0.0)))), log(cos(0.0)))), log(cos(0.0)))), 1.0, 0.0, 1.0)), mix(_GLF_IDENTITY(float(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0))), (float(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0)))) / 1.0), float(_GLF_FUZZED(-0.3)), bool(false)))), injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) ^ (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), ((0u << _GLF_IDENTITY(uint(3u), uint(3u)))) << 0u)))) | 0u))))) + subgroup_local_id))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(646.714), (vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))[1]), vec2((vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(55.05)), bvec2(true, false)))).x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u, 0u))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(646.714), (vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))[1]), vec2((_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(vec2(45.10, 13.66)) : vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))))[0], _GLF_FUZZED(55.05)), bvec2(true, false)))).x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) | 0u)), max((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(646.714), (vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))[1]), vec2((vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(55.05)), bvec2(true, false)))).x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(646.714), (vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))[1]), vec2((vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(55.05, (55.05) + 0.0))), bvec2(true, false)))).x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) | 0u)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))) << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(646.714), (vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))[1]), vec2((vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(55.05)), bvec2(true, false)))).x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), 0u | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-37.37) : 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)), mix(vec2(_GLF_FUZZED(646.714), (vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))[1]), vec2((vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(55.05)), bvec2(true, false)))).x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) | 0u))))) + subgroup_local_id, ~ (~ (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0)), mix(float(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(8.4)), bool(false)))), float(_GLF_FUZZED(-0.3)), bool(false)))), injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | (3u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) + 0.0)) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ((1u ^ 1u) & 51259u) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | ((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))) : _GLF_FUZZED(subgroup_size)))) | 0u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0)), mix(float(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(8.4)), bool(false)))), float(_GLF_FUZZED(-0.3)), bool(false)))), injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | (3u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) + 0.0)) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ((1u ^ 1u) & 51259u) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | ((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))) : _GLF_FUZZED(subgroup_size)))) | 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0)), mix(float(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(8.4)), bool(false)))), float(_GLF_FUZZED(-0.3)), bool(false)))), injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | (3u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) + 0.0)) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ((1u ^ 1u) & 51259u) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | ((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))) : _GLF_FUZZED(subgroup_size)))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (subgroup_size) >> (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0)), mix(float(float(mat3(0.0, sin(0.0), 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), log(cos(0.0)), 1.0, 0.0, 1.0))), float(_GLF_FUZZED(8.4)), bool(false)))), float(_GLF_FUZZED(-0.3)), bool(false)))), injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | (3u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) + 0.0)) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), ((1u ^ 1u) & 51259u) + (_GLF_IDENTITY((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | ((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))) : _GLF_FUZZED(subgroup_size)))) | 0u)))))))) + subgroup_local_id)))) << 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u) + subgroup_local_id) | (workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id)), subgroup_id, subgroup_id)), (true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(64058u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(64058u, (64058u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY((0u | 0u), 0u ^ (_GLF_IDENTITY((0u | 0u), _GLF_IDENTITY(max((0u | 0u), (0u | 0u)), clamp(_GLF_IDENTITY(max((0u | 0u), (0u | 0u)), min(max((0u | 0u), (0u | 0u)), max((0u | 0u), (0u | 0u)))), max((0u | 0u), (0u | 0u)), max((0u | 0u), (0u | 0u))))))))), 0u | (uint(uvec2(_GLF_IDENTITY(64058u, (64058u) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(7u, (((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u))), 1u), (uvec3(7u, (((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)), clamp((uint(0u)), (uint(0u)), (uint(0u)))) >> 0u))), 1u)) * uvec3(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 1u, 1u))), uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uvec3(7u, ((_GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u)), clamp((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u)), ((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u))) - 0u), _GLF_IDENTITY((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u)), uint(_GLF_IDENTITY(uint((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u))), (uint((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u)))) | (uint((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u)))))))))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u))), 1u), (uvec3(7u, (((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u))), 1u)) * uvec3(1u, 1u, 1u)))), 0u ^ (uint(uint(_GLF_IDENTITY(uvec3(7u, (((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u))), 1u), _GLF_IDENTITY((uvec3(7u, (((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u))), 1u)), ((uvec3(7u, (((1u & 1u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u))), 1u))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - length(vec3(0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) / 1.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(6798.6870)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), _GLF_ZERO(0.0, injectionSwitch.x))) * uvec3(1u, 1u, 1u)))))))))), uint(7u)))), (0u | 0u))))))))))) * subgroup_size + subgroup_local_id))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)), (true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) : _GLF_FUZZED(workgroup_base))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(num_workgroup) : subgroup_size)));
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(4, 4)), 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, int(ivec2(4, 1))), 64, 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u))))) : subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), clamp(~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), clamp(~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1)))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), clamp(~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))))))))) - 0u)), _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), (clamp(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) | (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u))))) : subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), clamp(~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1))))))), _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + 1)))) << 0u)) < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), _GLF_IDENTITY(((read_1)) | 0u, min(((read_1)) | 0u, ((read_1)) | 0u))) / 1u) == _GLF_IDENTITY(read_2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : read_2)), bool(bool(_GLF_IDENTITY(read_1, (read_1) / 1u) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(read_2) : read_2)))))), (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) / 1u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY(read_1, 0u ^ (_GLF_IDENTITY(read_1, 0u ^ (read_1))))) / 1u, _GLF_IDENTITY(((read_1) / 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(((read_1) / 1u), min(_GLF_IDENTITY(((read_1) / 1u), _GLF_IDENTITY((((read_1) / 1u)) - 0u, 0u ^ (_GLF_IDENTITY((((read_1) / 1u)) - 0u, max((((read_1) / 1u)) - 0u, (((read_1) / 1u)) - 0u))))), ((read_1) / 1u))))) - (0u ^ 0u))))) == read_2)) / 1u) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2) + 1, min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2) + 1, (true ? uint(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2) + 1 : _GLF_FUZZED(subgroup_id))), uint(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2) + 1)), (uint(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2) + 1) << 0u), uint(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2) + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10170) : 1)))), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u + (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, 0u, 0u)))))))], uint(_GLF_IDENTITY(read_1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED(workgroup_size))) == read_2) + 1, 4, 64, 4);
   subgroupAll(true);
  }
}
