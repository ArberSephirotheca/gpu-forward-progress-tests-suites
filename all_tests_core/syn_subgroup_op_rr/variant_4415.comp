#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.y)))) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.y)))) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))), (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) / 1.0))))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) / 1.0))))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.7) : injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(0.4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_IDENTITY(_GLF_FUZZED(0.4), mix(float(_GLF_FUZZED(-8.4)), float(_GLF_IDENTITY(_GLF_FUZZED(0.4), min(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))), bool(true)))))), clamp((_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))), (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(_GLF_IDENTITY(0.4, clamp(_GLF_IDENTITY(0.4, clamp(0.4, _GLF_IDENTITY(0.4, max(0.4, 0.4)), 0.4)), _GLF_IDENTITY(0.4, (0.4) - 0.0), 0.4)))))), (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))))) / 1.0) : injectionSwitch.x, max(false ? _GLF_IDENTITY(_GLF_FUZZED(0.4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_IDENTITY(_GLF_FUZZED(0.4), mix(float(_GLF_FUZZED(-8.4)), float(_GLF_IDENTITY(_GLF_FUZZED(0.4), min(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))), bool(true)))))), clamp((_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))), (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(_GLF_IDENTITY(0.4, clamp(_GLF_IDENTITY(0.4, clamp(0.4, _GLF_IDENTITY(0.4, max(0.4, 0.4)), 0.4)), _GLF_IDENTITY(0.4, (0.4) - 0.0), 0.4)))))), (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))))) / 1.0) : injectionSwitch.x, false ? _GLF_IDENTITY(_GLF_FUZZED(0.4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_IDENTITY(_GLF_FUZZED(0.4), mix(float(_GLF_FUZZED(-8.4)), float(_GLF_IDENTITY(_GLF_FUZZED(0.4), min(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))), bool(true)))))), clamp((_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))), (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(_GLF_IDENTITY(0.4, clamp(_GLF_IDENTITY(0.4, clamp(0.4, _GLF_IDENTITY(0.4, max(0.4, 0.4)), 0.4)), _GLF_IDENTITY(0.4, (0.4) - 0.0), 0.4)))))), (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))))) / 1.0) : injectionSwitch.x)), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.4 : _GLF_FUZZED(8832.1339)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(_GLF_IDENTITY(0.4, (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY(0.4, (0.4) * 1.0))))))), clamp((_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(_GLF_IDENTITY(0.4, (0.4) + tan(0.0)))))), (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(_GLF_IDENTITY(0.4, (0.4) + tan(0.0)))))), (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))))) / 1.0) : injectionSwitch.x, false ? _GLF_IDENTITY(_GLF_FUZZED(0.4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))), clamp((_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))), (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))), (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))))) / 1.0) : injectionSwitch.x, false ? _GLF_IDENTITY(_GLF_FUZZED(0.4), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_IDENTITY(_GLF_FUZZED(0.4), max(_GLF_FUZZED(0.4), _GLF_IDENTITY(_GLF_FUZZED(0.4), max(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))))))))), clamp((_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))), (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))), (_GLF_IDENTITY(_GLF_FUZZED(0.4), clamp(_GLF_FUZZED(0.4), _GLF_FUZZED(0.4), _GLF_FUZZED(0.4)))))) / 1.0) : injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true)))) || (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || (false)), (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), (bool(bvec2((! (false)), false))) || _GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, true && (false)))) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), min(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(uvec2(workgroup_size * workgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), uvec2(workgroup_size * workgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), uvec2(workgroup_size * workgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), (uint(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), min(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(uvec2(workgroup_size * workgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), uvec2(workgroup_size * workgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), uvec2(workgroup_size * workgroup_id, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) | 0u)))), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(max(workgroup_size * workgroup_id, workgroup_size * workgroup_id), (max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) / 1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)))) + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY(max((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), ~ (_GLF_IDENTITY(~ (max((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u + (~ (max((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))), (_GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))) - 0u)))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.4) : injectionSwitch.y)), abs(0.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), false, false, false))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))), (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))), false))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), (! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))))), bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))))), true, false, true))))) || false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), 0.0, 1.0, 0.0, 0.0))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 0.0, 1.0, 0.0, 0.0))))), true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))), true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))))), true))), true), false, true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))), false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(clamp(-6.7, 1439.0070, -6.9)) : 0.0)), 0.0)), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-4837.2107)))))))), false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(cos(-70.09)))))), false, _GLF_IDENTITY(true, ! (! (true)))))), true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))), false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(clamp(-6.7, 1439.0070, -6.9)) : 0.0)), 0.0)), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-4837.2107)))))))), false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(cos(-70.09)))))), false, _GLF_IDENTITY(true, ! (! (true)))))), true))))), (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))))), false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(clamp(-6.7, 1439.0070, -6.9)) : 0.0)), 0.0)), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-4837.2107)))))))), false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(cos(-70.09)))))), false, _GLF_IDENTITY(true, ! (! (true)))))), true)))))) || false)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY((dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) / _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec2(1.0, 0.0)), (dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec2(1.0, 0.0))) / 1.0)), mix(float(_GLF_IDENTITY((dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) / _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec2(1.0, 0.0)), (dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec2(1.0, 0.0))) / 1.0)), min((dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) / _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec2(1.0, 0.0)), (dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec2(1.0, 0.0))) / 1.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) / _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec2(1.0, 0.0)), (dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec2(1.0, 0.0))) / 1.0))))), float(_GLF_FUZZED(121.092)), bool(false))))), 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, sqrt(1.0), 1.0, log(1.0), 0.0, 1.0, determinant(mat3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0))), 0.0, 0.0))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(698.132), _GLF_FUZZED(811.039)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(698.132), 1.0 * (_GLF_FUZZED(698.132))), _GLF_FUZZED(811.039)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(698.132), _GLF_FUZZED(811.039)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))) / vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-1.0) : 1.0)))), injectionSwitch)).y) * 1.0), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(698.132), _GLF_FUZZED(811.039)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(698.132), _GLF_FUZZED(811.039)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec2(bvec2(bvec2(bvec2(true, true))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec2(bvec2(bvec2(bvec2(true, true))))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec2(bvec2(bvec2(bvec2(true, true))))))))), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec2(bvec2(bvec2(bvec2(true, true))))))))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec2(bvec2(bvec2(bvec2(true, true))))))))), true, true))))), false)))))))) / vec2(1.0, 1.0)), injectionSwitch)).y, float(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(698.132), _GLF_FUZZED(811.039)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), injectionSwitch)).y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)) ? _GLF_FUZZED(84037) : 64)), int(ivec4(_GLF_IDENTITY(64, min(64, 64)), 0, 1, 1))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79367) : 0)));
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bool(bool((false))))))) || _GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(false, (false) || false)) || false))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false))))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true) && true))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), 0u + (uint(read_1 == read_2))), uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), uint(read_1 == read_2)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), 0u + (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u), uint(read_1 == read_2)))) | (uint(read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), uint(read_1 == read_2)), (clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), 0u + (uint(read_1 == read_2))), uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), uint(read_1 == read_2))) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) + (uint(read_1 == read_2))), uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), uint(read_1 == read_2)), (clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), 0u + (_GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(read_2) : uint(read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), (read_1 == read_2) && true)), uint(read_1 == read_2))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) + (uint(read_1 == read_2))), uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), uint(read_1 == read_2)), (clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), 0u + (_GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(read_2) : uint(read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), (read_1 == read_2) && true)), uint(read_1 == read_2))) - 0u), 1u * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) + (uint(read_1 == read_2))), uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), uint(read_1 == read_2)), (clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), 0u + (_GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(read_2) : uint(read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), (read_1 == read_2) && true)), uint(read_1 == read_2))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) + (uint(read_1 == read_2))), uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), uint(read_1 == read_2)), (clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), 0u + (_GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(read_2) : uint(read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), (read_1 == read_2) && true)), uint(read_1 == read_2))) - 0u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) + (uint(read_1 == read_2))), uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), uint(read_1 == read_2)), (clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), 0u + (_GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(read_2) : uint(read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), (read_1 == read_2) && true)), uint(read_1 == read_2))) - 0u)) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) + (uint(read_1 == read_2))), uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), uint(read_1 == read_2)), (clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), 0u + (_GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(read_2) : uint(read_1 == read_2))))), uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), (read_1 == read_2) && true)), uint(read_1 == read_2))) - 0u)))))))), 1u, 1u)))) + 1, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), ~ (_GLF_IDENTITY(~ (~ (~ (next_virtual_gid))), max(~ (~ (~ (next_virtual_gid))), ~ (~ (~ (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))))))))), clamp(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(read_2) : next_virtual_gid)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (next_virtual_gid))), _GLF_IDENTITY(max(~ (~ (~ (next_virtual_gid))), ~ (~ (~ (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)), clamp((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)))) - 0u))))), (max(~ (~ (~ (next_virtual_gid))), ~ (~ (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - 0u)))))) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (next_virtual_gid))), _GLF_IDENTITY(max(~ (~ (~ (next_virtual_gid))), ~ (~ (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - 0u))))), (max(~ (~ (~ (next_virtual_gid))), ~ (~ (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - 0u)))))) * 1u)), 0u | (_GLF_IDENTITY(~ (~ (~ (next_virtual_gid))), _GLF_IDENTITY(max(~ (~ (~ (next_virtual_gid))), ~ (~ (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - 0u))))), (max(~ (~ (~ (next_virtual_gid))), ~ (~ (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) - 0u)))))) * 1u))))) + 0u)))), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), ~ (_GLF_IDENTITY(~ (~ (~ (next_virtual_gid))), max(~ (~ (~ (next_virtual_gid))), ~ (~ (~ (next_virtual_gid)))))))), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u ^ (next_virtual_gid), (_GLF_IDENTITY(0u ^ (next_virtual_gid), (0u ^ (_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid)))) | (0u ^ (next_virtual_gid)))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))), _GLF_IDENTITY(~ (~ (next_virtual_gid)), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((~ (next_virtual_gid)), (_GLF_IDENTITY((~ (next_virtual_gid)), ((~ (next_virtual_gid))) | 0u)) << 0u)), max(~ (~ (_GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(52347u) : _GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), _GLF_IDENTITY(~ (next_virtual_gid), uint(uvec4(~ (_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(read_2) : next_virtual_gid))), 1u, 1u, 1u))), ~ (next_virtual_gid))))))), ~ (~ (~ (next_virtual_gid))))))))))], _GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, (1) | (1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, (1) | (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))) - 0))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) + _GLF_IDENTITY(1, (1) | (1)), uint(_GLF_IDENTITY(uvec3(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || _GLF_IDENTITY(false, (false) || false))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(99613, (99613) | (99613))) : 1)), 1, 0)))) * 1), _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), ((1)) >> 0)) + (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))) | (1)), _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(1u, 0u + (1u))), _GLF_IDENTITY(uvec3(uvec4(uvec3(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || _GLF_IDENTITY(false, (false) || false))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(99613, (99613) | (99613))) : 1)), 1, 0)))) * 1), _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), (false ? _GLF_FUZZED(floatBitsToInt(401.568)) : _GLF_IDENTITY((1), ((1)) + 0)))) | ((1))), ((1)) >> 0)) + (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))) | (1)), _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(1u, 0u + (1u))), 1u)), uvec3(uvec3(uvec3(uvec4(uvec3(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || _GLF_IDENTITY(false, (false) || false))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(99613, (99613) | (99613))) : 1)), 1, 0)))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(99613, (99613) | (99613))) : 1)), 1, 0)))) * 1), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(99613, (99613) | (99613))) : 1)), 1, 0)))) * 1))))) ^ 0), _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), ((1)) >> 0)) + _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))), int(ivec3((0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))), 1, (1 & 1))))) / 1)) | (1)), _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), 0u + ((0u)))), _GLF_IDENTITY(1u, 0u + (1u))), 1u)))))))), uint(read_1 == read_2) + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), int(int((1)))))))), (uint(_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, (1) | (1)), uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), uint(read_1 == read_2))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? (1) | (1) : _GLF_FUZZED(bitCount(38457))))), 0u, 1u))), uint(read_1 == read_2) + _GLF_IDENTITY(1, (1) | (1)))))) >> 0u))), 4, 64, 4);
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
