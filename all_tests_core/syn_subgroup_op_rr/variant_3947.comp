#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(20.46, -3.6, 0.5, -2.6).g)), bool(false))) > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x)))) - 0u) >> 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), gl_WorkGroupSize.x)))), (gl_WorkGroupSize.x) * 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) - 0u) : _GLF_FUZZED((~ subgroup_id))))), (gl_WorkGroupSize.x) >> 0u), uint(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x) * 1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1u : _GLF_FUZZED(bitfieldExtract(num_workgroup, 95899, -5976)))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x) * 1u, clamp(_GLF_IDENTITY((gl_WorkGroupSize.x) * 1u, min((gl_WorkGroupSize.x) * 1u, (gl_WorkGroupSize.x) * 1u)), _GLF_IDENTITY((gl_WorkGroupSize.x) * 1u, clamp((gl_WorkGroupSize.x) * 1u, _GLF_IDENTITY((gl_WorkGroupSize.x) * 1u, 0u | ((gl_WorkGroupSize.x) * 1u)), (gl_WorkGroupSize.x) * 1u)), (gl_WorkGroupSize.x) * 1u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)).x) * 1u : _GLF_FUZZED(bitfieldExtract(num_workgroup, 95899, -5976))))) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))) * 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))) * 1u)), (uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x))) * 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) + sin(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-842.359)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(true))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(68.64))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x > injectionSwitch.y)), true))))), false, true, true))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x > injectionSwitch.y))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, false || (true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, false || (true)))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (bool(bvec2(false, false)))))))), true), true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.9), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x4((injectionSwitch)[0], 1.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), max(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0))))), 1.0, 1.0, 0.0, 0.0, cos(0.0)))), (injectionSwitch)[0])), _GLF_FUZZED(640.164)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.9), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x4((injectionSwitch)[0], 1.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), max(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0))))), 1.0, 1.0, 0.0, 0.0, cos(0.0)))), (injectionSwitch)[0])), _GLF_FUZZED(640.164)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.9), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x4((injectionSwitch)[0], 1.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), max(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0))))), 1.0, 1.0, 0.0, 0.0, cos(0.0)))), (injectionSwitch)[0])), _GLF_FUZZED(640.164)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.9), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x4((injectionSwitch)[0], 1.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), max(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0))))), 1.0, 1.0, 0.0, 0.0, cos(0.0)))), (injectionSwitch)[0])), _GLF_FUZZED(640.164)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))))))), false, true, false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.9), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-8064.7675))), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(898.623)), bvec2(false, false)))[1])), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x4((injectionSwitch)[0], _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(16.05) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0)), 1.0, 0.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), max(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0))))), 1.0, 1.0, 0.0, 0.0, cos(0.0)))), (injectionSwitch)[0])), _GLF_FUZZED(640.164)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y, false, true, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.9), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))], clamp(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x4((injectionSwitch)[0], 1.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), max(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), max(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0))))))), 1.0, 1.0, 0.0, 0.0, cos(0.0)))), (injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(640.164, min(640.164, 640.164)))), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), injectionSwitch)).x > injectionSwitch.y, false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.9), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))], clamp(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x4((injectionSwitch)[0], 1.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), max(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), max(dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0)), dot(vec2(1.0, cos(0.0)), vec2(tan(0.0), 0.0))))))), 1.0, 1.0, 0.0, 0.0, cos(0.0)))), (injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(640.164, min(640.164, 640.164)))), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), injectionSwitch)).x > injectionSwitch.y, false, true, false))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec2((true), false))) || false) ? subgroup_id * subgroup_size : _GLF_FUZZED(num_workgroup))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false, false, true))))))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id)) | 0u), 1u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id)) | 0u), 1u, 0u, 1u))) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) && true) ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) << 0u)))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) && true) ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id)))))) + 1) + (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))))) | 0u) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))))), 1))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (subgroup_local_id + 1) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) + 1) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (subgroup_local_id + 1) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))) >> 0u), (subgroup_local_id + 1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (subgroup_local_id + 1) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (subgroup_local_id + 1) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (subgroup_local_id + 1) << 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), 0u | (((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))) - 0u) * 1u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))), uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))), 0u, 1u)) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, 1u, 1u), (uvec4(subgroup_local_id + 1, 1u, 1u, 1u)) | (uvec4(subgroup_local_id + 1, 1u, 1u, 1u)))))), max((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, 1u, 1u), (uvec4(subgroup_local_id + 1, 1u, 1u, 1u)) | (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 1u, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), 1u, 1u, 1u), (uvec4(subgroup_local_id + 1, 1u, 1u, 1u)) | (uvec4(subgroup_local_id + 1, 1u, 1u, 1u)))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, 1u, 1u), (uvec4(subgroup_local_id + 1, 1u, 1u, 1u)) | (uvec4(subgroup_local_id + 1, 1u, 1u, 1u)))))), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 1u, 1u, 1u), (uvec4(subgroup_local_id + 1, 1u, 1u, 1u)) | (uvec4(subgroup_local_id + 1, 1u, 1u, 1u))))))) ^ 0u))))))) << 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (subgroup_local_id + 1) << 0u)) - (0u ^ 0u))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) >> 0u), (subgroup_local_id + 1) << 0u)))) % subgroup_size)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(1, (1) | (1))))), ~ (~ (~ (_GLF_IDENTITY(1, (1) | (1)))))))), clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (uvec2(199602u, 155270u).x & 0u) | (virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), true)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))), true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), true && (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))), true, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-7.0) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))), false, false)))) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-3.8)), bool(false)))), bool(true))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-3.8)), bool(false)))), bool(true))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-3.8)), bool(false)))), bool(true)))))) - 0u)))))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u)))), (uint(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), (false ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))))), _GLF_IDENTITY(0u, (0u) / 1u), 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), 0u, 0u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) * 1u))), subgroup_size, subgroup_size)), 0u, 0u))), 0u, 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))) - 0u)), 0u, 1u), 0u)), max(uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u, 1u), 0u)), uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u, 1u), 0u)))), _GLF_IDENTITY((uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u, 1u), 0u))), ~ (~ (_GLF_IDENTITY((uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u, 1u), 0u))), _GLF_IDENTITY(uvec3(uvec3((uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))))), 0u, 1u), 0u))))), (false ? _GLF_FUZZED(uvec3(163841u, 50634u, 112144u)) : uvec3(uvec3((_GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, 1u)), (true ? uint(uvec4(subgroup_size, 0u, 0u, 1u)) : _GLF_FUZZED(next_virtual_gid)))), subgroup_size)), 0u, 0u))), 0u, 1u), 0u)), ~ (_GLF_IDENTITY(~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, 1u)), (true ? uint(uvec4(subgroup_size, 0u, 0u, 1u)) : _GLF_FUZZED(next_virtual_gid)))), subgroup_size)), 0u, 0u))), 0u, 1u), 0u))), (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, 1u)), (true ? uint(uvec4(subgroup_size, 0u, 0u, 1u)) : _GLF_FUZZED(next_virtual_gid)))), subgroup_size)), 0u, 0u))), 0u, 1u), 0u)))) | uvec3(0u, 0u, 0u))))))))))))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u, _GLF_IDENTITY(1u, (1u) / 1u)), 0u)), max(uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u, 1u), 0u)), uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u, 1u), 0u)))), _GLF_IDENTITY((uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u, 1u), 0u))), ~ (~ (_GLF_IDENTITY((uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u, 1u), 0u))), _GLF_IDENTITY(uvec3(uvec3((uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u, 1u), 0u))))), (false ? _GLF_FUZZED(uvec3(163841u, 50634u, 112144u)) : uvec3(uvec3((uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))), 0u, 1u), 0u))))))))))) / uvec3(1u, 1u, 1u))) ^ uvec3(0u, 0u, 0u)))))), (uint(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1))))) : _GLF_FUZZED(read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1))))), (false ? _GLF_FUZZED((subgroup_id * subgroup_local_id)) : _GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1))))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1))))), (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1)))))) >> 0u))) == read_2, (read_1 == read_2) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), false, _GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (read_1 == read_2) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, true)))) && true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), (read_1 == read_2) && true)), false || (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 == read_2), ((_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, true)))))))) || false)), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), false, true, true))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), false, true, true))))))) && true))))), bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), (read_1 == read_2) && true)), false || (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))) || false)), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(((read_1 == read_2)), (((read_1 == read_2))) || false) || false)), false, true, true))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), bool(bvec4((_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), false, true, true))), true, false, false))))), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), false, true, true))))))) && true))))), ! (! (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), (read_1 == read_2) && true)), false || (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), false, true, true))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), false, true, true))))))))) && true)))))))), false, false, true)))))), false, true), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-7.8, 9586.2378, -9537.5279).x), _GLF_FUZZED(70.85)), bvec2(false, false))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) + 1, (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u)) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) | ((1u)))))) - 0u)) + (96372u & 0u))), uvec2(0u, 0u) | (uvec2(read_2, 1u)))))) >> 0u)) + 1, (uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), clamp((_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), _GLF_IDENTITY((_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), ((_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))) - 0u), (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))))) << 0u)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), 1))) << _GLF_IDENTITY(0u, 0u | (0u)))) * 1u)), clamp((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1))))) == read_2, (read_1 == read_2) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), false)))) && true), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, false || (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY((read_1 == read_2), (_GLF_IDENTITY((read_1 == read_2), true && (_GLF_IDENTITY((_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) | (read_2))), true && ((read_1 == read_2)))))) && true) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, true)))) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), (read_1 == read_2) && true)), false || (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false)))), ((read_1 == read_2)) || false)), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))) || false)), false, true, true))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 == read_2), ((_GLF_IDENTITY(read_1, uint(uvec3(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (_GLF_IDENTITY(~ (read_1), clamp(~ (read_1), ~ (read_1), ~ (read_1)))) | 0u))), 0u, (1u ^ 1u)))) == read_2)) || false)), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), false, true, true)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), false, true, true))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(((_GLF_IDENTITY(read_1, uint(uvec3(_GLF_IDENTITY(read_1, ~ (~ (read_1))), 0u, (1u ^ 1u)))) == read_2)) || false, bool(bvec3(((_GLF_IDENTITY(read_1, uint(uvec3(_GLF_IDENTITY(read_1, ~ (~ (read_1))), 0u, (1u ^ 1u)))) == read_2)) || false, true, true))))), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), false, true, true)))))))))) && true)))))))), false, true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))) + 1, (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) | ((1u)))))) - 0u)) + (96372u & 0u))), uvec2(0u, 0u) | (uvec2(read_2, 1u)))))) >> 0u)) + 1, (uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) << 0u), ! (! (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) << 0u))))) + 1) << _GLF_IDENTITY(0u, 0u | (0u)))) * 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1))))) == read_2, (read_1 == read_2) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), true, false, false)))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1))))) == read_2, (read_1 == read_2) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), true, false, false)))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) / 1u), (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, true)))) && true)), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1, (read_1) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2)), (read_1 == read_2) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1, (read_1) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))).x))) == read_2)), (read_1 == read_2) && true)))), false || (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(((read_1 == read_2)), true && (((read_1 == read_2)))) || false)), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))) || false)), false, true, true))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) + (0u ^ 0u)) == read_2), ((read_1 == read_2)) || false)), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (read_2) ^ 0u), read_2)))) || false)), false, true, true))))))) && true)))))))), false, true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) + 1, (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) | _GLF_IDENTITY(((1u)), clamp(((1u)), ((1u)), ((1u)))))))) - 0u)) + (96372u & 0u))), uvec2(0u, 0u) | (uvec2(read_2, 1u)))))) >> 0u)) + 1, (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) + 1) << _GLF_IDENTITY(0u, 0u | (0u)))) * 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1))))) == read_2, (read_1 == read_2) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1))))) == read_2, (read_1 == read_2) && true)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), false, _GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (read_1 == read_2) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, true)))) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), (read_1 == read_2) && true)), false || (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), false || (bool(bvec4(false, false, false, false))))))), false, true, true))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(((read_1 == read_2)) || false, true && (((read_1 == read_2)) || false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(((read_1 == read_2)) || false, true && (((read_1 == read_2)) || false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((_GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(((read_1 == read_2)) || false, true && (((read_1 == read_2)) || false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(! (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)), false, true, true))))))) && true)))))))), false, true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), _GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))))), (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) | ((1u)))))) - 0u)) + (96372u & 0u))), uvec2(0u, 0u) | (uvec2(read_2, 1u)))))) >> _GLF_IDENTITY(0u, (0u) + 0u))), (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), _GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))))), (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) | ((1u)))))) - 0u)) + (96372u & 0u))), uvec2(0u, 0u) | (uvec2(read_2, 1u)))))) >> _GLF_IDENTITY(0u, (0u) + 0u)))) | (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), _GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))))), (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) | ((1u)))))) - 0u)) + (96372u & 0u))), uvec2(0u, 0u) | (uvec2(read_2, 1u)))))) >> _GLF_IDENTITY(0u, (0u) + 0u))), 0u + (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), _GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u))))))), (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) | ((1u)))))) - 0u)) + (96372u & 0u))), uvec2(0u, 0u) | (uvec2(read_2, 1u)))))) >> _GLF_IDENTITY(0u, (0u) + 0u))))))) + 1, (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) << 0u)) + 1, _GLF_IDENTITY(uint(uint(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) << 0u)) + 1)), 0u | (uint(uint(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) << 0u)) + 1)))))) << _GLF_IDENTITY(0u, 0u | (0u)))) * 1u)))) | _GLF_IDENTITY((uint(read_1 == read_2) + 1), 0u + ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : uint(read_1 == read_2))) + 1)))), clamp(uint(read_1 == _GLF_IDENTITY(read_2, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (read_2))) + 1, uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_local_id))), read_1))) ^ 0u) == read_2) + 1, uint(read_1 == read_2) + 1)), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, 1u, 1u)))) ^ 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, 0 | (1))))) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY((1) << (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY((1) << (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY((1) << (0 >> _GLF_IDENTITY(int(8), int(8))), min((1) << (0 >> _GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY((1) << (0 >> _GLF_IDENTITY(int(8), int(8))), (true ? (1) << (0 >> _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(-8442)))))) - 0)) ^ 0), min(_GLF_IDENTITY((1) << (0 >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) | (_GLF_IDENTITY(8, (false ? _GLF_FUZZED(46806) : 8))))) - 0)))), ((1) << (0 >> _GLF_IDENTITY(int(8), int(8)))) ^ 0), _GLF_IDENTITY((1) << (0 >> _GLF_IDENTITY(int(8), int(8))), (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), max((1), (_GLF_IDENTITY(1, 0 | (1))))))) << (0 >> _GLF_IDENTITY(int(8), int(8)))) ^ 0)))), _GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (false ? _GLF_FUZZED(-96464) : _GLF_IDENTITY(0, (0) | 0))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(64305) : (0))) | 0), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) / ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(7), ivec3(7))) >> _GLF_IDENTITY(ivec3(7), ivec3(7)))))) ^ (_GLF_IDENTITY((4), 0 | ((4))))), (4), (4)))) | (_GLF_IDENTITY((4), clamp((4), (4), (4))))) - 0), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  barrier();
}
