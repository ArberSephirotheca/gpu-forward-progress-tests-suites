#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 int _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 ivec4 _f1;
 uvec4 _f2;
 ivec3 _f3;
 uvec4 _f4;
 int _f5;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 uint _f1;
 ivec3 _f2;
 _GLF_struct_0 _f3;
 mat4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 _GLF_struct_1 _f1;
 uint workgroup_size;
 mat3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(bvec3(true), _GLF_struct_1(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), mix(float(_GLF_FUZZED(-666.417)), float(_GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 1.0)), cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), clamp(float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 1.0)), cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.8)), float(1.0), bool(true)))), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 1.0)), cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), float(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(fract(3.4)) : 1.0)), determinant(mat3(1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 1.0)), cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))))), bool(true))))), 1u, ivec3(1), _GLF_struct_0(_GLF_IDENTITY(uvec4(1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec4(1u) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(105144u, 106746u, 171588u, 75991u)), (_GLF_FUZZED(uvec4(105144u, 106746u, 171588u, 75991u))) - uvec4(_GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u, 0u)))), ivec4(1), uvec4(1u), ivec3(1), uvec4(1u), 1), mat4(1.0), ivec2(1)), gl_WorkGroupSize.x, mat3(1.0));
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(1, gl_WorkGroupID.x);
 uint workgroup_base = _GLF_struct_replacement_2.workgroup_size * _GLF_struct_replacement_3.workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (true ? workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / (1u & 1u))) % subgroup_size) : _GLF_FUZZED(workgroup_base)));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) >> 0u, (false ? _GLF_FUZZED(subgroup_id) : (next_virtual_gid) >> 0u)))) ^ 0u)], _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), ((uint(1))) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) << 0u), (_GLF_IDENTITY(0u, 0u | (0u))) | (0u))) >> _GLF_IDENTITY(0u, (0u) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) | (4))))), 64, 4);
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) / 1u)) | 0u)) ^ 0u)), 0u | (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))], (_GLF_IDENTITY(false ? _GLF_FUZZED((workgroup_base * workgroup_base)) : buf[virtual_gid], (false ? _GLF_FUZZED((workgroup_base * workgroup_base)) : buf[virtual_gid]) | (false ? _GLF_FUZZED((workgroup_base * workgroup_base)) : buf[virtual_gid])))), 4, _GLF_IDENTITY(64, ~ (~ (64))), 0);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)], _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), 0 | (_GLF_IDENTITY(1, (1) - 0)))))), 0, 0), max(ivec4(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0), ivec4(4, 1, 0, 0))))), 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 1u, 0u, 0u)), uint(_GLF_IDENTITY(uint(uint(uvec4(read_1, 1u, 0u, 0u))), clamp(uint(uint(uvec4(read_1, 1u, 0u, 0u))), uint(uint(uvec4(read_1, 1u, 0u, 0u))), uint(uint(uvec4(read_1, 1u, 0u, 0u)))))))) == read_2, true && (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(read_1, 0u + (read_1)), 1u, 0u, 0u)), uint(_GLF_IDENTITY(uint(uint(uvec4(read_1, 1u, 0u, 0u))), clamp(uint(uint(uvec4(read_1, 1u, 0u, 0u))), uint(uint(uvec4(read_1, 1u, 0u, 0u))), uint(uint(uvec4(read_1, 1u, 0u, 0u)))))))) == read_2))), clamp(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 1u, 0u, 0u)), uint(_GLF_IDENTITY(uint(uint(uvec4(read_1, 1u, 0u, 0u))), clamp(uint(uint(uvec4(read_1, 1u, 0u, 0u))), uint(uint(uvec4(read_1, 1u, 0u, 0u))), uint(uint(uvec4(read_1, 1u, 0u, 0u)))))))) == read_2), uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 0u))))))), 0u, 0u)), uint(_GLF_IDENTITY(uint(uint(uvec4(read_1, 1u, 0u, 0u))), clamp(uint(uint(uvec4(read_1, 1u, 0u, 0u))), uint(uint(uvec4(read_1, 1u, 0u, 0u))), uint(uint(uvec4(read_1, 1u, 0u, 0u)))))))) == read_2), uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 1u, 0u, 0u)), uint(_GLF_IDENTITY(uint(uint(uvec4(read_1, 1u, 0u, 0u))), clamp(uint(uint(uvec4(read_1, 1u, 0u, 0u))), uint(uint(uvec4(read_1, 1u, 0u, 0u))), uint(uint(uvec4(read_1, 1u, 0u, 0u)))))))) == read_2))) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-40148) : 1)), int(ivec4(1, 0, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> 0), 1))))), _GLF_IDENTITY(1, 0 | (1)))), 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), (false ? _GLF_FUZZED(39246) : (64))), clamp(~ (64), ~ (64), ~ (64)))))))) ^ 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, ~ (~ (64)))))) ^ 0)) - (0 ^ 0)), min(_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), (min(64, 64)) ^ 0)), 64)), 64)), 4);
   for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec2(0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY((1 | 1) << _GLF_IDENTITY(int(0), int(0)), 0 + ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), min(1 * (1), _GLF_IDENTITY(1 * (1), int(ivec2(1 * (1), 0))))))) / 1) | 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) | (0 | 0))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), 0), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(abs(_injected_loop_counter), max(abs(_injected_loop_counter), abs(_injected_loop_counter)))) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), (0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ (~ (1)))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0))))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(6899) : _GLF_IDENTITY((0), 0 | ((0))))) | (0)), _GLF_IDENTITY(0, (0) / 1))))), _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))) ^ 0, ((_GLF_IDENTITY(0, min(0, 0))) ^ 0) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) : 0))) | (0), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) : 0))) | (0)), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) : 0))) | (0)), (~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) : 0))) | (0))) >> 0)) | 0)))), (_GLF_IDENTITY(0, min(0, 0))) ^ 0)))) << 0))), 0)), (~ _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0), max((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0), _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0), ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)) << 0)))), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), clamp(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), ~ (~ (int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))), int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0, (0) * 1))), int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0)))) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0)))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0)))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0)))) << 0)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0)))) << 0))))), 0)), (_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0), max((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0), _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0), ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)) << 0)))), _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))) ^ 0, min((_GLF_IDENTITY(0, min(0, 0))) ^ 0, (_GLF_IDENTITY(0, min(0, 0))) ^ 0))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), clamp(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), ~ (~ (int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))), int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))) ^ 0, 0 | ((_GLF_IDENTITY(0, min(0, 0))) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))) ^ 0, int(_GLF_IDENTITY(int((_GLF_IDENTITY(0, min(0, 0))) ^ 0), max(int((_GLF_IDENTITY(0, min(0, 0))) ^ 0), _GLF_IDENTITY(int((_GLF_IDENTITY(0, min(0, 0))) ^ 0), min(int((_GLF_IDENTITY(0, min(0, 0))) ^ 0), int((_GLF_IDENTITY(0, min(0, 0))) ^ 0)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0)))))) << 0))), 0)), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0), max((_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) - 0), 1, 0, 0), (ivec4(_GLF_IDENTITY(0, (0) - 0), 1, 0, 0)) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_IDENTITY(ivec2(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) - 0), 1, 0, 0), (ivec4(_GLF_IDENTITY(0, (0) - 0), 1, 0, 0)) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 1), (ivec2(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) - 0), 1, 0, 0), (ivec4(_GLF_IDENTITY(0, (0) - 0), 1, 0, 0)) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), 1)) | ivec2(0, 0))))), (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0), _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(abs(_injected_loop_counter), max(_GLF_IDENTITY(abs(_injected_loop_counter), min(abs(_injected_loop_counter), abs(_injected_loop_counter))), abs(_injected_loop_counter)))) : 0))) | (0), ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)) << 0)))), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), clamp(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), ~ (~ (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) << 0) : _GLF_FUZZED(_injected_loop_counter))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))), int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, max((0) / 1, (0) / 1)))))) | (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(abs(_injected_loop_counter)), (_GLF_IDENTITY(_GLF_FUZZED(abs(_injected_loop_counter)), (_GLF_FUZZED(abs(_injected_loop_counter))) >> 0)) | (_GLF_FUZZED(abs(_injected_loop_counter)))) : _GLF_IDENTITY(0, (0) / 1)))))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(abs(_injected_loop_counter)), (_GLF_FUZZED(abs(_injected_loop_counter))) | (_GLF_IDENTITY(_GLF_FUZZED(abs(_injected_loop_counter)), (_GLF_FUZZED(abs(_injected_loop_counter))) / 1))) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0)))) << 0))), 0)) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), 0 ^ (_GLF_FUZZED(_injected_loop_counter)))) | (_GLF_FUZZED(_injected_loop_counter)))) * 1)))) | ((min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0), (true ? (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0) : _GLF_FUZZED(-38326))))) | _GLF_IDENTITY((0), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((0), ((0)) << 0))), max((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0), _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)) << 0)))), _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), max((_GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY(0, min(0, 0)))))) << 0) ^ 0), (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), clamp(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), ~ (~ (int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))), int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), clamp(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), ~ (~ (int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))), int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), int(ivec3(_GLF_IDENTITY(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))) << (0 << _GLF_IDENTITY(int(1), int(1))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0)))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0))))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : _GLF_IDENTITY(0, (0) / 1)))))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0)), 0 + (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(_injected_loop_counter)) : 0))))) | (0)), (_GLF_IDENTITY(0, min(0, 0))) ^ 0)))) << _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-57741))), 0)))) / 1))), 0))))) / 1)))))))); _injected_loop_counter ++)
    {
     subgroupAll(_GLF_IDENTITY(false, (false) || false));
    }
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << (0u ^ 0u))], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 1u * (read_2)), _GLF_IDENTITY(bool(bool(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), read_2, read_2)))), (bool(bool(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read_2, (read_2) >> 0u))), max(~ (~ (_GLF_IDENTITY(read_2, (read_2) >> 0u))), ~ (~ (_GLF_IDENTITY(read_2, (read_2) >> 0u))))))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), (bool(bool(read_1 == read_2))) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), (bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) / (0u ^ 1u))), false || (_GLF_IDENTITY(bool(read_1 == read_2), true && (_GLF_IDENTITY(bool(read_1 == read_2), (bool(read_1 == read_2)) && true))))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))), true)), true))))))))))) && true))))))), (bool(bool(read_1 == read_2))) && true)) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), true && (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(read_1 == read_2))) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) || (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), ! (! ((_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true)))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), true && (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(read_1 == read_2))) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))) || _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), true && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), true && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))))) || false))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true)))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), (bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) / (0u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), false || (_GLF_IDENTITY(bool(read_1 == read_2), true && (_GLF_IDENTITY(bool(read_1 == read_2), (bool(read_1 == read_2)) && true))))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))), true)), true))))))))))) && true))))))), (bool(bool(read_1 == read_2))) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec4(bvec3(bool(read_1 == read_2), true, false), true)))))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), true && (! (_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u ^ (read_2))) << 0u)), bool(bvec3(bool(read_1 == read_2), true, false))))))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(read_1 == read_2))) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(exp(-42.19)) : injectionSwitch.y)))) || (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), ! (! ((_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(read_1 == read_2), true, false)), bvec3(bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))))))))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), (bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) / (_GLF_IDENTITY(0u ^ 1u, ~ (~ (0u ^ 1u)))))), false || (_GLF_IDENTITY(bool(read_1 == read_2), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)), (bool(read_1 == read_2)) && true))))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))))))))), (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true, false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))), true)), true))))))))))) && true))))))), (bool(bool(read_1 == read_2))) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), true && (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(read_1 == read_2))) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) || (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), ! (! ((_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false)))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))) && true))))))))), ! (! ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(read_1 == read_2), true, false)), bvec3(bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))))))))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), (bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) / (_GLF_IDENTITY(0u ^ 1u, ~ (~ (0u ^ 1u)))))), false || (_GLF_IDENTITY(bool(read_1 == read_2), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)), (bool(read_1 == read_2)) && true))))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))))))))), (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true, false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))), true)), true))))))))))) && true))))))), (bool(bool(read_1 == read_2))) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), true && (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(read_1 == read_2))) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) || (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), ! (! ((_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false)))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))) && true))))))))))))), false, true, true))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bool(_GLF_IDENTITY(bool(bool(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) | (read_2))) | (read_2)))), ! (! (bool(_GLF_IDENTITY(bool(read_1 == read_2), (_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2)))) || false))))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec2(! (_GLF_IDENTITY(true, true && (true))), true)))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))))))))))))), (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bool(_GLF_IDENTITY(bool(bool(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) | (read_2))) | (read_2)))), ! (! (bool(_GLF_IDENTITY(bool(read_1 == read_2), (_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2)))) || false)))))))), ! (! (_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bool(_GLF_IDENTITY(bool(bool(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) ^ 0u)) | (read_2))) | (read_2)))), ! (! (bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec2(read_2, 0u)), (uint(uvec2(read_2, 0u))) << 0u))) | (read_2))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (bool(read_1 == read_2)))) || false)))))))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec2(! (_GLF_IDENTITY(true, true && (true))), true)))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))) && true))))))))))))) && true))) || false))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, true)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))) && true), false, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true)))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true)))))))))))), true)))))))), false || (bool(bvec3(bool(bvec2(false, true)), false, true)))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), true, true, false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3312.0940) : injectionSwitch.y))))))) || false)), true, true))), true)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), true && ((false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && ((_GLF_IDENTITY(false, true && (false))))), true, true)))))) || false))) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), true && ((false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))), true, true)))))) || false))) || false)), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), true && ((false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))), true, true)))))) || false))) || false)))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true && (_GLF_IDENTITY((((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bool((((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))) || false, false || (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true && (_GLF_IDENTITY((((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bool((((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))) || false, ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), _GLF_IDENTITY((((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true && (_GLF_IDENTITY((((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bool((((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))) || false)))))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))) || false))) || _GLF_IDENTITY(false, true && (false)))))) || false) || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(((true ? -54.82 : -21.81)))), bool(false))))), false))))), _GLF_IDENTITY((bool(bool(read_1 == read_2))), false || (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true, false)))), false || (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true, false))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true, false)))), false || (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true, false)))))))) || false)))))))), bool(bvec4((bool(bool(read_1 == read_2))), false, false, true))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))), true && (read_1 == read_2)), _GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u), read_1, read_1)) == read_2))), true))), ! (! (_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u), read_1, read_1)), max(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u), read_1, read_1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u), read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u), read_1, read_1))) | (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u), read_1, read_1)))))) == read_2))), true)))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))), true && (read_1 == read_2)), _GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, max(read_1, read_1)), _GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)))), (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u), read_1, read_1)) == read_2))), true))) && true))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), true && (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), bool(bvec2((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), false))))), false)), true && (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), true && (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), bool(bvec2((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), false))))), false))))) || false)))), true && (read_1 == read_2)), _GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u), read_1, read_1)) == read_2))), true))) && true)))) && true)), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)))), true && (read_1 == read_2)), _GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u), read_1, read_1)) == read_2))), true))) && true))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)), bool(bvec2(! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) || false)), true))))), true && (read_1 == read_2)), _GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(_GLF_IDENTITY(bvec2((bool(bool(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u), read_1, read_1)) == read_2))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((bool(bool(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u), read_1, read_1)) == read_2))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2((bool(bool(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) >> 0u), read_1, read_1)) == read_2))), true), true)), true)))))) && true)))) && true)), false))))) || false, _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 == read_2)), ! (! (bool(bool(read_1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, false)))))), true))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(read_1 == read_2))), true))) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(read_1 == read_2))), true))) && true), ! (! (! (_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec2(bool(read_1 == read_2), true))))), true))) && true)))), bool(bvec2(! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (bool(read_1 == read_2)), false || (_GLF_IDENTITY(! (bool(read_1 == read_2)), ! (! (! (bool(read_1 == read_2))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, 0u | (read_1)))) == _GLF_IDENTITY(read_2, (read_2) | 0u)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))))), bool(bvec2((bool(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false, false))) || false)), true)), false || (_GLF_IDENTITY(bool(bvec4(read_1 == read_2, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(read_1 == read_2, false, true, true))), false || (! (bool(bvec4(read_1 == read_2, false, true, true))))))))))))), _GLF_IDENTITY(true, ! (! (true)))))) && true), true)))))) || false)))), ! (! ((_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 == read_2)), ! (! (bool(bool(read_1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, false)))))), true))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(read_1 == read_2))), true))) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(read_1 == read_2))), true))) && true), ! (! (! (_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec2(bool(read_1 == read_2), true))))), true))) && true)))), bool(bvec2(! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (bool(read_1 == read_2)), false || (_GLF_IDENTITY(! (bool(read_1 == read_2)), ! (! (! (bool(read_1 == read_2))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, 0u | (read_1)))) == _GLF_IDENTITY(read_2, (read_2) | 0u)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))))), bool(bvec2((bool(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false, false))) || false)), true)), false || (_GLF_IDENTITY(bool(bvec4(read_1 == read_2, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(read_1 == read_2, false, true, true))), false || (! (bool(bvec4(read_1 == read_2, false, true, true))))))))))))), _GLF_IDENTITY(true, ! (! (true)))))) && true), true)))))) || false))))))) || false), bool(bvec2(true && (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 == read_2)), ! (! (bool(bool(read_1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, false)))))), true))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(read_1 == read_2))), true))) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(read_1 == read_2))), true))) && true), ! (! (! (_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec2(bool(read_1 == read_2), true))))), true))) && true)))), bool(bvec2(! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (bool(read_1 == read_2)), false || (_GLF_IDENTITY(! (bool(read_1 == read_2)), ! (! (! (bool(read_1 == read_2))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, 0u | (read_1)))) == _GLF_IDENTITY(read_2, (read_2) | 0u)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))))), bool(bvec2((bool(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false, false))) || false)), true)), false || (_GLF_IDENTITY(bool(bvec4(read_1 == read_2, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(read_1 == read_2, false, true, true))), false || (! (bool(bvec4(read_1 == read_2, false, true, true))))))))))))), _GLF_IDENTITY(true, ! (! (true)))))) && true), true)))))) || false)))), ! (! ((_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 == read_2)), ! (! (bool(bool(read_1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, false)))))), true))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(read_1 == read_2))), true))) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(read_1 == read_2))), true))) && true), ! (! (! (_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec2(bool(read_1 == read_2), true))))), true))) && true)))), bool(bvec2(! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (bool(read_1 == read_2)), false || (_GLF_IDENTITY(! (bool(read_1 == read_2)), ! (! (! (bool(read_1 == read_2))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, 0u | (read_1)))) == _GLF_IDENTITY(read_2, (read_2) | 0u)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))))), bool(bvec2((bool(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), false, false))) || false)), true)), false || (_GLF_IDENTITY(bool(bvec4(read_1 == read_2, false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(read_1 == read_2, false, true, true))), false || (! (bool(bvec4(read_1 == read_2, false, true, true))))))))))))), _GLF_IDENTITY(true, ! (! (true)))))) && true), true)))))) || false))))))) || false), true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 == read_2)), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) | (read_1))) ^ 0u) == read_2)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec2(bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false), true, false, true))))), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), false || (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)) || (_GLF_IDENTITY(bool(bool(read_1 == read_2)), (_GLF_IDENTITY(bool(bool(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), _GLF_IDENTITY(bool(bvec4(bool(bool(read_1 == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(false)))), false || (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true))))), (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(55.51)), vec2(_GLF_FUZZED(1305.4563), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), false || (bool(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[0])), _GLF_FUZZED(55.51)), vec2(_GLF_FUZZED(1305.4563), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[0])), _GLF_FUZZED(55.51)), vec2(_GLF_FUZZED(1305.4563), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)))), bool(bool((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[0])), _GLF_FUZZED(55.51)), vec2(_GLF_IDENTITY(_GLF_FUZZED(1305.4563), min(_GLF_FUZZED(1305.4563), _GLF_FUZZED(1305.4563))), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y))))) && (bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u + (_GLF_IDENTITY(read_2, min(read_2, read_2)))), true && (read_1 == read_2))))))), (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]), (clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), _GLF_FUZZED(55.51)), vec2(_GLF_FUZZED(1305.4563), (injectionSwitch)[_GLF_IDENTITY(1, int(int(1)))]), bvec2(false, true))).x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))))) && true))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(read_1 == read_2), true && (bool(read_1 == read_2))))))) && true)))) || false))), true, _GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), read_2, read_2), 0u | (clamp(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), read_2, read_2))))), true && (_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), read_2, read_2), 0u | (clamp(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), read_2, read_2))))), bool(bvec4(bool(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), read_2, read_2), 0u | (clamp(_GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))), read_2, read_2))))), false, true, true)))))), _GLF_IDENTITY((bool(bool(read_1 == read_2))) && true, true && ((bool(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), false, false), false))))), true, false, true)), bool(bvec2(bool(bvec4(read_1 == read_2, true, false, true)), _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, min(read_1, read_1))))) == read_2)), (bool(_GLF_IDENTITY(bool(read_1 == read_2), (bool(read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), true && (_GLF_IDENTITY(bool(bool(read_1 == read_2)), (bool(bool(read_1 == read_2))) || false)))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(read_1 == read_2))) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(_GLF_IDENTITY(bool(bool(bvec2(true, true))), true && (bool(bool(bvec2(true, true)))))))), false))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), false))))))))))))), (bool(bool(read_1 == read_2))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(num_workgroup)))) * 1u) == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 == read_2))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (read_1) | (read_1))))))) == read_2), true, false))))))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), true && (_GLF_IDENTITY(bool(bool(read_1 == read_2)), (bool(bool(read_1 == read_2))) || false)))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))), ! (! ((! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), (bool(bool(read_1 == read_2))) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(_GLF_IDENTITY(bool(bool(bvec2(true, true))), true && (bool(bool(bvec2(true, true)))))))), false))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), false)))))))))))))))), (bool(bool(read_1 == read_2))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((true ? read_1 : _GLF_FUZZED(num_workgroup)), max((true ? read_1 : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY((true ? read_1 : _GLF_FUZZED(num_workgroup)), max((true ? read_1 : _GLF_FUZZED(num_workgroup)), (true ? read_1 : _GLF_FUZZED(num_workgroup)))))))) * 1u) == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 == read_2))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true))))))))), ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), (bool(read_1 == read_2)) || false), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), true, true, false))))))))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false))))))), ((_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false))))), (bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))))) || false)))) || false)))), (bool(bool(read_1 == read_2))) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 == read_2, false), bvec2(bvec3(bvec2(read_1 == read_2, false), true)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) / _GLF_IDENTITY(1u, (1u) - 0u)) == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) / _GLF_IDENTITY(1u, (1u) - 0u)) == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) / _GLF_IDENTITY(1u, (1u) - 0u)) == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))) || false))))), _GLF_IDENTITY(true && (! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), false || (_GLF_IDENTITY(true && (! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (true && (! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))))))), (bool(bool(read_1 == read_2))) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))), (bool(bool(read_1 == read_2))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)))))), (bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)))))), (bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true, true), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)))))), (bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true, true), true, false))))))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), bool(bvec3(bool(read_1 == read_2), true, false))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(read_1 == read_2)), true && (_GLF_IDENTITY(bool(bool(read_1 == read_2)), (bool(bool(read_1 == read_2))) || false)))) && true, true && ((_GLF_IDENTITY(bool(bool(read_1 == read_2)), true && (_GLF_IDENTITY(bool(bool(read_1 == read_2)), (bool(bool(read_1 == read_2))) || false)))) && true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) | (read_1)), _GLF_IDENTITY(read_1, (read_1) >> (1u ^ 1u)))) == read_2))) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(_GLF_IDENTITY(bool(bool(bvec2(true, true))), true && (bool(bool(bvec2(true, true)))))))), false))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(bool(bvec3(bool(read_1 == read_2), true, false)), ! (! (bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), (bool(bool(read_1 == read_2))) || false))), bool(bvec3(bool(read_1 == read_2), true, false))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), _GLF_IDENTITY(false, ! (! (false)))))))))))))))), (bool(bool(read_1 == read_2))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(num_workgroup)))) * 1u) == read_2), true, false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 == read_2))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), true, true, false))))))))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false))))))), ((_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))))))) || false)))), (bool(bool(read_1 == read_2))) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))), true && (! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))), (bool(bool(read_1 == read_2))) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)))))), (bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true))))))), ! (! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) ^ (31467u & 0u)) == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), true, true, false))))))))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false))))))), ((_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2)))), true, false)))))))) || false)))), (bool(bool(read_1 == read_2))) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, true)))), bool(bvec3(bool(read_1 == read_2), true, false))))))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(bool(bool(read_1 == read_2)), false, false, true)), ! (! (bool(bvec4(bool(bool(read_1 == read_2)), false, false, true))))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))), true && (! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bool(bool(read_1 == read_2))))))), true, false))))))))), (bool(bool(read_1 == read_2))) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))), false, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))), false, true), false)))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))), false, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))), false, true), false)))))))), false), true, false)))))), (_GLF_IDENTITY(bool(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))), true && (bool(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u)))))) && _GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), false || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, uint(uint(read_2)))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)), bool(bvec4(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, uint(uint(read_2)))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(bool(bvec3(bool(read_1 == read_2), false, true)), false || (bool(bvec3(bool(read_1 == read_2), false, true))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)))))), (bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true)))))))))))))), bool(bool(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u + (read_1))) - 0u) == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (false ? _GLF_FUZZED(workgroup_base) : ~ (read_2)))))), true, false))))))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), true && (_GLF_IDENTITY(bool(bool(read_1 == read_2)), (bool(bool(read_1 == read_2))) || false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), true, false))))))), (bool(bool(read_1 == read_2))) && true)) || false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(_GLF_IDENTITY(bool(bool(bvec2(true, true))), true && (bool(bool(bvec2(true, true)))))))), false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(_GLF_IDENTITY(bool(bool(bvec2(true, true))), true && (bool(bool(bvec2(true, true)))))))), false)))), ! (! ((_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(_GLF_IDENTITY(bool(bool(bvec2(true, true))), true && (bool(bool(bvec2(true, true)))))))), false)))))))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)))))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), bool(bvec4(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))), false, false, true))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), false))))))))))))), (bool(bool(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u))) == read_2))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(num_workgroup)))) * 1u) == read_2), true, false))), true && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(num_workgroup)))) * 1u) == read_2), true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y)) || (read_1 == read_2))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false))), false || (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false)))))))) && true)) && true)))))), ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2, bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_size) : read_2))), bool(bvec4(bool(read_1 == read_2), true, true, false))))))))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false))))))), ((_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), true, false), bvec3(bvec3(bvec3(bool(read_1 == read_2), true, false)))))))) || false)))), (bool(bool(read_1 == read_2))) && true)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))), true && (! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))), (bool(bool(read_1 == read_2))) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)))))), (bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))), true && (! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))), (bool(bool(read_1 == read_2))) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)))))), (bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))), true && (! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))), (bool(bool(read_1 == read_2))) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false))))))))), (bool(bool(read_1 == read_2))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec3(bool(read_1 == read_2), true, false)))))))))), false)))))), (bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), bool(bvec3(read_1 == read_2, true, false)))))) && true)) && true))), false))))))))))))))))))), (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bool(_GLF_IDENTITY(bool(bool(read_1 == read_2)), ! (! (bool(_GLF_IDENTITY(bool(read_1 == read_2), (_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(read_1, uint(uvec3(_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) : _GLF_FUZZED(workgroup_base))), 0u, 1u))) == read_2)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec3(_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) : _GLF_FUZZED(workgroup_base))), 0u, 1u))), (_GLF_IDENTITY(read_1, uint(uvec3(_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, read_1), (clamp(read_1, read_1, read_1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(workgroup_base))), 0u, 1u)))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2)))))) || false))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), false || ((_GLF_IDENTITY(true, true && (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec2(! (_GLF_IDENTITY(true, true && (true))), true)))))), bool(bool(! (_GLF_IDENTITY(true, true && (true)))))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, true))))) || (true)) && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, true && (false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true && (true))), true)))))))), bool(bool(! (_GLF_IDENTITY(true, true && (true))))))))))))))))) || false))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))), _GLF_IDENTITY(false, false || (false)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bool(bvec2(false, true)), false, true)))))))))))))), false || (bool(bvec3(bool(bvec2(false, true)), false, true)))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.8)), bool(false))), 0.0)).y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7204.4787)), float(injectionSwitch.y), bool(true))), (injectionSwitch.y) - 0.0))), true))), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (true))), true, false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3312.0940) : injectionSwitch.y))))))) || false)), true, true))), true)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))))), bool(bvec4(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))))), true, true, true))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true && ((false)))) || false), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY((false), true && ((false))), true, true)))))) || false))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))))) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)), false))))), true && (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, true)))), ! (! (bool(bool(bool(false))))))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, true)))), ! (! (bool(bool(bool(false))))))))), false, true, true))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ((false)) || _GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (! (_GLF_IDENTITY(true, true && (true)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)))))))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, false))), bool(bvec3(read_1 == read_2, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), false))))), (bool(bool(read_1 == read_2))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), true && (read_1 == read_2)), _GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9996.6970), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((428.237 + 6.4))), bvec2(true, false))).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).y)))))))), bool(bvec2((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) - 0u, 0u ^ (_GLF_IDENTITY((read_1) - 0u, clamp((read_1) - 0u, (read_1) - 0u, (read_1) - 0u)))))) >> 0u), read_1, read_1)), max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) - 0u, 0u ^ (_GLF_IDENTITY((read_1) - 0u, clamp((read_1) - 0u, (read_1) - 0u, (read_1) - 0u)))))) >> 0u), read_1, read_1)), clamp(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) - 0u, 0u ^ (_GLF_IDENTITY((read_1) - 0u, clamp((read_1) - 0u, (read_1) - 0u, (read_1) - 0u)))))) >> 0u), read_1, read_1)), _GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) - 0u, 0u ^ (_GLF_IDENTITY((read_1) - 0u, clamp((read_1) - 0u, (read_1) - 0u, (read_1) - 0u)))))) >> 0u), read_1, read_1)), _GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) - 0u, 0u ^ (_GLF_IDENTITY((read_1) - 0u, clamp((read_1) - 0u, (read_1) - 0u, (read_1) - 0u)))))) >> 0u), read_1, read_1)))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) - 0u, 0u ^ (_GLF_IDENTITY((read_1) - 0u, clamp((read_1) - 0u, (read_1) - 0u, (read_1) - 0u)))))) >> 0u), read_1, read_1)), ~ (~ (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) - 0u, 0u ^ (_GLF_IDENTITY((read_1) - 0u, clamp((read_1) - 0u, (read_1) - 0u, (read_1) - 0u)))))) >> 0u), read_1, read_1))))))) == read_2))), _GLF_IDENTITY(true, (true) || false)))) && true))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (read_1)))) ^ _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))) == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))), bool(bvec2((bool(bool(read_1 == read_2))), true))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(read_1 == read_2))), true))) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(read_1 == read_2))), true))) && true), ! (! (! (_GLF_IDENTITY((bool(bool(read_1 == read_2))), bool(bvec2((bool(bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec2(read_2, (1u | 1u))))))), true))) && true)))), bool(bvec2(! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec3(bool(read_1 == read_2), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(read_1 == read_2), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, abs(sqrt(0.0)), 0.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), round(length(normalize(1.0)))))))), true), false)))))))))), bool(bvec2((bool(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, false, true, true)), false || (bool(bvec4(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), true && (bool(bool(read_1 == read_2))))) || false)), false, true, true)))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))))))))) && true), true)))))) || _GLF_IDENTITY(false, ! (! (false))))))) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 == read_2)), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(read_1 == read_2)), (bool(bool(read_1 == read_2))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(read_1, uint(uvec2(_GLF_IDENTITY(read_1, ~ (~ (read_1))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u + (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) - 0u))), uint(uvec2(read_1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), false || (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (false)))) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2))))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(bool(bool(read_1 == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), false || (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2)))), ! (! (bool(read_1 == read_2))))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(bool(bool(read_1 == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), false || (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true), true, true, false))))))), (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(55.51)), vec2(_GLF_IDENTITY(_GLF_FUZZED(1305.4563), mix(float(_GLF_FUZZED(1305.4563)), float(_GLF_FUZZED(23.00)), bool(false))), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u))), 0u | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) == read_2)))))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(read_1 == read_2))))) && true)))) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 == read_2)), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(read_1 == read_2)), (bool(bool(read_1 == read_2))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(read_1, uint(uvec2(_GLF_IDENTITY(read_1, ~ (~ (read_1))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u + (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) - 0u))), uint(uvec2(read_1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), false || (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (false)))) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2))))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(bool(bool(read_1 == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), false || (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2)))), ! (! (bool(read_1 == read_2))))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(bool(bool(read_1 == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), false || (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true), true, true, false))))))), (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(55.51)), vec2(_GLF_IDENTITY(_GLF_FUZZED(1305.4563), mix(float(_GLF_FUZZED(1305.4563)), float(_GLF_FUZZED(23.00)), bool(false))), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u))), 0u | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) == read_2)))))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(read_1 == read_2))))) && true)))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 == read_2)), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(read_1 == read_2)), (bool(bool(read_1 == read_2))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(read_1, uint(uvec2(_GLF_IDENTITY(read_1, ~ (~ (read_1))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u + (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) - 0u))), uint(uvec2(read_1, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), false || (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (false)))) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2))))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(bool(bool(read_1 == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), false || (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2)))), ! (! (bool(read_1 == read_2))))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(bool(bool(read_1 == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))))), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(read_1, uint(uvec2(read_1, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), false || (false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))))) && true), true, true, false))))))), (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(55.51)), vec2(_GLF_IDENTITY(_GLF_FUZZED(1305.4563), mix(float(_GLF_FUZZED(1305.4563)), float(_GLF_FUZZED(23.00)), bool(false))), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u))), 0u | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) == read_2)))))), (_GLF_IDENTITY(bool(bool(read_1 == read_2)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(read_1 == read_2))))) && true)))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))))), false))), false || (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, min(read_1, read_1))), max(~ (_GLF_IDENTITY(read_1, min(read_1, read_1))), ~ (_GLF_IDENTITY(read_1, min(read_1, read_1))))))), ~ (~ (read_1))), read_1)))) == read_2))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1)))), int(int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1))))))))), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(96313))), 64, 4);
   subgroupAll(true);
  }
}
