#version 460
struct _GLF_struct_37 {
 mat4x2 _f0;
 mat3x2 _f1;
 uvec2 _f2;
 vec3 _f3;
 float _f4;
 mat4 _f5;
} ;

struct _GLF_struct_38 {
 _GLF_struct_37 _f0;
} ;

struct _GLF_struct_35 {
 bvec4 _f0;
 bool _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_36 {
 _GLF_struct_35 _f0;
} ;

struct _GLF_struct_34 {
 bvec3 _f0;
} ;

struct _GLF_struct_32 {
 vec2 _f0;
 float _f1;
 mat3 _f2;
 uvec4 _f3;
 float _f4;
 uvec3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_31 {
 mat2 _f0;
 mat4x3 _f1;
 bvec2 _f2;
 ivec4 _f3;
 uvec4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_33 {
 uint _f0;
 ivec4 _f1;
 ivec3 _f2;
 _GLF_struct_31 _f3;
 _GLF_struct_32 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_30 {
 mat2x3 _f0;
} ;

struct _GLF_struct_39 {
 _GLF_struct_30 _f0;
 _GLF_struct_33 _f1;
 _GLF_struct_34 _f2;
 bool _f3;
 _GLF_struct_36 _f4;
 uvec3 _f5;
 _GLF_struct_38 _f6;
 uint subgroup_local_id;
} ;

struct _GLF_struct_27 {
 uint _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_28 {
 _GLF_struct_27 _f0;
 ivec4 _f1;
 mat4x3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_29 {
 _GLF_struct_28 _f0;
 ivec3 _f1;
 uint workgroup_base;
} ;

struct _GLF_struct_24 {
 uint _f0;
} ;

struct _GLF_struct_25 {
 mat4 _f0;
 _GLF_struct_24 _f1;
} ;

struct _GLF_struct_23 {
 ivec2 _f0;
} ;

struct _GLF_struct_21 {
 ivec3 _f0;
 float _f1;
} ;

struct _GLF_struct_20 {
 uvec4 _f0;
 uint _f1;
 mat2 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_19 {
 float _f0;
} ;

struct _GLF_struct_18 {
 bool _f0;
 bool _f1;
 bool _f2;
 bvec4 _f3;
 ivec2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_17 {
 bvec2 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_21 _f4;
} ;

struct _GLF_struct_15 {
 vec3 _f0;
 mat3x4 _f1;
 float _f2;
 float _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_16 {
 mat4x3 _f0;
 bool _f1;
 _GLF_struct_15 _f2;
 uvec4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_13 {
 uvec3 _f0;
 bvec3 _f1;
 vec2 _f2;
 mat3x2 _f3;
 mat4x2 _f4;
 uvec2 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_14 {
 bvec2 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
 bvec2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 int _f1;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
} ;

struct _GLF_struct_12 {
 uint _f0;
 vec2 _f1;
 _GLF_struct_9 _f2;
 uvec2 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 int _f1;
 mat4x2 _f2;
 mat4x2 _f3;
 bool _f4;
} ;

struct _GLF_struct_6 {
 bool _f0;
 vec4 _f1;
 float _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 bvec4 _f1;
 uvec4 _f2;
 mat4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 vec2 _f1;
 ivec2 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_26 {
 _GLF_struct_8 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_16 _f3;
 _GLF_struct_22 _f4;
 _GLF_struct_23 _f5;
 uint num_workgroup;
 _GLF_struct_25 _f6;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
} ;

struct _GLF_struct_1 {
 float _f0;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 mat3 _f1;
 bvec3 _f2;
 float _f3;
 uvec2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 float _f3;
 _GLF_struct_2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_4 {
 uint subgroup_id;
 ivec2 _f0;
 _GLF_struct_3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_SubgroupID, ivec2(1), _GLF_struct_3(uvec3(1u), _GLF_struct_0(mat4x2(1.0), mat3(1.0), bvec3(true), 1.0, uvec2(1u), mat4x3(1.0)), _GLF_struct_1(1.0), 1.0, _GLF_struct_2(uvec4(1u)), ivec2(1)));
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_30(mat2x3(1.0)), _GLF_struct_33(1u, ivec4(1), ivec3(1), _GLF_struct_31(mat2(1.0), mat4x3(1.0), bvec2(true), ivec4(1), uvec4(1u), bvec2(true)), _GLF_struct_32(vec2(1.0), 1.0, mat3(1.0), uvec4(1u), 1.0, uvec3(1u), mat3x4(1.0)), mat4(1.0)), _GLF_struct_34(bvec3(true)), true, _GLF_struct_36(_GLF_struct_35(bvec4(true), true, mat3x2(1.0))), uvec3(1u), _GLF_struct_38(_GLF_struct_37(mat4x2(1.0), mat3x2(1.0), uvec2(1u), vec3(1.0), 1.0, mat4(1.0))), gl_SubgroupInvocationID);
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(_GLF_struct_8(vec3(1.0), vec2(1.0), ivec2(1), _GLF_struct_5(vec3(1.0), bvec4(true), uvec4(1u), mat4(1.0), ivec3(1)), _GLF_struct_6(true, vec4(1.0), 1.0, bvec3(true)), _GLF_struct_7(mat4(1.0), 1, mat4x2(1.0), mat4x2(1.0), true)), _GLF_struct_12(1u, vec2(1.0), _GLF_struct_9(mat2(1.0)), uvec2(1u), _GLF_struct_10(ivec4(1), 1), _GLF_struct_11(ivec3(1), bvec2(true), mat2(1.0))), _GLF_struct_14(bvec2(true), _GLF_struct_13(uvec3(1u), bvec3(true), vec2(1.0), mat3x2(1.0), mat4x2(1.0), uvec2(1u), mat3x2(1.0))), _GLF_struct_16(mat4x3(1.0), true, _GLF_struct_15(vec3(1.0), mat3x4(1.0), 1.0, 1.0, mat4x2(1.0)), uvec4(1u), ivec3(1)), _GLF_struct_22(_GLF_struct_17(bvec2(true), mat2x4(1.0)), _GLF_struct_18(true, true, true, bvec4(true), ivec2(1), mat4(1.0)), _GLF_struct_19(1.0), _GLF_struct_20(uvec4(1u), 1u, mat2(1.0), uvec2(1u)), _GLF_struct_21(ivec3(1), 1.0)), _GLF_struct_23(ivec2(1)), gl_NumWorkGroups.x, _GLF_struct_25(mat4(1.0), _GLF_struct_24(1u)));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(_GLF_struct_28(_GLF_struct_27(1u, mat2x4(1.0)), ivec4(1), mat4x3(1.0), bvec4(true)), ivec3(1), workgroup_size * workgroup_id);
 uint virtual_gid = _GLF_struct_replacement_29.workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + _GLF_struct_replacement_39.subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_29.workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + ((_GLF_struct_replacement_39.subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_struct_replacement_39.subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   subgroupAll(true);
  }
}
