#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 | 0)), (ivec2(1, (0 | 0))) | (ivec2(1, (0 | 0))))), (int(_GLF_IDENTITY(ivec2(1, (_GLF_IDENTITY(0, (0) * 1) | 0)), _GLF_IDENTITY((ivec2(1, (0 | 0))) | (ivec2(1, (0 | 0))), max((ivec2(1, (0 | 0))) | (ivec2(1, (0 | 0))), (ivec2(1, (0 | 0))) | (ivec2(1, (0 | 0)))))))) + (3296 & 0)))) % subgroup_size);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1)))) / 1u), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1)))) / 1u), _GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u), (uint(1)))) / 1u)))) / 1u), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (~ (64))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) >> 0), 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 96:
     if(_GLF_DEAD(false))
      barrier();
     case 86:
     case 36:
     case 58:
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))
      {
       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), int(2)))))
        {
         case 88:
         if((notEqual(uvec3(59131u, 68381u, 65664u), (uvec3(177916u, 178983u, 1015u) << uvec3(163477u, 74004u, 149753u))) == bvec3(false, false, true)))
          {
          }
         else
          {
           ;
           sign(ivec4(-10222, 84294, -44620, 59654));
           ;
           float _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[97];
           mat4x2 _GLF_SWITCH_4_2v[51], _GLF_SWITCH_4_3v;
           ivec3(-38198, -46902, 54921);
           uvec3 _GLF_SWITCH_4_4v;
           tanh(45.78);
          }
         case 12:
         subgroup_size;
         case 0:
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           switch(_GLF_SWITCH(0))
            {
             case 71:
             mat2(-9.2, 857.421, -4472.2110, -8949.7847);
             case 0:
             case 65:
             case 45:
             case 25:
             case 70:
             case 64:
             case 84:
             case 7:
             if(_GLF_DEAD(false))
              barrier();
             break;
             default:
             1;
            }
          }
         case 85:
         barrier();
         break;
         case 20:
         while(false)
          {
           int _GLF_SWITCH_4_5v;
           (ivec3(69969, -89857, -48583) << ivec3(82232, -57602, -12301));
           mat2x4 _GLF_SWITCH_4_6v, _GLF_SWITCH_4_7v;
           uvec3 _GLF_SWITCH_4_8v;
           subgroup_size;
           ;
          }
         default:
         1;
        }
      }
     case 48:
     for(int _injected_loop_counter = (_GLF_IDENTITY(1 ^ 0, min(1 ^ 0, 1 ^ 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec3(_injected_loop_counter != 0, true, false)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(_GLF_IDENTITY(uint(read_1 == read_2) + 1, 0u | (uint(read_1 == read_2) + 1)), uint(read_1 == read_2) + 1))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
      }
     case 21:
     case 8:
     case 30:
     subgroupAll(false);
     break;
     case 52:
     for(vec3 _GLF_SWITCH_0_0v; (mat3x4(4.5, 4377.4196, 467.411, 178.718, -623.429, -41.62, -8915.9296, -8.9, -426.831, -7.7, 9655.5404, 157.892) == mat3x4(-8.1, 4.0, 7.0, 5.9, -8.8, -6.7, 8.7, 6180.6546, -9.5, -3.5, -792.782, -9.2)); mat4(-4.3, -35.91, 12.04, -0.8, 32.78, -20.61, -9.3, -4664.0228, _GLF_IDENTITY(-39.29, (_GLF_IDENTITY(-39.29, clamp(-39.29, -39.29, -39.29))) / 1.0), 6.0, 56.25, 8.9, 4.0, _GLF_IDENTITY(74.62, mix(float(74.62), float(_GLF_FUZZED((_GLF_IDENTITY(-36.65, clamp(_GLF_IDENTITY(-36.65, (-36.65) + 0.0), -36.65, _GLF_IDENTITY(-36.65, float(vec2(-36.65, cos(0.0))))))))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-54.12), _GLF_FUZZED(-8955.5427)), bvec2(false, false))).y))))), -0.9, -462.274))
      {
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(_GLF_IDENTITY(0, max(0, 0))))
          {
           case 28:
           bitfieldReverse(ivec3(-20055, 97421, 48174));
           case 0:
           case 39:
           case 27:
           case 41:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
           break;
           case 55:
           mat3x4(5.5, 9.3, -9.1, -34.38, -4.8, -8.7, 9.6, 4418.4078, 265.973, -0.8, 8.2, -41.17);
           default:
           1;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       {
        switch(_GLF_SWITCH(0))
         {
          case 84:
          (uvec4(76981u, 191679u, 123445u, 53573u) * packUnorm2x16(injectionSwitch));
          case 0:
          case 35:
          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
           {
            notEqual((+ injectionSwitch), injectionSwitch);
           }
          else
           {
           }
          case 30:
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
           }
          case 79:
          case 19:
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             ivec2(22508, -77562);
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 56:
               ivec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
               case 0:
               case 76:
               case 51:
               case 39:
               case 63:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
               break;
               default:
               1;
              }
            }
           mat3x2 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v[83];
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
            barrier();
           mat3(9523.1374, -83.24, 2.6, _GLF_IDENTITY(88.80, (88.80) / 1.0), -0.9, -6.3, 2043.4066, 8.7, -413.507);
           4452.9476;
          }
          mat3x2 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
          case 21:
          case 51:
          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             {
              do
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 0:
                  case 45:
                  case 30:
                  case 12:
                  case 46:
                  case 85:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  case 90:
                  barrier();
                  break;
                  case 86:
                  ;
                  default:
                  1;
                 }
               }
              while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))));
             }
           }
          else
           {
           }
          do
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    barrier();
                   }
                  else
                   {
                   }
                 }
               }
              if(_GLF_DEAD(false))
               {
                do
                 {
                  barrier();
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
              ivec2(-67033, _GLF_IDENTITY(-92353, clamp(-92353, -92353, -92353)));
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
               {
                do
                 {
                  barrier();
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
             }
           }
          while(_GLF_WRAPPED_LOOP(false));
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
           {
            for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
             {
              barrier();
             }
           }
          mat2x3 _GLF_SWITCH_0_6v[78], _GLF_SWITCH_0_7v;
          case 68:
          do
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          case 56:
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            switch(_GLF_SWITCH(0))
             {
              case 94:
              uvec2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
              case 0:
              case 96:
              case 32:
              case 91:
              case 81:
              case 78:
              case 72:
              uvec3(58860u, 36378u, 50823u);
              break;
              case 62:
              bool _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v[29], _GLF_SWITCH_4_4v;
              default:
              1;
             }
           }
          if(_GLF_DEAD(false))
           barrier();
          break;
          case 91:
          ;
          case 20:
          (uvec3(172795u, 6993u, 175375u) + workgroup_size);
          default:
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            do
             {
              1;
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          else
           {
           }
         }
       }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       for(       outerProduct(atanh(vec4(-90.26, -75.29, -8.7, 90.91)), (injectionSwitch / vec2(-4039.4591, 76.22)));
 (_GLF_IDENTITY(ivec3(98858, -67080, 55668) == ivec3(_GLF_IDENTITY(22891, (22891) ^ 0), -19823, 50029), (ivec3(98858, -67080, 55668) == ivec3(_GLF_IDENTITY(_GLF_IDENTITY(22891, (22891) ^ 0), 0 ^ (_GLF_IDENTITY(22891, (22891) ^ 0))), -19823, _GLF_IDENTITY(50029, clamp(50029, _GLF_IDENTITY(50029, (50029) / 1), 50029)))) || false)); bvec4(true, false, false, false))
        {
         switch(_GLF_SWITCH(_GLF_IDENTITY(0, int(ivec4(0, 0, (0 & 61422), 1)))))
          {
           case 91:
           vec3(-88.60, -9.1, -4.0);
           case 0:
           case 18:
           ;
           case 25:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(             lessThan(ivec3(-55797, _GLF_IDENTITY(79304, (79304) | 0), -38761), ivec3(-45016, 32693, -77221));
 (_GLF_IDENTITY(mat4x2(-48.71, -2163.1737, 247.592, 9.7, 600.899, -78.63, -40.25, 962.200) == mat4x2(_GLF_IDENTITY(1.4, max(_GLF_IDENTITY(1.4, max(1.4, 1.4)), 1.4)), 5.3, -9.8, 94.92, 3.9, -75.22, _GLF_IDENTITY(-1.1, 1.0 * (-1.1)), -3.9), (_GLF_IDENTITY(mat4x2(-48.71, -2163.1737, 247.592, 9.7, 600.899, -78.63, -40.25, 962.200) == mat4x2(_GLF_IDENTITY(1.4, max(_GLF_IDENTITY(1.4, max(1.4, 1.4)), 1.4)), 5.3, -9.8, 94.92, 3.9, -75.22, _GLF_IDENTITY(-1.1, 1.0 * (-1.1)), -3.9), ! (! (mat4x2(-48.71, -2163.1737, 247.592, 9.7, 600.899, -78.63, -40.25, 962.200) == mat4x2(_GLF_IDENTITY(1.4, max(_GLF_IDENTITY(1.4, max(1.4, 1.4)), 1.4)), 5.3, -9.8, 94.92, 3.9, -75.22, _GLF_IDENTITY(-1.1, 1.0 * (-1.1)), -3.9))))) && true)); mat4x3(173.959, 824.243, -6.9, 5430.6834, -0.5, _GLF_IDENTITY(-4530.6776, clamp(-4530.6776, _GLF_IDENTITY(-4530.6776, (true ? -4530.6776 : _GLF_FUZZED(-8420.2166))), _GLF_IDENTITY(-4530.6776, max(-4530.6776, _GLF_IDENTITY(-4530.6776, max(-4530.6776, -4530.6776)))))), -3.7, 9133.0251, -9.7, -203.402, -5.6, -5798.9333))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               ;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 barrier();
                }
              }
            }
           else
            {
            }
           if((_GLF_IDENTITY(-37378, (-37378) * 1) < 1413))
            {
            }
           case 88:
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           case 87:
           ivec4 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v[31];
           case 1:
           if(_GLF_DEAD(false))
            barrier();
           case 64:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 7:
                 ivec2 _GLF_SWITCH_0_10v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 greaterThan(ivec3(-10197, _GLF_IDENTITY(-53674, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(-53674, (false ? _GLF_FUZZED(92513) : _GLF_IDENTITY(-53674, (-53674) | 0))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) * 1))), 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(-53674, (false ? _GLF_FUZZED(92513) : _GLF_IDENTITY(-53674, (-53674) | 0))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) * 1))), 0))))), 45425), ivec3(-34665, -82830, -90803));
                 case 91:
                 case 25:
                 mat2x3(476.521, _GLF_IDENTITY(_GLF_IDENTITY(-763.898, 1.0 * (-763.898)), max(_GLF_IDENTITY(-763.898, 1.0 * (-763.898)), _GLF_IDENTITY(-763.898, 1.0 * (-763.898)))), 424.361, 8.5, 8935.1245, -8516.8771);
                 case 75:
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 35:
                 uvec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[83];
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(_GLF_IDENTITY(mat3(tan(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)), (mat3(tan(0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat3(tan(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))))) && true))));
            }
           else
            {
            }
           do
            {
             if(all(bvec3(false, true, false)))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   notEqual(_GLF_SWITCH_0_8v, (_GLF_SWITCH_0_8v >> ivec4(-46994, -77823, 16511, -22956)));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               _GLF_SWITCH_0_0v;
               vec2 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
               bvec4 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v[14];
              }
             else
              {
               mat3 _GLF_SWITCH_0_16v[57];
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 mat2x4(mat3(-9.7, -3.3, -217.742, 994.809, 83.35, 2477.4592, 9.5, 6.4, 8313.7680));
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           mat3 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v[68];
           break;
           case 77:
           floatBitsToInt(vec3(-4.3, 8.0, 1.8));
           case 93:
           ;
           default:
           1;
          }
        }
       for(int _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v[6]; false; ivec2(20002, 98310))
        {
         switch(_GLF_SWITCH(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_SWITCH_0_20v) : 0)), 0))))
          {
           case 40:
           if(_GLF_DEAD(false))
            barrier();
           ;
           case 0:
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(             _GLF_SWITCH_0_0v.zyx;
 (_GLF_IDENTITY(ivec4(79142, -5272, -87002, -99267) == ivec4(_GLF_IDENTITY(-94206, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(-94206, (-94206) - 0), 1, 1), clamp(ivec3(_GLF_IDENTITY(-94206, (-94206) - 0), 1, 1), ivec3(_GLF_IDENTITY(-94206, (-94206) - 0), 1, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(-94206, (-94206) - 0), 1, 1), clamp(ivec3(_GLF_IDENTITY(-94206, (-94206) - 0), 1, 1), ivec3(_GLF_IDENTITY(-94206, (-94206) - 0), 1, 1), ivec3(_GLF_IDENTITY(-94206, (-94206) - 0), 1, 1))))))), 44820, -14404, -87616), (ivec4(79142, -5272, -87002, -99267) == ivec4(-94206, 44820, -14404, -87616)) || false)); max(ivec4(-98298, 84578, 70485, -93212), ivec4(-65474, -93690, -13720, -58037)).tqq[2])
              {
               switch(_GLF_SWITCH(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(-54589) : int(0))))), ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(-54589) : int(0)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3))))))
                {
                 case 40:
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   mat2x3(49.89, -5.1, 9360.4204, 3.5, 489.084, -181.647);
                  }
                 else
                  {
                  }
                 case 0:
                 do
                  {
                   switch(_GLF_SWITCH((0 & -87337)))
                    {
                     case 49:
                     bool _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                     case 99:
                     bool _GLF_SWITCH_4_3v;
                     case 0:
                     case 60:
                     case 25:
                     case 85:
                     case 68:
                     case 92:
                     case 36:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) < injectionSwitch.y))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     break;
                     case 61:
                     mat2 _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v[18], _GLF_SWITCH_4_6v;
                     case 88:
                     mat4x3 _GLF_SWITCH_4_7v[81], _GLF_SWITCH_4_8v;
                     default:
                     1;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 case 60:
                 outerProduct(vec4(1.0, 907.020, -8.8, 5.5), vec3(355.785, 1139.7699, -9.4));
                 ;
                 case 54:
                 if(_GLF_DEAD(false))
                  barrier();
                 mat4(_GLF_IDENTITY(-180.403, min(-180.403, _GLF_IDENTITY(-180.403, (-180.403) - 0.0))), 4.8, 7028.6574, -4.1, -5.9, -694.608, 549.698, -3.4, -5171.0778, 51.63, -77.82, -36.29, 457.475, 63.28, -5606.8796, -83.22);
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                 float _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v[90];
                 vec2 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
                 case 19:
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))) || false))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 case 38:
                 (false ? atanh(vec4(826.658, -670.806, 2.4, -590.601)) : vec4(-218.663, 9.7, -2.6, 51.00));
                 mat2x3 _GLF_SWITCH_0_27v[56], _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 int _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
                 break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 case 76:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   floatBitsToInt(_GLF_SWITCH_0_22v);
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 case 87:
                 uvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                 default:
                 1;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true)), false)))))))))
                  barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             _GLF_IDENTITY(mat3(-30.96, _GLF_IDENTITY(740.995, max(740.995, _GLF_IDENTITY(740.995, mix(float(_GLF_FUZZED(930.479)), float(740.995), bool(true))))), 5.2, 183.783, 41.66, _GLF_IDENTITY(1.5, min(1.5, _GLF_IDENTITY(1.5, 1.0 * (1.5)))), 7.8, -832.482, 0.7), (mat3(-30.96, _GLF_IDENTITY(740.995, max(740.995, _GLF_IDENTITY(740.995, mix(float(_GLF_FUZZED(930.479)), float(740.995), bool(true))))), 5.2, 183.783, 41.66, 1.5, 7.8, -832.482, 0.7)) - mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0));
             ivec3 _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
             bvec3(false, false, false);
            }
           while(false);
           if(false)
            {
             if(_GLF_DEAD(false))
              barrier();
             mat4x3(-5.3, 76.71, -4.0, 4.7, 7.5, 997.263, 8.2, 6327.9648, _GLF_IDENTITY(1.8, clamp(1.8, 1.8, 1.8)), -443.072, -2.9, 1.4);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             vec2(1.0, -260.964);
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
              {
               switch(_GLF_SWITCH(0))
                {
                 case 65:
                 bool _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[12];
                 case 99:
                 float _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v;
                 case 0:
                 case 78:
                 case 5:
                 case 47:
                 case 25:
                 case 92:
                 case 91:
                 case 71:
                 case 27:
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   ;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 break;
                 case 98:
                 (_GLF_SWITCH_4_4v - mat4x2(-6940.1039, 2.9, 5.8, 4.2, _GLF_IDENTITY(9397.3402, (9397.3402) + 0.0), -88.49, -1321.2190, -2.2));
                 default:
                 1;
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             mat4 _GLF_SWITCH_0_35v[33];
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
           else
            {
            }
           case 80:
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(true)
              {
               mat2x4 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v[76];
               ivec2 _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_SWITCH_0_20v) : _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))); _injected_loop_counter --)
                  {
                   do
                    {
                     -24072;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
              }
            }
           else
            {
            }
           case 96:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
            }
           else
            {
            }
           case 28:
           case 63:
           if(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
              }
             ;
             (_GLF_IDENTITY(- mat2(-644.010, 885.583, -6.4, 775.132), (- mat2(-644.010, _GLF_IDENTITY(885.583, max(885.583, _GLF_IDENTITY(885.583, mix(float(885.583), float(_GLF_FUZZED(984.415)), bool(false))))), -6.4, 775.132)) / mat2(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).y), _GLF_ONE(1.0, injectionSwitch.y))));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               ;
              }
             (false != false);
             vec4 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v[88];
             ivec4(23559, 76658, _GLF_IDENTITY(-21089, (-21089) | (-21089)), -68304);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             workgroup_size;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat2x3 _GLF_SWITCH_0_43v;
             (true ? uvec2(26305u, 57309u) : uvec2(197240u, 123382u));
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               (uvec2(176628u, 167371u) | workgroup_size);
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             mat4x3 _GLF_SWITCH_0_44v[38], _GLF_SWITCH_0_45v;
             next_virtual_gid;
             if(_GLF_DEAD(false))
              barrier();
             uvec4 _GLF_SWITCH_0_46v[7];
            }
           if(_GLF_DEAD(false))
            barrier();
           break;
           case 83:
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           notEqual(bvec2(false, false), bvec2(true, true));
           default:
           do
            {
             1;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       ivec3 _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))))
            {
             barrier();
            }
           else
            {
            }
          }
         while(true)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         for(bvec4 _GLF_SWITCH_0_50v[39], _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v[94]; false; (_GLF_IDENTITY(+ mat2(7.4, 55.22, 8.7, -967.519), transpose(_GLF_IDENTITY(transpose(+ _GLF_IDENTITY(mat2(7.4, 55.22, 8.7, -967.519), mat2(1.0) * (_GLF_IDENTITY(mat2(7.4, 55.22, 8.7, -967.519), (mat2(7.4, 55.22, 8.7, -967.519)) + mat2(0.0, 0.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(mat2(-8312.8410, 3.0, 117.686, -8.9)) : transpose(+ mat2(7.4, 55.22, 8.7, -967.519))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
            }
           next_virtual_gid;
           bvec3 _GLF_SWITCH_0_53v, _GLF_SWITCH_0_54v[80], _GLF_SWITCH_0_55v[71];
           if(_GLF_DEAD(false))
            barrier();
          }
         if((mat4x2(-4.8, -93.47, 8.9, -14.97, -6.6, _GLF_IDENTITY(7.5, min(7.5, 7.5)), -393.975, 6.5) == mat4x2(-5.9, -6773.1958, _GLF_IDENTITY(-706.743, clamp(-706.743, -706.743, _GLF_IDENTITY(-706.743, max(-706.743, -706.743)))), -977.300, 3124.3741, 0.3, -39.96, 98.50)))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             ;
            }
           do
            {
             vec4(7021.3620, 365.471, 256.304, 8.5);
            }
           while(_GLF_WRAPPED_LOOP(false));
           intBitsToFloat(_GLF_IDENTITY(20359, max(20359, 20359)));
           uvec2 _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           vec3 _GLF_SWITCH_0_58v;
           bvec4 _GLF_SWITCH_0_59v;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 case 79:
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 29:
                 mat2x3(-4825.0938, 3.4, -7.7, 39.39, 809.817, -8.1);
                 case 9:
                 bvec2 _GLF_SWITCH_3_0v[66], _GLF_SWITCH_3_1v[4], _GLF_SWITCH_3_2v;
                 default:
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   1;
                  }
                 else
                  {
                  }
                }
              }
             do
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           _GLF_IDENTITY(lessThanEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(lessThanEqual(injectionSwitch, injectionSwitch), bvec2(bvec2(_GLF_IDENTITY(lessThanEqual(injectionSwitch, injectionSwitch), bvec2(bvec3(lessThanEqual(injectionSwitch, injectionSwitch), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(lessThanEqual(injectionSwitch, injectionSwitch), bvec2(bvec2(_GLF_IDENTITY(lessThanEqual(injectionSwitch, injectionSwitch), bvec2(bvec3(lessThanEqual(injectionSwitch, injectionSwitch), false))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(lessThanEqual(injectionSwitch, injectionSwitch), bvec2(bvec2(_GLF_IDENTITY(lessThanEqual(injectionSwitch, injectionSwitch), bvec2(bvec3(lessThanEqual(injectionSwitch, injectionSwitch), false))))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(lessThanEqual(injectionSwitch, injectionSwitch), bvec2(bvec2(_GLF_IDENTITY(lessThanEqual(injectionSwitch, injectionSwitch), bvec2(bvec3(lessThanEqual(injectionSwitch, injectionSwitch), false))))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(lessThanEqual(injectionSwitch, injectionSwitch), bvec2(bvec2(_GLF_IDENTITY(lessThanEqual(injectionSwitch, injectionSwitch), bvec2(bvec3(lessThanEqual(injectionSwitch, injectionSwitch), false))))))))))))))), true))))));
          }
         mat3x2(-5.9, -101.379, -4.4, 160.196, 8.9, 0.6);
         if(true)
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 0:
             case 36:
             case 2:
             case 76:
             case 73:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               switch(_GLF_SWITCH((0 | 0)))
                {
                 case 69:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 mat4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                 case 24:
                 mat3x4 _GLF_SWITCH_2_3v;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       switch(_GLF_SWITCH((0 | 0)))
                        {
                         case 43:
                         ((-4793.6160 / _GLF_SWITCH_2_1v));
                         case 81:
                         (false ? mat2(_GLF_IDENTITY(8.7, max(8.7, 8.7)), -9.4, 8.7, 7.1) : mat2(-1.7, 801.480, 8.0, 4.1));
                         case 0:
                         barrier();
                         break;
                         case 10:
                         mat2x3(259.033, -0.2, _GLF_IDENTITY(-7.9, clamp(-7.9, -7.9, _GLF_IDENTITY(-7.9, mix(float(_GLF_FUZZED(-6.1)), float(-7.9), bool(true))))), -4.3, -1.3, 6.0);
                         case 72:
                         uint _GLF_SWITCH_4_0v[19];
                         default:
                         1;
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                 case 0:
                 vec3 _GLF_SWITCH_0_60v;
                 mat4x3(-7839.7212, 90.70, -259.168, 8642.5455, -8.4, 9467.1694, 580.597, -3142.5737, _GLF_IDENTITY(-361.914, mix(float(_GLF_FUZZED(-0.8)), float(-361.914), bool(true))), -4868.7807, 2.7, -136.581);
                 50104;
                 mat2x3 _GLF_SWITCH_0_61v[75];
                 ivec2 _GLF_SWITCH_0_62v;
                 bvec2 _GLF_SWITCH_0_63v, _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v;
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   equal(vec3(8.0, _GLF_IDENTITY(-7.5, min(-7.5, -7.5)), 63.88), tanh(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH_0_0v, clamp(_GLF_IDENTITY(_GLF_SWITCH_0_0v, clamp(_GLF_SWITCH_0_0v, _GLF_SWITCH_0_0v, _GLF_SWITCH_0_0v)), _GLF_IDENTITY(_GLF_SWITCH_0_0v, clamp(_GLF_SWITCH_0_0v, _GLF_SWITCH_0_0v, _GLF_SWITCH_0_0v)), _GLF_IDENTITY(_GLF_SWITCH_0_0v, mix(vec3((_GLF_SWITCH_0_0v)[0], _GLF_FUZZED(vec4(-9538.4962, 71.31, -6435.5306, -27.13).r), _GLF_FUZZED(809.259)), vec3(_GLF_FUZZED(-98.54), (_GLF_SWITCH_0_0v)[1], (_GLF_SWITCH_0_0v)[2]), bvec3(false, true, true))))), max(_GLF_IDENTITY(_GLF_SWITCH_0_0v, (_GLF_SWITCH_0_0v) * vec3(1.0, 1.0, 1.0)), _GLF_SWITCH_0_0v))));
                  }
                 break;
                 case 16:
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))));
                  }
                 vec3 _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v[66];
                 default:
                 1;
                }
              }
             else
              {
              }
             break;
             default:
             1;
            }
          }
         for(         mat2x4(-36.08);
 false; mat2x3(612.720, 2.8, -7.9, -164.557, _GLF_IDENTITY(-41.98, (true ? -41.98 : _GLF_FUZZED(7.4))), -4957.8163))
          {
           mat3x4 _GLF_SWITCH_0_66v, _GLF_SWITCH_0_67v, _GLF_SWITCH_0_68v;
           do
            {
             (mat4x2(-7982.0009, -3.3, -6.3, -2.8, -7452.2276, -242.032, 6906.4887, 5.8) / mat4x2(749.961, -956.284, 166.330, 5422.7773, -713.159, 3713.1704, -5.9, -6.5));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
           else
            {
            }
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           uvec2 _GLF_SWITCH_0_69v, _GLF_SWITCH_0_70v, _GLF_SWITCH_0_71v[21];
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-81318)))))); _injected_loop_counter --)
            {
             mat4x3(415.091, -320.171, -5337.3040, 4.5, 3165.6617, 1.6, 3418.5002, 6.2, _GLF_IDENTITY(7444.5337, (7444.5337) / determinant(mat2(1.0, length(vec2(0.0, 0.0)), 0.0, 1.0))), -5.6, -7.6, 6.1);
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               switch(_GLF_SWITCH(0))
                {
                 case 61:
                 vec2 _GLF_SWITCH_4_0v[31], _GLF_SWITCH_4_1v;
                 case 0:
                 case 92:
                 case 27:
                 case 89:
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 31:
                 num_workgroup;
                 case 52:
                 mat3x2(-6715.6784, 8.5, 508.399, 3016.5348, 11.09, 259.803);
                 default:
                 1;
                }
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           int _GLF_SWITCH_0_72v, _GLF_SWITCH_0_73v[54], _GLF_SWITCH_0_74v[4];
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               switch(_GLF_SWITCH((0 & (-18993 >> -27979))))
                {
                 case 79:
                 mat2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                 case 0:
                 case 95:
                 case 8:
                 case 93:
                 case 78:
                 case 3:
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 4:
                 vec2 _GLF_SWITCH_4_2v[1];
                 default:
                 1;
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         ;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
           }
          else
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_DEAD(false))
               barrier();
             }
           }
          if(_GLF_DEAD(false))
           barrier();
         }
         ;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(         (uvec3(18533u, 116331u, 48280u) + workgroup_base);
 false; mat3(mat2x4(max(vec4(53.15, 773.903, -94.55, -5.1), -9247.9830), vec4(8.2, 281.617, 613.832, -13.73))))
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 87925)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 87925)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 87925))) && true))), true && (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 87925)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 87925))) && true)))))); _injected_loop_counter --)
            {
             for(             mat3(384.528, -658.124, -1.0, 7736.3528, -4.5, 2389.4015, -0.5, -4292.7374, 986.252);
 (false != true); _GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(2.4, (false ? _GLF_FUZZED(-71.44) : 2.4)), 369.779, -3.0, -5.8, 7.4, 8044.9251, -6.3, 24.37, -5290.4654, 2.1, -56.07, -9975.5774, 59.51, -586.146, -181.373, 4.3)), _GLF_IDENTITY(mat4(1.0) * (transpose(mat4(2.4, _GLF_IDENTITY(369.779, float(mat4(369.779, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sin(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))), -3.0, -5.8, 7.4, 8044.9251, -6.3, 24.37, -5290.4654, 2.1, -56.07, -9975.5774, _GLF_IDENTITY(59.51, (true ? 59.51 : _GLF_FUZZED(_GLF_IDENTITY(pow(1726.1957, vec3(-15.99, -3.6, -90.91).x), mix(float(pow(1726.1957, vec3(-15.99, -3.6, -90.91).x)), float(_GLF_FUZZED(7187.9970)), bool(false)))))), -586.146, -181.373, 4.3))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) ? mat4(1.0) * (transpose(mat4(2.4, 369.779, -3.0, _GLF_IDENTITY(-5.8, float(mat4x3(-5.8, 0.0, determinant(mat2(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0)), dot(vec4(0.0, sqrt(0.0), 0.0, 1.0), vec4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), sqrt(1.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0))), log(_GLF_IDENTITY(1.0, (1.0) * 1.0)), 1.0, 0.0))), 7.4, 8044.9251, -6.3, 24.37, -5290.4654, 2.1, -56.07, -9975.5774, _GLF_IDENTITY(59.51, (true ? 59.51 : _GLF_FUZZED(pow(1726.1957, vec3(-15.99, -3.6, -90.91).x)))), -586.146, -181.373, 4.3))) : _GLF_FUZZED(mat4(454.026, -43.14, -456.861, -90.88, 5697.4852, -2.3, 1.0, 0.4, -2.5, -2.2, -92.89, -0.9, -7.7, -1747.4365, -9489.3211, -6153.6158))))))
              {
               uvec4 _GLF_SWITCH_0_75v;
               greaterThan(ivec2(65909, -35848), _GLF_IDENTITY(ivec2(-33302, -82000), clamp(ivec2(-33302, -82000), ivec2(-33302, -82000), _GLF_IDENTITY(ivec2(-33302, -82000), ivec2(ivec2(ivec2(-33302, -82000)))))));
               bvec2 _GLF_SWITCH_0_76v[87], _GLF_SWITCH_0_77v;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 _GLF_IDENTITY((_GLF_SWITCH_0_0v * mat3(-7.1, -300.329, _GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)), -7.4, -60.61, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), 22.22, -247.724, 4984.2899)), clamp(_GLF_IDENTITY((_GLF_SWITCH_0_0v * mat3(-7.1, -300.329, _GLF_IDENTITY(_GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)), min(_GLF_IDENTITY(_GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)), min(_GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)), _GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)))), _GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)))), -7.4, -60.61, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), 22.22, -247.724, 4984.2899)), mix(vec3(((_GLF_SWITCH_0_0v * mat3(-7.1, -300.329, _GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)), -7.4, -60.61, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), 22.22, -247.724, 4984.2899)))[0], _GLF_FUZZED(-8466.9226), ((_GLF_SWITCH_0_0v * mat3(_GLF_IDENTITY(-7.1, max(-7.1, -7.1)), -300.329, _GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (_GLF_IDENTITY(-4.7, clamp(-4.7, -4.7, -4.7)))), -4.7, -4.7)), -7.4, -60.61, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), 22.22, -247.724, 4984.2899)))[2]), vec3(_GLF_FUZZED(690.366), ((_GLF_SWITCH_0_0v * mat3(-7.1, -300.329, _GLF_IDENTITY(-4.7, _GLF_IDENTITY(clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7), mix(float(_GLF_FUZZED(-5.9)), float(clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)), bool(true)))), -7.4, -60.61, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), 22.22, -247.724, 4984.2899)))[1], _GLF_FUZZED(0.3)), bvec3(false, _GLF_IDENTITY(true, false || (true)), false))), _GLF_IDENTITY((_GLF_SWITCH_0_0v * mat3(-7.1, -300.329, _GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)), -7.4, -60.61, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), 22.22, -247.724, 4984.2899)), (false ? _GLF_FUZZED(vec3(0.9, -8370.8241, -2.1)) : _GLF_IDENTITY((_GLF_SWITCH_0_0v * mat3(-7.1, -300.329, _GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)), -7.4, -60.61, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), 22.22, -247.724, 4984.2899)), min((_GLF_SWITCH_0_0v * mat3(-7.1, -300.329, _GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)), -7.4, -60.61, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), 22.22, -247.724, 4984.2899)), (_GLF_SWITCH_0_0v * mat3(-7.1, -300.329, _GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)), -7.4, -60.61, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), 22.22, -247.724, 4984.2899)))))), _GLF_IDENTITY((_GLF_SWITCH_0_0v * mat3(-7.1, -300.329, _GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)), -7.4, -60.61, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), 22.22, -247.724, 4984.2899)), min((_GLF_SWITCH_0_0v * mat3(-7.1, -300.329, _GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)), -7.4, -60.61, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), 22.22, -247.724, 4984.2899)), (_GLF_SWITCH_0_0v * mat3(-7.1, -300.329, _GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, 1.0 * (-4.7)), -4.7, -4.7)), -7.4, -60.61, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)), 22.22, -247.724, 4984.2899))))));
                }
               mat2(-58.68, _GLF_IDENTITY(3716.6206, float(vec3(_GLF_IDENTITY(3716.6206, mix(float(_GLF_FUZZED(2.7)), float(3716.6206), bool(true))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), -88.88, -7.7);
               bvec3 _GLF_SWITCH_0_78v, _GLF_SWITCH_0_79v, _GLF_SWITCH_0_80v[67];
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-83.41) : injectionSwitch.y))))))))
            barrier();
           while(true)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 25:
                   case 11:
                   case 57:
                   case 79:
                   case 85:
                   case 46:
                   case 59:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true)))))))
                    barrier();
                   break;
                   case 13:
                   vec2 _GLF_SWITCH_4_0v[92], _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                   case 91:
                   mat3 _GLF_SWITCH_4_3v;
                   default:
                   1;
                  }
                }
               else
                {
                }
               barrier();
              }
             uint _GLF_SWITCH_0_81v, _GLF_SWITCH_0_82v;
             vec4 _GLF_SWITCH_0_83v;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
              {
               vec3(7135.9094, -37.59, 167.855);
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))
              {
               ;
              }
             else
              {
              }
             mat2x4(862.756, 5.7, -6.0, -69.64, -16.69, -48.20, -1.6, 5.2);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             uvec4(94301u, 6196u, 55097u, 177732u);
             if(_GLF_DEAD(false))
              barrier();
             mat4(-359.672, -927.410, -7.1, -5.8, -0.0, 234.149, 38.03, -21.78, 4770.7116, -9.8, 6772.7757, -82.51, _GLF_IDENTITY(-4.6, (_GLF_IDENTITY(-4.6, min(-4.6, -4.6))) - 0.0), 419.859, 2.5, 2.6);
            }
           if((false , bvec4(true, true, true, false))[3])
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             mat3 _GLF_SWITCH_0_84v, _GLF_SWITCH_0_85v[93];
             ;
             mat2x3 _GLF_SWITCH_0_86v;
            }
           ;
           ivec2 _GLF_SWITCH_0_87v;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             (mat2(-6.2, 22.86, 7475.7177, -3.5) - mat2(-7094.3171, 6.3, -2.1, 28.99));
            }
          }
        }
       else
        {
        }
       ivec3 _GLF_SWITCH_0_88v[65], _GLF_SWITCH_0_89v;
      }
     case 15:
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if((mat2x3(9797.0318, -9.2, -7.3, -0.5, 15.77, -5485.3839) == mat2x3(-2.0, -52.55, -1.4, -7.6, 276.371, -0.8)))
        {
         (mat4(55.95, 1825.5578, 8665.7338, -1.9, -7.7, -0.0, 2.0, -2.3, -488.997, 725.212, 1870.9959, _GLF_IDENTITY(-7.3, max(-7.3, -7.3)), -4128.7247, 9530.6465, 3.3, 3828.5306));
         ivec3 _GLF_SWITCH_0_90v, _GLF_SWITCH_0_91v[36], _GLF_SWITCH_0_92v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             ivec4(-52939, -301, 76770, -16739);
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
          }
         for(         _GLF_IDENTITY((next_virtual_gid + uvec4(22558u, 5078u, 193797u, 24643u)), (_GLF_IDENTITY((next_virtual_gid + uvec4(22558u, 5078u, 193797u, 24643u)), ((next_virtual_gid + uvec4(22558u, 5078u, 193797u, 24643u))) << uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u));
 false; subgroup_size)
          {
           if(_GLF_DEAD(false))
            barrier();
           mat4(41.38, 8937.6054, -4797.3948, -39.85, 1.5, 184.688, 3.6, 8197.8693, 1.0, -693.640, -546.877, 51.00, 4.6, -91.20, -2.5, _GLF_IDENTITY(969.733, _GLF_IDENTITY((969.733) / 1.0, max((969.733) / 1.0, _GLF_IDENTITY((969.733) / 1.0, (false ? _GLF_FUZZED(fma(3693.0747, -4.9, -170.870)) : (969.733) / 1.0))))));
           notEqual(mix(bvec3(false, false, true), bvec3(false, false, true), bvec3(false, false, true)), bvec3(false, true, false));
           ivec4 _GLF_SWITCH_0_93v, _GLF_SWITCH_0_94v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
            barrier();
           mat4x3 _GLF_SWITCH_0_95v, _GLF_SWITCH_0_96v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 5.3))), bool(false))) > injectionSwitch.y))));
            }
           do
            {
             mat3x4(-27.88, -9427.0856, -8.4, 555.116, 2.3, 84.30, 8.7, 54.72, -937.651, _GLF_IDENTITY(7563.0461, min(7563.0461, 7563.0461)), -3.1, 97.48);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           _GLF_IDENTITY((false ? (_GLF_SWITCH_0_90v * -8019) : _GLF_SWITCH_0_90v), (_GLF_IDENTITY(_GLF_IDENTITY((false ? (_GLF_SWITCH_0_90v * -8019) : _GLF_SWITCH_0_90v), max(_GLF_IDENTITY((false ? (_GLF_SWITCH_0_90v * -8019) : _GLF_SWITCH_0_90v), ((false ? (_GLF_SWITCH_0_90v * -8019) : _GLF_SWITCH_0_90v)) | ((false ? (_GLF_SWITCH_0_90v * -8019) : _GLF_SWITCH_0_90v))), (false ? (_GLF_SWITCH_0_90v * -8019) : _GLF_SWITCH_0_90v))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? (_GLF_IDENTITY(_GLF_SWITCH_0_90v, ivec3(_GLF_IDENTITY(_GLF_SWITCH_0_90v[0], clamp(_GLF_SWITCH_0_90v[0], _GLF_SWITCH_0_90v[0], _GLF_SWITCH_0_90v[0])), _GLF_SWITCH_0_90v[1], _GLF_SWITCH_0_90v[2])) * -8019) : _GLF_SWITCH_0_90v), clamp((_GLF_IDENTITY(false, (false) && true) ? (_GLF_IDENTITY(_GLF_SWITCH_0_90v, ivec3(_GLF_IDENTITY(_GLF_SWITCH_0_90v[0], clamp(_GLF_SWITCH_0_90v[0], _GLF_SWITCH_0_90v[0], _GLF_SWITCH_0_90v[0])), _GLF_SWITCH_0_90v[1], _GLF_SWITCH_0_90v[2])) * -8019) : _GLF_SWITCH_0_90v), (_GLF_IDENTITY(false, (false) && true) ? (_GLF_IDENTITY(_GLF_SWITCH_0_90v, ivec3(_GLF_IDENTITY(_GLF_SWITCH_0_90v[0], clamp(_GLF_SWITCH_0_90v[0], _GLF_SWITCH_0_90v[0], _GLF_SWITCH_0_90v[0])), _GLF_SWITCH_0_90v[1], _GLF_SWITCH_0_90v[2])) * -8019) : _GLF_SWITCH_0_90v), (_GLF_IDENTITY(false, (false) && true) ? (_GLF_IDENTITY(_GLF_SWITCH_0_90v, ivec3(_GLF_IDENTITY(_GLF_SWITCH_0_90v[0], clamp(_GLF_SWITCH_0_90v[0], _GLF_SWITCH_0_90v[0], _GLF_SWITCH_0_90v[0])), _GLF_SWITCH_0_90v[1], _GLF_SWITCH_0_90v[2])) * -8019) : _GLF_SWITCH_0_90v)))) / ivec3(1, 1, 1))) | ivec3(0, 0, 0));
          }
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(0))
            {
             case 86:
             ;
             case 97:
             bvec2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[34];
             case 0:
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = (1 ^ ((_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), int(ivec3(int(3), 1, 0))))), int(3)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             break;
             case 14:
             mat4x3(8557.8542, -305.086, -47.49, -2676.0045, 65.34, 7.3, -0.8, -0.5, 3434.7627, 593.189, 1.2, _GLF_IDENTITY(393.477, float(mat3x4(393.477, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, log(1.0), 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, log(1.0), 1.0, 0.0))), 0.0))));
             case 55:
             reflect(vec2(-5.3, -5.9), injectionSwitch);
             default:
             1;
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 39:
     mat3x4 _GLF_SWITCH_1_0v[81], _GLF_SWITCH_1_1v;
     case 52:
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) + 0))) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          barrier();
        }
       while(false);
      }
     case 0:
     case 9:
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
     case 24:
     case 13:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (-82541 & _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(2), int(2))) + _GLF_IDENTITY((_GLF_IDENTITY(0, (0) * 1)), clamp((_GLF_IDENTITY(0, (0) * 1)), (_GLF_IDENTITY(0, (0) * 1)), (_GLF_IDENTITY(0, (0) * 1))))), _GLF_IDENTITY(0, (0) << 0))))); _injected_loop_counter --)
        {
         switch(_GLF_SWITCH(0))
          {
           case 1:
           mat4(219.687, -374.663, -8576.0971, -752.641, -6.8, -9.7, -99.25, 95.61, 7.6, 2948.5913, -69.86, -530.274, -623.134, _GLF_IDENTITY(7.8, mix(float(7.8), float(_GLF_FUZZED(-6980.0648)), bool(false))), 8847.3964, 9323.9715);
           case 19:
           ivec4 _GLF_SWITCH_4_0v[71], _GLF_SWITCH_4_1v;
           case 0:
           subgroupAll(true);
           break;
           case 41:
           ;
           case 44:
           (5.6 + mat3x4(-53.82, 24.93, 4.6, -7.9, 3.9, 1.1, -3458.1177, -46.11, 6458.1734, 0.5, -4629.1904, 3.9));
           default:
           1;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), (vec2(mat2x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) / exp(vec2(0.0, 0.0)))).y))))
        barrier();
      }
     break;
     case 6:
     uint _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v[94];
     case 58:
     uvec2 _GLF_SWITCH_1_5v;
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     default:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       1;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(0))
        {
         case 33:
         ;
         case 0:
         if(_GLF_DEAD(false))
          barrier();
         case 7:
         case 58:
         barrier();
         break;
         case 60:
         vec3 _GLF_SWITCH_4_0v[59], _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[97];
         case 55:
         bool _GLF_SWITCH_4_3v;
         default:
         1;
        }
      }
    }
  }
}
