#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7918.9758)), float(injectionSwitch.y), bool(true))), ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), ! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, false)))))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(45.81) : _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(2.4), (false ? _GLF_FUZZED(945.712) : _GLF_FUZZED(2.4)))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true)))), (true ? mix(float(_GLF_FUZZED(2.4)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(73.96))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(2.4)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true)))), (true ? mix(float(_GLF_FUZZED(2.4)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(73.96)))))), true && (! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(973.729, 68.72)) : injectionSwitch))) / vec2(1.0, 1.0)).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.4)), float(_GLF_IDENTITY(vec3(float(_GLF_FUZZED(2.4)), 1.0, 1.0), clamp(vec3(float(_GLF_FUZZED(2.4)), 1.0, 1.0), vec3(float(_GLF_FUZZED(2.4)), 1.0, 1.0), vec3(float(_GLF_FUZZED(2.4)), 1.0, 1.0))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true)))), (true ? mix(float(_GLF_FUZZED(2.4)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(73.96)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / (1u & 1u));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)))), bool(bvec3(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)))), true, true)))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), clamp((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))) % subgroup_size)) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u) : _GLF_FUZZED(subgroup_id))), 1u, 1u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u) : _GLF_FUZZED(subgroup_id))), 1u, 1u, 1u)))))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) | 0u)) * 1u)) % subgroup_size)) | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) << 0u)) | 0u) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | 0u) + 1) - 0u)) % subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)) | 0u)) | (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))) | (~ (subgroup_id))))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)))), clamp((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1))) - 0u)) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)) | (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))), (subgroup_local_id + 1) - 0u)) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) * 1u, clamp((subgroup_id) * 1u, (subgroup_id) * 1u, (subgroup_id) * 1u))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + 1))))) >> 0u) - 0u)) % subgroup_size)) | (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, ((subgroup_local_id + 1) - 0u) >> 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) * 1u)) % subgroup_size), ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, ((subgroup_local_id + 1) - 0u) >> 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) * 1u)) % subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) << 0u)) % subgroup_size)) | 0u), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)) | (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, max(0u, 0u)))) % subgroup_size)), uint(uvec2(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)) | (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(num_workgroup) : (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)) | (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, ((subgroup_local_id + 1) - 0u) | 0u))) % subgroup_size)))), 0u)))))))) - 0u)), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) - 0u)) % subgroup_size), (true ? workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size) : _GLF_FUZZED(virtual_gid)))) ^ 0u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)), (~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) - 0u)) % subgroup_size))) - 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (true ? workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size) : _GLF_FUZZED(virtual_gid)))) ^ 0u)) - 0u), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)) ^ 0u), 0u, 1u, 1u))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 1u, 1u))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * 1u) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))))) ^ 0u)) - 0u)) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size) / 1u)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (true ? workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))) | 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size) : _GLF_FUZZED(virtual_gid)))) ^ 0u)) - 0u)))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)) ^ (0u ^ 0u)))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)) | (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)))) / 1u)) | (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) - _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))) % subgroup_size)))));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_IDENTITY(ivec2(~ (1), 1), (_GLF_IDENTITY(ivec2(~ (1), 1), (true ? ivec2(~ (1), 1) : _GLF_FUZZED(ivec2(-39233, 65992))))) ^ ivec2(0, 0)))))), 1, 1))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : uint(1), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false))) ? _GLF_FUZZED(workgroup_base) : uint(1)) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : uint(1), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false))) ? _GLF_FUZZED(workgroup_base) : uint(1)) / 1u)) | (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : uint(1), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false))) ? _GLF_FUZZED(workgroup_base) : uint(1)) / 1u))), max(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_base) : uint(1), false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / 1u)) * 1u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / 1u)) * 1u), uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / 1u)) * 1u), 0u, (0u | 1u), 1u))))))) : uint(1)))), max(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_IDENTITY(1, (1) ^ 0)), uint(uvec4(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : uint(1), max(false ? _GLF_FUZZED(workgroup_base) : uint(1), false ? _GLF_FUZZED(workgroup_base) : uint(1))), 1u, 1u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : uint(1), (false ? _GLF_FUZZED(workgroup_base) : uint(1)) - _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED((0.8 * -577.389))), bool(false)))), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))), ~ (~ ((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : uint(1), (false ? _GLF_FUZZED(workgroup_base) : uint(1)) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), 0u | (uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))))))) : _GLF_FUZZED(subgroup_local_id))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(1), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((virtual_gid)) : virtual_gid))) / 1u)], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, false), bvec2(bvec4(bvec2(subgroup_local_id + 1 < subgroup_size, false), false, false)))))))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(uvec3(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) << 0u) : _GLF_FUZZED(123682u)))))), min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) << 0u) : _GLF_FUZZED(123682u)))))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) << 0u) : _GLF_FUZZED(123682u)))))))) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (_GLF_IDENTITY(~ (((1u | 1u))), ~ (~ (_GLF_IDENTITY(~ (((1u | 1u))), uint(uvec2(~ (((1u | 1u))), 1u)))))))))))) == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, 0u, 0u)))) + 1, min(uint(_GLF_IDENTITY(read_1, uint(uvec3(_GLF_IDENTITY(read_1, (read_1) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ ((1u | 1u)))))) == _GLF_IDENTITY(read_2, uint(uvec4(read_2, _GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u)))) + 1, uint(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))), max(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))), (true ? _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))) : _GLF_FUZZED(subgroup_id))), 1u, 0u))))), uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ ((_GLF_IDENTITY((1u | 1u), (_GLF_IDENTITY((1u | 1u), 0u | (_GLF_IDENTITY((1u | 1u), clamp((1u | 1u), (1u | 1u), (1u | 1u)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) | (_GLF_IDENTITY(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))), max(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))), uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u)))))))))), min((_GLF_IDENTITY(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), _GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))), max(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))), _GLF_IDENTITY(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(1u, 0u | (1u)) | 1u)), ~ (~ (((1u | 1u))))))), uvec3(1u, 1u, 1u) * (uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(1u, 0u | (1u)) | 1u)), ~ (~ (((1u | 1u)))))))))))) | (uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u)))))))), (_GLF_IDENTITY(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))), max(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))), uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u)))))))))) | (uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u)))))))))))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))), (_GLF_IDENTITY(uvec3(read_1, _GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), max(_GLF_IDENTITY((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7417.7668 - -18.27))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) & 1u), min(_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), min((uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u))), (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u))), _GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), (false ? _GLF_FUZZED(118645u) : (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) & _GLF_IDENTITY(1u, 0u | (1u))))))), _GLF_IDENTITY((1u | _GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(0u, 1u * (0u)) ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))), _GLF_IDENTITY(max(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))), uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u)))))))), (true ? max(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), _GLF_IDENTITY(0u, (0u) | (0u)) ^ _GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) / 1u) | 1u)), ~ (~ (((1u | 1u))))))), uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u)))))))) : _GLF_FUZZED(uvec4(105429u, 59181u, 65468u, 30581u).aab))))) | (uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((_GLF_IDENTITY(1u | 1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((virtual_gid ^ virtual_gid)))) | 1u, 0u ^ (1u | 1u)), 1u | 1u))), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))))))), (~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(read_1, (read_1) | (read_1)), (uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(((1u | 1u)), clamp(((1u | 1u)), ((1u | 1u)), _GLF_IDENTITY(((1u | 1u)), (((1u | 1u))) / 1u))))), uint(uvec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(((1u | 1u)), clamp(((1u | _GLF_IDENTITY(1u, min(1u, 1u)))), ((_GLF_IDENTITY(1u, (1u) * 1u) | 1u)), _GLF_IDENTITY(((1u | 1u)), (((1u | 1u))) / 1u))))), (true ? (~ (_GLF_IDENTITY(((1u | 1u)), clamp(((1u | 1u)), ((_GLF_IDENTITY(1u | 1u, (1u | 1u) ^ 0u))), _GLF_IDENTITY(((1u | 1u)), (((1u | 1u))) / 1u))))) : _GLF_FUZZED(workgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(uvec3(read_1, (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))) & 1u), _GLF_IDENTITY((_GLF_IDENTITY(1u | 1u, min(1u | 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u) | 1u))), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (_GLF_IDENTITY(((1u | 1u)), (_GLF_IDENTITY(((1u | 1u)), ~ (_GLF_IDENTITY(~ (((1u | 1u))), ~ (~ (~ (((1u | 1u))))))))) | (_GLF_IDENTITY(((1u | 1u)), (((1u | 1u))) + 0u)))))))), max(uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ (((1u | 1u))))))), uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY(((1u | 1u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((1u | _GLF_IDENTITY(1u, (1u) << 0u)), _GLF_IDENTITY(uint(uvec3((1u | _GLF_IDENTITY(1u, (1u) << 0u)), (1u | 1u), 0u)), min(uint(uvec3((1u | _GLF_IDENTITY(1u, (1u) << 0u)), (1u | 1u), 0u)), uint(uvec3((1u | _GLF_IDENTITY(1u, (1u) << 0u)), (1u | 1u), 0u))))), (true ? _GLF_IDENTITY((1u | _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (1u) << 0u)), _GLF_IDENTITY(uint(uvec3((1u | _GLF_IDENTITY(1u, (1u) << 0u)), (1u | 1u), 0u)), min(uint(uvec3((1u | _GLF_IDENTITY(1u, (1u) << 0u)), (1u | 1u), 0u)), uint(uvec3((1u | _GLF_IDENTITY(1u, (1u) << 0u)), (1u | 1u), 0u))))) : _GLF_FUZZED(read_1)))))))))))) | (uvec3(read_1, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), _GLF_IDENTITY((1u | 1u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((1u | 1u), ((1u | 1u)) | ((1u | 1u)))), ~ (~ (((1u | 1u)))))))))))) - uvec3(0u, 0u, 0u)))))))) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, 0u, 0u))), max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, 0u, 0u))), _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, 0u, 0u)))))) + 1)), 4, _GLF_IDENTITY(64, (64) * 1), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u ^ (read_2)), min(read_2, read_2)), (_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u)) / 1u), clamp(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u)) / 1u), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), max(min(read_2, read_2), min(read_2, read_2)))), (_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u)) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u)) / 1u) | ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u)) / 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u, min((_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u, (_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u)))) / 1u), (_GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u, min((_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u, (_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u)))), (0u | 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u, min((_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u, (_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u)))))) / 1u)) >> 0u), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), uint(uint(min(read_2, read_2))))), (_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u)) / 1u), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (true ? _GLF_IDENTITY(read_2, min(read_2, read_2)) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u)) / 1u)))))) + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, 0), (_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) << ivec3(0, 0, 0))) - ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, 0), ivec3(ivec4(_GLF_IDENTITY(ivec3(1, 1, 0), _GLF_IDENTITY((ivec3(1, 1, 0)), ivec3(0, 0, 0) ^ ((ivec3(1, 1, 0)))) | (_GLF_IDENTITY(ivec3(1, 1, 0), ivec3(ivec4(ivec3(1, 1, 0), 0))))), 1)))) + ivec3(0, 0, 0))), _GLF_IDENTITY((int(ivec3(1, 1, 0))) >> 0, 1 * ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 1, 0), ~ (~ (_GLF_IDENTITY(ivec3(1, 1, 0), (ivec3(1, 1, 0)) / ivec3(1, 1, 1)))))), _GLF_IDENTITY(clamp(int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0)), int(ivec3(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 0))), ~ _GLF_IDENTITY((~ (clamp(int(ivec3(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))) | (1)), 1)), 0)), int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0))))), ((~ (clamp(int(ivec3(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))) | (1)), 1)), 0)), int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0)))))) / 1)))) >> 0)))), 4, 64, _GLF_IDENTITY(4, 0 | (4)));
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, false))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
