#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(-702.530)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(2.5)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), bvec2(true, true)))[1]), float(_GLF_FUZZED(253.102)), bool(false)))))), clamp(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(-702.530)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(2.5)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), bvec2(true, true)))[1]), float(_GLF_FUZZED(253.102)), bool(false)))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(-702.530)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(2.5)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), bvec2(true, true)))[1]), float(_GLF_FUZZED(253.102)), bool(false)))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(-702.530)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(2.5)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), bvec2(true, true)))[1]), float(_GLF_FUZZED(253.102)), bool(false))))))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-6.7), _GLF_FUZZED(83.05)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))))[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(-702.530)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(2.5)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), bvec2(true, true)))[1]), float(_GLF_IDENTITY(_GLF_FUZZED(253.102), clamp(_GLF_FUZZED(253.102), _GLF_FUZZED(253.102), _GLF_FUZZED(253.102)))), bool(false)))))), clamp(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(-702.530)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(2.5)), float((injectionSwitch)[0]), bool(true))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, tan(0.0), 0.0, 0.0, abs(1.0), 1.0, 1.0)), mix(vec2(_GLF_IDENTITY((vec2(mat4((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, tan(0.0), 0.0, 0.0, abs(1.0), 1.0, 1.0)))[0], max((vec2(mat4((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, tan(0.0), 0.0, 0.0, abs(1.0), 1.0, 1.0)))[0], (vec2(mat4((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, tan(0.0), 0.0, 0.0, abs(1.0), 1.0, 1.0)))[0])), _GLF_FUZZED(0.6)), vec2(_GLF_FUZZED((33.48)), (vec2(mat4((injectionSwitch), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, tan(0.0), 0.0, 0.0, abs(1.0), 1.0, 1.0)))[1]), bvec2(false, true))))[1]), bvec2(true, true)))[1]), float(_GLF_FUZZED(_GLF_IDENTITY(253.102, mix(float(_GLF_FUZZED(-10.80)), float(253.102), bool(true))))), bool(false)))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(-702.530)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(2.5)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), bvec2(true, true)))[1]), float(_GLF_FUZZED(253.102)), bool(false)))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(-702.530)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0)), bool(true))), (injectionSwitch)[1]), bvec2(true, true)))[1]), float(_GLF_FUZZED(253.102)), bool(false))))))))).x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          break;
         continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), false || (_GLF_IDENTITY(! (false), (! (false)) || false)))) || false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))) || false)))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false, false, false))), true, false, false))) || _GLF_IDENTITY(false, true && (false))))
    return;
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
    {
     return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (1u ^ 0u) * (workgroup_size))) ^ 0u) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (1u ^ 0u) * (workgroup_size))) ^ 0u) * workgroup_id) / 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u, 1u, (0u ^ 1u))), (uint(uvec4(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), max(_GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, (1u) + 0u))), 1u, (0u ^ 1u)))) + 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
          break;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(1u * (workgroup_base + subgroup_id * subgroup_size), (false ? _GLF_FUZZED(atomicAnd(subgroup_id, workgroup_id)) : 1u * (workgroup_base + subgroup_id * subgroup_size))), ~ (_GLF_IDENTITY(~ (1u * (workgroup_base + subgroup_id * subgroup_size)), (~ (1u * (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) ^ 0u) + subgroup_id * subgroup_size))) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      break;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), _GLF_IDENTITY(int(ivec3(~ (~ (0)), 1, 0)), (false ? _GLF_FUZZED(24635) : _GLF_IDENTITY(int(ivec3(~ (~ (0)), 1, 0)), clamp(int(ivec3(~ _GLF_IDENTITY((~ (0)), _GLF_IDENTITY(int(_GLF_IDENTITY(int((~ (0))), (int((~ (0)))) - 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int((~ (0))), (int((~ (0)))) - 0)), (true ? int(_GLF_IDENTITY(int((~ (0))), (int((~ (0)))) - 0)) : _GLF_FUZZED(-48633)))) ^ 0)), 1, 0)), int(ivec3(~ (~ (0)), 1, 0)), int(ivec3(~ (~ (0)), 1, 0))))))))))) / 1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], 0u ^ (_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), ~ (~ (~ (buf[virtual_gid]))))))))) >> 0u))), 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) | (subgroup_local_id + 1)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bvec3(bvec3(bvec3(false, true, false))))), false || (bool(bvec3(false, true, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + _GLF_IDENTITY(1, min(1, 1)), 4, 64, 4);
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             break;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
          continue;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     subgroupAll(false);
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ((false)) || false)), true), bvec2(bvec2(bvec2(! (! _GLF_IDENTITY((false), ((false)) || false)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ((false)) || false)), true), bvec2(bvec2(bvec2(! (! _GLF_IDENTITY((false), ((false)) || false)), true))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), min(int(4), int(4)))) | (int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     else
      {
       atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (64) >> 0))), 4);
       if(_GLF_DEAD(false))
        continue;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bool(false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && ((true)))), false))).y, false)), ! (! (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && ((true)))), false))).y, false)))))), ! (! (_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true)), false))).y, false))), ! (_GLF_IDENTITY(! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))), false))).y, false)))), bool(bvec2(! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))), false))).y, false)))), false))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false)))))), true && (true)), false))).y, false))), ! (! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, false))))))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))))))), bool(bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(-4241.0317, min(-4241.0317, _GLF_IDENTITY(-4241.0317, 1.0 * (-4241.0317)))) / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-4.6), clamp(_GLF_IDENTITY(_GLF_FUZZED(-4.6), min(_GLF_FUZZED(-4.6), _GLF_FUZZED(-4.6))), _GLF_FUZZED(-4.6), _GLF_FUZZED(-4.6))), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))), ! (! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))))))))))), ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))), ! (! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true)))), true))))))).y, false))))))), bool(bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))), ! (! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (true)), false))).y, false))))))))))))))))), ! (! (bool(_GLF_IDENTITY(bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))), ! _GLF_IDENTITY((! (bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) - 0)], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) - 0)], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))))))), true, false), bvec3(bvec4(bvec3((! (bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((-4241.0317 / 71.28)), (true ? _GLF_FUZZED((-4241.0317 / 71.28)) : _GLF_FUZZED(49.49))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))))), true, false), false))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && ((true)))), false))).y, false)), ! (! (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && ((true)))), false))).y, false)))))), ! (! (_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true)), false))).y, false))), ! (_GLF_IDENTITY(! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))), false))).y, false)))), bool(bvec2(! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))), false))).y, false)))), false))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false)))))), true && (true)), false))).y, false))), ! (! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, false))))))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))))))), bool(bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(-4241.0317, min(-4241.0317, _GLF_IDENTITY(-4241.0317, 1.0 * (-4241.0317)))) / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-4.6), clamp(_GLF_IDENTITY(_GLF_FUZZED(-4.6), min(_GLF_FUZZED(-4.6), _GLF_FUZZED(-4.6))), _GLF_FUZZED(-4.6), _GLF_FUZZED(-4.6))), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))), ! (! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))))))))))), ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))), ! (! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true)))), true))))))).y, false))))))), bool(bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))), ! (! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (true)), false))).y, false))))))))))))))))), ! (! (bool(_GLF_IDENTITY(bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))), ! _GLF_IDENTITY((! (bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) - 0)], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) - 0)], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))))))), true, false), bvec3(bvec4(bvec3((! (bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((-4241.0317 / 71.28)), (true ? _GLF_FUZZED((-4241.0317 / 71.28)) : _GLF_FUZZED(49.49))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))))), true, false), false))))))))))), bool(bvec2(! _GLF_IDENTITY((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && ((true)))), false))).y, false)), ! (! (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && ((true)))), false))).y, false)))))), ! (! (_GLF_IDENTITY((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true)), false))).y, false))), ! (_GLF_IDENTITY(! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))), false))).y, false)))), bool(bvec2(! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))), false))).y, false)))), false))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false)))))), true && (true)), false))).y, false))), ! (! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, false))))))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))))))), bool(bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(-4241.0317, min(-4241.0317, _GLF_IDENTITY(-4241.0317, 1.0 * (-4241.0317)))) / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-4.6), clamp(_GLF_IDENTITY(_GLF_FUZZED(-4.6), min(_GLF_FUZZED(-4.6), _GLF_FUZZED(-4.6))), _GLF_FUZZED(-4.6), _GLF_FUZZED(-4.6))), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))), ! (! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))))))))))), ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))), ! (! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), true)))), true))))))).y, false))))))), bool(bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false))), ! (! ((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.6), mix(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), bool(true)))), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (true)), false))).y, false))))))))))))))))), ! (! (bool(_GLF_IDENTITY(bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))), ! _GLF_IDENTITY((! (bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) - 0)], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) - 0)], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED((-4241.0317 / 71.28)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))))))), true, false), bvec3(bvec4(bvec3((! (bool((bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((-4241.0317 / 71.28)), (true ? _GLF_FUZZED((-4241.0317 / 71.28)) : _GLF_FUZZED(49.49))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.6)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y, false)))))), true, false), false))))))))))), false)))) || false))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0)))))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      continue;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         break;
        }
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
}
