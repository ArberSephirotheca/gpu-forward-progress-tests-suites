#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 float _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 ivec3 _f3;
 vec3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_0 {
 uint _f0;
 mat2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 uint next_virtual_gid;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uvec4 _f1;
 mat4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.1))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), max(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))) / vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (injectionSwitch), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(9.9, 967.956)) : mat2(1.0) * (injectionSwitch))))), vec2(mat2x4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(9.9, 967.956)) : mat2(1.0) * (injectionSwitch))))), 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0)))))), 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0)))) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, round(length(normalize(1.0))) * (1.0))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), mat2(1.0) * (injectionSwitch)))))), 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))), mat2(1.0) * (injectionSwitch)))))), 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ceil(vec3(5.2, 84.28, 5.4))) : vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), 0.0))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)))))), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), vec2(mat3x2(vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0))))))), 0.0)))) - vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4(mat2(1.0) * (injectionSwitch), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED((+ 23.77))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(1.0, 1.0, 1.0)), 1.0))) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))))), 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, determinant(mat2(0.0, tan(0.0), 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0)))) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))), clamp(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, determinant(mat2(0.0, tan(0.0), 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0)))) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, determinant(mat2(0.0, tan(0.0), 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0)))) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, determinant(mat2(0.0, tan(0.0), 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0)))) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))))), 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (1.0))) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), 0.0), (true ? vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (1.0))) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), 0.0) : _GLF_FUZZED(vec3(709.368, 587.978, 32.35)))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))) * mat2(1.0)))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0)) * (injectionSwitch)))), vec2(vec3(injectionSwitch, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))).y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0)))))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) / vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))).y))))), true, false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (! (false)))))), true && (! ((! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))), (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), true, true, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) - vec3(0.0, 0.0, 0.0))))))), (true ? mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))) : _GLF_FUZZED(mat3(8.4, 43.07, -40.74, 7.7, 13.55, 670.143, 5.8, -7.4, 4.9)))))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3945.6518)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(29.93)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), vec2(_GLF_FUZZED(-6.2), (injectionSwitch)[1]), bvec2(false, true))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, 0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, bool(bool(true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), 0u + (~ (gl_WorkGroupSize.x)))) | 0u)));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u))), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))) | (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u))))) * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) | 0u) : workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x))) * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) * 1u), ~ (~ (workgroup_size))), 1u, 1u, 1u)))) / 1u)) | 0u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) * 1u), ~ (~ (workgroup_size))), 1u, 1u, 1u)))) / 1u)) | 0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(112004u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) * 1u), ~ (~ (workgroup_size))), 1u, 1u, 1u)))) / 1u)), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) * 1u), ~ (~ (workgroup_size))), 1u, 1u, 1u)))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) * 1u), ~ (~ (workgroup_size))), 1u, 1u, 1u)))) / 1u)))) | 0u), (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) * 1u), ~ (~ (workgroup_size))), 1u, 1u, 1u)))) / 1u)) | 0u)) ^ 0u))), 1u, 0u, 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(74289u) : _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false), (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) | 0u), (true ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) | 0u, uint(uint((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) | 0u)))) | ((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) | 0u))) >> 0u)) : _GLF_FUZZED(num_workgroup)))), ~ (~ (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), 0u ^ (0u + (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), _GLF_IDENTITY((0u + (subgroup_id * subgroup_size)), ((0u + (subgroup_id * subgroup_size))) * 1u) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size)), 0u, 1u, 1u))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + _GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | 0u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 1u * (~ (subgroup_id)))))))) * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, ~ (~ (0u))))) + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u))))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), clamp(0u + (subgroup_id * subgroup_size), _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), 0u | (0u + (subgroup_id * subgroup_size))), 0u + (subgroup_id * subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) + (subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) + (subgroup_id * subgroup_size)), ((_GLF_IDENTITY(0u, min(0u, 0u)) + (subgroup_id * subgroup_size))) | 0u)))) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))), (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u)))) ^ 0u))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)), clamp(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))), (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u)))) ^ 0u))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))), (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u)))) ^ 0u))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))), (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u)))) ^ 0u))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u))) | 0u), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))), (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u)))) ^ 0u))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u))))) | (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)))) | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u)), uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u))))), 0u, 1u, 1u))))), ((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)))) | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u)), uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u))))), 0u, 1u, 1u)))))) << 0u) | _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u))) | (uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) * 1u))))) / 1u), subgroup_id * subgroup_size)), 0u, 1u, 1u)))))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) | 0u))))))))), workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u)))), max(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))), 0u + (_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), ((subgroup_id)) + 0u)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)))), 0u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((_GLF_IDENTITY(subgroup_id, (subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((subgroup_id)) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)) ^ 0u, min(((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))))))) ^ 0u, ((subgroup_id)) ^ 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)))) : _GLF_FUZZED(subgroup_size))), 0u)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), 0u ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u))))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))) | 0u) : workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), _GLF_IDENTITY(float(mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, log(1.0), 1.0)), max(float(mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, log(1.0), 1.0)), float(mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, log(1.0), 1.0))))))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(num_workgroup))))))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec4((workgroup_size), 0u, 0u, 0u), ~ (~ (uvec4((workgroup_size), 0u, 0u, 0u))))))) << 0u) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec4((workgroup_size), 0u, 0u, 0u), ~ (~ (uvec4((workgroup_size), 0u, 0u, 0u))))))) << 0u) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))) >> 0u), (_GLF_IDENTITY(workgroup_size, uint(uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(~ (~ (workgroup_size)), (_GLF_IDENTITY(~ (~ (workgroup_size)), 0u ^ (~ (~ (workgroup_size))))) >> 0u)), 1u, 1u, 1u)))) / 1u)) | 0u)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(_GLF_IDENTITY((- (456.117 - 7.2)), min(_GLF_IDENTITY((- (456.117 - 7.2)), ((- (456.117 - 7.2))) - 0.0), _GLF_IDENTITY((- (456.117 - 7.2)), float(mat4((- (456.117 - 7.2)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (0.0))), 0.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9518.2739))), 1.0, 1.0))))))), bool(false))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))) ? _GLF_FUZZED(74289u) : _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) | 0u, min((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) | 0u, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) | 0u)))), ~ _GLF_IDENTITY((~ (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), subgroup_id * subgroup_size), (min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) - 0u)), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id)) * subgroup_size), (min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : subgroup_id), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : subgroup_id), (false ? _GLF_FUZZED(subgroup_local_id) : (false ? _GLF_FUZZED(workgroup_size) : subgroup_id))) : _GLF_FUZZED(subgroup_id)))) * subgroup_size)) ^ 0u))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(sqrt(vec2(1.0, 1.0)))).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)))) | (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), (workgroup_size) / 1u)) | 0u)))), (false ? _GLF_FUZZED(workgroup_base) : (~ (_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, abs(0.0), 0.0, abs(0.0), cos(0.0))), (float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, abs(0.0), 0.0, abs(0.0), cos(0.0)))) - sqrt(0.0))) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)) ? workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id), clamp(uint(subgroup_id), uint(subgroup_id), _GLF_IDENTITY(uint(subgroup_id), min(uint(subgroup_id), uint(subgroup_id)))))), ~ (~ (uint(_GLF_IDENTITY(uint(subgroup_id), clamp(uint(subgroup_id), uint(subgroup_id), _GLF_IDENTITY(uint(subgroup_id), min(uint(subgroup_id), uint(subgroup_id)))))))))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u ^ ((subgroup_id * subgroup_size)))) | 0u)), subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id)) * subgroup_size))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))), ~ (~ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))))))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) | 0u))))))))))), workgroup_base + subgroup_id * subgroup_size))) - (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), max((0u << _GLF_IDENTITY(uint(6u), uint(6u))), (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) << _GLF_IDENTITY(uint(7u), uint(7u)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-312.708) : float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-312.708) : float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-312.708) : float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) + 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(bool(bvec3(false, false, false)), false, true, _GLF_IDENTITY(false, true && (false))))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false)), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false)), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (false || _GLF_IDENTITY((false), false || ((false)))))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))))), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(_GLF_IDENTITY(bvec2(bool(bool(true)), true), bvec2(bvec2(bvec2(bool(bool(true)), true))))))) && (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) && true))), true), true))), false, false))))))), false || ((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(_GLF_IDENTITY(bvec2(bool(bool(true)), true), bvec2(bvec2(bvec2(bool(bool(true)), true))))))) && (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))))))))), true && (_GLF_DEAD(false))))) && true))), true), true))), false, false))))))))))))), true && _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bool((_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), false, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (false || _GLF_IDENTITY((false), false || ((false)))))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))))), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(_GLF_IDENTITY(bvec2(bool(bool(true)), true), bvec2(bvec2(bvec2(bool(bool(true)), true))))))) && (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) || false)))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ((bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) && true))), true), true))), false, false))))))), false || ((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(_GLF_IDENTITY(bvec2(bool(bool(true)), true), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(true, true && (true)))), true))))))) && (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))))))))), true && (_GLF_DEAD(false))))) && true))), true), true))), false, false))))))))))))), true && _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bool((_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true)))), true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.6) : injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.6) : injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.6) : injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false)))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | (0u)) | (1u)), mat2(1.0), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (1.0)), _GLF_IDENTITY(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (1.0))), mix(float(_GLF_FUZZED((64.00 - 269.691))), float(min(_GLF_IDENTITY(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (1.0)), _GLF_IDENTITY(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (1.0)))), bool(true))))), float(_GLF_FUZZED(vec4(2.3, 732.172, 7.2, -7.7).g)), bool(false))))), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) + (0 | 0)), ((1)) | ((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66177))))))))) ^ 0)))))) % subgroup_size), _GLF_struct_1(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), mix(vec3((vec3(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(vec3(140.302, -18.95, -4498.1876)[2]), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec3(140.302, -18.95, -4498.1876)[2]), (_GLF_FUZZED(vec3(140.302, -18.95, -4498.1876)[2])) - 0.0), _GLF_FUZZED(vec3(140.302, -18.95, -4498.1876)[2]), _GLF_FUZZED(vec3(140.302, -18.95, -4498.1876)[2]))))), 0.0))[0], (vec3(1.0, 1.0, 0.0))[1], (vec3(1.0, 1.0, 0.0))[2]), vec3(_GLF_FUZZED((-4.8 * -91.84)), _GLF_FUZZED((false ? -645.775 : -277.667)), _GLF_FUZZED(3.1)), bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, false))))), 1.0, 1.0)), mat4x3(1.0), mat2x3(1.0), ivec3(1), vec3(1.0), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)), transpose(transpose(_GLF_IDENTITY((mat2(1.0)), mat2(mat2x4((mat2(1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0)))), uvec4(1u), mat4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec4((_GLF_IDENTITY(false, true && (false))), false, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))) && true, bool(_GLF_IDENTITY(bool(((false)) && true), ! (! (bool(((false)) && true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((false)) && true, ! (! (((false)) && true))), bool(bool(((false)) && true))), ! (! (_GLF_IDENTITY(((false)) && true, bool(bool(((false)) && true))))))))) && true)), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))) && true, bool(bool(((false)) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(((false)) && true, (_GLF_IDENTITY(((false)) && true, (((false)) && true) && true)) || false))), _GLF_IDENTITY(bool(bool(((false)) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(((false)) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(((false)) && true, bool(bool(((false)) && true))))))))) && true)))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))) && true, bool(bool(((false)) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(((false)) && true, bool(bool(((false)) && true))), ! (! (_GLF_IDENTITY(((false)) && true, bool(bool(((false)) && true))))))))) && true))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))), false)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_3._f0.next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) - (0 << _GLF_IDENTITY(int(1), int(1)))));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(true, (true) || false)))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)), false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, mix(float(_GLF_FUZZED(-7090.9139)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7090.9139)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7090.9139)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))), ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7090.9139)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))))) && true)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(injectionSwitch, (mat4x2(-9.1, -5.3, 2.7, -994.130, _GLF_IDENTITY(198.548, mix(float(198.548), float(_GLF_FUZZED(_GLF_IDENTITY(54.85, min(54.85, 54.85)))), bool(false))), -4.5, -7.6, 6690.8323) * vec4(-94.90, -6377.4320, -18.18, -619.443)), injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) - vec2(0.0, 0.0))))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.49), _GLF_FUZZED(-7.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.0, -7.8)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(-3865.5981, 3.8)) : vec2(1.0, 1.0)))))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-314.384)), vec2(_GLF_FUZZED((4.5 / 5.2)), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-314.384)), vec2(_GLF_FUZZED((4.5 / 5.2)), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-314.384)), vec2(_GLF_FUZZED((4.5 / 5.2)), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false || ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-314.384)), vec2(_GLF_FUZZED((4.5 / 5.2)), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(mat3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0)), min(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(mat3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(mat3(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_3._f0.next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (read_1)) == read_2) + 1, (_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2) + 1), (uint(uint(read_1 == read_2) + 1)) * 1u)), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(uint(read_1 == read_2) + 1), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1)), clamp((uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1)), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> _GLF_IDENTITY((151039u & 0u), (_GLF_IDENTITY((151039u & 0u), clamp((151039u & 0u), (151039u & 0u), (151039u & 0u)))) - 0u)) + 1)), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1, clamp(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1, _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1, _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1))))) * 1u), (uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1)))) * 1u))), ((uint(_GLF_IDENTITY(uint(uint(read_1 == read_2) + 1), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1)), clamp((uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1)), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> _GLF_IDENTITY((151039u & 0u), (_GLF_IDENTITY((151039u & 0u), clamp((151039u & 0u), (151039u & 0u), (151039u & 0u)))) - 0u)) + 1)), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1, clamp(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1, _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1, _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1))))) * 1u), (uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1)))) * 1u)))) ^ (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), min(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 1u << _GLF_IDENTITY(uint(0u), uint(0u))))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2) + 1), (uint(uint(read_1 == read_2) + 1)) * 1u)), (uint(_GLF_IDENTITY(uint(uint(read_1 == read_2) + 1), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & _GLF_IDENTITY(0u, (0u) << 0u))) + 1)), clamp((uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1)), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> _GLF_IDENTITY((151039u & 0u), (_GLF_IDENTITY((151039u & 0u), clamp((151039u & 0u), (_GLF_IDENTITY(151039u & 0u, (151039u & 0u) ^ 0u)), (151039u & 0u)))) - 0u)) + 1)), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1), 1u * (uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1))))) * 1u), (uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | 0u)) >> (151039u & 0u)) + 1)))) * 1u))) / (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), min(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 1u << _GLF_IDENTITY(uint(0u), uint(0u))))))), min((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), min(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 1u << _GLF_IDENTITY(uint(0u), uint(0u))))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), min(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 1u << _GLF_IDENTITY(uint(0u), uint(0u))))))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | 0u)))))), 1u), (uvec2(_GLF_IDENTITY(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(read_1 == _GLF_IDENTITY(read_2, 0u ^ (read_2))) + 1), (uint(uint(read_1 == read_2) + 1)) * 1u)), (uint(_GLF_IDENTITY(uint(uint(read_1 == read_2) + 1), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1)), clamp((uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1)), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> _GLF_IDENTITY((151039u & 0u), (_GLF_IDENTITY((151039u & 0u), clamp(_GLF_IDENTITY((151039u & 0u), clamp((151039u & 0u), (151039u & 0u), (151039u & 0u))), (151039u & 0u), (151039u & 0u)))) - 0u)) + 1)), ((uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1))) * 1u), (uint(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (read_2))) | 0u)), (uint(read_1 == read_2)) >> (151039u & 0u)) + 1)))) * 1u))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u ^ 0u))), uint(0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), min(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 1u << _GLF_IDENTITY(uint(0u), uint(0u))))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 1u)) | uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, 0u + (uint(read_1 == read_2) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u), (read_1) ^ _GLF_IDENTITY(0u, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u), (read_1) ^ _GLF_IDENTITY(0u, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) - 0u))))) ^ 0u) == read_2), uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u), (read_1) ^ 0u) == read_2), _GLF_IDENTITY(1u, (1u) ^ (0u ^ 0u))))) + 1, (true ? uint(_GLF_IDENTITY(read_1, 0u | (read_1)) == read_2) + 1 : _GLF_FUZZED(subgroup_size)))) << 0u)) | 0u), uint(read_1 == read_2) + 1))) | (uint(read_1 == read_2) + 1)), 4, _GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), clamp((64), (64), (64)))), _GLF_IDENTITY(4, min(4, 4)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2(2.7, 12.57, -0.9, 1.9)) : _GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), mat2(mat4x3(mat2(0.0, 1.0, 1.0, 1.0)))))))), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), mat3x4(mat3x4(mat3x4(injectionSwitch, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0)))))), min(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(28.36) : 1.0)), 1.0)), sin(0.0)), mat3x4(mat3x4(mat3x4(injectionSwitch, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0)))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) - 0.0), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0, sin(0.0)), mat3x4(mat3x4(mat3x4(injectionSwitch, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0))))))))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))), true), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))))), true), true))))) || false)))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.0) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[_GLF_struct_replacement_3._f0.next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), uint(read_1 == read_2))) + 1, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), (true && ((false))) || false)), true && (_GLF_IDENTITY((false), true && ((false))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), (true && ((false))) || false)), true && (_GLF_IDENTITY((false), true && ((false))))), true, false, true)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), false), true, false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
