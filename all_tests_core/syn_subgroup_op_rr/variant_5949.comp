#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 bvec2 _f0;
} ;

struct _GLF_struct_14 {
 uint workgroup_size;
 bool _f0;
 mat4 _f1;
} ;

struct _GLF_struct_16 {
 mat3x4 _f0;
 float _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
} ;

struct _GLF_struct_11 {
 float _f0;
 mat3 _f1;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 uvec2 _f1;
 _GLF_struct_11 _f2;
 int _f3;
 mat2x3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_8 {
 mat4x3 _f0;
 vec2 _f1;
 uvec3 _f2;
 uint _f3;
 mat4x3 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_9 {
 uint _f0;
 _GLF_struct_8 _f1;
 bool _f2;
 vec3 _f3;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 ivec3 _f1;
 mat2x4 _f2;
 uint _f3;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 mat3x4 _f1;
 ivec3 _f2;
 bool _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 uint _f1;
 uvec4 _f2;
 int _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 mat2x3 _f1;
 bool _f2;
 mat3x4 _f3;
 ivec4 _f4;
 bvec2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat2x3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_13 {
 _GLF_struct_3 _f0;
 mat3 _f1;
 uint subgroup_id;
 _GLF_struct_4 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_12 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_6_1_1_13read_2subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, false)), true, false)))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), ! (! (bool(bvec4(_GLF_DEAD(false), true, false, false))))), true, _GLF_IDENTITY(false, (false) || false))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_6num_workgroupread_1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid.xy = GLF_merged2_0_1_13_1_1_6num_workgroupread_1;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_3(_GLF_struct_0(mat4x3(1.0), mat2x3(1.0), true, mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1683.0928)), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(1683.0928)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(1683.0928)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(1683.0928)), float(1.0), bool(true))))), 1.0), max(clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1683.0928)), float(1.0), bool(true))), 1.0), clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1683.0928)), float(1.0), bool(true))), 1.0))))), ivec4(1), bvec2(true), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))) + 0u)))) | _GLF_IDENTITY((1u), ((1u)) - 0u)))), mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_struct_1(uvec3(1u), 1u, uvec4(1u), 1, mat3x4(1.0)), _GLF_struct_2(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat3x4(1.0), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec3(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) - 0))))) / (ivec3(1, 1, _GLF_IDENTITY(1, (1) / 1)) | ivec3(1, 1, 1)), ivec3(ivec3((ivec3(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) - 0))))) / (ivec3(1, 1, _GLF_IDENTITY(1, (1) / 1)) | ivec3(1, 1, 1))))), ((_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, 0, _GLF_IDENTITY(0, (0) - 0)))) / (ivec3(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 + (1)))), 1, 1) | ivec3(1, 1, 1))) | (_GLF_IDENTITY((ivec3(1)) / (_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 1, 1), 1), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))))) | ivec3(1, 1, 1)), clamp((ivec3(1)) / _GLF_IDENTITY((ivec3(1, 1, 1) | ivec3(1, 1, 1)), ((ivec3(1, 1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1))))) | ivec3(1, 1, 1))) >> (_GLF_IDENTITY(ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(_GLF_IDENTITY(8, (8) - 0)), ivec3(8)), ivec3(ivec3(_GLF_IDENTITY(ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(_GLF_IDENTITY(8, (8) - 0)), ivec3(8)), ~ (~ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(_GLF_IDENTITY(8, (8) - 0)), ivec3(8)))))))))), (ivec3(1)) / (ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-10425) : 1)), 1, 1) | ivec3(1, 1, 1)), (ivec3(1)) / (ivec3(1, 1, 1) | ivec3(1, 1, 1)))))), min(_GLF_IDENTITY((ivec3(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) - 0))))) / (ivec3(1, 1, _GLF_IDENTITY(1, (1) / 1)) | ivec3(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) / int(_GLF_ONE(1.0, injectionSwitch.y))))), ((_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, 0, _GLF_IDENTITY(0, ~ (~ (0)))))) / (ivec3(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) >> 0)))), 1, 1) | ivec3(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-29832) : 1))))) | (_GLF_IDENTITY((ivec3(1)) / (_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 1, 1), 1), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))))), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))))), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))))))) | ivec3(1, 1, 1)), clamp((ivec3(1)) / _GLF_IDENTITY((ivec3(1, 1, 1) | _GLF_IDENTITY(ivec3(1, 1, 1), ~ (~ (ivec3(1, 1, 1))))), ((ivec3(1, 1, 1) | ivec3(1, 1, 1))) >> (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(_GLF_IDENTITY(8, (8) - 0)), ivec3(8)))), (ivec3(1)) / (ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-10425) : 1)), 1, 1) | ivec3(1, 1, 1)), (ivec3(1)) / (ivec3(1, 1, 1) | ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1))) | (_GLF_IDENTITY(1, (1) ^ 0))), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * 1), 1)), 1)))))), _GLF_IDENTITY((ivec3(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) - 0))))) / (ivec3(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1)))) | ivec3(1, 1, 1)), ((_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, 0, 0))) / (ivec3(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 + (1)))), 1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))) | ivec3(1, 1, 1))) | _GLF_IDENTITY((_GLF_IDENTITY((ivec3(1)) / (_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 1, 1), 1), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))))))))) | ivec3(1, 1, 1)), clamp((ivec3(1)) / _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))) | ivec3(1, 1, 1)), ((ivec3(1, 1, 1) | ivec3(1, 1, 1))) >> (ivec3(0, 0, 0) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(8, (8) - 0)), min(ivec3(_GLF_IDENTITY(8, (8) - 0)), ivec3(_GLF_IDENTITY(8, (8) - 0)))), ivec3(8)))), (ivec3(1)) / (ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-10425) : 1)), 1, 1) | ivec3(1, 1, 1)), (ivec3(1)) / (ivec3(1, 1, 1) | ivec3(1, 1, 1))))), clamp((_GLF_IDENTITY((ivec3(1)) / (_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 1, 1), 1), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))))))))) | ivec3(1, 1, 1)), clamp((ivec3(1)) / _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))) | ivec3(1, 1, 1)), ((ivec3(1, 1, 1) | ivec3(1, 1, 1))) >> (ivec3(0, 0, 0) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(8, (8) - 0)), min(ivec3(_GLF_IDENTITY(8, (8) - 0)), ivec3(_GLF_IDENTITY(8, (8) - 0)))), ivec3(8)))), (ivec3(1)) / (ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-10425) : 1)), 1, 1) | ivec3(1, 1, 1)), (ivec3(1)) / (ivec3(1, 1, 1) | ivec3(1, 1, 1))))), (_GLF_IDENTITY((ivec3(1)) / (_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 1, 1), 1), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))))))))) | ivec3(1, 1, 1)), clamp((ivec3(1)) / _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))) | ivec3(1, 1, 1)), ((ivec3(1, 1, 1) | ivec3(1, 1, 1))) >> (ivec3(0, 0, 0) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(8, (8) - 0)), min(ivec3(_GLF_IDENTITY(8, (8) - 0)), ivec3(_GLF_IDENTITY(8, (8) - 0)))), ivec3(8)))), (ivec3(1)) / (ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-10425) : 1)), 1, 1) | ivec3(1, 1, 1)), (ivec3(1)) / (ivec3(1, 1, 1) | ivec3(1, 1, 1))))), _GLF_IDENTITY((_GLF_IDENTITY((ivec3(1)) / (_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 1, 1), 1), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))))))))) | ivec3(1, 1, 1)), clamp((ivec3(1)) / _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))) | ivec3(1, 1, 1)), ((ivec3(1, 1, 1) | ivec3(1, 1, 1))) >> (ivec3(0, 0, 0) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(8, (8) - 0)), min(ivec3(_GLF_IDENTITY(8, (8) - 0)), ivec3(_GLF_IDENTITY(8, (8) - 0)))), ivec3(8)))), (ivec3(1)) / (ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-10425) : 1)), 1, 1) | ivec3(1, 1, 1)), (ivec3(1)) / (ivec3(1, 1, 1) | ivec3(1, 1, 1))))), (_GLF_IDENTITY((_GLF_IDENTITY((ivec3(1)) / (_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 1, 1), 1), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))))))))) | ivec3(1, 1, 1)), clamp((ivec3(1)) / _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))) | ivec3(1, 1, 1)), ((ivec3(1, 1, 1) | ivec3(1, 1, 1))) >> (ivec3(0, 0, 0) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(8, (8) - 0)), min(ivec3(_GLF_IDENTITY(8, (8) - 0)), ivec3(_GLF_IDENTITY(8, (8) - 0)))), ivec3(8)))), (ivec3(1)) / (ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-10425) : 1)), 1, 1) | ivec3(1, 1, 1)), (ivec3(1)) / (ivec3(1, 1, 1) | ivec3(1, 1, 1))))), ((_GLF_IDENTITY((ivec3(1)) / (_GLF_IDENTITY(ivec3(1, 1, 1), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 1, 1), 1), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)))))), (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))) | (~ (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1)), ~ (~ (ivec4(0, 0, 0, 0) | (ivec4(ivec3(1, 1, 1), 1))))))))))))))) | ivec3(1, 1, 1)), clamp((ivec3(1)) / _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, 1, 1)) | (ivec3(1, 1, 1))) | ivec3(1, 1, 1)), ((ivec3(1, 1, 1) | ivec3(1, 1, 1))) >> (ivec3(0, 0, 0) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(8, (8) - 0)), min(ivec3(_GLF_IDENTITY(8, (8) - 0)), ivec3(_GLF_IDENTITY(8, (8) - 0)))), ivec3(8)))), (ivec3(1)) / (ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-10425) : 1)), 1, 1) | ivec3(1, 1, 1)), (ivec3(1)) / (ivec3(1, 1, 1) | ivec3(1, 1, 1)))))) - ivec3(0, 0, 0))) ^ ivec3(0, 0, 0)))))))), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ivec2(1))), mat3(1.0), gl_SubgroupID, _GLF_struct_4(mat4x2(1.0)), _GLF_struct_7(_GLF_struct_5(ivec4(1), mat2x3(1.0), mat3x4(1.0), ivec3(1)), _GLF_struct_6(ivec3(1), ivec3(1), mat2x4(1.0), 1u), bvec4(true)), _GLF_struct_9(1u, _GLF_struct_8(mat4x3(1.0), vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))), min(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))) | (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))), (1u ^ 1u)))), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))))), 1u, mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0)), bvec2(true)), true, vec3(1.0)), _GLF_struct_12(_GLF_struct_10(bvec4(true), mat4x3(1.0)), uvec2(1u), _GLF_struct_11(1.0, mat3(1.0)), 1, mat2x3(1.0), bvec4(true)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_6_1_1_13read_2subgroup_size.y = subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z = GLF_merged2_0_1_6_1_1_13read_2subgroup_size.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3468.1803), _GLF_FUZZED(-54.46)), bvec2(false, false))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-8.0), min(_GLF_FUZZED(-8.0), _GLF_FUZZED(-8.0))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], float(mat3((injectionSwitch)[0], 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (false ? _GLF_FUZZED(-3.5) : _GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat3((injectionSwitch)[0], 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(intBitsToFloat(-39883)) : _GLF_IDENTITY(float(mat3((injectionSwitch)[0], 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3((injectionSwitch)[0], 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3((injectionSwitch)[0], 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))))))), _GLF_FUZZED(-0.0)), bvec2(true, false))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec4((false) || false, true, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4((false) || false, true, true, true)), bool(bool(bool(bvec4((false) || false, true, true, true))))), true, false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x = subgroup_local_id;
 GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.y = GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) || false)))), true))))) && true))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid.xy.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_16(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, _GLF_struct_14(gl_WorkGroupSize.x, true, _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))), _GLF_struct_15(bvec2(true))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) && true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) || false) && true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) || false) && true, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan((- vec2(5.5, 983.847)), vec2(-50.31, -0.2))) : injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(92.57)), bool(false))))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-82.93)), vec2(_GLF_FUZZED(-9607.4675), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), log(1.0), 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_17._f0._f2.workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z)), min(_GLF_struct_replacement_13.subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z)), _GLF_struct_replacement_13.subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z)))) + GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y = virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.w = _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, (true ? GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid : _GLF_FUZZED(usubBorrow(GLF_merged2_0_1_13_1_1_6num_workgroupread_1, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid)))).y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.w = GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y) << 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-62.83)), bvec2(true, false)))) - vec2(0.0, 0.0)), 1.0, 0.0)))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id * GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, (_GLF_struct_replacement_13.subgroup_id * GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z) - 0u), max(_GLF_struct_replacement_13.subgroup_id * GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, _GLF_IDENTITY(_GLF_struct_replacement_13.subgroup_id * GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, (_GLF_struct_replacement_13.subgroup_id * GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z) | (_GLF_struct_replacement_13.subgroup_id * GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z)))) + (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid))) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid)).z, 0u | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))), ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.y + 1) % _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, 0u | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))), 1u), clamp(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, 0u | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))), 1u), uvec4(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, 0u | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))), 1u), uvec4(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z, 0u | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))), 1u)))))) >> 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid.z = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 1.0 * (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 atomicStore(buf[GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid.z], uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), (1 ^ 0)))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) >> 0)), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(0, 0 ^ (0)))))))))), 4, 64, 4);
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.w], 4, _GLF_IDENTITY(64, (64) - 0), _GLF_IDENTITY(0, (0) ^ 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.x = read_1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_IDENTITY(GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid.xy.y = GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.x, (_GLF_IDENTITY(GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid.xy.y = GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.x, (_GLF_IDENTITY(GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid.xy.y = GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.x, 0u ^ (GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid.xy.y = GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.x))) << 0u)) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.w, uint(uvec4(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.w, 0u, 1u, 0u)))], (_GLF_IDENTITY(_GLF_IDENTITY(buf[GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.w], 1u * (buf[GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.w])), (buf[GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.w]) ^ 0u)) / 1u), 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_6_1_1_13read_2subgroup_size.x = read_2;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.y + _GLF_IDENTITY(1, 0 + (1)) < GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_1subgroup_local_idsubgroup_sizevirtual_gid.z)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0, 0.0))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   atomicStore(buf[GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid.z], uint(GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid.xy.y == GLF_merged2_0_1_6_1_1_13read_2subgroup_size.x) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-4912.4535 - 1514.4400))), bool(false))), (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(61.23)), float(injectionSwitch.y), bool(true)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid.z], uint(_GLF_IDENTITY(GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid, min(GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid, GLF_merged2_0_2_43_2_1_16GLF_merged2_0_1_13_1_1_6num_workgroupread_1next_virtual_gid)).xy.y == GLF_merged2_0_1_6_1_1_13read_2subgroup_size.x) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.3) : injectionSwitch.x)) > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bool((false))))) || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), ((false)) || false))) && true))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
}
