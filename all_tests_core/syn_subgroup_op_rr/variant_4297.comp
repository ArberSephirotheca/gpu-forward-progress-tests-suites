#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_6_1_1_11read_1virtual_gid;
 uvec4 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid;
 uvec4 GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid;
 uvec4 GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1;
 uvec4 GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uvec4 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid;
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1.xyz = GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz = GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1.xyz;
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(acos(mix(vec2(1073.1504, 2.9), injectionSwitch, vec2(-0.2, 447.603)))))).y))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec3 GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base;
 GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz = GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz = _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz, uvec3(_GLF_IDENTITY(uvec4(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz, 1u)))));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)), false || (bool(bvec4(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid.xyz.x = subgroup_id;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(63031))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (0 >> _GLF_IDENTITY(int(7), int(7))) >> 0))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.x = GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid.xyz.x;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true, false))))))))
      barrier();
     break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid.xyz.y = _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.w, (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.w) | 0u)) | (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.w));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0))), injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.z = subgroup_local_id;
 for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(46764))) | 0) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) * 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.y = GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.z;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-82.90)), float(injectionSwitch.y), bool(true)))), clamp(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-82.90)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-82.90)), float(injectionSwitch.y), bool(true)))), (float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-82.90)), float(injectionSwitch.y), bool(true))))) + 0.0), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-82.90, mix(float(_GLF_IDENTITY(-82.90, min(-82.90, -82.90))), float(_GLF_FUZZED(-58.18)), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.7, 3.4)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))) & (1 & 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid.xyz.z = workgroup_size;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-690.480) : injectionSwitch.y))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0))).y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(inversesqrt(-7.7)))), 1.0, 1.0)))), sqrt(0.0), 1.0)), max(float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 1.0)), float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(vec2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 1.0)), max(_GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 1.0)), 0.0 + (float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 1.0)))), float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), 1.0 * (_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))))), sqrt(_GLF_IDENTITY(0.0, sqrt(1.0) * (0.0))), 1.0)), max(float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 1.0)), float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), abs(1.0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.z = GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid.xyz.z;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
              barrier();
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(26.27), _GLF_FUZZED(-830.200)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / cos(0.0))), bvec2(true, true))))).g) : injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(26.27), _GLF_FUZZED(-830.200)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / cos(0.0))), bvec2(true, true))))).g) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(26.27), _GLF_FUZZED(-830.200)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / cos(0.0))), bvec2(true, true))))).g) : injectionSwitch.y))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))) / uint(_GLF_ONE(1.0, injectionSwitch.y)));
 uint workgroup_base = GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.z * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), ! (! (bool(! (true)))))))))), bool(bool((_GLF_IDENTITY(true, ! (! (true))))))))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true && (bool(bvec4(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x < injectionSwitch.y)), true, false)), true && (bool(bvec4(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true && (bool(bvec4(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x < injectionSwitch.y)), true, false)), true && (bool(bvec4(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))) || false)))), _GLF_IDENTITY(bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true && (bool(bvec4(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x < injectionSwitch.y)), true, false)), true && (bool(bvec4(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))) || false)))))), bool(bvec3(bool(bool(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true && (bool(bvec4(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0), (mat3(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x < injectionSwitch.y)), true, false)), true && (bool(bvec4(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))) || false)))))), false, true))))))))))))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) + 0), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz.z = workgroup_base;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))))
        barrier();
       barrier();
      }
    }
  }
 uint virtual_gid = GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz.z + _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz, (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz) >> uvec3(0u, 0u, 0u)).x * GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid.xyz.y + GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.y;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_6_1_1_11read_1virtual_gid.y = virtual_gid;
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.w = GLF_merged2_0_1_6_1_1_11read_1virtual_gid.y, (true ? GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.w = GLF_merged2_0_1_6_1_1_11read_1virtual_gid.y : _GLF_FUZZED(num_workgroup))), ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.w = GLF_merged2_0_1_6_1_1_11read_1virtual_gid.y), _GLF_IDENTITY((~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.w = GLF_merged2_0_1_6_1_1_11read_1virtual_gid.y)) >> 0u, ((~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.w = GLF_merged2_0_1_6_1_1_11read_1virtual_gid.y)) >> 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-381.571, 8.5)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-381.571, 8.5)))).y) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz.y = GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.w;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz.z + GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.x * GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid.xyz.y, (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz.z + GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.x * GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid.xyz.y) * 1u) + (_GLF_IDENTITY((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.y + 1), _GLF_IDENTITY(uint(uvec3((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.y + 1), 1u, 0u)), ~ (~ (uint(uvec3((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.y + 1), 1u, 0u)))))) % GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid.xyz.y);
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid.w = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.w = GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid.w;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.x = GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.w;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.w = GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.x;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      continue;
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 atomicStore(buf[GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.w], uint(1), 4, _GLF_IDENTITY(64, (64) * 1), 4);
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz, (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz) | uvec3(0u, 0u, 0u)).y, (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz, (false ? _GLF_FUZZED(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz) : GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz)).y) - 0u)], 4, 64, 0);
 GLF_merged2_0_1_6_1_1_11read_1virtual_gid.x = read_1;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1.w = GLF_merged2_0_1_6_1_1_11read_1virtual_gid.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.y = GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1.w;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz.x = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.y, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.y), 0u ^ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.y))), max(_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.y), 0u ^ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.y))), _GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.y), 0u ^ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid.y))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))).y), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid)))), max((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid)))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid)))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))).y), min(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1) : GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1) : GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))), (true ? ~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1) : GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))) : _GLF_FUZZED(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid)))) * uvec4(1u, 1u, 1u, 1u))))) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y))))))), uint(uvec3((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u ^ (_GLF_FUZZED(workgroup_base))), _GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), min(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u), min((GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u), (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y))))))), 0u, 0u)))) : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))).y), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid)))), max((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid)))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid)))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))).y), min(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1) : GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1) : GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))), (true ? ~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1) : GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))) : _GLF_FUZZED(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid)))) * uvec4(1u, 1u, 1u, 1u))))) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y))))))), uint(uvec3((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u ^ (_GLF_FUZZED(workgroup_base))), _GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), min(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u), min((GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u), (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y))))))), 0u, 0u)))) : _GLF_FUZZED(workgroup_base)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))).y), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid)))), max((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid)))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid)))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))).y), min(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1) : GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1) : GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))), (true ? ~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1) : GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))) : _GLF_FUZZED(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid)))) * uvec4(1u, 1u, 1u, 1u))))) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y))))))), uint(uvec3((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u ^ (_GLF_FUZZED(workgroup_base))), _GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), min(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u), min((GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u), (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y))))))), 0u, 0u)))) : _GLF_FUZZED(workgroup_base))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))).y), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid)))), max((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid)))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid)))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))).y), min(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1) : GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1) : GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))), (true ? ~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizeread_1) : GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))) : _GLF_FUZZED(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid)))) * uvec4(1u, 1u, 1u, 1u))))) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y))))))), uint(uvec3((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u ^ (_GLF_FUZZED(workgroup_base))), _GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y), min(false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u), min((GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u), (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_6_2_1_17_3_1_11next_virtual_gidread_1subgroup_local_idvirtual_gid))))).y))))))), 0u, 0u)))) : _GLF_FUZZED(workgroup_base)))))) + 0u)));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))));
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, false), bvec3(bvec4(bvec3((! (false)), false, false), true))))))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)), ! (! (bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             else
              {
              }
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = (((((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, 0))), int(0))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1)), min(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) / 1)) * 1)), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))))) >> _GLF_IDENTITY(int(5), int(5))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(33176))) > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | (4))))), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0)))))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), 1 * (_GLF_IDENTITY((4), int(int((4)))))) << 0)))))), int(ivec2((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0)))))), 1))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0)))))), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0)))))), int(ivec3((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(26832) : 4))), int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0)))))), 1, 1))), (1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0)))))), (1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0)))))))))), clamp((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 + (4))))), (1 << _GLF_IDENTITY(int(4), int(4)))))) ^ 0) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * 1))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat2(0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), abs(1.0), exp(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0), (mat4x3(injectionSwitch, 1.0, determinant(mat2(0.0, determinant(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(4337.7216, 4.0, 7976.0475, 1.6, 9661.7481, -1106.0361, 838.700, -568.451, 0.3, 7055.3232, -35.69, 9.0, 368.920, 2265.5851, -6824.1926, 39.91)) : mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 0.0)), abs(1.0), exp(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.7) : 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0)) * mat4(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-33.51)), bvec2(true, false))).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat2(0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), abs(1.0), exp(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.7) : 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0), (mat4x3(injectionSwitch, 1.0, determinant(mat2(0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0)), abs(1.0), exp(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.7) : 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), clamp(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0))))), 0.0, 0.0), (vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), clamp(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0))))), 0.0, 0.0)) * vec3(1.0, 1.0, 1.0)), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0)) * mat4(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-33.51)), bvec2(true, false))).y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))))
        barrier();
       continue;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size, (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size) / uvec4(1u, 1u, 1u, 1u)).xyz.y], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1)) | 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.xyz.y + 1 < GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_sizenext_virtual_gid.xyz.y)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * abs(vec2(1.0, 1.0))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))) && true); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                    barrier();
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 barrier();
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0, min((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))) * 1.0)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         atomicStore(buf[GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.w], uint(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz.x == read_2) + 1, 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) | (0))))) | (0))), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-32719) : _GLF_IDENTITY(0, (0) * 1)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false))))))))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec3(0, 0, 1))), 0, 0)), ~ (~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec3(0, 0, 1))), 0, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-0.1))) > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     subgroupAll(false);
    }
   else
    {
     atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.w, ~ (~ (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_sizenext_virtual_gid.w)))], uint(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz.x == read_2, true && (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basesubgroup_size.xyz.x == read_2))) + 1, 4, 64, 4);
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(true, true, true, false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(true, true, true, false)), true, false), false)))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), ~ (~ (int(0))))) | (int(0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) << 0, ((int(0)) << 0) / 1)))), (((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), ~ (~ (int(0))))) | (int(0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) << 0, ((int(0)) << 0) / 1))))) | (((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), ~ (~ (int(0))))) | (int(0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) << 0, ((int(0)) << 0) / 1)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))) || false)) && true); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))); _injected_loop_counter ++)
      {
       subgroupAll(true);
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
          barrier();
         do
          {
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
              barrier();
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), true, false))))), bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- -25.79))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)))), false)), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), ! (! (bool(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))), true && (bool(_GLF_IDENTITY(bool(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), ! (! (bool(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, false))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), false, false))))))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), false)))) || false)), bool(bvec4((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)))), false, false))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))) || false)), true, false, false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (bool(bool(injectionSwitch.x < injectionSwitch.y))) && true)))) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (bool(bool(injectionSwitch.x < injectionSwitch.y))) && true)))) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (bool(bool(injectionSwitch.x < injectionSwitch.y))) && true)))) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true, true)), true), bvec2(bvec3(bvec2(bool(bvec3(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (bool(bool(injectionSwitch.x < injectionSwitch.y))) && true)))) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true, true)), true), true))))))))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
}
