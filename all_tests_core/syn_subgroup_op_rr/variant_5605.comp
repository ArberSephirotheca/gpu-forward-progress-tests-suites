#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-166.934)), bvec2(true, false))).y, (true ? injectionSwitch.y : _GLF_FUZZED(8200.6442)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2061.1579)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec4(-0.1, -812.147, 5.6, 5262.1831) + vec4(-3337.7883, -4458.4223, 36.17, 8.5)).pp))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), false, true, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), false, true, false))), false, true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))), false, false, false))), false, false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y), true, true, false))), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)).x) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-3.1)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bool(true))), true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, mix(float(_GLF_FUZZED(3.2)), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | (0u))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))))).x, (true ? _GLF_IDENTITY(gl_WorkGroupID, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), (false ? _GLF_FUZZED(uvec3(90427u, 189672u, 27476u)) : uvec3(2u))))) ^ (gl_WorkGroupID)).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u)))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)))).x, (true ? _GLF_IDENTITY(gl_WorkGroupID, (uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))) >> _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), (false ? _GLF_FUZZED(uvec3(90427u, 189672u, 27476u)) : uvec3(2u))))) ^ (gl_WorkGroupID)).x : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), (false ? _GLF_FUZZED(uvec3(90427u, 189672u, 27476u)) : uvec3(2u))))) ^ (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), _GLF_IDENTITY(~ (gl_WorkGroupID), min(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), _GLF_IDENTITY(~ (gl_WorkGroupID), min(~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))), ~ (gl_WorkGroupID))))))).x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(uvec3(90427u, 189672u, 27476u)) : uvec3(2u))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))), ~ (~ ((_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))))))), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))), ~ (~ ((_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID))))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))), ~ (~ ((_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))))))))), uvec3(0u, 0u, 0u) + (~ ((_GLF_IDENTITY(gl_WorkGroupID, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))), ~ (~ ((_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(~ (gl_WorkGroupID), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))))))))))))), 1u)))).x, 0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec2(61785u, 49074u)[1])))))) : _GLF_FUZZED(subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) * 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((mat2(-690.680, 6.6, -948.932, -453.177) * injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) ^ 0u) + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, 0u | (subgroup_id * subgroup_size)), ~ (~ (workgroup_base + subgroup_id * subgroup_size))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, (_GLF_IDENTITY((subgroup_id) ^ 0u, 1u * ((subgroup_id) ^ 0u))) >> 0u))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) ^ 0u)), min((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size)), 0u, 0u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, 0u + (0u)))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, min(0u, 0u)))))))) * subgroup_size)), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(uvec2((subgroup_id), 1u))) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) * 1u), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, min(_GLF_IDENTITY((subgroup_id) ^ 0u, ~ (~ ((subgroup_id) ^ 0u))), (subgroup_id) ^ 0u)))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size)), 0u, 0u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id))), (subgroup_id) ^ 0u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_FUZZED(num_workgroup)))))) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size)), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) << 0u))))) * subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) << 0u))))) * subgroup_size, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(uvec2(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) << 0u))))) * subgroup_size, 1u))))), max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) << 0u))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) << 0u)))))), uint(_GLF_IDENTITY(uvec2((false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) << 0u))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) << 0u)))))), 1u), (uvec2((false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) << 0u))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) << 0u)))))), 1u)) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u))) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u))))))))) * subgroup_size)), 0u, 0u)))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_size))) ^ _GLF_IDENTITY(0u, (0u) >> 0u))))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_id) : (subgroup_id) ^ 0u)))))))) * subgroup_size)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(0u, ~ (~ (0u)))))) | (0u))), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) | 0u))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) | 0u)))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))))) * subgroup_size)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))) << (0u | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), (true ? _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u) : _GLF_FUZZED(workgroup_size)))), 0u), (uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))) << (0u | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), (true ? _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u) : _GLF_FUZZED(workgroup_size)))), 0u)) ^ (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(6u), uvec2(6u))))), (uint(uvec2(uint(_GLF_IDENTITY(uint(0u), (true ? _GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) - 0u) : _GLF_FUZZED(workgroup_size)))), 0u))) | (uint(uvec2(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u) : _GLF_FUZZED(workgroup_size)))), 0u)))))), 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))))))))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) / 1u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u)))) : ~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u))))), max((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))))))) | 0u)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) - 0u, ~ (~ (_GLF_IDENTITY((subgroup_id) - 0u, max((subgroup_id) - 0u, (subgroup_id) - 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, max(num_workgroup, _GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup)))))) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size)), 0u, 0u), _GLF_IDENTITY(min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) >> 0u)) * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u), _GLF_FUZZED(num_workgroup))) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (0u | 0u) | (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ~ (~ (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))))))) * subgroup_size)), 0u, 0u)), (_GLF_IDENTITY(min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) >> 0u)) * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u), _GLF_FUZZED(num_workgroup))) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (0u | 0u) | (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ~ (~ (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))))))) * subgroup_size)), 0u, 0u)), (min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) >> 0u)) * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u), _GLF_FUZZED(num_workgroup))) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (0u | 0u) | (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ~ (~ (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))))))) * subgroup_size)), 0u, 0u))) | (min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) >> 0u)) * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u), _GLF_FUZZED(num_workgroup))) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (0u | 0u) | (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ~ (~ (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))))))) * subgroup_size)), 0u, 0u))))) << uvec3(0u, 0u, 0u))))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(~ (subgroup_id))), uint(uint(uint(uint(~ (subgroup_id))))))), max(_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(~ (subgroup_id))), uint(uint(uint(uint(~ (subgroup_id))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(~ (subgroup_id))), uint(uint(uint(uint(~ (subgroup_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(~ (subgroup_id))), uint(uint(uint(uint(~ (subgroup_id))))))), max(_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(~ (subgroup_id))), uint(uint(uint(uint(~ (subgroup_id))))))), _GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(~ (subgroup_id))), uint(uint(uint(uint(~ (subgroup_id)))))))))) | (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(~ (subgroup_id))), uint(uint(uint(uint(~ (subgroup_id))))))))))))), _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), (subgroup_id) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))), (true ? (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))) : _GLF_FUZZED(atomicAnd(num_workgroup, subgroup_id))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), 0u + _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size)), 0u, 0u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((subgroup_local_id))))) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, 0u | (0u)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) >> 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((subgroup_local_id))))) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, 0u | (0u))))))))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) ^ 0u), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) | 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) - 0u)))))))) * subgroup_size)), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), clamp(uint(uint((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), uint(uint((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), uint(uint((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(0u, max(0u, 0u))))))))))) * subgroup_size)), 0u, 0u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) / 1u) : _GLF_FUZZED(workgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))), (subgroup_id) ^ 0u))))), uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) / 1u) : _GLF_FUZZED(workgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))), (subgroup_id) ^ 0u))))), 1u, 1u)))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, ~ (~ (0u)))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))), (~ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)))) ^ 0u))))) ^ 0u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(26914u) : num_workgroup))) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), min(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))), 0u), uvec2(uvec4(uvec2((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))), 0u), 1u, 1u)))))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (subgroup_id) ^ 0u)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))) * subgroup_size)), 0u, 0u))))))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + subgroup_id * subgroup_size)))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) * 1))), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) ^ 0u)))), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) * 1))), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) ^ 0u)))), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))) % subgroup_size) << 0u), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) ^ 0u)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), uint(uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) | 0u)))))))), 0u | (min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) ^ 0u)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), uint(uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) | 0u))))))))))) % subgroup_size) * (1u | 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bool(bool(bvec4(false, true, true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))).y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((false) && true, ((false) && true) || false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.2), _GLF_FUZZED(556.545)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true))).x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))) || false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true, true))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))))), ! (! (! (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && _GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true), true))), true), false)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), true, true))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), true, true))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), true, true))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), 0u + _GLF_IDENTITY((subgroup_local_id), (90878u & 0u) | ((subgroup_local_id)))) + _GLF_IDENTITY(1, clamp(1, 1, 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))), false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((read_1 == read_2), true && (_GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec4(_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec2(bool(bool(read_1 == read_2)), false))), false, false, false)))))), bool(bvec3((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec2(bool(bool(read_1 == read_2)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec2(bool(bool(read_1 == read_2)), false))))), false, false, false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(607.884))) : _GLF_FUZZED(-7443.8900)))) < injectionSwitch.y)), false))), ((! (read_1 == read_2))) || false)))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((read_1 == read_2), true && (_GLF_IDENTITY((_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), ! (! ((read_1 == read_2)))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))))))), bool(bvec2(bool(bool(read_1 == read_2)), false))), false, false, false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec4(_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec2(bool(bool(read_1 == read_2)), false))), false, false, false)))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec4(_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec2(bool(bool(read_1 == read_2)), false))), false, false, false)))))), ((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec4(_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec2(bool(bool(read_1 == read_2)), false))), false, false, false))))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec4(_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec2(bool(bool(read_1 == read_2)), false))), false, false, false)))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec4(_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec2(bool(bool(read_1 == read_2)), false))), false, false, false)))))), ((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec4(_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bvec2(bool(bool(read_1 == read_2)), false))), false, false, false))))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))))), ((! (read_1 == read_2))) || false)))))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) << (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, abs(abs(0.0))), (mat2x4(injectionSwitch.y, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, abs(abs(0.0)))) * mat2(1.0))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           barrier();
          }
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, true)), ! (! (bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, true)))))), true, true, false)))))) || false, _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))) || false) && true, bool(bool(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))) || false) && true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), true, false))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), true, false))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) && true)))) + 1, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 + (64)), (false ? _GLF_FUZZED(-24465) : _GLF_IDENTITY(64, 0 + (64))))) - _GLF_IDENTITY(0, clamp(0, 0, 0))), 64))) | (64)), 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
}
