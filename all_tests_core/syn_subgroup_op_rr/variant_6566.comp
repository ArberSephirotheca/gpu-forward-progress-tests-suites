#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0), mix(vec4(_GLF_FUZZED(3802.0301), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[1], _GLF_IDENTITY(_GLF_FUZZED(7.1), clamp(_GLF_FUZZED(7.1), _GLF_FUZZED(7.1), _GLF_FUZZED(7.1))), _GLF_FUZZED(-173.864)), vec4((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[0], _GLF_FUZZED(50.83), _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0)), (false ? _GLF_FUZZED(vec4(4.7, 3.8, -7782.5412, 3286.7868)) : (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[3]), bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, true)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0), mix(vec4(_GLF_FUZZED(3802.0301), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[1], _GLF_FUZZED(7.1), _GLF_FUZZED(-173.864)), vec4((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[0], _GLF_FUZZED(50.83), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[3]), bvec4(true, false, true, true)))), vec2(mat2x4(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0), mix(vec4(_GLF_FUZZED(3802.0301), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[1], _GLF_FUZZED(7.1), _GLF_FUZZED(-173.864)), vec4((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[0], _GLF_FUZZED(50.83), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[3]), bvec4(true, false, true, true)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0), mix(vec4(_GLF_FUZZED(3802.0301), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[1], _GLF_FUZZED(7.1), _GLF_FUZZED(-173.864)), vec4((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[0], _GLF_FUZZED(50.83), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[3]), bvec4(true, false, true, true)))), vec2(mat2x4(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0), mix(vec4(_GLF_FUZZED(3802.0301), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[1], _GLF_FUZZED(7.1), _GLF_FUZZED(-173.864)), vec4((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[0], _GLF_FUZZED(50.83), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[3]), bvec4(true, false, true, true)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0), mix(vec4(_GLF_FUZZED(3802.0301), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[1], _GLF_FUZZED(7.1), _GLF_FUZZED(-173.864)), vec4((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[0], _GLF_FUZZED(50.83), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[3]), bvec4(true, false, true, true)))), vec2(mat2x4(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0), mix(vec4(_GLF_FUZZED(3802.0301), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[1], _GLF_FUZZED(7.1), _GLF_FUZZED(-173.864)), vec4((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[0], _GLF_FUZZED(50.83), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[3]), bvec4(true, false, true, true)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), min(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))[0], _GLF_FUZZED(float(64019)), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))[3]), vec4(_GLF_FUZZED(760.548), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))[1], _GLF_FUZZED(7258.9220), _GLF_FUZZED(1.9)), bvec4(false, true, false, false))))), mix(vec4(_GLF_FUZZED(3802.0301), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-36309) : 0))], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[1], _GLF_FUZZED(7.1), _GLF_FUZZED(-173.864)), vec4((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[0], _GLF_FUZZED(50.83), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[3]), bvec4(true, false, true, true)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), min(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))[0], _GLF_FUZZED(float(64019)), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))[3]), vec4(_GLF_FUZZED(760.548), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))[1], _GLF_FUZZED(7258.9220), _GLF_FUZZED(1.9)), bvec4(false, true, false, false))))), mix(vec4(_GLF_FUZZED(3802.0301), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-36309) : 0))], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[1], _GLF_FUZZED(7.1), _GLF_FUZZED(-173.864)), vec4((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[0], _GLF_FUZZED(50.83), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[3]), bvec4(true, false, true, true)))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), min(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0), mix(vec4((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))[0], _GLF_FUZZED(float(64019)), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))[3]), vec4(_GLF_FUZZED(760.548), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))[1], _GLF_FUZZED(7258.9220), _GLF_FUZZED(1.9)), bvec4(false, true, false, false))))), mix(vec4(_GLF_FUZZED(3802.0301), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-36309) : 0))], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[1], _GLF_FUZZED(7.1), _GLF_FUZZED(-173.864)), vec4((vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[0], _GLF_FUZZED(50.83), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[3]), bvec4(true, false, true, true))))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0), mix(vec4(_GLF_FUZZED(3802.0301), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), 0.0, 1.0))[1], _GLF_FUZZED(7.1), _GLF_FUZZED(-173.864)), vec4((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[0], _GLF_FUZZED(50.83), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-154.882)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), bvec2(true, true))), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[3]), bvec4(true, false, true, true)))), min(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2375.2153), mix(float(_GLF_FUZZED(-2375.2153)), float(_GLF_FUZZED(float(false))), bool(false))), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0), mix(vec4(_GLF_FUZZED(3802.0301), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[_GLF_IDENTITY(1, 0 | (1))], _GLF_FUZZED(7.1), _GLF_FUZZED(-173.864)), vec4((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[0], _GLF_FUZZED(50.83), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[3]), bvec4(true, false, true, true)))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), mix(vec2(_GLF_FUZZED((-9.5 - -4.9)), _GLF_FUZZED(860.112)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1], clamp((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1], max((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1])), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1]))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0), mix(vec4(_GLF_FUZZED(3802.0301), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))[1], _GLF_FUZZED(7.1), _GLF_FUZZED(-173.864)), vec4((vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))), vec2(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))), mix(vec2(_GLF_FUZZED(8.6), _GLF_FUZZED(-7.1)), vec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))))[0], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))))[1]), bvec2(true, true))), 1.0)))[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[0], _GLF_FUZZED(50.83), (vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), max(mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), mix(vec2(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2375.2153), (false ? _GLF_FUZZED(inversesqrt(-87.39)) : _GLF_IDENTITY(_GLF_FUZZED(-2375.2153), clamp(_GLF_FUZZED(-2375.2153), _GLF_FUZZED(-2375.2153), _GLF_FUZZED(-2375.2153))))), _GLF_FUZZED(-4804.1022)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) ^ 0)], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0))[3]), bvec4(true, false, true, true))))))))))).y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0)))))))).x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             return;
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(dot(vec2(9261.2474, 98.53), vec2(-27.21, 547.222)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          return;
         barrier();
        }
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch)).x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(6), int(int(int(6)))), 1, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(int(6), int(int(_GLF_IDENTITY(int(6), (int(6)) - 0)))), 1, 1)))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(int(int(6))), (int(int(int(6)))) | 0)), 1, 1), (ivec3(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(int(int(6))), (int(int(int(6)))) | 0)), 1, 1)) ^ ivec3(0, 0, 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(int(6), int(int(int(6)))), 1, 1))))))))), int(6))), 0 | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(6), int(int(int(6)))), 1, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(int(6), int(int(_GLF_IDENTITY(int(6), (int(6)) - 0)))), 1, 1)))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(int(int(6))), (int(int(int(6)))) | 0)), 1, 1), (ivec3(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(int(int(6))), (int(int(int(6)))) | 0)), 1, 1)) ^ ivec3(0, 0, 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(int(6), int(int(int(6)))), 1, 1))))))))), int(6))), ~ (~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(6), int(int(int(6)))), 1, 1), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(int(6), int(int(_GLF_IDENTITY(int(6), (int(6)) - 0)))), 1, 1)))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(int(int(6))), (int(int(int(6)))) | 0)), 1, 1), (ivec3(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(int(int(6))), (int(int(int(6)))) | 0)), 1, 1)) ^ ivec3(0, 0, 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(int(6), int(int(int(6)))), 1, 1))))))))), int(6)))))))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (0 << _GLF_IDENTITY(int(6), int(6))) | (_injected_loop_counter --)), (true ? _GLF_IDENTITY(_injected_loop_counter --, (0 << _GLF_IDENTITY(int(6), int(6))) | (_injected_loop_counter --)) : _GLF_FUZZED((- -54918)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                continue;
              }
             else
              {
              }
             return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(false))) || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(bool((_GLF_DEAD(false))))), (! (_GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(bool(bool((_GLF_DEAD(false)))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec2(bvec2(bool(bool((_GLF_DEAD(false)))), _GLF_IDENTITY(true, true && (true)))))))))) && true))))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
                break;
               return;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) || false), (! ((_GLF_DEAD(false)) || false)) && true)))), (! (_GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) || false), (! ((_GLF_DEAD(false)) || false)) && true))))) && true)))))
      break;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), injectionSwitch)).x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), injectionSwitch)).x > injectionSwitch.y)))) || false));
 for(int _injected_loop_counter = (int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(64.04))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(64.04))) : _GLF_FUZZED(5436.7494))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1320.2619)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (0 << _GLF_IDENTITY(int(3), int(3))) ^ (int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        continue;
       barrier();
      }
     break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.9), _GLF_FUZZED(-3961.0638)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), 0u), (true ? uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))))), (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), 0u) : _GLF_FUZZED(uvec4(172001u, 87041u, 66891u, 155850u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), 0u), (true ? uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) | uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(172001u, 87041u, 66891u, 155850u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(uvec4(172001u, 87041u, 66891u, 155850u))), (~ (_GLF_FUZZED(uvec4(172001u, 87041u, 66891u, 155850u)))) << uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), 0u), (true ? uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) | uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(172001u, 87041u, 66891u, 155850u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(uvec4(172001u, 87041u, 66891u, 155850u))), (~ (_GLF_FUZZED(uvec4(172001u, 87041u, 66891u, 155850u)))) << uvec4(0u, 0u, 0u, 0u))))))) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), 0u), (true ? uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID) | uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)))))), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(172001u, 87041u, 66891u, 155850u)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(uvec4(172001u, 87041u, 66891u, 155850u))), (~ (_GLF_FUZZED(uvec4(172001u, 87041u, 66891u, 155850u)))) << uvec4(0u, 0u, 0u, 0u))))))))))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? workgroup_id : _GLF_FUZZED(subgroup_id)))) << 0u)), uint(uvec2((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? workgroup_id : _GLF_FUZZED(subgroup_id)))) << 0u)), 0u))) >> (0u ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))), (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u)))) | (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))))) ^ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : uint(1u)), ((false ? _GLF_FUZZED(subgroup_local_id) : uint(1u))) >> 0u)))))))), max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0)), max(float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0)), float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) ? workgroup_id : _GLF_FUZZED(subgroup_id)))) << 0u)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), bvec2(bvec3(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), true))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), bvec2(bvec3(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), true))))), true, false, true)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), bvec2(bvec3(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), true))))), true, false, true))))))))) ? workgroup_id : _GLF_FUZZED(subgroup_id)))) << 0u)), 0u)), (uint(uvec2((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), bvec2(bvec3(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), true))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), bvec2(bvec3(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), true))))), true, false, true)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), bvec2(bvec3(bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, false))), true))))), true, false, true))))))))) ? workgroup_id : _GLF_FUZZED(subgroup_id)))) << 0u)), 0u))) - 0u)) >> (0u ^ (_GLF_IDENTITY(0u, (0u) | (0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))) ^ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(1u))))))))), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_size))), (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? workgroup_id : _GLF_FUZZED(subgroup_id)))) << 0u)), uint(uvec2((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) ? workgroup_id : _GLF_FUZZED(subgroup_id)))) << 0u)), 0u))) >> (0u ^ (_GLF_IDENTITY(0u, (0u) | (0u)) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))) ^ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(1u)))))))))));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0))), clamp(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (min(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), min((vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), vec2(0.0, 0.0) + (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0))))))))), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))))) * mat2(1.0))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(sqrt(vec2(1.8, 7.0))))))) * mat2(1.0))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0), (mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0)) * mat2(1.0)))))))), ((vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0), (mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0)) * mat2(1.0))))))))) / vec2(1.0, 1.0)) * mat2(1.0)))) * mat2(1.0), max((vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0)))) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(672.805)), vec2((vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[0], (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))))) + abs(vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)), dot(vec2(cos(0.0), 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)))))))))) * mat2(1.0)))), (false ? _GLF_FUZZED(vec2(8.1, 3902.9318)) : (vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(672.805)), vec2((vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[0], (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))))) + abs(vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)), dot(vec2(cos(0.0), 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)))))))))) * mat2(1.0)))))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-0.1, -53.88, -275.525, -3873.9541))))), clamp((vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(6.2, 744.786)) : min(injectionSwitch, injectionSwitch)))))))))) * mat2(1.0)))) * mat2(1.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0)))), max((vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0)))), (vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0)))))) * mat2(1.0), (vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat4(min(injectionSwitch, injectionSwitch), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), sin(0.0), 0.0, 0.0))))), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0)))) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))))))).y))));
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / 1u)))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), ((~ (subgroup_id * subgroup_size))) | (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), 0u | ((~ (subgroup_id * subgroup_size)))))), ((~ _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? (subgroup_id * subgroup_size) : _GLF_FUZZED(workgroup_size)))) / 1u))) << 0u)) >> 0u)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), (subgroup_size) | (subgroup_size)));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)) < subgroup_size)
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), (! (_GLF_DEAD(false))) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(4.9)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1979.1114) : injectionSwitch.y))) / 1.0))), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) || false))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true), false))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(32.05, -0.1)))).y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), false))), true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_FUZZED((- -0.6))), bool(false))) > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true), false))), true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))))))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (injectionSwitch.x > injectionSwitch.y), false || (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), true))) || false))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y)), true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true && (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)), true))) || false))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7995.0292) : injectionSwitch.y)), determinant(mat4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), true && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) || false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y)), true)))))))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))) && (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).x > injectionSwitch.y)), true))) || false))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) || false))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y)), true))) || false))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true && (injectionSwitch.x > injectionSwitch.y)), true))) || false))))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y)), true))) || false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) || false)))), (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))) && true))))))))), false, false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(60.70), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(652.803)), bvec2(true, false))).x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(9.9)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true)))), true && (injectionSwitch.x > injectionSwitch.y)), true))) || false))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7227.7818), _GLF_FUZZED(-6.0)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) || false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true))) || false))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) || false))))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y)), true))) || false))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) || false)))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true))) || false))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) || false))))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y)), true))) || false))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) || false)))))))))))), false, false))))))))))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
            }
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0)))) + vec2(0.0, 0.0)).y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0)) * mat2(1.0))), mix(vec2(_GLF_FUZZED(250.748), _GLF_FUZZED(-5.6)), vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0), (mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0)) * mat2(1.0))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0), (mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0)) * mat2(1.0))))[1]), bvec2(true, true)))).y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
            }
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))))).y)), float(_GLF_FUZZED(7.4)), bool(false))))))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
      }
     else
      {
      }
     subgroupAll(false);
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), false || (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
              break;
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     barrier();
                    }
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
            }
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ((0 >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) + ((0 >> _GLF_IDENTITY(int(6), int(6)))))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(37.21) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y) || false)))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), _GLF_IDENTITY(int(8), 0 ^ (int(8)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y)))))) || false)));
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(true);
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     barrier();
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
}
