#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -94.51)), _GLF_FUZZED((-502.550 + 15.22))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(false))), bool(bvec4(false || (bool(bool(false))), false, true, false)))))))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(false))), false || (_GLF_IDENTITY(false || (bool(bool(false))), ! (! (_GLF_IDENTITY(false || (bool(bool(false))), ! (! (false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), false || (bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))))))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(false))), bool(bvec4(false || (bool(bool(false))), false, true, false)))), (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) || (bool(bool(false))), bool(bvec4(false || (bool(bool(false))), false, true, false))))) || false))))))) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), true, false))))) || _GLF_IDENTITY((bool(bool(false))), bool(_GLF_IDENTITY(bool((bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(bool((bool(bool(false)))), true)), _GLF_IDENTITY(false || (bool(bvec2(bool((bool(bool(false)))), true))), (false || (bool(bvec2(bool((bool(bool(false)))), true)))) || false))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))) || (bool(bool(false))), false, true, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(false || (bool(bool(false))), false, true, false))))), true && ((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(false || (bool(bool(false))), false, true, false))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(false || (bool(bool(false))), false, true, false))))), true && ((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bvec4(false || (bool(bool(false))), false, true, false))))))), false), true, true)))))))))) && true))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false))))))), ! (! (bool(bool((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false)))))))))))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false))))))), ! (! (bool(bool((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false)))))))))))) || false)))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), true && (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), true && (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), true), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), true && (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), true && (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), true), false)))), false)))))), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true))) || (bool(bool(false)))) || false)) || false))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (bool(bool(false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)) || _GLF_IDENTITY((bool(bool(false))), ! (_GLF_IDENTITY(! ((bool(bool(false)))), true && (! ((bool(bool(false))))))))) || false))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))), ! (! (bool(bool((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false)))))))))))) || false))))) && true)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) && true)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), ((! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))) && true)) && true), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false))))))), _GLF_IDENTITY(! (! (bool(bool((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false))))))))), ! (! (! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false))))))), (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), _GLF_IDENTITY(false, true && (false)) || (bool(bool(false)))))))) || false))))))))) || false))))))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8067.6762) : injectionSwitch.x)) > injectionSwitch.y)), false))), false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))).y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), true, false, true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.9, -9.1)))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.9, -9.1)))).y), true, false, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false, false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))) || false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) / (1u | _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(subgroup_id)))), ((gl_WorkGroupID.x) / (_GLF_IDENTITY(1u | 1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((1u) | 0u, 0u), uvec2(uvec3(uvec2((1u) | 0u, 0u), 1u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((1u) | 0u, 0u), uvec2(uvec3(uvec2((1u) | 0u, 0u), 1u)))), (uint(_GLF_IDENTITY(uvec2((1u) | 0u, 0u), uvec2(uvec3(uvec2((1u) | 0u, 0u), 1u))))) | (uint(_GLF_IDENTITY(uvec2((1u) | 0u, 0u), uvec2(uvec3(uvec2((1u) | 0u, 0u), 1u)))))), 1u, 1u, 1u), ~ (~ (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((1u) | 0u, 0u), uvec2(uvec3(uvec2((1u) | 0u, 0u), 1u)))), (uint(_GLF_IDENTITY(uvec2((1u) | 0u, 0u), uvec2(uvec3(uvec2((1u) | 0u, 0u), 1u))))) | (uint(_GLF_IDENTITY(uvec2((1u) | 0u, 0u), uvec2(uvec3(uvec2((1u) | 0u, 0u), 1u)))))), 1u, 1u, 1u)))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((1u) | 0u, 0u), uvec2(uvec3(uvec2((1u) | 0u, 0u), 1u)))), (uint(_GLF_IDENTITY(uvec2((1u) | 0u, 0u), uvec2(uvec3(uvec2((1u) | 0u, 0u), 1u))))) | (uint(_GLF_IDENTITY(uvec2((1u) | 0u, 0u), uvec2(uvec3(uvec2((1u) | 0u, 0u), 1u)))))), 1u, 1u, 1u), ~ (~ (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((1u) | 0u, 0u), uvec2(uvec3(uvec2((1u) | 0u, 0u), 1u)))), (uint(_GLF_IDENTITY(uvec2((1u) | 0u, 0u), uvec2(uvec3(uvec2((1u) | 0u, 0u), 1u))))) | (uint(_GLF_IDENTITY(uvec2((1u) | 0u, 0u), uvec2(uvec3(uvec2((1u) | 0u, 0u), 1u)))))), 1u, 1u, 1u)))))))))) | 1u) | (1u | 1u)))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 1u * (uint(0u))), (uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (~ (0u)))), (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))) | 0u))))) | (uint(0u)))))))) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (true && (false)), false)), ! (_GLF_IDENTITY(! (bool(bvec2(! (true && (false)), false))), (! (bool(bvec2(! (true && (false)), false)))) || false))), false || (bool(bvec2(! (true && (false)), false))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), true)))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) + 0u), 0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) + 0u) + _GLF_IDENTITY(0u, (0u) | (0u))))) + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (0u | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) << 0u)), subgroup_id)) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), uint(uint(((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 1u))) + 1) % subgroup_size))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(807) : 1))], mix(float(_GLF_FUZZED(-2.1)), float(injectionSwitch[1]), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(-8077.0325, min(-6.7, 214.237), 2665.3251)) : injectionSwitch.x)) < injectionSwitch.y))))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(87014)))))), 4, 64, 4);
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, max(4, 4))), max(~ (_GLF_IDENTITY(4, max(4, 4))), ~ (_GLF_IDENTITY(4, max(4, 4))))))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5232.0529) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5232.0529) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), clamp((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5232.0529) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5232.0529) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5232.0529) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5232.0529) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))))))) * _GLF_ONE(1.0, injectionSwitch.y)) * 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch * -1.0)))).y, 0.0, 0.0))) : _GLF_FUZZED(6.7)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, true && (true))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, true && (true))), true)), true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, true && (true))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, true && (true))), true)), true)))))) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bool(! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(1, (1) >> 0))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), (_GLF_IDENTITY(1, int(ivec2(1, 1)))) / 1), _GLF_IDENTITY(1, int(ivec2(1, 1))))), _GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY(1, int(ivec2(1, 1)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))), _GLF_IDENTITY(((_GLF_IDENTITY(1, int(ivec2(1, 1))))) | 0, (((_GLF_IDENTITY(1, int(ivec2(1, 1))))) | 0) | (_GLF_IDENTITY(((_GLF_IDENTITY(1, int(ivec2(1, 1))))) | 0, (((_GLF_IDENTITY(1, int(ivec2(1, 1))))) | 0) | 0)))), (_GLF_IDENTITY(1, int(ivec2(1, 1)))), (_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1 & int(_GLF_ONE(1.0, injectionSwitch.y))) * (1)), 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))), (false ? _GLF_FUZZED(-93488) : (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), min(int(ivec2(1, 1)), _GLF_IDENTITY(int(ivec2(1, 1)), min(int(ivec2(1, 1)), int(ivec2(1, 1))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), min(int(ivec2(1, 1)), _GLF_IDENTITY(int(ivec2(1, 1)), min(int(ivec2(1, 1)), int(ivec2(1, 1)))))))) - (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-43652)))))))) | 0), (_GLF_IDENTITY(1, int(ivec2(1, 1)))), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(ivec2(1, 1), (ivec2(0, 0) & ivec2(12089, 1100)) ^ (ivec2(1, 1))))), (_GLF_IDENTITY(ivec2(ivec2(ivec2(1, 1))), (ivec2(_GLF_IDENTITY(ivec2(ivec2(1, 1)), clamp(_GLF_IDENTITY(ivec2(ivec2(1, 1)), (false ? _GLF_FUZZED(ivec2(-11401, 1199)) : _GLF_IDENTITY(ivec2(ivec2(1, 1)), ivec2(ivec3(ivec2(ivec2(1, 1)), 1))))), _GLF_IDENTITY(ivec2(ivec2(1, 1)), ivec2(ivec2(ivec2(ivec2(1, 1))))), _GLF_IDENTITY(ivec2(ivec2(1, 1)), max(ivec2(ivec2(1, 1)), ivec2(ivec2(1, 1)))))))) << ivec2(0, 0))) | ivec2(0, 0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), int(ivec2(1, 1)))), (false ? _GLF_FUZZED(-93488) : (_GLF_IDENTITY(1, int(ivec2(1, 1)))))))) : _GLF_FUZZED(65457)))), 4, _GLF_IDENTITY(64, (64) + 0), 4);
   subgroupAll(_GLF_IDENTITY(false, false || (false)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), cos(abs(vec2(0.0, 0.0))) * (mat2(1.0) * (injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0))))), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), cos(abs(vec2(0.0, 0.0))) * (mat2(1.0) * (injectionSwitch)))))) - vec2(0.0, 0.0))).x > injectionSwitch.y))) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), cos(abs(vec2(0.0, 0.0))) * (mat2(1.0) * (injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0))))), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), cos(abs(vec2(0.0, 0.0))) * (mat2(1.0) * (injectionSwitch)))))) - vec2(0.0, 0.0))).x > injectionSwitch.y))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), sqrt(determinant(mat2(1.0, 1.0, 0.0, 1.0))), 1.0)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.9)), bool(false))))))), bool(bvec4(_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), sqrt(determinant(mat2(1.0, 1.0, 0.0, 1.0))), 1.0)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.9)), bool(false))))))), true && (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), sqrt(determinant(mat2(1.0, 1.0, 0.0, 1.0))), 1.0)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.9)), bool(false))))))), bool(bvec2(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), sqrt(determinant(mat2(1.0, 1.0, 0.0, 1.0))), 1.0)))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.9)), bool(false))))))), false))))), false, true, true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), false, false, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(64, max(64, 64))) / 1), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, false)))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(normalize(mix(injectionSwitch, vec2(-28.86, -918.298), bvec2(false, true)))) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 1.0, _GLF_IDENTITY(0.0, (0.0) + tan(0.0)))))) / 1.0))).x > injectionSwitch.y)) || false)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
}
