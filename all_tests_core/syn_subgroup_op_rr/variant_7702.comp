#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (vec4(injectionSwitch, 0.0, 1.0)) - log(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-72.68) : 1.0)), 1.0, 1.0, 1.0))))).x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])))[0], _GLF_FUZZED(-96.79)), vec2(_GLF_FUZZED(94.25), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])))[1]), bvec2(false, true))), injectionSwitch)))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), false || ((false)))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, mix(float(_GLF_FUZZED(-61.80)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.80)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0)) * mat4(1.0), max((vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.80)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0)) * mat4(1.0), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.80)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.80)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.80)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.80)), float(injectionSwitch.y), bool(true))))), 1.0, 0.0, 0.0)) * mat4(1.0))))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.80)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0), _GLF_IDENTITY((vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.80)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0)) * mat4(1.0), max((vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.80)), float(injectionSwitch.y), bool(true))), 1.0, 0.0, 0.0)) * mat4(1.0), (vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-61.80)), float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), bool(true))), 1.0, 0.0, 0.0)) * mat4(1.0)))))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.4, 3.0)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), min(vec2(mat4(injectionSwitch, 0.0, sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) || false, bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), mat3x2(mat3x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), (true ? mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat3x2(17.12, -6.0, -64.33, -980.985, 0.7, -500.086))))))))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0]) / 1.0), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), vec2(_GLF_FUZZED(4.8), _GLF_FUZZED(-855.239)), bvec2(false, false)))) + vec2(0.0, 0.0)).y) || false, false, true, true))))))))))))) || _GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat4(injectionSwitch, 0.0, sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) || false, bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) || false, false, true, true)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) || false, bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) || false, false, true, true))))))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) || false, bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) || false, false, true, true)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))) : _GLF_FUZZED(injectionSwitch))).y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bool(true))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))).y) || false, bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) || false, false, true, true)))))))))))))))) && true)) || _GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.7), _GLF_FUZZED(-14.87)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.7), _GLF_FUZZED(-14.87)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)), _GLF_ONE(1.0, injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.7), _GLF_FUZZED(-14.87)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat2x3(min(injectionSwitch, injectionSwitch), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, sqrt(0.0))))).x > injectionSwitch.y)) || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, false || (false))))), ! (! ((! (! (false))))))), ! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, false || (false))))), ! (! ((! (! (false))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && _GLF_IDENTITY((! (false)), true && ((! (false)))), (true && (! (false))) || false)), ! (! (! (false)))))), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec4(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || (_GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))))), false, false, false))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), true && ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bool((! ((false))))))))), bool(bvec4((! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bool(_GLF_IDENTITY((! ((false))), (_GLF_IDENTITY((! ((false))), bool(bvec3((! ((false))), false, true)))) && _GLF_IDENTITY(true, false || (true))))))))), true, true, true))))))))))) || false, ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), ! (! (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))))))))), (! (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))) && true)) && true), true, true))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (false))))) || false), bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))), ! _GLF_IDENTITY((! ((false))), bool(bool((! ((false))))))))), bool(bvec4((! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bool((! ((_GLF_IDENTITY(false, (false) && true)))))))))), true, true, true))))), true && ((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bool((! ((false))))))), true && (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bool((! ((false))))))))))), bool(bvec4((! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))))), bool(bool((! ((_GLF_IDENTITY(false, (false) && true)))))))))), true, true, true)))))))))), ((! (bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))), ! _GLF_IDENTITY((! ((false))), bool(bool((! ((false))))))))), bool(bvec4((! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bool((! ((_GLF_IDENTITY(false, (false) && true)))))))))), true, true, true))))), true && ((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bool((! ((false))))))), true && (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bool((! ((false))))))))))), bool(bvec4((! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))))))))), bool(bool((! ((_GLF_IDENTITY(false, (false) && true)))))))))), true, true, true))))))))))) || false)))) || false) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.1), _GLF_FUZZED(247.938)), bvec2(false, false))), injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.5) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(552.506))))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0)), (vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0))) - sin(vec2(0.0, 0.0)))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size) | 0u) + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, 0u | (0u)) ^ (subgroup_local_id))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))) || false), (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false, true), false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base)) + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size)), (false ? _GLF_FUZZED((subgroup_size & virtual_gid)) : ~ (~ (workgroup_base + subgroup_id * subgroup_size))))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), false)), ! (_GLF_IDENTITY(! (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), false))), bool(bvec2(! (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), false))), true)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(29316))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.5) : injectionSwitch.x)))), (injectionSwitch.x) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), (min(subgroup_local_id + 1, subgroup_local_id + 1)) / 1u)) < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)) && true, _GLF_IDENTITY(bool(bvec3((! (subgroup_local_id + 1 < subgroup_size)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec3((! (subgroup_local_id + 1 < subgroup_size)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), subgroup_local_id + 1)) < subgroup_size, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (62630u & 0u) ^ (subgroup_size))) | 0u)), (! (subgroup_local_id + 1 < subgroup_size)) && true)), (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (! (subgroup_local_id + 1 < subgroup_size)) && true))) && true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true))) && true))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (! (subgroup_local_id + 1 < subgroup_size)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (! (subgroup_local_id + 1 < subgroup_size)) && true)), (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_size) | 0u)), (! (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)) && true))) && true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true))) && true)))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size, ! _GLF_IDENTITY((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true))))) && true))))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), (min(subgroup_local_id + 1, subgroup_local_id + 1)) / 1u)) < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) < subgroup_size)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec3((! (subgroup_local_id + 1 < subgroup_size)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 1u, (0u | 1u)), uvec3(0u, 0u, 0u) | (uvec3(0u, 1u, (_GLF_IDENTITY(0u | 1u, (0u | 1u) ^ 0u)))))), clamp(uint(_GLF_IDENTITY(uvec3(0u, 1u, (0u | 1u)), uvec3(0u, 0u, 0u) | (uvec3(0u, 1u, (0u | 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 1u, (0u | 1u)), uvec3(0u, 0u, 0u) | (uvec3(0u, 1u, (0u | 1u))))), min(uint(_GLF_IDENTITY(uvec3(0u, 1u, (0u | 1u)), uvec3(0u, 0u, 0u) | (uvec3(0u, 1u, (0u | 1u))))), uint(_GLF_IDENTITY(uvec3(0u, 1u, (0u | 1u)), uvec3(0u, 0u, 0u) | (uvec3(0u, 1u, (0u | 1u))))))), uint(_GLF_IDENTITY(uvec3(0u, 1u, (0u | 1u)), uvec3(0u, 0u, 0u) | (uvec3(0u, 1u, (0u | 1u)))))))))), _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)), ((! (subgroup_local_id + 1 < subgroup_size))) && true) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, max((subgroup_size) | 0u, (subgroup_size) | 0u)))), (! (subgroup_local_id + 1 < subgroup_size)) && true)), (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (! (subgroup_local_id + 1 < subgroup_size)) && true))) && true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true))) && true))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)), true)))))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(bool(bvec4(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), true, true, false)), ! (! (bool(bvec4(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), true, true, false))))))), (! (subgroup_local_id + 1 < subgroup_size)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (! (subgroup_local_id + 1 < subgroup_size)) && true)), (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_size) | 0u)), (! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) && true))) && true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true))) && true)))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size, ! _GLF_IDENTITY((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true), true && (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY((! (subgroup_local_id + 1 < subgroup_size)) && true, _GLF_IDENTITY(bool(bool((! (subgroup_local_id + 1 < subgroup_size)) && true)), ! (! (bool(bool((! (subgroup_local_id + 1 < subgroup_size)) && true)))))))))) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1 < subgroup_size), (! (subgroup_local_id + 1 < subgroup_size)) && true))))) && true))))))) && true)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec3(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true), true, true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, ~ (~ (read_1)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, ~ (~ (read_1)))))), (_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, ~ (~ (read_1))))))) << 0u), _GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, ~ (~ (read_1)))))))) == read_2) + _GLF_IDENTITY(1, (1) | (1)), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) << 0));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), clamp(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))))), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true, true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (_GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), uint(read_1 == read_2))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-2718.1279)), float(injectionSwitch.x), bool(true)), clamp(mix(float(_GLF_FUZZED(-2718.1279)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-2718.1279)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-2718.1279)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.8), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(0.7)), float((injectionSwitch)[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(-62.94)), bvec2(true, false)))[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(_GLF_IDENTITY(9508.9194, min(_GLF_IDENTITY(9508.9194, (9508.9194) - 0.0), _GLF_IDENTITY(9508.9194, min(9508.9194, 9508.9194)))))), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0))))).y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_FUZZED(9508.9194), (true ? _GLF_FUZZED(9508.9194) : _GLF_FUZZED(_GLF_IDENTITY(acosh(503.268), max(acosh(503.268), acosh(503.268))))))), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0))))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_FUZZED(9508.9194), (true ? _GLF_FUZZED(9508.9194) : _GLF_FUZZED(_GLF_IDENTITY(acosh(503.268), max(acosh(503.268), acosh(503.268))))))), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0))))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_FUZZED(9508.9194), (true ? _GLF_FUZZED(9508.9194) : _GLF_FUZZED(_GLF_IDENTITY(acosh(503.268), max(acosh(503.268), acosh(503.268))))))), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0))))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_FUZZED(9508.9194), (true ? _GLF_FUZZED(9508.9194) : _GLF_FUZZED(_GLF_IDENTITY(acosh(503.268), max(acosh(503.268), acosh(503.268))))))), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0))))).y)), false, false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[1]), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[1]), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[1]), bool(true))), _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[1]), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false)))))), (false ? _GLF_FUZZED(123.864) : mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[1]), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), bool(bvec2(bool(true), false))))))))))), 1.0, 0.0, cos(0.0), 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(9508.9194)), float(vec2(_GLF_IDENTITY(float(_GLF_FUZZED(9508.9194)), clamp(float(_GLF_FUZZED(9508.9194)), float(_GLF_FUZZED(9508.9194)), float(_GLF_FUZZED(9508.9194)))), 0.0))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0)), (_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(9508.9194)), float(vec2(_GLF_IDENTITY(float(_GLF_FUZZED(9508.9194)), clamp(float(_GLF_FUZZED(9508.9194)), float(_GLF_FUZZED(9508.9194)), _GLF_IDENTITY(float(_GLF_FUZZED(9508.9194)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(float(_GLF_FUZZED(9508.9194)), clamp(float(_GLF_FUZZED(9508.9194)), float(_GLF_FUZZED(9508.9194)), _GLF_IDENTITY(float(_GLF_FUZZED(9508.9194)), max(float(_GLF_FUZZED(9508.9194)), float(_GLF_FUZZED(9508.9194)))))), 1.0, 0.0, 1.0, 1.0, 0.0), mat2x3(mat3(mat2x3(_GLF_IDENTITY(float(_GLF_FUZZED(9508.9194)), clamp(float(_GLF_FUZZED(9508.9194)), float(_GLF_FUZZED(9508.9194)), _GLF_IDENTITY(float(_GLF_FUZZED(9508.9194)), max(float(_GLF_FUZZED(9508.9194)), float(_GLF_FUZZED(9508.9194)))))), 1.0, 0.0, 1.0, 1.0, 0.0)))))))), 0.0))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0)), (float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(9508.9194)), float(vec2(_GLF_IDENTITY(float(_GLF_FUZZED(9508.9194)), clamp(float(_GLF_FUZZED(9508.9194)), float(_GLF_FUZZED(9508.9194)), float(_GLF_FUZZED(9508.9194)))), 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))[1]), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))[1]), max(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))[1]), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))[1]))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))[1]), max(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))[1]), float(mat3x4(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))[1]), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0))) - 0.0)) * 1.0))))) / sqrt(vec2(1.0, 1.0))).y)), _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / exp(vec2(0.0, 0.0)), mix(vec2(((injectionSwitch) / exp(vec2(0.0, 0.0)))[0], ((injectionSwitch) / exp(vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(19.06)), bvec2(false, false)))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), min(_GLF_IDENTITY(exp(vec2(0.0, 0.0)), mix(vec2((exp(vec2(0.0, 0.0)))[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-7.1), (exp(vec2(0.0, 0.0)))[1]), bvec2(false, true))), exp(vec2(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))))).y)), true)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) | (_GLF_IDENTITY(0, (0) << 0)))) * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), int(4))))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-62.94)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), false)), false, false)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.8, mix(float(_GLF_FUZZED(4.1)), float(-5.8), bool(true)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-62.94)), bvec2(true, false))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-62.94)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))), (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.8, mix(float(_GLF_FUZZED(float(18346u))), float(-5.8), bool(true)))), (injectionSwitch)[1]), mix(vec2((_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.8, mix(float(_GLF_FUZZED(float(18346u))), float(-5.8), bool(true)))), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.8, mix(float(_GLF_FUZZED(float(18346u))), float(-5.8), bool(true)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.8, mix(float(_GLF_FUZZED(float(18346u))), float(-5.8), bool(true)))), (injectionSwitch)[1]))))[0], (vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-5.8, clamp(-5.8, -5.8, _GLF_IDENTITY(-5.8, max(-5.8, -5.8)))), mix(float(_GLF_FUZZED(float(18346u))), float(-5.8), bool(true)))), (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(vec3(-730.752, -0.9, -8509.5656).t), _GLF_FUZZED(-894.965)), bvec2(false, false))), vec2((injectionSwitch)[0], _GLF_FUZZED(-62.94)), bvec2(_GLF_IDENTITY(true, true && (true)), false)))) * vec2(1.0, 1.0)))) : _GLF_FUZZED(injectionSwitch)))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0)], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(9508.9194)), mix(float(float(_GLF_FUZZED(9508.9194))), float(_GLF_FUZZED(929.108)), bool(false))), float(injectionSwitch[1]), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(1.0), bool(true))), 0.0, cos(0.0), 1.0, 1.0))))).y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0)))), (injectionSwitch[1]) + 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(9508.9194, clamp(9508.9194, 9508.9194, 9508.9194)))), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0)))), mix(vec2((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0)))), (injectionSwitch[1]) + 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(9508.9194, clamp(9508.9194, 9508.9194, 9508.9194)))), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0)))))[0], (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0)))), (injectionSwitch[1]) + 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(9508.9194, clamp(9508.9194, 9508.9194, 9508.9194)))), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0)))))[1]), vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(float((30139u >> 118599u)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))).y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(2.4)), max(float(_GLF_FUZZED(2.4)), _GLF_IDENTITY(float(_GLF_FUZZED(2.4)), max(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(2.4)))))), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(true))))), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0)))) / abs(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.3) : 1.0)), 1.0)) : _GLF_FUZZED(3.5))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(_GLF_IDENTITY(9508.9194, exp(0.0) * (9508.9194)))), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0)))))))) / sqrt(vec2(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))))).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0)))) / abs(1.0))), (vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0)))) / abs(1.0)))) / vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[1]), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0)))))) / sqrt(vec2(1.0, 1.0))).y) || false))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 1.0), mix(vec3(_GLF_FUZZED(7920.9731), _GLF_FUZZED(87.07), (vec3(injectionSwitch.x, 0.0, 1.0))[2]), vec3((vec3(injectionSwitch.x, 0.0, 1.0))[0], (_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 1.0), clamp(vec3(injectionSwitch.x, 0.0, 1.0), vec3(injectionSwitch.x, 0.0, 1.0), _GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 1.0), max(vec3(injectionSwitch.x, 0.0, 1.0), vec3(injectionSwitch.x, 0.0, 1.0))))))[1], _GLF_FUZZED(-6.5)), bvec3(true, true, false))), vec3(injectionSwitch.x, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2956.4292))) : _GLF_FUZZED(7.1))), 1.0), (vec3(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2956.4292))) : _GLF_FUZZED(7.1))), 1.0)) * vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (true ? vec3(injectionSwitch.x, 0.0, 1.0) : _GLF_FUZZED(vec3(-82.32, -530.988, -36.89)))))))) < injectionSwitch.y)), true))))))) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), _GLF_IDENTITY(float(injectionSwitch[1]), (float(injectionSwitch[1])) / 1.0), bool(true))), 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(8524.6323)), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(float(_GLF_FUZZED(8524.6323)), (_GLF_IDENTITY(float(_GLF_FUZZED(8524.6323)), _GLF_IDENTITY((float(_GLF_FUZZED(8524.6323))) / 1.0, (_GLF_IDENTITY((float(_GLF_FUZZED(8524.6323))), min((float(_GLF_FUZZED(8524.6323))), (float(_GLF_FUZZED(8524.6323))))) / 1.0) / 1.0))) - length(vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), (float(mat4x3(_GLF_IDENTITY(float(_GLF_FUZZED(8524.6323)), (_GLF_IDENTITY(float(_GLF_FUZZED(8524.6323)), (float(_GLF_FUZZED(8524.6323))) / 1.0)) - length(vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))))) * 1.0)), _GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(float(1.0), float(mat4(float(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(917.768))))), 1.0, abs(1.0), 1.0, 0.0, abs(0.0), 1.0, exp(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0)), mix(float(_GLF_FUZZED(0.7)), float(float(mat4(_GLF_IDENTITY(float(1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(float(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, length(vec2(0.0, 0.0)), 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, length(vec2(0.0, 0.0)), 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0), mat3(mat3(mat3(1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, length(vec2(0.0, 0.0)), 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, length(vec2(0.0, 0.0)), 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)))))), 1.0, 1.0), (mat4(float(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), mat4(1.0) * (_GLF_IDENTITY(mat4(float(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4(float(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) - mat4(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.5) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-90.04) : 0.0))) - length(vec2(0.0, 0.0))), min(0.0, 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + sin(0.0)))), 1.0, abs(1.0), 1.0, 0.0, abs(0.0), 1.0, exp(0.0), 1.0, 0.0))), bool(true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bool(bvec3(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), 1.0)), (false ? _GLF_FUZZED(-6.0) : float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), _GLF_IDENTITY(float(injectionSwitch[1]), (float(injectionSwitch[1])) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9333.8888)), float(1.0), bool(true)))), bool(true))), 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8524.6323)), _GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(float(1.0), float(mat4(float(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(32.53)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.5) : 0.0))), bool(true))), 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(1.0), 1.0, 0.0, abs(0.0), 1.0, exp(0.0), 1.0, 0.0)), mix(float(_GLF_FUZZED(0.7)), float(float(mat4(_GLF_IDENTITY(float(1.0), float(_GLF_IDENTITY(mat4(float(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5248.2924))), 1.0, 1.0, 1.0), (mat4(float(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.9)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(1.0), 1.0, 0.0, abs(0.0), 1.0, exp(0.0), 1.0, 0.0))), bool(true)))), _GLF_IDENTITY(bool(true), bool(bvec3(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), 1.0))))))).y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), float(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))]), bool(true))), 1.0, 0.0, _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), (cos(0.0)) * 1.0), cos(0.0))), 1.0, 1.0)))), min(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (0 | 0) | (1)))))) >> 0) >> _GLF_IDENTITY(int(1), int(1))))], (injectionSwitch[_GLF_IDENTITY(0, (0) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1)))) >> 0) >> _GLF_IDENTITY(int(1), int(1))))]) + log(1.0)), _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_FUZZED(9508.9194), clamp(_GLF_FUZZED(9508.9194), _GLF_IDENTITY(_GLF_FUZZED(9508.9194), min(_GLF_FUZZED(9508.9194), _GLF_FUZZED(9508.9194))), _GLF_FUZZED(9508.9194)))), float(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (false ? _GLF_FUZZED(-61863) : max(1, 1))), max(1, 1), max(1, 1))), max(1, 1), max(1, 1))))))]), bool(true))), 1.0, 0.0, _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), (cos(0.0)) * 1.0), cos(0.0))), 1.0, 1.0)))), vec2(injectionSwitch[_GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(7), int(7))))))))], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 1 * _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), int(int(_GLF_IDENTITY((1), min((1), (1)))))) : _GLF_FUZZED(43163))))], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(9508.9194)), mix(float(float(_GLF_FUZZED(9508.9194))), float(_GLF_FUZZED(_GLF_IDENTITY(float(true), clamp(float(true), float(true), float(true))))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))]), bool(true))), 1.0, 0.0, _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), (cos(0.0)) * 1.0), _GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), cos(0.0)))) - 0.0))), 1.0, 1.0))))))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), (_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), min(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0))))) + vec2(0.0, 0.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0)) * (1.0)))))), clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))[0], float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), 0.0, 1.0)), clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0))), 0.0, 1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), max(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0), (true ? vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0) : _GLF_FUZZED(vec4(-34.04, 7843.0544, 80.54, -788.117))))))))[0]) * 1.0), 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), min(injectionSwitch, injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), 1.0, 0.0))), 0.0, 1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)))))[0]) * 1.0), 1.0, 1.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0))), 0.0, 1.0)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(692.566)), vec2(_GLF_FUZZED(-64.63), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-2.5)))), bvec2(false, true))), injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))), (false ? _GLF_FUZZED(-960.178) : (_GLF_IDENTITY(1.0, 1.0 * (1.0))))) - 0.0))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0)))))[0]) * 1.0), 1.0, 1.0, 0.0)))))))), _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(9508.9194)), float(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.6)), float(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-1192.9936)))), bool(true)))), bool(true))), 1.0, 0.0, cos(0.0), 1.0, 1.0))))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).y)) && true)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).y)) && true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
}
