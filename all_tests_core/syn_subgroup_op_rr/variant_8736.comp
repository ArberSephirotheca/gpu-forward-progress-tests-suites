#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 mat3x2 _f0;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 float _f1;
 mat3 _f2;
 uint _f3;
 uvec3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 mat2 _f1;
 mat3x4 _f2;
 mat4x2 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
} ;

struct _GLF_struct_1 {
 uint _f0;
 uvec2 _f1;
 bvec2 _f2;
 mat3x4 _f3;
 mat4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 ivec3 _f1;
 vec2 _f2;
 ivec4 _f3;
 float _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 float _f4;
 uint num_workgroup;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), false))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), false))))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), false))))), false), false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (false))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (false))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true), true && (_GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true))))))) && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))) || false))), (_GLF_DEAD(false)) || false)) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && _GLF_IDENTITY(true, (true) || false)), (_GLF_DEAD(false)) || false)) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && _GLF_IDENTITY(true, (true) || false)), (_GLF_DEAD(false)) || false)) && true)), true, false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && _GLF_IDENTITY(true, (true) || false)), (_GLF_DEAD(false)) || false)) && true)), true, false, false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_2(_GLF_struct_0(mat3(1.0), ivec3(1), _GLF_IDENTITY(vec2(1.0), (true ? vec2(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))) : _GLF_FUZZED(vec2(422.317, 8.3)))), ivec4(1), 1.0), _GLF_struct_1(1u, _GLF_IDENTITY(uvec2(1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(84269u, 167639u)), (_GLF_FUZZED(uvec2(84269u, 167639u))) ^ uvec2(0u, 0u)) : uvec2(1u))), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), mat3x4(1.0), mat4(1.0), ivec2(1)), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), ~ (~ ((_GLF_IDENTITY(1, min(1, 1)))))) + 0)) >> 0), 0 ^ (1))) / 1))), _GLF_struct_3(vec4(1.0)), _GLF_struct_7(_GLF_struct_4(vec2(1.0), 1.0, mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1052.6111)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))), (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1052.6111)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))) : _GLF_FUZZED(3091.2567)))), _GLF_IDENTITY(1u, (1u) / 1u), uvec3(1u), ivec2(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(ivec2(1, (0 ^ 1)))))))), mat2(1.0), mat3x4(1.0), mat4x2(1.0), _GLF_struct_5(ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(47155)))), mat3x2(1.0)), _GLF_struct_6(mat2x4(1.0)), mat4(1.0)), _GLF_struct_8(mat3x2(1.0)), 1.0, gl_NumWorkGroups.x);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((gl_WorkGroupID.x), 0u ^ ((gl_WorkGroupID.x))), clamp(0u ^ (gl_WorkGroupID.x), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x), clamp(0u ^ (gl_WorkGroupID.x), 0u ^ (gl_WorkGroupID.x), 0u ^ (gl_WorkGroupID.x))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (gl_WorkGroupID.x), 0u ^ (0u ^ (gl_WorkGroupID.x))), (_GLF_IDENTITY(0u ^ (gl_WorkGroupID.x), 0u ^ (0u ^ (gl_WorkGroupID.x)))) - 0u)))), min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) * (0u | 1u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base)), (_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base))) << 0u) + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base)) + subgroup_id * subgroup_size), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base)) >> 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)))) + (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + (workgroup_base)))))) + subgroup_id * subgroup_size)) ^ 0u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((subgroup_local_id + 1)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((subgroup_local_id + 1)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((subgroup_local_id + 1))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(0u, uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u)), (0u) + 0u)) | (0u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (uvec2(0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u))) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u)))))), 0u)), (0u) + 0u)) | (0u)) | ((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) * 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(0u, uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u)), (0u) + 0u)) | (0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-41.25))), 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(846.602)), bool(false))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) * ((subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-41.25))), 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(846.602)), bool(false))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) * ((subgroup_local_id + 1)))) >> 0u), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(packSnorm4x8(vec4(-634.440, 7.2, -3.7, 53.84))) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-41.25))), 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(-52.95)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))), float(_GLF_FUZZED(846.602)), bool(false))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) * ((subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-41.25))), 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(846.602)), bool(false))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) * ((subgroup_local_id + 1)))) >> 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3744.3307)), bool(false))))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x))) >> 0u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x))))) - 0u) ^ (uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3744.3307)), bool(false))), min(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-3744.3307)), mix(float(_GLF_FUZZED((- -831.535))), float(_GLF_IDENTITY(float(_GLF_FUZZED(-3744.3307)), float(mat3x4(float(_GLF_FUZZED(-3744.3307)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)))), bool(true))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-3744.3307, clamp(-3744.3307, _GLF_IDENTITY(-3744.3307, (-3744.3307) / determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), -3744.3307)))), bool(false))))))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), (true ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) ^ 0)) >> 0)], injectionSwitch[0])), injectionSwitch[1])).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)), clamp(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(1843.9048) : injectionSwitch[0])), injectionSwitch[1])), injectionSwitch))[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x))) >> 0u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x))))) - 0u) ^ (uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3744.3307)), bool(false))), min(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-3744.3307)), mix(float(_GLF_FUZZED((- -831.535))), float(_GLF_IDENTITY(float(_GLF_FUZZED(-3744.3307)), float(mat3x4(float(_GLF_FUZZED(-3744.3307)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)))), bool(true))), min(_GLF_IDENTITY(float(_GLF_FUZZED(-3744.3307)), mix(float(_GLF_FUZZED((- -831.535))), float(_GLF_IDENTITY(float(_GLF_FUZZED(-3744.3307)), float(mat3x4(float(_GLF_FUZZED(-3744.3307)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)))), bool(true))), _GLF_IDENTITY(float(_GLF_FUZZED(-3744.3307)), mix(float(_GLF_FUZZED((- -831.535))), float(_GLF_IDENTITY(float(_GLF_FUZZED(-3744.3307)), float(mat3x4(float(_GLF_FUZZED(-3744.3307)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0)))), bool(true))))), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-18.68) : 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(-3744.3307, clamp(-3744.3307, _GLF_IDENTITY(_GLF_IDENTITY(-3744.3307, mix(float(_GLF_FUZZED(-5547.7180)), float(-3744.3307), bool(true))), (-3744.3307) / determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), -3744.3307)))), bool(false))))))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) : _GLF_FUZZED((23170u))))) * ((subgroup_local_id + 1)))), (true ? (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + 1), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3744.3307)), bool(false))))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3744.3307)), bool(false))), min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-3744.3307), float(_GLF_IDENTITY(mat3x4(_GLF_FUZZED(-3744.3307), 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x4(mat4(mat3x4(_GLF_FUZZED(-3744.3307), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3744.3307)), bool(false))))))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))) * ((subgroup_local_id + 1)))) : _GLF_FUZZED(_GLF_IDENTITY(18600u, ~ (~ (18600u)))))), (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / 1.0)), (false ? _GLF_FUZZED(vec4(-2.5, 0.5, 5577.0899, 4.1)[0]) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(419.850)), float(1.0), bool(true)))) + log(1.0)), 1.0, 1.0)), (false ? _GLF_FUZZED(-231.501) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(419.850)), float(1.0), bool(true)))) + log(1.0)), 1.0, 1.0), max(clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(419.850)), float(1.0), bool(true)))) + log(1.0)), 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(419.850)), float(1.0), bool(true)))) + log(1.0)), 1.0, 1.0)))), mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(419.850)), float(1.0), bool(true)))) + log(1.0)), 1.0, 1.0), max(clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(419.850)), float(1.0), bool(true)))) + log(1.0)), 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(419.850)), float(1.0), bool(true)))) + log(1.0)), 1.0, 1.0))))), float(_GLF_FUZZED(823.471)), bool(false))))), min(1.0, 1.0)) : _GLF_FUZZED(616.859))))))), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6297.1366) : _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4090.0414)), float(1.0), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(true && (bool(true)), (true && (bool(true))) && true))))), float(_GLF_FUZZED(-37.85)), bool(false)))))) * (injectionSwitch)).y)) * ((subgroup_local_id + 1))))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)], uint(1), 4, _GLF_IDENTITY(64, (64) + 0), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), 0 ^ (_GLF_IDENTITY(min(0, 0), (false ? _GLF_FUZZED(61799) : min(0, 0))))))), 0 | ((_GLF_IDENTITY(0, min(0, 0)))))) | ((_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) * 1))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), 0 | ((_GLF_IDENTITY(0, min(0, 0)))))) | ((_GLF_IDENTITY(0, min(0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), 0 | ((_GLF_IDENTITY(0, min(0, 0)))))) | ((_GLF_IDENTITY(0, min(0, 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), 0 | ((_GLF_IDENTITY(0, min(0, 0)))))) | ((_GLF_IDENTITY(0, min(0, 0)))))) ^ 0)) << 0) : _GLF_FUZZED(75889), ~ (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), 0 | ((_GLF_IDENTITY(0, min(0, 0)))))) | ((_GLF_IDENTITY(0, min(0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), 0 | ((_GLF_IDENTITY(0, min(0, 0)))))) | ((_GLF_IDENTITY(0, min(0, 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), 0 | ((_GLF_IDENTITY(0, min(0, 0)))))) | ((_GLF_IDENTITY(0, min(0, 0)))))) ^ 0)) << 0) : _GLF_FUZZED(75889)))))) - 0)) >> ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), 0 | (_GLF_IDENTITY(int(0), int(0))))) << _GLF_IDENTITY(int(5), int(5)))));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(atomicCompSwap(read_2, subgroup_local_id, read_2)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicCompSwap(read_2, subgroup_local_id, read_2), (atomicCompSwap(read_2, subgroup_local_id, read_2)) ^ 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id) - 0u)))), (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(atomicCompSwap(read_2, subgroup_local_id, read_2)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) - 0u))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), (_GLF_IDENTITY(min(read_2, read_2), (_GLF_IDENTITY(min(read_2, read_2), 1u * (min(read_2, read_2)))) / 1u)) * 1u))) * 1u), true && (read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) + 0u), min(read_2, read_2))) * 1u)))), 0u ^ (uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), (_GLF_IDENTITY(min(read_2, read_2), (_GLF_IDENTITY(min(read_2, read_2), 1u * (min(read_2, read_2)))) / 1u)) * 1u))) * 1u), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (read_2) + 0u), read_2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) + 0u), min(read_2, read_2))) * 1u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) + 0u), min(read_2, read_2))) * 1u, uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) + 0u), min(read_2, read_2))) * 1u, 0u, 1u, 1u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) + 0u), min(read_2, read_2))) * 1u)))))))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), (_GLF_IDENTITY(min(read_2, read_2), (_GLF_IDENTITY(min(read_2, read_2), 1u * (min(read_2, read_2)))) / 1u)) * 1u))) * 1u), true && (read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) + 0u), min(read_2, read_2))) * 1u)))), 0u ^ (uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), (_GLF_IDENTITY(min(read_2, read_2), (_GLF_IDENTITY(min(read_2, read_2), 1u * (min(read_2, read_2)))) / 1u)) * 1u))) * 1u), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (read_2) + 0u), read_2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) + 0u), min(read_2, read_2))) * 1u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) + 0u), min(read_2, read_2))) * 1u, uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) + 0u), min(read_2, read_2))) * 1u, 0u, 1u, 1u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) + 0u), min(read_2, read_2))) * 1u)))))))) + 1) << 0u), 4, 64, _GLF_IDENTITY(4, 0 | (4)));
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, false)))), true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) && true), true)), false || (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))) && true), true)))), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, ! (! (false)))), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true))), ! (! (! (bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)))))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, true)))), ((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, true))))) || false)) || false)))), ! (! (false || (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), true)))))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(false, false || (false)), true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, true))), false || (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))), true)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), true)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, true))))))) || false)) || false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.6)), bool(false))), 0.0, sqrt(0.0), 0.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(-7476.2320), min(_GLF_IDENTITY(_GLF_FUZZED(-7476.2320), (_GLF_FUZZED(_GLF_IDENTITY(-7476.2320, float(_GLF_IDENTITY(float(-7476.2320), mix(float(float(-7476.2320)), float(_GLF_FUZZED(7277.3730)), bool(false))))))) + 0.0), _GLF_IDENTITY(_GLF_FUZZED(-7476.2320), mix(float(_GLF_FUZZED(-7476.2320)), float(_GLF_FUZZED(vec2(94.32, 5.6).s)), bool(false)))))), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) + 0.0)) > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false))), true && (_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)))))) || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)), max(float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)), float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)))))))) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)), clamp(false ? _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)), max(float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)), float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)))))))) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)), false ? _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)), max(float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)), float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)))))))) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)), max(float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)), float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)))))))) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (false ? _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)), max(float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)), float(vec3(_GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672)), 0.0, 1.0)))))))) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)))))), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672))))) : injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (false ? _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672))))) : injectionSwitch)), _GLF_IDENTITY(false ? _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672))))) : injectionSwitch, min(false ? _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4202.9672, (true ? 4202.9672 : _GLF_FUZZED(-3.0))), clamp(4202.9672, 4202.9672, 4202.9672)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4202.9672, (true ? 4202.9672 : _GLF_FUZZED(-3.0))), clamp(4202.9672, 4202.9672, 4202.9672)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4202.9672, (true ? 4202.9672 : _GLF_FUZZED(-3.0))), clamp(4202.9672, 4202.9672, 4202.9672)), _GLF_IDENTITY(_GLF_IDENTITY(4202.9672, (true ? 4202.9672 : _GLF_FUZZED(-3.0))), clamp(4202.9672, 4202.9672, 4202.9672)), _GLF_IDENTITY(_GLF_IDENTITY(4202.9672, (true ? 4202.9672 : _GLF_FUZZED(-3.0))), clamp(4202.9672, 4202.9672, 4202.9672))))) / 1.0)))) : injectionSwitch, false ? _GLF_IDENTITY(_GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672))))), max(_GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672))))), _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672))))))) : injectionSwitch)), _GLF_IDENTITY(false ? _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672))))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672))))) : injectionSwitch, (false ? _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672))))) : injectionSwitch) * mat2(1.0)), false ? _GLF_FUZZED(sinh(vec2(-5.9, _GLF_IDENTITY(4202.9672, clamp(4202.9672, 4202.9672, 4202.9672))))) : injectionSwitch)))))).x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(0.0))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) >> 0)], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0)))))))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-8.0))) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2) + 1, (false ? _GLF_FUZZED(min(27898u, workgroup_base)) : uint(read_1 == read_2) + 1)), 4, _GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(4, clamp(4, 4, 4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (false)))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (false)))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (false)))), false, true)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (false)))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (false)))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (false)))), false, true))))))))) && true))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch : _GLF_FUZZED(vec2(8163.3754, 6278.9303)))).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(4083.7162))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch : _GLF_FUZZED(vec2(8163.3754, 6278.9303)))).y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4345.1623), _GLF_FUZZED(-591.930)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).y))))), max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4345.1623), _GLF_FUZZED(-591.930)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).y))))), max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4345.1623), _GLF_FUZZED(-591.930)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).y))))), max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4345.1623), _GLF_FUZZED(-591.930)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).y))))), max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4345.1623), _GLF_FUZZED(-591.930)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).y))))), max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4345.1623), _GLF_FUZZED(-591.930)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 0.0)))).y))))), max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bool(false))), true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   subgroupAll(true);
  }
}
