#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 uvec4 GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id;
 vec2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_14 {
 float _f0;
 bvec4 _f1;
 ivec2 _f2;
 bvec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 int _f1;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 mat2 _f1;
 int _f2;
 mat2 _f3;
 bvec3 _f4;
 mat4 _f5;
 bool _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 mat3x4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_17 {
 _GLF_struct_13 _f0;
 _GLF_struct_15 _f1;
 uvec3 _f2;
 _GLF_struct_16 _f3;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 int _f1;
 bvec2 _f2;
 mat2x4 _f3;
 mat3x2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_6 {
 bool _f0;
 ivec3 _f1;
 mat3 _f2;
 vec4 _f3;
 bvec2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 bvec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 mat2 _f1;
 _GLF_struct_6 _f2;
 bool _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_8 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_4 {
 uint subgroup_local_id;
 bvec2 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 vec4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_10 {
 _GLF_struct_3 _f0;
 int _f1;
 _GLF_struct_4 _f2;
 vec4 _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 uint read_2;
 mat4 _f1;
} ;

struct _GLF_struct_0 {
 uint read_1;
 bvec2 _f0;
 mat4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_17 _GLF_struct_replacement_17;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_3(ivec4(1), _GLF_struct_2(vec4(1.0), vec4(1.0), mat3x2(1.0))), 1, _GLF_struct_4(gl_SubgroupInvocationID, bvec2(true), mat3x2(1.0)), vec4(1.0), _GLF_struct_9(_GLF_struct_5(vec3(1.0), bvec4(true), ivec2(1)), mat2(1.0), _GLF_struct_6(true, ivec3(1), mat3(1.0), vec4(1.0), bvec2(true), mat3x2(1.0)), true, _GLF_struct_7(vec2(1.0), bvec3(true)), _GLF_struct_8(mat2(1.0), 1, bvec2(true), mat2x4(1.0), mat3x2(1.0), mat3x2(1.0)), mat4(1.0)));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_replacement_17._f3.GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.w = workgroup_id;
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_17._f3.GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.w;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_10._f2.subgroup_local_id;
 _GLF_struct_replacement_17._f3.GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.z = virtual_gid;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_10._f2.subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(atomicLoad(buf[_GLF_struct_replacement_17._f3.GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.z], 4, 64, 0), bvec2(true), mat4(1.0));
 _GLF_struct_replacement_17._f3.GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.x = _GLF_struct_replacement_0.read_1;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(ivec2(1), atomicLoad(buf[_GLF_struct_replacement_17._f3.GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.z], 4, 64, 0), mat4(1.0));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   _GLF_struct_replacement_17._f3.GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.y = _GLF_struct_replacement_1.read_2;
  }
 else
  {
  }
 if(_GLF_struct_replacement_10._f2.subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_17._f3.GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.x == _GLF_struct_replacement_17._f3.GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.y) + 1, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_17._f3.GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.x == _GLF_struct_replacement_17._f3.GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_12read_1read_2virtual_gidworkgroup_id.y) + 1, 4, 64, 4);
   subgroupAll(true);
  }
}
