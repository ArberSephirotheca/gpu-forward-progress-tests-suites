#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 uint _f0;
 int _f1;
 mat2 _f2;
 int _f3;
 mat4 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 ivec3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 bvec3 _f1;
 uvec4 _f2;
 ivec3 _f3;
 mat4x3 _f4;
 uint next_virtual_gid;
 _GLF_struct_0 _f5;
 _GLF_struct_1 _f6;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 _GLF_struct_2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((270.441 / 4.0)), _GLF_FUZZED(618.490)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false || ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), max(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), vec4(injectionSwitch.x, 1.0, 0.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0))), 0.0), (false ? _GLF_FUZZED(mat2x4(-0.0, 0.5, 12.68, 6.3, -5.5, -10.90, -9.9, 7.0)) : mat2x4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), max(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), vec4(injectionSwitch.x, 1.0, 0.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(exp(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0)), 0.0)))), mix(float(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), max(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), vec4(injectionSwitch.x, 1.0, 0.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0), (false ? _GLF_FUZZED(mat2x4(-0.0, 0.5, 12.68, 6.3, -5.5, -10.90, -9.9, 7.0)) : mat2x4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), max(vec4(injectionSwitch.x, 1.0, 0.0, 1.0), vec4(injectionSwitch.x, 1.0, 0.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(exp(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8893.9084)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(503.902), mix(float(_GLF_IDENTITY(_GLF_FUZZED(503.902), float(_GLF_IDENTITY(vec3(_GLF_FUZZED(503.902), 0.0, 1.0), (vec3(_GLF_FUZZED(503.902), 0.0, 1.0)) * mat3(1.0))))), float(_GLF_FUZZED(-24.59)), bool(false)))), bool(false)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) || false)))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   for(int _injected_loop_counter = (0 & _GLF_IDENTITY(87477, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(max(-93078, -48998)) : _GLF_IDENTITY(87477, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(87477, _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | (int(5))), int(5))), (true ? (0 << _GLF_IDENTITY(int(5), int(5))) : _GLF_FUZZED(-31685)))), (_GLF_IDENTITY(ivec2(87477, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), (true ? (0 << _GLF_IDENTITY(int(5), int(5))) : _GLF_FUZZED(-31685)))), max(ivec2(87477, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), (true ? (0 << _GLF_IDENTITY(int(5), int(5))) : _GLF_FUZZED(-31685)))), ivec2(87477, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), (true ? (0 << _GLF_IDENTITY(int(5), int(5))) : _GLF_FUZZED(-31685))))))) | ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(ivec2(87477, (0 << _GLF_IDENTITY(int(5), int(5)))), max(_GLF_IDENTITY(ivec2(87477, (0 << _GLF_IDENTITY(int(5), int(5)))), ivec2(ivec2(ivec2(87477, (0 << _GLF_IDENTITY(int(5), int(5))))))), ivec2(87477, (0 << _GLF_IDENTITY(int(5), int(5)))))), ivec2(87477, (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5)))))), ivec2(87477, (0 << _GLF_IDENTITY(int(5), int(5))))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_injected_loop_counter != 1) || false, ((_injected_loop_counter != 1) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_injected_loop_counter != 1) || false, ((_injected_loop_counter != 1) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY((_injected_loop_counter != 1) || false, ((_injected_loop_counter != 1) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true)))) || false)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(false, true)), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(false, true)), false, false)), false, true))))))))))
      break;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) + (0 >> _GLF_IDENTITY(int(7), int(7)))), (true ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) + (0 >> _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(-41004))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (! (true))))) || false))) ? int(0) : _GLF_FUZZED((_injected_loop_counter % _injected_loop_counter))))), ~ (~ (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED((_injected_loop_counter % _injected_loop_counter))))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0, min((_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0, _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0, max((_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0)))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(0, (0) << 0) + (int(_GLF_IDENTITY(0, clamp(0, 0, 0)))))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)) > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bvec2(false || (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (true))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, min(0, 0)), ((0 >> _GLF_IDENTITY(int(2), int(2))) ^ 0), 1)))], injectionSwitch[1])), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), min(_GLF_IDENTITY(min(0, 0), max(min(0, 0), _GLF_IDENTITY(min(0, 0), (min(0, 0)) * 1))), min(0, 0)))), ((0 >> _GLF_IDENTITY(int(2), int(2))) ^ _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec2(0, 0)))))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(14881))))), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), min(_GLF_IDENTITY(min(0, 0), max(min(0, 0), _GLF_IDENTITY(min(0, 0), (min(0, 0)) * 1))), min(0, 0)))), ((0 >> _GLF_IDENTITY(int(2), int(2))) ^ _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec2(0, 0)))))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(14881))))), (true ? int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), min(_GLF_IDENTITY(min(0, 0), max(min(0, 0), _GLF_IDENTITY(min(0, 0), (min(0, 0)) * 1))), min(0, 0)))), ((0 >> _GLF_IDENTITY(int(2), int(2))) ^ _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec2(0, 0)))))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(14881))))) : _GLF_FUZZED(-98658)))) | 0))], injectionSwitch[1])))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(0.0), float(_GLF_FUZZED(-0.4)), bool(false))), 0.0)), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(27.64, 21.37, 61.70, 15.19, 40.48, 2.2, 1439.5463, -7.1, -460.671))))), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_FUZZED(vec3(-1549.6135, 3.3, -628.612).r)), bool(false)))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_FUZZED(vec3(-1549.6135, 3.3, -628.612).r)), bool(false)))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_FUZZED(vec3(-1549.6135, 3.3, -628.612).r)), bool(false)))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), clamp(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_FUZZED(vec3(-1549.6135, 3.3, -628.612).r)), bool(false)))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_FUZZED(vec3(-1549.6135, 3.3, -628.612).r)), bool(false)))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), float(vec2(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_FUZZED(vec3(-1549.6135, 3.3, -628.612).r)), bool(false)))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))), 0.0, 0.0, 1.0)), (_GLF_IDENTITY(true ? vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0))), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), mix(vec4((vec4(1.0, 0.0, 0.0, 1.0))[0], _GLF_FUZZED(-9.2), (vec4(1.0, 0.0, 0.0, 1.0))[2], (vec4(1.0, 0.0, 0.0, 1.0))[3]), vec4(_GLF_FUZZED(-38.03), (vec4(1.0, 0.0, 0.0, 1.0))[1], _GLF_FUZZED(2.3), _GLF_FUZZED((7323.0298))), bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(mat2x3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(9974.5567)), bool(false))), 0.0, 0.0, 1.0)) : _GLF_FUZZED(vec2(-0.5, -551.483)), clamp(true ? vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-8.2)), float(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), bool(true))), dot(vec4(0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(mat2x3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), min(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0)))) / sqrt(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((-9.0))), float(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), bool(true))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), tan(0.0), 1.0, abs(1.0), 0.0, sqrt(0.0)))))), 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(9974.5567)), bool(false))), 0.0, 0.0, 1.0)) : _GLF_FUZZED(vec2(-0.5, -551.483)), true ? vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, abs(1.0))), mix(float(float(vec2(1.0, abs(1.0)))), float(_GLF_FUZZED(-54.49)), bool(false)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.1)), float(0.0), bool(true))), 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), clamp(vec4(0.0, 1.0, 1.0, 0.0), vec4(0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), clamp(vec4(0.0, 1.0, 1.0, 0.0), vec4(0.0, 1.0, 1.0, 0.0), vec4(0.0, 1.0, 1.0, 0.0))))), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), (true ? mat2(1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2(-6962.2860, -5.8, 23.06, 970.671)))))))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), min(vec4(0.0, 1.0, 1.0, 0.0), vec4(0.0, 1.0, 1.0, 0.0))), vec4(0.0, 1.0, 1.0, 0.0))), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3x2(0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0)), transpose(transpose(transpose(mat3x2(0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0)))))))))), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (true ? dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(9.5))), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, 1.0)), (float(mat2x3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (true ? dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(9.5))), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, 1.0))) + determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(9974.5567)), bool(false))), 0.0, 0.0, 1.0)) : _GLF_FUZZED(vec2(-0.5, -551.483)), true ? vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0), min(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(741.937)), float(1.0), bool(true))))), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - 0.0)), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), float(mat2x3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), max(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(9974.5567)), bool(false))), 0.0, 0.0, 1.0)) : _GLF_FUZZED(vec2(-0.5, -551.483))))))).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8161.6288, 1.4)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2257.2963), _GLF_FUZZED(658.095)), bvec2(false, false))).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (0u ^ 0u) ^ (gl_WorkGroupSize.x));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(! (false))))), true && (bool(bool(! (false)))))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false)))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false)))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false)))))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false)))))), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false)))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false)))))), false)))))))))))))))))) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-9.6))), injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-9.6))), injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-9.6))), injectionSwitch[1]), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-9.6))), injectionSwitch[1]))[0], (vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-9.6))), injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(6.1), _GLF_FUZZED(1.7)), bvec2(false, false)))))).x < injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false))))), bool(bvec4(bool(_GLF_IDENTITY(bool(! (false)), false || (bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))), bool(bvec4(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))), bool(bvec4(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))), true, false, false))), true, false, false))), (_GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false)))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false)))))))))), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false))))))))))) && true)), false || (_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false)))))))))), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false))))))))))) && true)), (bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false)))))))))), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false))))))))))) && true))) && true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), true && (bool(! (false))))), true && (bool(bool(! (false)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), false || ((_GLF_IDENTITY(true, false || (true))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(! (false))), (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))) && _GLF_IDENTITY((bool(bool(! (false)))), true && ((bool(bool(! (false)))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY(false, true && (false))))), bool(bool(! (bool(! (_GLF_IDENTITY(false, true && (false)))))))))))))), (_GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false)))))) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false)))))))))))), (_GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false)))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))) && (bool(bool(! (false)))))) && true, ! (! ((_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))) && (_GLF_IDENTITY(bool(bool(! (false))), bool(bool(bool(bool(! (false))))))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(! (false))), (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) && (bool(bool(! (false)))))) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || (false)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(false, false || (false)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false)))))))))))), (_GLF_IDENTITY(bool(bool(! (false))), true && (bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(! (false))), (_GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))) && (bool(bool(! (_GLF_IDENTITY(false, (false) || false))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))) || false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, false)))))))) && (false), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) < injectionSwitch.y))))))) && (false), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(atanh(-73.63)))), injectionSwitch.x)) < injectionSwitch.y)))))))) && (false), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) && (false), false)))))))))), ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(127721u, 55308u, 160380u)), (false ? _GLF_FUZZED(uvec3(9563u, 59304u, 74401u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(127721u, 55308u, 160380u)), uvec3(uvec3(_GLF_FUZZED(uvec3(_GLF_IDENTITY(127721u, min(127721u, 127721u)), 55308u, 160380u))))))) : gl_WorkGroupID)).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(workgroup_size * workgroup_id, 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))), true))))))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((_GLF_IDENTITY(~ (subgroup_id), 1u * (~ (subgroup_id))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u | (uint(uint(0u))))))) * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id))), (0u | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) | ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id))))) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)) ^ 0u, (_GLF_IDENTITY((uint(4u)) ^ 0u, ~ (~ ((uint(4u)) ^ 0u)))) | ((uint(4u)) ^ 0u))), uint(4u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))), _GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 0u, 0u))))), uint(4u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))), _GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 0u, 0u))))), uint(4u))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))), _GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 0u, 0u))))), uint(4u)), ~ (~ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))), _GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 0u, 0u))))), uint(4u)))))), ~ (~ ((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u)))) / 1u), max(_GLF_IDENTITY(uint(4u), clamp(uint(_GLF_IDENTITY(4u, (4u) / 1u)), uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))), _GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) + 0u))), 0u))))), uint(4u))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))), _GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 0u, 0u))))), uint(4u)), ~ (~ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))), _GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 1u)))))))), uint(4u)))))))))))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) - 0u), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), uint(uvec4(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id, false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id))) * 1u), _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id) * 1u), false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u * (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), 1u, _GLF_IDENTITY(1u, 0u + (1u)), ((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, 6u))), uint(_GLF_IDENTITY(uvec3(uint(6u), 1u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec4(uint(5u), 0u, 0u, 0u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec3(uvec3(uvec3(0u, 1u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec4(uint(5u), 0u, 0u, 0u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))), min(uvec3(uint(6u), 1u, 0u), uvec3(uint(6u), 1u, 0u)))))), (uint(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(6u), 1u, 0u), min(uvec3(uint(6u), 1u, 0u), uvec3(uint(6u), 1u, 0u)))), clamp(uint(_GLF_IDENTITY(uvec3(uint(6u), 1u, 0u), min(uvec3(uint(6u), 1u, 0u), uvec3(uint(6u), 1u, 0u)))), uint(_GLF_IDENTITY(uvec3(uint(6u), 1u, 0u), min(uvec3(uint(6u), 1u, 0u), uvec3(uint(6u), 1u, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(6u), 1u, 0u), min(uvec3(uint(6u), 1u, 0u), uvec3(uint(6u), 1u, 0u)))), (false ? _GLF_FUZZED(atomicMin(workgroup_id, workgroup_id)) : uint(_GLF_IDENTITY(uvec3(uint(6u), 1u, 0u), min(uvec3(uint(6u), 1u, 0u), uvec3(uint(6u), 1u, 0u))))))))))) / 1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) >> 0u)), 0u ^ (uint(_GLF_IDENTITY(6u, (6u) >> 0u))))), (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) >> 0u)), 0u ^ (uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) >> 0u)) >> 0u)))))) >> 0u)))), 0u, 0u, 0u))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], (max(injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(459.167, clamp(459.167, 459.167, 459.167)), 95.07, 862.148).s), _GLF_FUZZED(-7.0)), bvec2(false, false)))).x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, true && (false))))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5175.6156) : 0.0)))))), 0.0, 1.0)) * mat4(1.0))))))), false, false))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(ivec2(1), _GLF_struct_2(ivec4(1), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true)))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), true)))))))), uvec4(1u), ivec3(1), mat4x3(1.0), workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), max((~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), (~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) >> 0u)))))))) >> 0u)), ~ (~ (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), ((~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))))) / 1u), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), 0u | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))))), (~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))))))))) >> 0u)))))) ^ 0u)), _GLF_struct_0(vec4(1.0), ivec3(1), mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_struct_1(1u, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), (~ ((1))) << 0)))), (_GLF_IDENTITY((_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), (~ ((1))) << 0)))), (false ? _GLF_FUZZED(-65667) : (_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), _GLF_IDENTITY((~ ((1))), ((~ ((1)))) * 1) << 0))))))) ^ 0))), int(int(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), (~ ((1))) << 0))))))))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6944.8005)), bool(false))))), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(11.44))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0)))))), _GLF_IDENTITY((mat2(1.0)) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7891.2818)), bool(false))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0), transpose(transpose(_GLF_IDENTITY((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY((mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose((mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(613.755, 458.600, 4.0)[2]) : 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))))))))))), _GLF_IDENTITY(1, max(1, 1)), mat4(1.0), bvec3(true))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), (int(4)) ^ 0), int(4), int(4)))))), _GLF_IDENTITY(min(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))), 0 + ((_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))))) ^ 0), int(4), int(4)))))), ~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))))), (min(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))))), ~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(4), 0 | (int(4))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) >> 0)))), (int(4)) ^ 0), int(4), int(4))))), max((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(4), 0 | (int(4))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) >> 0)))), (int(4)) ^ 0), int(4), int(4))))), (1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(4), 0 | (int(4))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) >> 0)))), (int(4)) ^ 0), int(4), int(4)))))))))) | (_GLF_IDENTITY(min(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))))), ~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))))), (min(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), 0 ^ (~ (4)))))), int(4)))))), ~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))))))) | (min(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), (int(4)) ^ 0), int(_GLF_IDENTITY(4, 0 ^ (4))), int(4)))))), ~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))))))))))))) >> _GLF_IDENTITY(int(4), int(4)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), min(int(4), int(4)))) | (_GLF_IDENTITY(int(4), (int(4)) >> 0)))) ^ 0), int(4), int(4))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))), (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))) / 1))))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))), min(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))), (int(4)) ^ 0), int(4), int(4)))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))), max(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 ^ (4)))) ^ 0), int(4), int(4)))), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))))))))), min(~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), 0 ^ (int(4))), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec4(int(4), (0 ^ 1), 0, 0), clamp(ivec4(int(4), (0 ^ 1), 0, 0), ivec4(int(4), (0 ^ 1), 0, 0), ivec4(int(4), (0 ^ 1), 0, 0))))))), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))), (1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), _GLF_IDENTITY(int(4), (true ? _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))) : _GLF_FUZZED(_injected_loop_counter)))))))))), ~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))))))))) >> _GLF_IDENTITY(int(4), int(4)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(atomicMax(_injected_loop_counter, _injected_loop_counter))))))))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ _GLF_IDENTITY(0, clamp(0, 0, 0))), int(4), int(4)))))), min(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(int(int(4))), max(int(int(int(4))), int(int(int(4)))))), (0 | _GLF_IDENTITY(0, (0) | (0))) | (int(4))), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), ~ (~ (int(4)))), int(4)))))), ~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(97790) : _GLF_IDENTITY(int(4), max(int(4), int(4)))))) | 0), _GLF_IDENTITY(int(4), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)), (clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))) | 0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)), min(clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)), clamp(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) ^ 0, clamp(_GLF_IDENTITY((int(4)) ^ 0, ~ (~ ((int(4)) ^ 0))), (int(4)) ^ 0, (int(4)) ^ 0))), int(4), int(4))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), _GLF_IDENTITY(int(4), int(ivec4(int(4), 1, 0, 1))), int(4)))))), (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), _GLF_IDENTITY(int(4), int(ivec2(_GLF_IDENTITY(int(4), (int(4)) ^ 0), 1)))))))), (true ? ~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | 0)), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), _GLF_IDENTITY(int(4), int(ivec3(int(4), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))))), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | 0)), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), _GLF_IDENTITY(int(4), int(ivec3(int(4), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))))))) << 0)) : _GLF_FUZZED(_GLF_IDENTITY(-28714, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(-28714, (-28714) | 0), 0, 1)), (true ? _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(-28714, (-28714) | 0), 0, 1)), 0 ^ (int(ivec3(_GLF_IDENTITY(-28714, (-28714) | 0), 0, 1)))) : _GLF_FUZZED(_injected_loop_counter)))))))) << 0), min(~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0), int(4))), (int(4)) ^ 0), int(4), int(4)))), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))) >> 0))), ~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 + (int(4))), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 + (int(4))), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 + (int(4))), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))), int(int(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 + (int(4))), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 + (int(4))), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 + (int(4))), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))))))))))))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) - 0)), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 1 * (4)))) ^ 0), int(4), int(4)))))), min(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 | (4)))) ^ 0), int(4), int(4)))))), ~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(ivec4(_GLF_IDENTITY(int(4), (int(4)) ^ 0), 1, 1, 0))), int(4), int(4))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 1 * (4)))) ^ 0), int(4), int(4)))))), min(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 | (4)))) ^ 0), int(4), int(4)))))), ~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(ivec4(_GLF_IDENTITY(int(4), (int(4)) ^ 0), 1, 1, 0))), int(4), int(4))))))))), int(_GLF_IDENTITY(ivec4(~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 1 * (4)))) ^ 0), int(4), int(4)))))), min(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 | (4)))) ^ 0), int(4), int(4)))))), ~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(ivec4(_GLF_IDENTITY(int(4), (int(4)) ^ 0), 1, 1, 0))), int(4), int(4))))))))), 0, 1, 0), (ivec4(~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 1 * (4)))) ^ 0), int(4), int(4)))))), min(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 | (4)))) ^ 0), int(4), int(4)))))), ~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(ivec4(_GLF_IDENTITY(int(4), (int(4)) ^ 0), 1, 1, 0))), int(4), int(4))))))))), 0, 1, 0)) ^ ivec4(0, 0, 0, 0))))) | (~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 1 * (4)))) ^ 0), int(4), int(4)))))), min(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, 0 | (4)))) ^ 0), int(4), int(4)))))), ~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(ivec4(_GLF_IDENTITY(int(4), (int(4)) ^ 0), 1, 1, 0))), int(4), int(4)))))))))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))), max(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))))), min(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) ^ 0, (_GLF_IDENTITY((int(4)) ^ 0, max((int(4)) ^ 0, (int(4)) ^ 0))) / 1)), _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))), int(4)))))), ~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))), 1 * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4)))))), min(~ ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) ^ 0, (_GLF_IDENTITY((int(4)) ^ 0, max((int(4)) ^ 0, (int(4)) ^ 0))) / 1)), _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))), int(4)))))), ~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))), 1 * ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4), int(4))))))))))))))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4))))) << 0)))) || false)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[_GLF_struct_replacement_3._f1.next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), _GLF_IDENTITY((0), max((0), (0))))) | (0)) | (64)), 4);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 & 24995); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
          {
           return;
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (int(2))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)], _GLF_IDENTITY(4, ~ (~ (4))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) ^ 0u)], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, (false ? _GLF_FUZZED(-54306) : (1) >> 0))))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) < subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true && (subgroup_local_id + 1 < subgroup_size), false || (true && (subgroup_local_id + 1 < subgroup_size))))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))) && _GLF_IDENTITY(true, (true) || false), false)), true && (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((subgroup_local_id + 1))) / 1u) < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size))) && true, false)))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     atomicStore(buf[_GLF_struct_replacement_3._f1.next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), (read_1 == read_2) || _GLF_IDENTITY(false, false || (false))), (read_1 == read_2) || false)), ! (! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false), (_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) || false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)), ((_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false), (_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) || false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)), ((_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false, bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false), (_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) || false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)), ((_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false), (_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))) || false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)), ((_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false, false, false)))))) + 1, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), clamp(~ (_GLF_IDENTITY(4, 1 * (4))), ~ (_GLF_IDENTITY(4, (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(84634))), 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | (1)), 1))))), 4), (max(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(84634))), 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1))))), 4)) | 0)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))), (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (_GLF_IDENTITY(4, min(4, 4))), ~ (4)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), (false ? _GLF_FUZZED(-42346) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) ^ 0)))), ~ (4), ~ (4))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) + 0)))), clamp(~ (4), ~ (4), ~ (_GLF_IDENTITY(4, (4) << 0))))) / _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) * 1), 1)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, _GLF_IDENTITY(1, 0 ^ (1))), ivec3(_GLF_IDENTITY(ivec4(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | 0), 4))), clamp(~ _GLF_IDENTITY((4), _GLF_IDENTITY(0 + (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-2999) : (4)))), (0 + (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-2999) : (4))))) ^ 0)), _GLF_IDENTITY(~ (4), max(~ (4), ~ (4))), ~ _GLF_IDENTITY((4), int(_GLF_IDENTITY(ivec3((4), 0, 0), ~ (~ (ivec3((4), 0, 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), int(int(~ (4)))), clamp(~ (4), ~ (_GLF_IDENTITY(4, 0 | (4))), ~ (4)))), ~ (~ ((_GLF_IDENTITY(~ (4), clamp(~ _GLF_IDENTITY((4), ~ (~ ((4)))), ~ (_GLF_IDENTITY(4, 0 | (4))), ~ (_GLF_IDENTITY(4, 0 ^ (4))))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))), 1 * (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ _GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), int(ivec2((4), 0)))))))))) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), ((_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), _GLF_IDENTITY(~ (4), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4)))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0))))))), 1, 1), 1), clamp(ivec4(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), clamp(~ _GLF_IDENTITY((4), ((4)) | ((4))), ~ (4), ~ (4))), (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1), 1), ivec4(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) | _GLF_IDENTITY((_GLF_IDENTITY((4), (false ? _GLF_FUZZED(bitCount(-67983)) : (4)))), int(ivec3((_GLF_IDENTITY((4), (false ? _GLF_FUZZED(bitCount(-67983)) : (4)))), 1, 0)))), clamp(~ (4), _GLF_IDENTITY(~ (4), 1 * (_GLF_IDENTITY(~ (4), (~ (4)) | 0))), ~ (4))), _GLF_IDENTITY((_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4)))), 1 * ((_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4)))))) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), 1, 1), 1), ivec4(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) / 1), clamp(~ (4), _GLF_IDENTITY(~ (4), 1 * (~ (4))), ~ _GLF_IDENTITY((4), ((4)) | 0))), (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (_GLF_IDENTITY(4, (4) / 1)), ~ (4)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1), 1)))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), _GLF_IDENTITY(((4)) / int(_GLF_ONE(1.0, injectionSwitch.y)), 0 + (((4)) / int(_GLF_ONE(1.0, injectionSwitch.y)))))) * 1), clamp(~ (4), ~ (4), ~ (4))))))))), 64, _GLF_IDENTITY(4, min(4, 4)));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0), int(int(_GLF_IDENTITY((0), ((0)) + int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)))))), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0))) != _GLF_IDENTITY(1, 0 ^ (1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        return;
       subgroupAll(false);
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.1, 9.2)) : injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(8004.6930, -5.5)), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(8004.6930, -5.5)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(8004.6930, -5.5)), max(_GLF_FUZZED(vec2(8004.6930, -5.5)), _GLF_FUZZED(vec2(8004.6930, -5.5))))) + vec2(0.0, 0.0)) : _GLF_FUZZED(abs(injectionSwitch)))))), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(31.19, 5.0)) : vec2(0.0, 0.0)))).x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_TRUE(true))))
    {
     atomicStore(buf[_GLF_struct_replacement_3._f1.next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_1))) / 1u) == read_2, false || (read_1 == read_2))) + 1, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), (4) << _GLF_IDENTITY(0, min(0, 0))));
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(7.5))))))))))) || false); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.6) : injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-88.58)), float(injectionSwitch.x), bool(true))), (false ? _GLF_FUZZED(4.6) : injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (true))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   do
    {
     subgroupAll(true);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
  }
}
