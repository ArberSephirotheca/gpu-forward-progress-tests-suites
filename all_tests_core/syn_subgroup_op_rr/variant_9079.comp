#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))))) && true)) && true, false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))))) && true)) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.9)), bool(false)))) < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))) && true), (_GLF_IDENTITY((false), ! (! ((false)))) || false) || false))))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), false))))))), bvec2(bvec2(bvec2(false, true))))))) && true), (_GLF_IDENTITY((false), ! (! ((false)))) || false) || false)))))))))) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) * 1.0, ((injectionSwitch.x) * 1.0) / 1.0)) < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))))))
                break;
               break;
              }
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), true, false, false))))) || false)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), clamp(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))), (gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups)))))) / uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)) ^ (uvec3(0u, 0u, 0u) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u))) - uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u)))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      continue;
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (false)) || false), ! (! (! (false))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (! (false))))))), true, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u)).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(2.7))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (0u)), 0u)), 0u, 0u)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (subgroup_size))))), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (subgroup_size))))))) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8841.6093) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(766.453)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2515.2444)), _GLF_IDENTITY(bool(false), false || (bool(false))))), 1.0, 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), vec4(0.0, 1.0, 1.0, 1.0))), tan(0.0)), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0))))), 0.0)), max(dot(vec4(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (vec4(0.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)))))) - sin(0.0)), tan(0.0)), vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), (true ? _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), float(mat3(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-780.943)))), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0))))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0)), 1.0))), tan(0.0)), clamp(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), (true ? _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), float(mat3(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-780.943)))), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0))))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0)), 1.0))), tan(0.0)), max(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), (true ? _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), float(mat3(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-780.943)))), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0))))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0)), 1.0))), tan(0.0)), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), (true ? _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), float(mat3(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-780.943)))), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0))))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0)), 1.0))), tan(0.0)))), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), (true ? _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), float(mat3(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-780.943)))), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0))))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0)), 1.0))), tan(0.0)), _GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), (true ? _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), float(mat3(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-780.943)))), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0))))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0)), 1.0))), tan(0.0)), (false ? _GLF_FUZZED(vec4(7.1, -8.6, -36.38, 153.328)) : vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), (true ? _GLF_IDENTITY(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), float(mat3(float(mat2(0.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-780.943)))), 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0))))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0)), 1.0))), tan(0.0)))))), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * 1.0))))), dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), tan(0.0)), vec4(1.0, 0.0, 0.0, 0.0))), 0.0)))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0), clamp((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0), (vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0), (vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.2) : 0.0)), 1.0, 0.0, 0.0))))), max(vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((98.25 * vec4(-774.069, -4291.4719, 2.1, 92.94).p))), bool(false)))), vec4(0.0, 1.0, 0.0, 0.0)))))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))))
        return;
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), max(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 0u), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, (0u) << 0u)), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 0u), 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 0u), 1u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 0u), 1u)), uvec3(0u, 0u, 0u) | (uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 0u), 1u))))))), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) / 1u) * subgroup_size, 1u, 0u), 1u))), _GLF_IDENTITY(0u, (0u) / (1u | 1u))))), _GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 0u), 1u)))))) + uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 0u), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, (0u) << 0u)), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(176376u)))), 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 0u), 1u))), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 0u), 1u))), _GLF_IDENTITY(0u, (0u) / (_GLF_IDENTITY(1u | 1u, (_GLF_IDENTITY(1u | 1u, 0u ^ (1u | 1u))) << 0u)))))), _GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 0u), uvec3(uvec4(uvec3(subgroup_id * subgroup_size, 1u, 0u), 1u)))))) + uvec3(0u, 0u, 0u))) ^ uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u), 0u, 0u))) : _GLF_FUZZED(virtual_gid)))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, (1u ^ 1u) + (subgroup_local_id)), subgroup_local_id)) + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(1u, 0u + (1u)) ^ 1u) + (subgroup_local_id)), subgroup_local_id)) + 1, 1u, 0u, 1u)))))), min((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((1u ^ 1u) + (subgroup_local_id), ((1u ^ 1u) + (subgroup_local_id)) - 0u)), subgroup_local_id)) + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (1u ^ 1u) + (subgroup_local_id)), subgroup_local_id)) + 1, 1u, 0u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) << 0), max(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) - 0u)) | _GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (1u ^ 1u) + (subgroup_local_id)), subgroup_local_id)) + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (1u ^ 1u) + (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (1u ^ 1u) + (subgroup_local_id))) / 1u), subgroup_local_id)) + 1, 1u, 0u, 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((true ? workgroup_size : workgroup_size)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) << ((0u & 6623u) << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1)), subgroup_local_id + 1))), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | 0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (1)))) | 0), max(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (1)))) | 0), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (1)))) | 0), 0 | (((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (1)))) | 0))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))) | 0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0), min(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0), min(((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0), ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0))) << 0))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | 0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (1)))) | 0), max(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (1)))) | 0), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (1)))) | 0), 0 | (((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (1)))) | 0))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))) | 0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0), min(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0), min(((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0), ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0))) << 0)))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) | 0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (1)))) | 0), max(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (1)))) | 0), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (1)))) | 0), 0 | (((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (1)))) | 0))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1)))))) | 0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0), min(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0), min(((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0), ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) | 0))) << 0)))))), subgroup_local_id + 1))) : _GLF_FUZZED(atomicCompSwap(subgroup_id, (virtual_gid), 339u)))) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) >> 0u) + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)))), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) >> 0), int(ivec3((1), 0, 0)))))), (1), _GLF_IDENTITY((1), ((1)) << _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-97508)))))) | 0), subgroup_local_id + 1))) : _GLF_FUZZED(atomicCompSwap(subgroup_id, (virtual_gid), _GLF_IDENTITY(339u, max(339u, 339u)))))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), clamp(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (false ? _GLF_FUZZED(uvec4(8885u, 36219u, 69423u, 35406u)) : uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))), (true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), clamp(uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))) : _GLF_FUZZED(workgroup_id)))))))) >> 0u) + 1, subgroup_local_id + 1))), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), int(ivec3((1), 0, 0)))))), (1), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), (_GLF_IDENTITY(~ ((1)), min(~ ((1)), ~ ((1))))) | (~ ((1))))))) << 0))), (false ? _GLF_FUZZED(-62023) : _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), int(ivec3((1), 0, 0)))))), (1), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), clamp((1), (1), (1))), (1), (1)))), min(~ ((1)), ~ ((1))))) | (~ ((1))))))) << 0))))) | 0), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))) : _GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_id, (virtual_gid), _GLF_IDENTITY(339u, max(339u, 339u)))), (_GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_id, (virtual_gid), _GLF_IDENTITY(339u, max(339u, 339u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(atomicCompSwap(subgroup_id, (virtual_gid), _GLF_IDENTITY(339u, max(339u, 339u))))))) | 0u))) % subgroup_size, 0u | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)))) - 0u), max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) >> 0u) + 1, subgroup_local_id + 1))), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), int(ivec3((1), 0, 0)))))), (1), _GLF_IDENTITY((1), ((1)) << 0))) | 0), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(22747) : _GLF_IDENTITY(1, ~ (~ (1)))))), ~ (~ (_GLF_IDENTITY((1), int(ivec3((_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0)))))), (1), _GLF_IDENTITY((1), ((1)) << 0))) | 0)) >> 0), subgroup_local_id + 1))) : _GLF_FUZZED(atomicCompSwap(subgroup_id, (virtual_gid), _GLF_IDENTITY(339u, max(339u, 339u)))))) % subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)))) - 0u), max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) >> 0u) + 1, subgroup_local_id + 1))), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), int(ivec3((1), 0, 0)))))), (1), _GLF_IDENTITY((1), ((1)) << 0))) | 0), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(22747) : _GLF_IDENTITY(1, ~ (~ (1)))))), ~ (~ (_GLF_IDENTITY((1), int(ivec3((_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0)))))), (1), _GLF_IDENTITY((1), ((1)) << 0))) | 0)) >> 0), subgroup_local_id + 1))) : _GLF_FUZZED(atomicCompSwap(subgroup_id, (virtual_gid), _GLF_IDENTITY(339u, max(339u, 339u)))))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), clamp(subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), subgroup_local_id + _GLF_IDENTITY(1, (1) | 0), subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)))) - 0u), max(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) >> 0u) + 1, subgroup_local_id + 1))), (true ? (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), int(ivec3((1), 0, 0)))))), (1), _GLF_IDENTITY((1), ((1)) << 0))) | 0), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(22747) : _GLF_IDENTITY(1, ~ (~ (1)))))), ~ (~ (_GLF_IDENTITY((1), int(ivec3((_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0)))))), (1), _GLF_IDENTITY((1), ((1)) << 0))) | 0)) >> 0), subgroup_local_id + 1))) : _GLF_FUZZED(atomicCompSwap(subgroup_id, (virtual_gid), _GLF_IDENTITY(339u, max(339u, 339u)))))) % subgroup_size)) >> 0u) : _GLF_FUZZED(subgroup_size))))) - 0u))) - 0u)) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u + _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) | (uint(0u)))), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | (uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) >> 0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) | (uint(0u)))), 0u)))), uint(0u))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))))), (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u)))))) | (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u + (uint(0u))), uint(0u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(149184u)))), uint(0u))));
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), ~ (~ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))))))), _GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), (uint(next_virtual_gid)) << 0u))))), _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), 0u ^ (min(next_virtual_gid, next_virtual_gid)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), (uint(next_virtual_gid)) << 0u))))), _GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))), 0u ^ (min(next_virtual_gid, next_virtual_gid)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), 0u ^ (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), (uint(next_virtual_gid)) << 0u))))), _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), 0u ^ (min(next_virtual_gid, next_virtual_gid)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), (uint(next_virtual_gid)) << 0u))))), _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(0u ^ (min(next_virtual_gid, next_virtual_gid)), (0u ^ (min(next_virtual_gid, next_virtual_gid))) | 0u))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), (uint(next_virtual_gid)) << 0u))))), _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(0u ^ (min(next_virtual_gid, next_virtual_gid)), (0u ^ (min(next_virtual_gid, next_virtual_gid))) | 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), (uint(next_virtual_gid)) << 0u))))), _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), 0u ^ (min(next_virtual_gid, next_virtual_gid))))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), (uint(next_virtual_gid)) << 0u))))), _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), 0u ^ (min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u), next_virtual_gid))))))], uint(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) << 0, (_GLF_IDENTITY((4) << 0, ((4) << 0) >> 0)) >> (0 >> _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY(_GLF_IDENTITY((4) << 0, (true ? (4) << _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(65885))), (_GLF_IDENTITY((4), min((4), (4))) << 0) - 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))), max(0u | (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))))), clamp(0u | (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))), 0u | (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))), 0u | (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))))))))), virtual_gid))], (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))), max(0u | (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))))), clamp(0u | (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))), (uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))))) >> 0u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))), (uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))))) >> 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))), (uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u))))) >> 0u)))))), 0u | (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(0u, 0u))))))))))))), virtual_gid))]) ^ 0u), 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))) : _GLF_FUZZED(8.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))) && true))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), bvec2(true, false))), 1.0, 1.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), bvec2(true, false))), 1.0, 1.0), min(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), bvec2(true, false))), 1.0, 1.0), vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), bvec2(true, false))), 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), bvec2(true, false))), 1.0, 1.0), vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), bvec2(true, false))), 1.0, 1.0))))), vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), bvec2(true, false))), 1.0, 1.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), bvec2(true, false))), 1.0, 1.0), min(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), bvec2(true, false))), 1.0, 1.0), vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), bvec2(true, false))), 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), bvec2(true, false))), 1.0, 1.0), vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), bvec2(true, false))), 1.0, 1.0))))), vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, false, true)))))))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(-26475)))), (int(5)) / (_GLF_IDENTITY(1 | 0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1 | 0, 0), ivec2(0, 0) | (ivec2(1 | 0, 0)))), (int(_GLF_IDENTITY(ivec2(1 | 0, 0), ivec2(0, 0) | (ivec2(1 | 0, 0))))) / 1))))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, tan(log(1.0)), 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(true, ! (! (true))) ? int(2) : _GLF_FUZZED(21161))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(5))), int(5)))))) & (16999 ^ 10630))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u), max(_GLF_IDENTITY(read_1, (read_1) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u), max(_GLF_IDENTITY(read_1, (read_1) / 1u), _GLF_IDENTITY(read_1, (read_1) / 1u))))), read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1))))) == read_2) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED((~ 2419)) : 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))))) || false) && true))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)))
          return;
        }
       else
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))) ^ 0, ((0 << _GLF_IDENTITY(int(5), int(5))) ^ 0) | 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
          {
           return;
          }
        }
       for(int _injected_loop_counter = ((0 ^ 0) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))) && true)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sin(injectionSwitch)) : injectionSwitch)).y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
              barrier();
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               return;
              }
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), max(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))))))) / vec2(1.0, 1.0)).y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), max(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0))))))) / vec2(1.0, 1.0)).y)))))) || false) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), false || (! ((injectionSwitch.x < injectionSwitch.y)))), false, true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), false || (! ((injectionSwitch.x < injectionSwitch.y)))), false, true, true)), true, false))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))) / vec2(1.0, 1.0)).y))) || _GLF_IDENTITY(false, false || (false))) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) * vec3(1.0, 1.0, 1.0))))) / vec2(1.0, 1.0)).y))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(97.13), _GLF_FUZZED(254.330)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))))) / vec2(1.0, 1.0)).y))) || false, true && ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))) / vec2(1.0, 1.0)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))) / vec2(1.0, 1.0)).y), true && (! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))) / vec2(1.0, 1.0)).y))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))) / vec2(1.0, 1.0)).y), true && (! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0)))) / vec2(1.0, 1.0)).y))), false, false)))))))))) || false)), false)))) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.2))) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               return;
              }
             return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          return;
         return;
        }
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))), ! (! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))), ! (! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))), bool(bvec2((! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))), true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(false, false, false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_DEAD(false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))))), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), false, false))))), true, true))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_DEAD(false)))))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))))), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false))), false, false))))), true, true))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))))), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false)))), false), false))), false, false))))), true, true))) && true)))))) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, injectionSwitch.x)) < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), bool(bvec3(! (_GLF_DEAD(false)), true, true))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), true, true))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), true && ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, injectionSwitch.y))) + 0.0)))))), bool(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) || false)), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true, true)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), true), false))), false)))))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             return;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), (mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) * mat4(1.0))), mix(float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), (mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) * mat4(1.0)))), float(_GLF_FUZZED(-3112.1181)), bool(false))))), float(_GLF_FUZZED(-161.018)), bool(false))), mix(float(_GLF_FUZZED(-855.056)), float(injectionSwitch.x), bool(true)))) - 0.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 0u ^ (read_1)), read_1)), min(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 0u ^ (read_1)), read_1)), _GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, 0u ^ (read_1)), read_1)))) == read_2) + 1, 4, 64, 4);
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch)).y, 0.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 1.0)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
        return;
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))))))
          barrier();
         return;
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y)))))), true, true)), ! (! (bool(bvec3((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y)))))), true, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))) || false)))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))) || false), false, false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) + 0.0)))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))));
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))))), (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        return;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x)))) > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(11.57) : injectionSwitch.y, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(11.57) : injectionSwitch.y, min(false ? _GLF_FUZZED(11.57) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(11.57) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0 + (false ? _GLF_FUZZED(11.57) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false ? _GLF_FUZZED(11.57) : injectionSwitch.y, false ? _GLF_FUZZED(11.57) : injectionSwitch.y)))), injectionSwitch.y)), round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))), 1.0, log(1.0), 1.0, 0.0)))))));
             if(_GLF_DEAD(false))
              return;
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false));
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
            {
             return;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))))) && _GLF_IDENTITY(true, ! (! (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-496.426)), bool(false))), sin(0.0))), float(mat4x2(float(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-496.426)), bool(false))), sin(0.0))), 1.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(31.04), min(_GLF_IDENTITY(_GLF_FUZZED(31.04), clamp(_GLF_FUZZED(31.04), _GLF_FUZZED(31.04), _GLF_FUZZED(31.04))), _GLF_IDENTITY(_GLF_FUZZED(31.04), clamp(_GLF_FUZZED(31.04), _GLF_FUZZED(31.04), _GLF_FUZZED(31.04))))) : (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(31.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(31.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(31.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(31.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(true, false))).x))))) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-96.14)), float(1.0), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true)))))))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-96.14)), float(1.0), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true)))))))), 0.0))[0], (vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-96.14)), float(1.0), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true)))))))), 0.0))[1]), vec2(_GLF_FUZZED(-3577.9962), _GLF_FUZZED(939.733)), bvec2(false, false))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9199.9250)), float(0.0), bool(true))), 0.0))) - 0.0), 1.0), max(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9199.9250)), float(0.0), bool(true))), 0.0))) - 0.0), 1.0), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9199.9250)), float(0.0), bool(true))), 0.0))) - 0.0), 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))) > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(31.04), min(_GLF_IDENTITY(_GLF_FUZZED(31.04), clamp(_GLF_FUZZED(31.04), _GLF_FUZZED(31.04), _GLF_FUZZED(31.04))), _GLF_IDENTITY(_GLF_FUZZED(31.04), clamp(_GLF_FUZZED(31.04), _GLF_FUZZED(31.04), _GLF_FUZZED(31.04))))) : (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(31.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(31.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(31.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(31.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(true, false))).x))))) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-96.14)), float(1.0), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true)))))))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-96.14)), float(1.0), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true)))))))), 0.0))[0], (vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-96.14)), float(1.0), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true)))))))), 0.0))[1]), vec2(_GLF_FUZZED(-3577.9962), _GLF_FUZZED(939.733)), bvec2(false, false))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9199.9250)), float(0.0), bool(true))), 0.0))) - 0.0), 1.0), max(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9199.9250)), float(0.0), bool(true))), 0.0))) - 0.0), 1.0), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9199.9250)), float(0.0), bool(true))), 0.0))) - 0.0), 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))) > injectionSwitch.y))))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(31.04) : (injectionSwitch.x))) - _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-96.14)), float(1.0), bool(true))), 0.0), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9199.9250)), float(0.0), bool(true))), 0.0))) - 0.0), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))) > injectionSwitch.y)))) && true), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(31.04), _GLF_IDENTITY(float(mat4x2(_GLF_FUZZED(31.04), 0.0, exp(0.0), 1.0, abs(1.0), 1.0, 1.0, 0.0)), (float(mat4x2(_GLF_FUZZED(31.04), 0.0, exp(0.0), 1.0, abs(1.0), 1.0, 1.0, 0.0))) * 1.0)) : (injectionSwitch.x))) - _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-96.14)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 0.0), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9199.9250)), float(0.0), bool(true))), 0.0))) - 0.0), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))) > injectionSwitch.y)))) && true), true, false, false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0)))), float(_GLF_FUZZED(-577.236)), bool(false)))))))
  return;
}
