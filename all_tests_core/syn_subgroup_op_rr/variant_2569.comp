#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true))))))), false))))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true))))))), false))))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(vec2(28.95, 85.28)))).y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), (bool(bool(false))) || false)), false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, false || (false))) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) * 1u)))))))) | (gl_NumWorkGroups), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)) | uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(161502u, 98668u, 12741u))))))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))) | (gl_NumWorkGroups), uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)))), gl_NumWorkGroups)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))), gl_NumWorkGroups)).x, (gl_NumWorkGroups.x) / 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), 1u, 0u))) >> 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))), _GLF_IDENTITY(0u, (0u) >> 0u))), 0u, 0u) | (gl_NumWorkGroups)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), 1u, 0u))) >> 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))), _GLF_IDENTITY(0u, (0u) >> 0u))), 0u, 0u) | (gl_NumWorkGroups))), (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), 1u, 0u))) >> 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))), _GLF_IDENTITY(0u, (0u) >> 0u))), 0u, 0u) | (gl_NumWorkGroups)))) | (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), 1u, 0u))) >> 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))))), _GLF_IDENTITY(0u, (0u) >> 0u))), 0u, 0u) | (gl_NumWorkGroups))))))), _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), clamp(min(gl_NumWorkGroups, gl_NumWorkGroups), min(gl_NumWorkGroups, gl_NumWorkGroups), min(gl_NumWorkGroups, gl_NumWorkGroups))), clamp(min(gl_NumWorkGroups, gl_NumWorkGroups), min(gl_NumWorkGroups, gl_NumWorkGroups), min(gl_NumWorkGroups, gl_NumWorkGroups)))), (~ (_GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), clamp(min(gl_NumWorkGroups, gl_NumWorkGroups), min(gl_NumWorkGroups, gl_NumWorkGroups), min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY((uvec3(180613u, 129438u, 6713u) & uvec3(0u, 0u, 0u)), min((uvec3(180613u, 129438u, 6713u) & uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(180613u, 129438u, 6713u) & uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (~ ((uvec3(180613u, 129438u, 6713u) & uvec3(0u, 0u, 0u)))), min(_GLF_IDENTITY(~ (~ ((uvec3(180613u, 129438u, 6713u) & uvec3(0u, 0u, 0u)))), (~ (~ ((uvec3(180613u, 129438u, 6713u) & uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (~ ((uvec3(180613u, 129438u, 6713u) & uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) ^ (~ (~ ((uvec3(180613u, 129438u, 6713u) & uvec3(0u, 0u, 0u))))))))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), clamp(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)) * (gl_NumWorkGroups))), min(gl_NumWorkGroups, gl_NumWorkGroups), min(gl_NumWorkGroups, gl_NumWorkGroups)))), (~ (_GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), clamp(min(gl_NumWorkGroups, gl_NumWorkGroups), min(gl_NumWorkGroups, gl_NumWorkGroups), min(gl_NumWorkGroups, gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u))))))).x, _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x)))) / 1u) / _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) - 0u))) : _GLF_FUZZED(195611u)))) : _GLF_FUZZED(subgroup_size))), gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x) + 0.0) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)) * ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), (gl_WorkGroupSize))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)) * ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))))) - (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), _GLF_IDENTITY(uvec3(4u), (_GLF_IDENTITY(uvec3(4u), ~ (~ (uvec3(4u))))) >> uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u))) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0))).x < injectionSwitch.y))) && true, true && ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8815.6409) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))), true, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bool((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)) && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false)))))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(pow(-84.24, -349.450)) : injectionSwitch.y)), injectionSwitch.y))) || false)))) && true)), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, max(0u, 0u)) + (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), (false ? _GLF_FUZZED(-75.82) : float(vec2(injectionSwitch.y, 0.0))))), injectionSwitch.y), clamp(min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), (false ? _GLF_FUZZED(-75.82) : float(vec2(injectionSwitch.y, 0.0))))), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), (false ? _GLF_FUZZED(-75.82) : float(vec2(injectionSwitch.y, 0.0))))), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), (false ? _GLF_FUZZED(-75.82) : float(vec2(injectionSwitch.y, 0.0))))), injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), (false ? _GLF_FUZZED(-75.82) : float(vec2(injectionSwitch.y, 0.0)))), (true ? _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), (false ? _GLF_FUZZED(-75.82) : float(vec2(injectionSwitch.y, 0.0)))) : _GLF_FUZZED(9.0)))), injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), (false ? _GLF_FUZZED(-75.82) : float(vec2(injectionSwitch.y, 0.0))))), injectionSwitch.y))))))))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 1u, 1u), (uvec4(subgroup_id, 0u, 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))))) | 0u) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), sqrt(0.0), 0.0, 1.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), sqrt(0.0), 0.0, 1.0, 1.0))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u))), uint(_GLF_IDENTITY(uvec3((~ (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), uint(uvec2((next_virtual_gid) ^ 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) + 0u), _GLF_FUZZED(workgroup_base))) : uint(2u))))))))))), (1u ^ (0u | 0u)), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) / uvec2(1u, 1u)))))) ^ (1u & 1u))), clamp(uvec3((~ (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), uint(uvec2((next_virtual_gid) ^ 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) + 0u), _GLF_FUZZED(workgroup_base))) : uint(2u))))))))))), (1u ^ (0u | 0u)), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) / uvec2(1u, 1u)))))) ^ (1u & 1u))), uvec3((~ (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), uint(uvec2((next_virtual_gid) ^ 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) + 0u), _GLF_FUZZED(workgroup_base))) : uint(2u))))))))))), (1u ^ (0u | 0u)), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) / uvec2(1u, 1u)))))) ^ (1u & 1u))), uvec3((~ (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), uint(uvec2((next_virtual_gid) ^ 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) + 0u), _GLF_FUZZED(workgroup_base))) : uint(2u))))))))))), (1u ^ (0u | 0u)), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec2(1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) / uvec2(1u, 1u)))))) ^ (1u & 1u))))))))], _GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(uint(1), max(uint(1), uint(1))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(31181u))), _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)))], 1u, 1u), clamp(uvec3(buf[virtual_gid], 1u, 1u), uvec3(buf[_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (virtual_gid))], 1u, 1u), _GLF_IDENTITY(uvec3(buf[virtual_gid], 1u, _GLF_IDENTITY(1u, min(1u, 1u))), ~ (~ (uvec3(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))) | _GLF_IDENTITY((uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)), ((uvec4(_GLF_IDENTITY(virtual_gid, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (_GLF_IDENTITY(virtual_gid, (virtual_gid) - (0u ^ 0u)))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, max(4u, 4u)))), min(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, max(4u, 4u)))), _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, max(4u, 4u))))))))), 1u, 1u))) << uvec4(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((next_virtual_gid --)) : 0u)), 0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u)))), 1u)) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), ~ _GLF_IDENTITY((~ (uint(uvec2(1u, 1u)))), ((~ (uint(uvec2(1u, 1u))))) | ((~ (uint(uvec2(1u, 1u)))))))) : _GLF_FUZZED(max(subgroup_id, num_workgroup)))))) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))) / 1u)) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) | (4u))))), 1u, 1u))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u)))), 1u)) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), ~ (~ (uint(uvec2(1u, 1u)))))) : _GLF_FUZZED(max(subgroup_id, num_workgroup)))))) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))) / 1u)) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))))) | 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u)))), 1u)) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), ~ (~ (uint(uvec2(1u, 1u)))))) : _GLF_FUZZED(max(subgroup_id, num_workgroup)))))) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))) / 1u)) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))))) | 0u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u)))), 1u)) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), ~ (~ (uint(uvec2(1u, 1u)))))) : _GLF_FUZZED(max(subgroup_id, num_workgroup)))))) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))) / 1u)) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))))) | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u)))), 1u)) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), ~ (~ (uint(uvec2(1u, 1u)))))) : _GLF_FUZZED(max(subgroup_id, num_workgroup)))))) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))) / 1u)) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))))) | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u)))), 1u)) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), ~ (~ (uint(uvec2(1u, 1u)))))) : _GLF_FUZZED(max(subgroup_id, num_workgroup)))))) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))) / 1u)) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))))) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec4(128483u, 12895u, 113086u, 106678u)) : uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u)))), 1u)) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), ~ (~ (uint(uvec2(1u, 1u)))))) : _GLF_FUZZED(max(subgroup_id, num_workgroup)))))) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))) / 1u)) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))))) | 0u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u)))), 1u)) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), ~ (~ (uint(uvec2(1u, 1u)))))) : _GLF_FUZZED(max(subgroup_id, num_workgroup)))))) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))) / 1u)) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))))) | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u)))), 1u)) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), ~ (~ (uint(uvec2(1u, 1u)))))) : _GLF_FUZZED(max(subgroup_id, num_workgroup)))))) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))) / 1u)) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))))) | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u)))), 1u)) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u), (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), ~ (~ (uint(uvec2(1u, 1u)))))) : _GLF_FUZZED(max(subgroup_id, num_workgroup)))))) | (uvec4(virtual_gid, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec3(_GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))) / 1u)) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))))) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))], 1u, 1u)))))), uvec3(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u) | (_GLF_IDENTITY(uvec3(buf[virtual_gid], 1u, 1u), clamp(uvec3(buf[virtual_gid], 1u, 1u), uvec3(buf[virtual_gid], 1u, 1u), _GLF_IDENTITY(uvec3(buf[virtual_gid], 1u, 1u), ~ (~ (uvec3(buf[virtual_gid], 1u, 1u)))))))))))), 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-79311))))), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 0u))))
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u + (read_2))) / 1u) : _GLF_FUZZED(read_1)))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))), mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(42.77, clamp(42.77, 42.77, 42.77)), 32.58)) : mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(42.77, 32.58)) : mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), false, true))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), min(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(abs(-65.15)) : _GLF_IDENTITY(1.0, min(1.0, 1.0))))) - 0.0)) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0)), min(vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))), mat2(1.0) * (injectionSwitch))), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(_GLF_IDENTITY(42.77, clamp(42.77, 42.77, 42.77)), (_GLF_IDENTITY(_GLF_IDENTITY(42.77, clamp(42.77, 42.77, 42.77)), float(vec3(_GLF_IDENTITY(42.77, clamp(42.77, 42.77, 42.77)), 0.0, 1.0)))) / 1.0), 32.58)) : mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-3.9, -1489.7896, -42.68, 1529.0961)))) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-10.56, -7.2)) : (injectionSwitch))), (false ? _GLF_FUZZED(vec2(42.77, 32.58)) : mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-3.9, -1489.7896, -42.68, 1529.0961)))) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-10.56, -7.2)) : (injectionSwitch))), (false ? _GLF_FUZZED(vec2(42.77, 32.58)) : mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), false, true))) && true))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), ! (! (bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), true, true))), false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-64.13 + -1320.7330))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
