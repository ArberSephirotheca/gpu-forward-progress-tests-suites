#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(92451u, 80266u, 52999u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(92451u, 80266u, 52999u)))), (true ? (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(92451u, 80266u, 52999u)))) : _GLF_FUZZED(uvec3(75970u, 6507u, 165300u)))))))) | uvec3(0u, 0u, 0u)))).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(92451u, 80266u, 52999u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(92451u, 80266u, 52999u)))), (true ? (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(92451u, 80266u, 52999u)))) : _GLF_FUZZED(uvec3(75970u, 6507u, 165300u)))))))) | uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(92451u, 80266u, 52999u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(92451u, 80266u, 52999u)))), (true ? (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(92451u, 80266u, 52999u)))) : _GLF_FUZZED(uvec3(75970u, 6507u, 165300u)))))))) | uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(92451u, 80266u, 52999u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(92451u, 80266u, 52999u)))), (true ? (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) + uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(92451u, 80266u, 52999u)))) : _GLF_FUZZED(uvec3(75970u, 6507u, 165300u)))))))) | uvec3(0u, 0u, 0u)))).x));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 4);
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << (0u << _GLF_IDENTITY(uint(4u), uint(4u))))], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 0);
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       switch(_GLF_SWITCH(((- (_GLF_IDENTITY(~ 17452, _GLF_IDENTITY(int(int(~ 17452)), ~ (_GLF_IDENTITY(~ (int(int(~ 17452))), (~ (int(int(~ 17452)))) / 1)))))) & 0)))
        {
         case 55:
         uvec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
         case 0:
         case 16:
         case 33:
         case 4:
         do
          {
           if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), (uint(uvec2(subgroup_size, 1u))) >> 0u)), subgroup_size)))
            {
             switch(_GLF_SWITCH((_GLF_IDENTITY(41855 & _GLF_IDENTITY(0, (0) - 0), ~ (~ (41855 & _GLF_IDENTITY(0, (0) - 0)))))))
              {
               case 0:
               case 30:
               case 59:
               case 47:
               atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
               case 58:
               case 7:
               subgroupAll(false);
               break;
               case 68:
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 25:
                   uvec4(194966u, 32344u, 123462u, 1386u);
                   case 0:
                   case 65:
                   case 18:
                   case 13:
                   case 87:
                   case 54:
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                      {
                       do
                        {
                         trunc((vec3(1.5, 13.31, -94.39) + -2717.2190));
                        }
                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                   break;
                   case 32:
                   equal(bvec3(true, false, false), bvec3(false, false, true));
                   case 30:
                   ivec4(78349, -67646, -68673, 65727);
                   default:
                   1;
                  }
                }
               else
                {
                }
               case 79:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(                 (-3691.8831 - mat4x2(51.82, _GLF_IDENTITY(2929.4256, max(_GLF_IDENTITY(2929.4256, mix(float(_GLF_FUZZED(2213.6616)), float(2929.4256), _GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(0.0, 0.0)))).y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(0.0, 0.0)))).y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec3(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec3(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec3(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec3(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec3(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)))), true)))), false, true)))), true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))), false), bvec2(bvec3(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))) && true, true && ((bool(_GLF_IDENTITY(bvec2(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_IDENTITY(! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))), ! (! (_GLF_IDENTITY(! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))), (! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))) && true)))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))), ! (! (_GLF_IDENTITY(! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))), (! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))) && true)))), true))))))))))), false), bvec2(bvec3(bvec2(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))) && true)))))), 2929.4256)), 15.80, -7219.4933, -6987.0428, 14.49, -596.672, 89.88));
 true; 71371)
                  {
                   ivec4 _GLF_SWITCH_0_0v;
                   uvec2 _GLF_SWITCH_0_1v[64], _GLF_SWITCH_0_2v;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     bvec3(false, true, true);
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     for(                     notEqual(uvec3(194285u, 55837u, _GLF_IDENTITY(131000u, 0u + (131000u))), uvec3(_GLF_IDENTITY(92897u, 0u ^ (92897u)), 99465u, 165510u));
 true; bvec3(false, true, true).rbrg)
                      {
                       if(_GLF_IDENTITY((uvec3(199489u, _GLF_IDENTITY(97462u, (_GLF_IDENTITY(97462u, clamp(97462u, _GLF_IDENTITY(97462u, (97462u) >> 0u), 97462u))) | (97462u)), 128638u) != uvec3(_GLF_IDENTITY(93408u, (1u & 1u) * (_GLF_IDENTITY(93408u, 0u | (93408u)))), 94400u, _GLF_IDENTITY(106876u, (106876u) | (106876u)))), bool(_GLF_IDENTITY(bvec2((uvec3(_GLF_IDENTITY(199489u, _GLF_IDENTITY(clamp(199489u, 199489u, 199489u), (clamp(199489u, 199489u, 199489u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 97462u, 128638u) != uvec3(_GLF_IDENTITY(93408u, (1u & 1u) * (93408u)), _GLF_IDENTITY(94400u, (94400u) | (94400u)), _GLF_IDENTITY(106876u, (106876u) | (106876u)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((uvec3(199489u, _GLF_IDENTITY(97462u, ~ (~ (97462u))), 128638u) != uvec3(_GLF_IDENTITY(93408u, (1u & 1u) * (93408u)), 94400u, _GLF_IDENTITY(106876u, (106876u) | (106876u)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((uvec3(199489u, _GLF_IDENTITY(97462u, ~ (~ (97462u))), 128638u) != uvec3(_GLF_IDENTITY(93408u, (1u & 1u) * (93408u)), 94400u, _GLF_IDENTITY(106876u, (106876u) | (106876u)))), true), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2((uvec3(199489u, _GLF_IDENTITY(97462u, ~ (~ (97462u))), 128638u) != uvec3(_GLF_IDENTITY(93408u, (1u & 1u) * (93408u)), 94400u, _GLF_IDENTITY(106876u, (106876u) | (106876u)))), true), false))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2((uvec3(199489u, _GLF_IDENTITY(97462u, ~ (~ (97462u))), 128638u) != uvec3(_GLF_IDENTITY(93408u, (1u & 1u) * (93408u)), 94400u, _GLF_IDENTITY(106876u, (106876u) | (106876u)))), true), false))))))))), false))))))
                        {
                         uvec3 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                         (mat3x2(-24.50, -8985.8536, 2261.1659, 71.08, -4163.7543, 29.52) / mat3x2(3.1, -80.98, 583.076, -8774.3941, 3.5, 59.07));
                         uvec3 _GLF_SWITCH_0_6v;
                        }
                       else
                        {
                         sinh(acosh(-92.05));
                         do
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                              {
                               case 0:
                               case 80:
                               case 93:
                               case 24:
                               case 13:
                               case 67:
                               case 51:
                               case 21:
                               case 30:
                               case 84:
                               do
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   case 67:
                                   case 44:
                                   case 89:
                                   case 12:
                                   case 21:
                                   case 77:
                                   case 45:
                                   case 39:
                                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
                                    {
                                     abs(vec3(-512.907, -2018.7833, -2731.9788));
                                    }
                                   else
                                    {
                                    }
                                   break;
                                   case 96:
                                   mat2x3(mat4(9662.2548, 7.4, -8060.1356, -35.46, 1.6, 368.875, 858.204, -37.68, 7.7, -9.0, -61.32, 59.26, -3852.5422, 1.8, 454.008, -5.8));
                                   default:
                                   1;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               break;
                               case 77:
                               bitfieldInsert(ivec2(-15194, -69925), ivec2(62326, 2100), -73603, 2412);
                               case 85:
                               min(bitfieldExtract(virtual_gid, 20012, -58777), read_1);
                               default:
                               1;
                              }
                            }
                           else
                            {
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-819.412, -995.331)))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), min(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))) - vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED(((+ -3873.0212)))), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-819.412, -995.331)))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), min(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))) - vec2(0.0, 0.0)).x), bool(true))) > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             inverse(mat4(-5559.9897, 2147.9762, 3.3, 3.3, 4.0, 3.9, -3.8, 5.6, -48.80, -365.446, -4642.3875, 1.4, 380.169, -80.61, 145.699, _GLF_IDENTITY(389.826, max(_GLF_IDENTITY(389.826, min(389.826, 389.826)), 389.826))));
                            }
                          }
                         do
                          {
                           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
                            {
                             ;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         bvec4 _GLF_SWITCH_0_7v;
                        }
                       mat3(8.3, -6.8, 1213.0923, -445.534, -9.8, -28.79, -4.3, -35.75, 94.86);
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         do
                          {
                           _GLF_IDENTITY((182747u == 154531u), ((182747u == 154531u)) || false);
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
                        }
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _injected_loop_counter)) < 1); _injected_loop_counter ++)
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED((50432 - _injected_loop_counter)) : 0)), 1, 1))) & -227)); _injected_loop_counter --)
                          {
                           do
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 13:
                               mat2x4(4913.6923, 7606.1819, 3.4, 1.4, 5.8, -3.9, 19.47, -65.44);
                               case 0:
                               case 61:
                               case 38:
                               case 49:
                               if((findLSB(ivec3(57804, -36297, 45873)) != _GLF_IDENTITY(ivec3(37543, -4294, _GLF_IDENTITY(-4841, ~ (~ (-4841)))), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(37543, -4294, _GLF_IDENTITY(-4841, ~ (~ (-4841)))), (ivec3(37543, -4294, _GLF_IDENTITY(-4841, ~ (~ (-4841))))) >> ivec3(0, 0, 0))) + ivec3(0, 0, 0), ((_GLF_IDENTITY(ivec3(37543, -4294, _GLF_IDENTITY(-4841, ~ (~ (-4841)))), (ivec3(37543, -4294, _GLF_IDENTITY(-4841, ~ (~ (-4841))))) >> ivec3(0, 0, 0))) + ivec3(0, 0, 0)) ^ ivec3(0, 0, 0)))))
                                {
                                 findLSB((subgroup_size / _GLF_SWITCH_0_2v));
                                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                                  {
                                   (vec4(325.317, -0.1, _GLF_IDENTITY(7.6, (7.6) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 7.1)[3] - mat4x3(-3.6, -8567.9227, 75.14, 4.4, 4669.5577, 9.8, 245.895, -86.23, -9710.0249, -847.369, _GLF_IDENTITY(-3.4, max(-3.4, -3.4)), 757.605));
                                  }
                                 uvec4 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
                                 for(int _injected_loop_counter = (-88319 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     vec3(83.83, 5.7, 62.27);
                                    }
                                   else
                                    {
                                    }
                                  }
                                 _GLF_IDENTITY(ivec3(32042, bitfieldInsert(48432, bitfieldInsert(-52633, 63112, -45694, -93732), 48927, 78410), _GLF_SWITCH_0_0v.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-8646, 30871, -83393)), (_GLF_FUZZED(ivec3(-8646, 30871, -83393))) | (_GLF_FUZZED(ivec3(-8646, 30871, -83393)))) : ivec3(32042, bitfieldInsert(48432, _GLF_IDENTITY(bitfieldInsert(-52633, 63112, -45694, -93732), (bitfieldInsert(-52633, 63112, -45694, -93732)) ^ 0), 48927, 78410), _GLF_SWITCH_0_0v.x)));
                                 uvec2 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     ;
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               break;
                               case 81:
                               ivec3 _GLF_SWITCH_4_0v;
                               default:
                               1;
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(false)
                          {
                           vec3 _GLF_SWITCH_0_13v[19], _GLF_SWITCH_0_14v;
                           _GLF_IDENTITY(153267u, uint(uvec4(153267u, 1u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(9.9, -9099.2325, 1.2)[0]))), injectionSwitch.x)))));
                           ;
                           min(((uvec2(133450u, 135852u) * uvec2(10556u, 158340u)) + uvec2(128439u, 151944u)), _GLF_IDENTITY(num_workgroup, (num_workgroup) | (0u ^ 0u)));
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (0 & 90353))); _injected_loop_counter --)
                              {
                               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                {
                                 case 0:
                                 case 68:
                                 case 81:
                                 case 20:
                                 case 80:
                                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true)), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                                  {
                                  }
                                 else
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true, false))); _injected_loop_counter --)
                                    {
                                     (-3.3 - mat3x2(-13.50, 8108.4438, 1802.9398, 12.14, _GLF_IDENTITY(-50.82, float(_GLF_IDENTITY(float(_GLF_IDENTITY(-50.82, max(-50.82, -50.82))), mix(float(_GLF_FUZZED(-2.9)), float(float(_GLF_IDENTITY(-50.82, max(-50.82, -50.82)))), bool(true))))), 5.0));
                                    }
                                  }
                                 break;
                                 default:
                                 1;
                                }
                              }
                            }
                           greaterThan(_GLF_IDENTITY(ivec2(-34789, -37062), max(_GLF_IDENTITY(ivec2(-34789, -37062), (ivec2(-34789, -37062)) / ivec2(1, 1)), ivec2(-34789, _GLF_IDENTITY(-37062, max(-37062, -37062))))), min(ivec2(-22639, -36934), _GLF_IDENTITY(ivec2(60549, 97354), _GLF_IDENTITY((ivec2(60549, 97354)), clamp(_GLF_IDENTITY((ivec2(60549, 97354)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec2(45270, 85052)) : (ivec2(60549, 97354))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec2(45270, 85052)) : (ivec2(60549, 97354)))), ivec2(ivec4(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec2(45270, 85052)) : (ivec2(60549, 97354)))), 1, 1))) | ivec2(0, 0))), (ivec2(60549, 97354)), (ivec2(60549, 97354)))) | ivec2(0, 0))));
                           mat3x2 _GLF_SWITCH_0_15v[24], _GLF_SWITCH_0_16v;
                          }
                         else
                          {
                           bvec3(true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)), false, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), true))), false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), false))), false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(abs(-67243)) : 0)), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) - 0)))))], injectionSwitch[1])).y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), true))))), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || _GLF_IDENTITY(false, true && (false)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))), false, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true)), ! (! (true && (_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((true), ! (! ((true))))), ((! _GLF_IDENTITY((true), ! (! ((true)))))) && true), (! (! (true))) && true))))))), false, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true))), false, false), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ((true)) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY((true), ((true)) || false))) || false, ! (! ((! (_GLF_IDENTITY((true), ((true)) || false))) || false)))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), false)))))))), bool(bool(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bool(bool(bvec4(true, false, false, false)))))), ! (! (true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) && true), false, true)))), false)))))))))))))));
                           uvec2 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
                           uint _GLF_SWITCH_0_20v[11];
                           mat3x2(-7.2, -15.50, 6137.8901, 838.494, -29.98, -4993.9541);
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))
                            {
                            }
                           else
                            {
                             ivec3(_GLF_IDENTITY(28097, clamp(_GLF_IDENTITY(28097, (true ? 28097 : _GLF_FUZZED(16557))), 28097, 28097)), -78134, -67109);
                            }
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               equal(bvec4(true, true, true, false), (bvec4(false, true, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(vec3(min(injectionSwitch, injectionSwitch), abs(1.0)), vec3(mat2x3(vec3(min(injectionSwitch, injectionSwitch), abs(1.0)), 1.0, 1.0, 0.0)))))))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(vec3(min(injectionSwitch, injectionSwitch), abs(1.0)), vec3(mat2x3(vec3(min(injectionSwitch, injectionSwitch), abs(1.0)), 1.0, 1.0, 0.0)))))))).x > injectionSwitch.y))))))));
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                   uvec2 _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v[59];
                   mat4x3(3091.7893, 5563.8019, -371.483, 1335.8750, -241.940, -4250.8028, -2.3, 59.30, -3.6, -2.9, 79.97, 0.6);
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                        {
                        }
                       else
                        {
                         while(true)
                          {
                           64092;
                           if(false)
                            {
                             vec2 _GLF_SWITCH_0_23v[79], _GLF_SWITCH_0_24v;
                             mat3 _GLF_SWITCH_0_25v;
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               ;
                              }
                             else
                              {
                              }
                            }
                           mat4(1891.2739, 22.20, -2686.9815, 745.039, -2327.4991, _GLF_IDENTITY(-55.75, (-55.75) / sqrt(1.0)), 8.0, -87.69, 372.204, -1.0, 5.2, -2240.2134, -1631.0936, 459.948, 7.7, 7002.4980);
                           do
                            {
                             mat3x2(vec2(-293.220, -4.8)[0], -2.9, 4.2, -6645.8614, -8985.1260, 5585.7149);
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           bvec3 _GLF_SWITCH_0_26v;
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             do
                              {
                               if(true)
                                {
                                 do
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 0:
                                     case 14:
                                     case 98:
                                     case 76:
                                     case 47:
                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                      {
                                       ;
                                      }
                                     break;
                                     default:
                                     1;
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 mat3x2 _GLF_SWITCH_0_27v[71], _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1), (ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1)) ^ ivec4(0, 0, 0, 0))), min(int(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1), (ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1)) ^ ivec4(0, 0, 0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1), (ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1)) ^ ivec4(0, 0, 0, 0))), (false ? _GLF_FUZZED(-25631) : int(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1), (ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1)) ^ ivec4(0, 0, 0, 0))))))))); _injected_loop_counter --)
                                    {
                                     _GLF_SWITCH_0_26v;
                                    }
                                  }
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) < injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))))))
                                  {
                                   for(int _injected_loop_counter = _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)), false || (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)), bool(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))))))))); _injected_loop_counter --)
                                    {
                                     vec4(8.1, 8835.4571, -26.38, -7.1);
                                    }
                                  }
                                 else
                                  {
                                  }
                                 mat2x3(709.854, 93.57, 5.2, -630.910, -6847.7487, 2.8);
                                 mat3x2 _GLF_SWITCH_0_30v;
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                            }
                           do
                            {
                             switch(_GLF_SWITCH(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) + (0 << _GLF_IDENTITY(int(0), int(0))))))), int(ivec2((0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) + (_GLF_IDENTITY(0, (0) << 0) << _GLF_IDENTITY(int(0), int(0))))))), 1))))), min(int(ivec3(0, 0, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 | (3))), int(3))))), int(ivec3(0, 0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 ^ (0)))) << _GLF_IDENTITY(int(3), int(3))))))))))
                              {
                               case 98:
                               mat2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[75], _GLF_SWITCH_1_2v;
                               case 0:
                               case 48:
                               case 69:
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 + (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7458) : _injected_loop_counter ++)))))
                                {
                                 do
                                  {
                                   do
                                    {
                                     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y) || false))))) && true))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))))
                                        {
                                         mat4x2(-6.6, 181.245, 5.9, 2653.9458, _GLF_IDENTITY(-3.8, _GLF_IDENTITY((-3.8), mix(float((-3.8)), float(_GLF_FUZZED(vec2(3262.7715, 3.7).y)), bool(false))) / 1.0), 9214.7994, -44.99, 6538.2994);
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               case 19:
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) && true)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), (! (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))) || false))), ! (! (_GLF_IDENTITY((! (! (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), true && ((! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))))))) && true))))))))))
                                {
                                 do
                                  {
                                   equal(uvec2(15999u, 173437u), _GLF_SWITCH_0_2v);
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               else
                                {
                                }
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))))))), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x < injectionSwitch.y))))))
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   case 99:
                                   case 42:
                                   case 14:
                                   case 93:
                                   transpose(_GLF_IDENTITY(mat4(-8.6, -89.68, -11.87, 7.1, _GLF_IDENTITY(7303.4991, (7303.4991) / 1.0), -7.6, -601.692, -6.2, 30.67, 6.3, 745.583, 23.54, 2387.9791, 2.0, _GLF_IDENTITY(6984.9785, min(6984.9785, 6984.9785)), 4.1), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, abs(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))) < injectionSwitch.y)) ? mat4(-8.6, -89.68, -11.87, 7.1, 7303.4991, -7.6, -601.692, -6.2, 30.67, 6.3, 745.583, 23.54, 2387.9791, 2.0, _GLF_IDENTITY(6984.9785, (false ? _GLF_FUZZED(-583.822) : 6984.9785)), 4.1) : _GLF_FUZZED(mat4(9649.3746, 75.13, 91.89, -9.5, -3.8, _GLF_IDENTITY(8.5, min(8.5, 8.5)), 9864.1589, 12.29, -29.10, -3.1, 5.4, -6626.4544, -6819.0146, 470.895, 50.89, -0.1)))));
                                   break;
                                   default:
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     switch(_GLF_SWITCH(0))
                                      {
                                       case 47:
                                       mat4x3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                                       case 4:
                                       (mat2x4(-8.0, -506.214, -934.799, 72.10, 75.88, -32.54, -1390.7051, 4609.7549) * mat4x2(5.7, -2.2, -6.7, 188.187, -7.9, -2.4, -0.7, 0.7));
                                       case 0:
                                       case 93:
                                       case 10:
                                       case 63:
                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8102.7809, 278.821)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             1;
                                            }
                                          }
                                        }
                                       break;
                                       case 49:
                                       injectionSwitch;
                                       default:
                                       1;
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               else
                                {
                                }
                               case 78:
                               case 88:
                               vec3 _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
                               uvec2 _GLF_SWITCH_0_33v[35], _GLF_SWITCH_0_34v[78];
                               case 35:
                               mat4(-3198.2934, 8.6, -4996.3950, -364.634, 740.774, -2.6, 7791.3779, 524.494, -53.42, 2200.9441, _GLF_IDENTITY(9825.1908, (9825.1908) - 0.0), -5.7, -0.9, 5.3, -8657.6277, 27.84);
                               do
                                {
                                 do
                                  {
                                   (_GLF_IDENTITY(ivec4(-77683, 21030, 48491, 63764), ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (ivec4(-77683, 21030, 48491, 63764))) << 43940);
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               break;
                               case 83:
                               bool _GLF_SWITCH_1_3v;
                               case 87:
                               int _GLF_SWITCH_1_4v[89], _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v;
                               default:
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < 1); _injected_loop_counter ++)
                                {
                                 1;
                                }
                              }
                            }
                           while(false);
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   for(uvec3 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v; false; ((mat2x4(-55.26, 56.68, _GLF_IDENTITY(-4.9, max(-4.9, -4.9)), -5.6, -2.2, -321.824, -0.9, 7.6) + inversesqrt(-9.1)) * mat3x2(mat4(4.5, _GLF_IDENTITY(_GLF_IDENTITY(-5354.1675, max(-5354.1675, -5354.1675)), max(_GLF_IDENTITY(_GLF_IDENTITY(-5354.1675, max(-5354.1675, -5354.1675)), float(mat4x3(_GLF_IDENTITY(-5354.1675, max(-5354.1675, -5354.1675)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0)))), _GLF_IDENTITY(-5354.1675, max(-5354.1675, -5354.1675)))), -6.9, 372.062, 586.213, _GLF_IDENTITY(-1.2, mix(float(_GLF_FUZZED(-25.11)), float(-1.2), bool(true))), 87.51, -6.5, -3.7, 429.921, -2.9, 62.32, _GLF_IDENTITY(0.8, (true ? 0.8 : _GLF_FUZZED(degrees(6830.0591)))), -23.62, 0.4, 7.5))))
                    {
                     mat4 _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v;
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       for(uint _GLF_SWITCH_0_41v; true; lessThanEqual(vec4(-2140.2383, 12.98, 59.36, -6693.4777), vec4(-2339.9955, 1.3, -359.520, -576.736)))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 27:
                           case 50:
                           case 10:
                           case 98:
                           case 74:
                           case 21:
                           case 48:
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             switch(_GLF_SWITCH(((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))), int(7))), int(7)), ~ (~ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))), int(7))), int(7)))))) | 0)))
                              {
                               case 3:
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 88:
                                   _GLF_SWITCH_0_37v;
                                   case 74:
                                   ;
                                   case 0:
                                   case 1:
                                   case 62:
                                   case 11:
                                   case 69:
                                   case 26:
                                   case 22:
                                   case 32:
                                   case 51:
                                   case 59:
                                   ;
                                   break;
                                   case 3:
                                   ivec4 _GLF_SWITCH_5_0v[59];
                                   case 97:
                                   equal((true ? _GLF_SWITCH_0_21v : _GLF_SWITCH_0_2v), _GLF_SWITCH_2_0v);
                                   default:
                                   1;
                                  }
                                }
                               case 0:
                               case 99:
                               case 74:
                               2.9;
                               do
                                {
                                 switch(_GLF_SWITCH((0 | 0)))
                                  {
                                   case 0:
                                   case 20:
                                   case 37:
                                   case 30:
                                   case 59:
                                   switch(_GLF_SWITCH((1 ^ (((1 ^ 0) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))
                                    {
                                     case 0:
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       mat3x2(-6.6, 30.64, 5.2, -366.808, _GLF_IDENTITY(911.422, _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (911.422)), 7.0);
                                      }
                                     break;
                                     case 77:
                                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                      {
                                       mat2x3(-0.5, -18.08, 5.0, -28.26, _GLF_IDENTITY(9.9, mix(float(9.9), float(_GLF_FUZZED(vec4(-2.1, 115.514, -74.46, 6978.0630).a)), bool(false))), -0.4);
                                      }
                                     default:
                                     1;
                                    }
                                   break;
                                   case 84:
                                   vec2 _GLF_SWITCH_5_0v[58];
                                   case 40:
                                   uvec2 _GLF_SWITCH_5_1v;
                                   default:
                                   1;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                               _GLF_IDENTITY(_GLF_IDENTITY(tan(vec3(-63.38, -97.17, 2206.8405)), (tan(vec3(-63.38, -97.17, 2206.8405))) + vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(412.576) : 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0)))), vec3(mat2x4(_GLF_IDENTITY(tan(vec3(-63.38, -97.17, 2206.8405)), min(tan(vec3(-63.38, -97.17, 2206.8405)), tan(vec3(-63.38, -97.17, 2206.8405)))), 0.0, 0.0, 0.0, 1.0, 0.0)));
                               bvec4 _GLF_SWITCH_0_42v;
                               case 5:
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   (mat2x3(6.7, -7.0, 7.8, -2959.7503, _GLF_IDENTITY(_GLF_IDENTITY(5.9, _GLF_IDENTITY(float(float(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((-2854.1636 * -2.9))), float(5.9), bool(true))))), min(float(float(_GLF_IDENTITY(_GLF_IDENTITY(5.9, float(_GLF_IDENTITY(mat2x4(5.9, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (true ? mat2x4(5.9, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0) : _GLF_FUZZED(mat2x4(2722.3044, -8.0, -557.181, -6.5, 0.3, -9.5, -7.3, -470.438)))))), mix(float(_GLF_FUZZED((-2854.1636 * -2.9))), float(5.9), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(bool(true), true)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(true), true)), ! (! (bool(bvec2(bool(true), true)))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, false))))), false, true))))) || false))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((-2854.1636 * _GLF_IDENTITY(-2.9, sin(0.0) + (_GLF_IDENTITY(-2.9, mix(float(-2.9), float(_GLF_FUZZED(-2.7)), bool(false)))))))), float(5.9), bool(true))), (_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((-2854.1636 * _GLF_IDENTITY(-2.9, sin(0.0) + (_GLF_IDENTITY(-2.9, mix(float(-2.9), float(_GLF_FUZZED(-2.7)), bool(false)))))))), float(5.9), bool(true)))) / 1.0)))))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(5.9, _GLF_IDENTITY(float(float(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((-2854.1636 * -2.9))), float(5.9), bool(true))))), min(_GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(5.9, float(_GLF_IDENTITY(mat2x4(5.9, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, log(1.0), 1.0), (true ? mat2x4(5.9, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0) : _GLF_FUZZED(mat2x4(2722.3044, -8.0, -557.181, -6.5, 0.3, -9.5, -7.3, -470.438)))))), mix(float(_GLF_FUZZED((-2854.1636 * _GLF_IDENTITY(-2.9, (true ? -2.9 : _GLF_FUZZED(195.361)))))), float(5.9), bool(true))))), (false ? _GLF_FUZZED((-330.211)) : _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(5.9, float(_GLF_IDENTITY(mat2x4(5.9, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, log(1.0), 1.0), (true ? mat2x4(5.9, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0) : _GLF_FUZZED(mat2x4(2722.3044, -8.0, -557.181, -6.5, 0.3, -9.5, -7.3, -470.438)))))), mix(float(_GLF_FUZZED((-2854.1636 * _GLF_IDENTITY(-2.9, (true ? -2.9 : _GLF_FUZZED(195.361)))))), float(5.9), bool(true))))), clamp(_GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(5.9, float(_GLF_IDENTITY(mat2x4(5.9, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, log(1.0), 1.0), (true ? mat2x4(5.9, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0) : _GLF_FUZZED(mat2x4(2722.3044, -8.0, -557.181, -6.5, 0.3, -9.5, -7.3, -470.438)))))), mix(float(_GLF_FUZZED((-2854.1636 * _GLF_IDENTITY(-2.9, (true ? -2.9 : _GLF_FUZZED(195.361)))))), float(5.9), bool(true))))), float(mat3(float(float(_GLF_IDENTITY(_GLF_IDENTITY(5.9, float(_GLF_IDENTITY(mat2x4(5.9, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, log(1.0), 1.0), (true ? mat2x4(5.9, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0) : _GLF_FUZZED(mat2x4(2722.3044, -8.0, -557.181, -6.5, 0.3, -9.5, -7.3, -470.438)))))), mix(float(_GLF_FUZZED((-2854.1636 * _GLF_IDENTITY(-2.9, (true ? -2.9 : _GLF_FUZZED(195.361)))))), float(5.9), bool(true))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(5.9, float(_GLF_IDENTITY(mat2x4(5.9, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, log(1.0), 1.0), (true ? mat2x4(5.9, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0) : _GLF_FUZZED(mat2x4(2722.3044, -8.0, -557.181, -6.5, 0.3, -9.5, -7.3, -470.438)))))), mix(float(_GLF_FUZZED((-2854.1636 * _GLF_IDENTITY(-2.9, (true ? -2.9 : _GLF_FUZZED(195.361)))))), float(5.9), bool(true))))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(5.9, float(_GLF_IDENTITY(mat2x4(5.9, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, log(1.0), 1.0), (true ? mat2x4(5.9, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0) : _GLF_FUZZED(mat2x4(2722.3044, -8.0, -557.181, -6.5, 0.3, -9.5, -7.3, -470.438)))))), mix(float(_GLF_FUZZED((-2854.1636 * _GLF_IDENTITY(-2.9, (true ? -2.9 : _GLF_FUZZED(195.361)))))), float(5.9), bool(true))))))))), float(float(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((-2854.1636 * _GLF_IDENTITY(-2.9, sin(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(-2.9, mix(float(-2.9), float(_GLF_FUZZED(-2.7)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(-2.9, mix(float(-2.9), float(_GLF_FUZZED(-2.7)), bool(false))), clamp(_GLF_IDENTITY(-2.9, mix(float(-2.9), float(_GLF_FUZZED(-2.7)), bool(false))), _GLF_IDENTITY(-2.9, mix(float(-2.9), float(_GLF_FUZZED(-2.7)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(-2.9, mix(float(-2.9), float(_GLF_FUZZED(-2.7)), bool(false))), max(_GLF_IDENTITY(-2.9, mix(float(-2.9), float(_GLF_FUZZED(-2.7)), bool(false))), _GLF_IDENTITY(-2.9, mix(float(-2.9), float(_GLF_FUZZED(-2.7)), bool(false))))))), _GLF_IDENTITY(-2.9, mix(float(-2.9), float(_GLF_FUZZED(-2.7)), bool(false))), _GLF_IDENTITY(-2.9, mix(float(-2.9), float(_GLF_FUZZED(-2.7)), bool(false)))))))))), float(5.9), bool(true)))))))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0))), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, sin(0.0)), (false ? _GLF_FUZZED(pow(vec2(36.14, 79.60), round(injectionSwitch))) : _GLF_IDENTITY(vec2(0.0, sin(0.0)), (true ? vec2(0.0, sin(0.0)) : _GLF_FUZZED(vec2(-5.2, -8.3))))))), dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(log(1.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(0.0)), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(vec2(0.0, sqrt(0.0)), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), 0.0, 1.0)), (false ? _GLF_FUZZED(-4.7) : float(mat2x4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(log(1.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(0.0)), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), dot(vec2(0.0, sqrt(0.0)), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), 0.0, 1.0))))), sin(0.0)), (true ? _GLF_IDENTITY(vec2(0.0, sin(0.0)), clamp(vec2(0.0, sin(0.0)), vec2(0.0, sin(0.0)), vec2(0.0, sin(0.0)))) : _GLF_FUZZED(injectionSwitch))))), 1.0)), min(float(mat3x4(_GLF_IDENTITY(5.9, _GLF_IDENTITY(float(float(_GLF_IDENTITY(5.9, mix(float(_GLF_IDENTITY(_GLF_FUZZED((-2854.1636 * -2.9)), max(_GLF_FUZZED((-2854.1636 * -2.9)), _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(-2854.1636, min(_GLF_IDENTITY(-2854.1636, clamp(-2854.1636, -2854.1636, -2854.1636)), -2854.1636)) * -2.9)), _GLF_IDENTITY((true ? _GLF_FUZZED((-2854.1636 * -2.9)) : _GLF_FUZZED(-1413.6925)), clamp((true ? _GLF_FUZZED((-2854.1636 * -2.9)) : _GLF_FUZZED(-1413.6925)), _GLF_IDENTITY((true ? _GLF_FUZZED((-2854.1636 * -2.9)) : _GLF_FUZZED(-1413.6925)), (false ? _GLF_FUZZED(1.0) : (true ? _GLF_FUZZED((-2854.1636 * -2.9)) : _GLF_FUZZED(-1413.6925)))), (true ? _GLF_FUZZED((-2854.1636 * -2.9)) : _GLF_FUZZED(-1413.6925)))))))), _GLF_IDENTITY(float(5.9), max(float(5.9), float(5.9))), bool(true))))), min(float(float(_GLF_IDENTITY(_GLF_IDENTITY(5.9, float(_GLF_IDENTITY(mat2x4(5.9, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (true ? mat2x4(5.9, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0) : _GLF_FUZZED(mat2x4(2722.3044, -8.0, -557.181, _GLF_IDENTITY(-6.5, float(mat4x2(_GLF_IDENTITY(-6.5, (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)) ? -6.5 : _GLF_FUZZED(4.3))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.3, -9.5, -7.3, -470.438)))))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED((-2854.1636 * -2.9))), min(_GLF_IDENTITY(float(_GLF_FUZZED((-2854.1636 * -2.9))), mix(float(float(_GLF_FUZZED((-2854.1636 * -2.9)))), float(_GLF_FUZZED(2599.1273)), bool(false))), _GLF_IDENTITY(float(_GLF_FUZZED((-2854.1636 * -2.9))), (true ? float(_GLF_FUZZED((-2854.1636 * -2.9))) : _GLF_FUZZED(-96.54))))), float(5.9), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED((-2854.1636 * -2.9))), float(5.9), bool(true)), (mix(float(_GLF_FUZZED((-2854.1636 * _GLF_IDENTITY(-2.9, mix(float(_GLF_FUZZED(-93.52)), float(-2.9), bool(true)))))), float(5.9), bool(true))) + 0.0), mix(float(_GLF_FUZZED((-2854.1636 * -2.9))), float(5.9), bool(true))))))), float(float(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((-2854.1636 * _GLF_IDENTITY(-2.9, sin(0.0) + (_GLF_IDENTITY(-2.9, mix(float(-2.9), float(_GLF_FUZZED(-2.7)), bool(false)))))))), float(5.9), _GLF_IDENTITY(bool(true), ! (! (bool(true))))))))))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0))), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0)))), 1.0)), float(mat3x4(_GLF_IDENTITY(5.9, _GLF_IDENTITY(float(float(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((-2854.1636 * -2.9))), float(5.9), bool(true))))), min(float(float(_GLF_IDENTITY(_GLF_IDENTITY(5.9, float(_GLF_IDENTITY(mat2x4(5.9, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0), (true ? mat2x4(5.9, 0.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0) : _GLF_FUZZED(mat2x4(2722.3044, -8.0, -557.181, -6.5, 0.3, -9.5, -7.3, -470.438)))))), mix(float(_GLF_FUZZED((-2854.1636 * -2.9))), float(5.9), bool(true))))), float(float(_GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-2854.1636, min(-2854.1636, _GLF_IDENTITY(-2854.1636, (-2854.1636) - 0.0))) * _GLF_IDENTITY(-2.9, sin(0.0) + (_GLF_IDENTITY(-2.9, mix(float(-2.9), float(_GLF_FUZZED(-2.7)), bool(false)))))))), float(5.9), bool(true)))))))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec3(1.0, 0.0, 0.0))), cos(0.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0)))), 1.0))))), -65.29) + mat2x3(-9.4, _GLF_IDENTITY(-7.3, clamp(_GLF_IDENTITY(-7.3, mix(float(-7.3), float(_GLF_FUZZED(-9.3)), bool(false))), _GLF_IDENTITY(-7.3, min(-7.3, -7.3)), -7.3)), 205.339, -406.234, -943.364, 61.60));
                                  }
                                }
                               case 60:
                               case 7:
                               vec4 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v[28];
                               case 16:
                               int _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v;
                               case 88:
                               case 15:
                               bool _GLF_SWITCH_0_47v;
                               case 38:
                               vec4 _GLF_SWITCH_0_48v[54], _GLF_SWITCH_0_49v;
                               break;
                               default:
                               1;
                              }
                            }
                           break;
                           case 96:
                           ;
                           case 65:
                           ;
                           default:
                           1;
                          }
                        }
                      }
                     for(uvec3 _GLF_SWITCH_0_50v[45]; any(bvec3(true, false, false)); bvec2(bvec4(true, bvec2(true, true).tss)))
                      {
                      }
                     while(false)
                      {
                       equal(lessThan(vec4(_GLF_IDENTITY(-8.0, min(-8.0, _GLF_IDENTITY(-8.0, min(-8.0, _GLF_IDENTITY(-8.0, (true ? -8.0 : _GLF_FUZZED(-0.2))))))), -5.3, -2.6, 888.974), _GLF_IDENTITY(vec4(-734.983, 199.046, 501.642, 3.7), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))) ? _GLF_FUZZED((_GLF_SWITCH_0_40v * tan(vec4(-36.65, -56.36, -1631.7548, -646.944)))) : vec4(-734.983, 199.046, 501.642, _GLF_IDENTITY(3.7, float(mat2(3.7, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))))), bvec4(true, true, true, true));
                       ;
                       uvec4 _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v;
                       roundEven(vec4(-96.02, 2910.9493, 8897.6772, -3.7));
                       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(int(int(_GLF_IDENTITY(3, min(3, 3)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           bvec2(bvec4(true, true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), false, true))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, false))))))) || false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), false, true))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, false))))))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
                          }
                        }
                       uvec2 _GLF_SWITCH_0_53v, _GLF_SWITCH_0_54v;
                      }
                     bvec2 _GLF_SWITCH_0_55v[41], _GLF_SWITCH_0_56v[73];
                    }
                  }
                }
               default:
               do
                {
                 1;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
             for(int _injected_loop_counter = (0 | (0 ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) && true) || false), (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, length(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, length(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3x4(injectionSwitch.y, sqrt(1.0), 1.0, length(0.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.2)), float(1.0), bool(true))))), 1.0, 0.0, 0.0, 1.0, 1.0)) * mat3(1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) + 1, 4, 64, 4);
              }
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   subgroupAll(true);
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         break;
         case 3:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0))))); _injected_loop_counter --)
            {
             (vec4(-276.932, -160.549, 183.374, -9.8) , uvec2(159203u, 60392u));
            }
          }
         case 18:
         (vec3(-8.5, 2.7, -4963.8989).g / mat2x4(182.562, 1.6, -48.70, 7.2, -6746.5354, 5413.1558, -12.06, 61.22));
         default:
         1;
        }
      }
     else
      {
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) || false)) || false));
  }
 while(_GLF_WRAPPED_LOOP(false));
}
