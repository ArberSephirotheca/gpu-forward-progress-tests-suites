#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 bool _f0;
 bvec4 _f1;
 int _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_13 {
 mat3 _f0;
 mat3x4 _f1;
 uint _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 bvec3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
} ;

struct _GLF_struct_15 {
 uvec3 _f0;
 ivec2 _f1;
 _GLF_struct_11 _f2;
 mat4x2 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 uint read_1;
} ;

struct _GLF_struct_16 {
 _GLF_struct_10 _f0;
 _GLF_struct_15 _f1;
 int _f2;
} ;

struct _GLF_struct_9 {
 uint subgroup_local_id;
 uint _f0;
} ;

struct _GLF_struct_6 {
 bool _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 mat3x2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 float _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 uvec3 _f1;
 float _f2;
 mat2x3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 vec2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 uint _f1;
 mat3 _f2;
 vec3 _f3;
 mat4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 int _f1;
 int _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 bvec4 _f4;
 bool _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 uint next_virtual_gid;
 _GLF_struct_7 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), true && (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))) && true)))); _injected_loop_counter ++)
  {
   do
    {
     GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y = subgroup_id;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)));
  }
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(gl_SubgroupInvocationID, 1u);
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 & -91773), ((0 & -91773)) / 1)); _injected_loop_counter --)
    {
     GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.x = num_workgroup;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.w = workgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.w = _GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)))) * 1u);
 uint workgroup_base = workgroup_size * GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.w;
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y * subgroup_size + _GLF_struct_replacement_9.subgroup_local_id;
 do
  {
   for(int _injected_loop_counter = (0 ^ (0 >> _GLF_IDENTITY(int(3), int(3)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z = virtual_gid;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_4(_GLF_struct_0(bvec3(true), 1, 1, ivec3(1)), _GLF_struct_1(mat2(1.0), 1u, mat3(1.0), vec3(1.0), mat4(1.0), mat3(1.0)), _GLF_struct_2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(1.0, max(1.0, 1.0))))), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) - vec2(0.0, 0.0)))), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-8.5, _GLF_IDENTITY(max(-8.5, _GLF_IDENTITY(-8.5, float(float(-8.5)))), min(_GLF_IDENTITY(max(-8.5, _GLF_IDENTITY(-8.5, float(float(-8.5)))), max(max(-8.5, _GLF_IDENTITY(-8.5, float(float(-8.5)))), _GLF_IDENTITY(max(-8.5, _GLF_IDENTITY(-8.5, float(float(-8.5)))), mix(float(max(-8.5, _GLF_IDENTITY(-8.5, float(float(-8.5))))), float(_GLF_FUZZED(-6.7)), bool(false))))), max(-8.5, _GLF_IDENTITY(-8.5, float(float(-8.5))))))))), float(1.0), bool(true))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(830.713, 2.6)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(94.09), _GLF_FUZZED(5336.0723)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))) : _GLF_FUZZED(vec2(-7.6, -28.03)))))).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(830.713, 2.6)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(94.09), _GLF_FUZZED(5336.0723)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))) : _GLF_FUZZED(vec2(-7.6, -28.03)))))).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(830.713, 2.6)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(94.09), _GLF_FUZZED(5336.0723)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true))) : _GLF_FUZZED(vec2(-7.6, -28.03)))))).y)))) && true)) ? 1.0 : _GLF_FUZZED(14.54)))), _GLF_IDENTITY(mix(vec2((vec2(1.0))[0], _GLF_IDENTITY((vec2(1.0))[1], max((vec2(1.0))[1], _GLF_IDENTITY((vec2(1.0)), clamp((vec2(1.0)), (vec2(1.0)), _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(732.595))))))), mat2(1.0) * ((vec2(1.0))))))[1]))), vec2(_GLF_FUZZED(7450.1794), _GLF_FUZZED((608.628 + _GLF_IDENTITY(-3.4, (true ? -3.4 : _GLF_FUZZED(949.899)))))), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), false, false))))), (true ? mix(vec2((vec2(1.0))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0))[1], max((_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(2.8), _GLF_FUZZED(5.0)), vec2((vec2(1.0))[0], (vec2(1.0))[1]), bvec2(true, true))))[1], (vec2(1.0))[1])), (true ? _GLF_IDENTITY((vec2(1.0))[1], max((_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], (vec2(1.0))[1]), vec2(_GLF_FUZZED(-554.863), _GLF_FUZZED(-5.2)), bvec2(false, false))), mix(vec2(_GLF_FUZZED(2.8), _GLF_FUZZED(_GLF_IDENTITY(5.0, (true ? 5.0 : _GLF_FUZZED(-3.7))))), vec2((vec2(1.0))[0], (vec2(1.0))[1]), bvec2(true, true))))[1], (vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (float(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) - 0.0))))[1])) : _GLF_FUZZED(-2.5)))), vec2(_GLF_FUZZED(7450.1794), _GLF_FUZZED(_GLF_IDENTITY((608.628 + -3.4), (_GLF_IDENTITY((608.628 + -3.4), max((608.628 + -3.4), (608.628 + -3.4)))) / 1.0))), bvec2(false, false)) : _GLF_FUZZED(vec2(vec4(-8.4, 4.1, 3955.9085, -6.7)))))) : _GLF_IDENTITY(_GLF_FUZZED(cosh(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))), mat2(1.0) * (_GLF_FUZZED(cosh(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1796.9547), _GLF_FUZZED(-2.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / vec2(1.0, 1.0)))))))), _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat3(-5458.3234, -9.5, -4.5, 8.4, -2945.2418, -85.78, -0.8, 9.0, _GLF_IDENTITY(-42.39, (true ? -42.39 : _GLF_FUZZED(5.9))))), transpose(transpose(_GLF_IDENTITY(_GLF_FUZZED(mat3(-5458.3234, -9.5, -4.5, 8.4, -2945.2418, -85.78, -0.8, 9.0, -42.39)), transpose(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat3(-5458.3234, -9.5, -4.5, 8.4, -2945.2418, -85.78, -0.8, 9.0, _GLF_IDENTITY(-42.39, (-42.39) / 1.0)))), (false ? _GLF_FUZZED(mat3(-7.3, 102.047, -551.060, -6.5, 8.6, 15.65, 864.735, -422.042, -615.337)) : transpose(_GLF_FUZZED(mat3(-5458.3234, -9.5, -4.5, 8.4, -2945.2418, -85.78, -0.8, 9.0, -42.39))))))))))))), _GLF_struct_3(_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(1))), uvec3(1u), 1.0, mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6809.5800) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), uvec4(1u)), bvec4(true), true), workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_9.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), max(uvec4(subgroup_size, 1u, 0u, 0u), uvec4(subgroup_size, 1u, 0u, 0u))))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) - 0u), 0u)))))))), max(_GLF_IDENTITY((_GLF_struct_replacement_9.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_size, 1u, 0u, 0u))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))), ~ (~ (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (0u), (0u))), _GLF_IDENTITY((0u), max((0u), (0u))))))))))) - 0u), 0u)))))))), uint(uvec2((_GLF_struct_replacement_9.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (true ? clamp(1u, 1u, 1u) : _GLF_FUZZED(subgroup_id)))), 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u))), 0u))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), ~ (~ (_GLF_IDENTITY(~ (~ (0u)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))))), (~ (~ (0u))) ^ 0u), ~ (~ (0u)), ~ (~ (0u)))))))))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), ~ (~ (_GLF_IDENTITY(~ (~ (0u)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))))), (~ (~ (0u))) ^ 0u), ~ (~ (0u)), ~ (~ (0u)))))))))))), ((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), ~ (~ (_GLF_IDENTITY(~ (~ (0u)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))))), (~ (~ (0u))) ^ 0u), ~ (~ (0u)), ~ (~ (0u))))))))))))) | 0u))) - 0u), _GLF_IDENTITY(0u, 0u | (0u)))))))))), (1u | 1u)))), (_GLF_struct_replacement_9.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))))), clamp(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u))), 0u, 0u), uvec4(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 0u, 0u) ^ (uvec4(subgroup_size, 1u, 0u, 0u))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) - 0u), 0u), max(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u), ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) - 0u), 0u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u | 0u)))))) - 0u), 0u))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_9.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), max(uvec4(subgroup_size, 1u, 0u, 0u), uvec4(subgroup_size, 1u, 0u, 0u))))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) - 0u), 0u)))))))), max(_GLF_IDENTITY((_GLF_struct_replacement_9.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_size, 1u, 0u, 0u))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))), ~ (~ (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (0u), (0u))), _GLF_IDENTITY((0u), max((0u), (0u))))))))))) - 0u), 0u)))))))), uint(uvec2((_GLF_struct_replacement_9.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (true ? clamp(1u, 1u, 1u) : _GLF_FUZZED(subgroup_id)))), 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u))), 0u))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), ~ (~ (_GLF_IDENTITY(~ (~ (0u)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))))), (~ (~ (0u))) ^ 0u), ~ (~ (0u)), ~ (~ (0u)))))))))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), ~ (~ (_GLF_IDENTITY(~ (~ (0u)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))))), (~ (~ (0u))) ^ 0u), ~ (~ (0u)), ~ (~ (0u)))))))))))), ((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), ~ (~ (_GLF_IDENTITY(~ (~ (0u)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))))), (~ (~ (0u))) ^ 0u), ~ (~ (0u)), ~ (~ (0u))))))))))))) | 0u))) - 0u), _GLF_IDENTITY(0u, 0u | (0u)))))))))), (1u | 1u)))), (_GLF_struct_replacement_9.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))))), clamp(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u))), 0u, 0u), uvec4(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 0u, 0u) ^ (uvec4(subgroup_size, 1u, 0u, 0u))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) - 0u), 0u), max(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u), ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) - 0u), 0u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u | 0u)))))) - 0u), 0u))))))))))))), ((_GLF_IDENTITY((_GLF_struct_replacement_9.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), max(uvec4(subgroup_size, 1u, 0u, 0u), uvec4(subgroup_size, 1u, 0u, 0u))))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) - 0u), 0u)))))))), max(_GLF_IDENTITY((_GLF_struct_replacement_9.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_size, 1u, 0u, 0u))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))), ~ (~ (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), clamp(_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))), (0u), (0u))), _GLF_IDENTITY((0u), max((0u), (0u))))))))))) - 0u), 0u)))))))), uint(uvec2((_GLF_struct_replacement_9.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (true ? clamp(1u, 1u, 1u) : _GLF_FUZZED(subgroup_id)))), 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u))), 0u))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), ~ (~ (uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), ~ (~ (_GLF_IDENTITY(~ (~ (0u)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))))), (~ (~ (0u))) ^ 0u), ~ (~ (0u)), ~ (~ (0u)))))))))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), ~ (~ (_GLF_IDENTITY(~ (~ (0u)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))))), (~ (~ (0u))) ^ 0u), ~ (~ (0u)), ~ (~ (0u)))))))))))), ((_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), ~ (~ (_GLF_IDENTITY(~ (~ (0u)), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))))), (~ (~ (0u))) ^ 0u), ~ (~ (0u)), ~ (~ (0u))))))))))))) | 0u))) - 0u), _GLF_IDENTITY(0u, 0u | (0u)))))))))), (1u | 1u)))), (_GLF_struct_replacement_9.subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))))), clamp(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u))), 0u, 0u), uvec4(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 0u, 0u) ^ (uvec4(subgroup_size, 1u, 0u, 0u))), uvec4(subgroup_size, 1u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_size, 1u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) - 0u), 0u), max(uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u), ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))) - 0u), 0u), uvec4(subgroup_size, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u | 0u)))))) - 0u), 0u)))))))))))))) ^ 0u)) ^ (0u & 21492u)), _GLF_struct_7(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))) || false))), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_struct_5(bvec2(true)), _GLF_struct_6(true, mat3x2(1.0), mat2x3(1.0), mat3x2(1.0), uvec2(1u)), 1.0, mat3x4(1.0)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), false))))))), (injectionSwitch.x < injectionSwitch.y))))
  {
   atomicStore(buf[_GLF_struct_replacement_8.next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_10(uvec2(1u), atomicLoad(buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z) | 0u)], _GLF_IDENTITY(4, (4) | (4)), 64, 0)), _GLF_struct_15(uvec3(1u), ivec2(1), _GLF_struct_11(mat3x2(1.0)), mat4x2(1.0), _GLF_struct_12(mat2x3(1.0), bvec3(true), mat3x4(1.0)), _GLF_struct_13(mat3(1.0), mat3x4(1.0), 1u, uvec4(1u)), _GLF_struct_14(true, bvec4(true), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(false)) : 1)), ivec3(1))), 1);
 uint read_2 = atomicLoad(buf[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z], _GLF_IDENTITY(_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (4)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-85032) : 4, (_GLF_IDENTITY(false ? _GLF_FUZZED(-85032) : 4, (false ? _GLF_FUZZED(-85032) : 4) | 0)) | (false ? _GLF_FUZZED(-85032) : 4)))), 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1 < subgroup_size, (_GLF_struct_replacement_9.subgroup_local_id + 1 < subgroup_size) || false))
      {
       atomicStore(buf[_GLF_struct_replacement_8.next_virtual_gid], uint(_GLF_struct_replacement_16._f0.read_1 == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) - 0), (0 >> _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 0)), (int(ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 0))) | (int(ivec2((_GLF_IDENTITY(1, ~ (~ (1)))), 0)))))) << (2552 & 0)) - 0))))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(1, min(1, 1))))) | (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), 0 ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), (false ? _GLF_FUZZED(23247) : _GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), int(int((~ (_GLF_IDENTITY(1, min(1, 1))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), min(~ (_GLF_IDENTITY(1, min(1, 1))), ~ (_GLF_IDENTITY(1, min(1, 1)))))), max((~ (_GLF_IDENTITY(1, min(1, 1)))), (~ (_GLF_IDENTITY(1, min(1, 1))))))))), (false ? _GLF_FUZZED(-42011) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(1, min(1, 1))))) | (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), 0 ^ ((~ (_GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), max((~ (_GLF_IDENTITY(1, min(1, 1)))), (~ (_GLF_IDENTITY(1, min(1, 1))))))))), (false ? _GLF_FUZZED(-37348) : (~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (min(1, 1)) | 0))))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), 0 ^ ((~ (_GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), 0 + ((_GLF_IDENTITY(1, min(1, 1))))), _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), ((_GLF_IDENTITY(1, min(1, 1)))) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), ((_GLF_IDENTITY(1, min(1, 1)))) | 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((~ (_GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), min(~ (_GLF_IDENTITY(1, min(1, 1))), ~ (_GLF_IDENTITY(1, min(1, 1))))) : _GLF_FUZZED(21614)))))))), (true ? ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), 0 ^ ((~ (_GLF_IDENTITY(1, min(1, 1)))))), (false ? _GLF_FUZZED(-58399) : _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), 0 ^ ((~ (_GLF_IDENTITY(1, min(1, 1)))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), 0 ^ ((~ (_GLF_IDENTITY(1, min(1, 1))))))))))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), 0 + ((_GLF_IDENTITY(1, min(1, 1))))), _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), ((_GLF_IDENTITY(1, min(1, 1)))) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), ((_GLF_IDENTITY(1, min(1, 1)))) | 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((~ (_GLF_IDENTITY(1, min(1, 1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), min(~ (_GLF_IDENTITY(1, min(1, 1))), ~ (_GLF_IDENTITY(1, min(1, 1))))) : _GLF_FUZZED(21614)))))))) : _GLF_FUZZED(-42612)))))))))), 4, 64, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, 1), (_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(ivec3(ivec3(4, 1, 1))))) + ivec3(0, 0, 0)))));
       subgroupAll(_GLF_IDENTITY(false, true && (false)));
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-6.7)), _GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), min(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0), injectionSwitch.y)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), max(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), _GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0)))))) - 0.0), injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y), mix(float(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y)), float(_GLF_FUZZED(-413.451)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + 0.0), min(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y))), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y))), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), min(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-72.39), _GLF_FUZZED(-8535.9773)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2593.3529, 1533.8836)))).y), _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y))), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(96.15)), float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bool(true)))), 1.0, 1.0))), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5080.2023, -8.7)) : injectionSwitch)))).y), _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y))), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))))), min(_GLF_IDENTITY(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), (false ? _GLF_FUZZED(2573.2163) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), min((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))) - 0.0))), (true ? float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), (false ? _GLF_FUZZED(2573.2163) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), min((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))) - 0.0))) : _GLF_FUZZED(92.01))), float(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 0.0, 0.0, 0.0))) / cos(0.0))), bool(true))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(694.450, -9599.0422).g), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(3.0) : (injectionSwitch)[0])), _GLF_FUZZED(3.9)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(true, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x))); _injected_loop_counter --)
        {
         atomicStore(buf[_GLF_struct_replacement_8.next_virtual_gid], uint(_GLF_struct_replacement_16._f0.read_1 == _GLF_IDENTITY(read_2, (read_2) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, 0u + (0u))))))) + 1, 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
        }
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 subgroupAll(true);
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true)))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true)))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.1)), float(injectionSwitch.y), bool(true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(75.06)), bool(false)))) / 1.0))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(807.835)), _GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, true, false))))))))), true)))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, true)))))))))));
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)))))), _GLF_IDENTITY((bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, bool(bvec2((bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, false))))), (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)), (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false, true, false))) || false)))), _GLF_IDENTITY((bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))) || false)));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
