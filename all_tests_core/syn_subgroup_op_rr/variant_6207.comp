#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_58 {
 mat2x3 _f0;
 uvec2 _f1;
 mat3 _f2;
 bvec4 _f3;
 mat4x2 _f4;
 mat3x2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_57 {
 uvec2 _f0;
 mat2x4 _f1;
 uvec3 _f2;
 float _f3;
 mat3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_56 {
 ivec2 _f0;
 mat4x3 _f1;
 mat3 _f2;
 mat3 _f3;
 bool _f4;
 mat2x3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_55 {
 ivec3 _f0;
 mat2 _f1;
 vec4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_59 {
 _GLF_struct_55 _f0;
 _GLF_struct_56 _f1;
 _GLF_struct_57 _f2;
 _GLF_struct_58 _f3;
} ;

struct _GLF_struct_60 {
 uint virtual_gid;
 _GLF_struct_59 _f0;
} ;

struct _GLF_struct_52 {
 uvec2 _f0;
 mat2x3 _f1;
 ivec2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_51 {
 uvec4 _f0;
 mat4x3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_50 {
 vec4 _f0;
 mat2x3 _f1;
 vec2 _f2;
 mat4x3 _f3;
 bvec3 _f4;
 uvec3 _f5;
 bool _f6;
} ;

struct _GLF_struct_49 {
 float _f0;
 mat4x2 _f1;
 float _f2;
 bool _f3;
} ;

struct _GLF_struct_53 {
 _GLF_struct_49 _f0;
 _GLF_struct_50 _f1;
 _GLF_struct_51 _f2;
 vec2 _f3;
 _GLF_struct_52 _f4;
} ;

struct _GLF_struct_47 {
 vec3 _f0;
 uint _f1;
} ;

struct _GLF_struct_46 {
 mat2 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_48 {
 _GLF_struct_46 _f0;
 _GLF_struct_47 _f1;
 int _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_45 {
 bool _f0;
} ;

struct _GLF_struct_43 {
 mat2x3 _f0;
 uvec3 _f1;
 ivec4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_42 {
 ivec4 _f0;
 vec2 _f1;
 mat4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_41 {
 vec2 _f0;
} ;

struct _GLF_struct_40 {
 ivec4 _f0;
 mat4x3 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_44 {
 _GLF_struct_40 _f0;
 _GLF_struct_41 _f1;
 mat4x3 _f2;
 mat3x2 _f3;
 mat2x4 _f4;
 _GLF_struct_42 _f5;
 _GLF_struct_43 _f6;
} ;

struct _GLF_struct_54 {
 _GLF_struct_44 _f0;
 _GLF_struct_45 _f1;
 mat2 _f2;
 int _injected_loop_counter;
 _GLF_struct_48 _f3;
 _GLF_struct_53 _f4;
} ;

struct _GLF_struct_37 {
 vec4 _f0;
} ;

struct _GLF_struct_38 {
 _GLF_struct_37 _f0;
 uint read_1;
} ;

struct _GLF_struct_39 {
 _GLF_struct_38 _f0;
 vec2 _f1;
 mat3x2 _f2;
 mat3x2 _f3;
 mat2x3 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_34 {
 vec2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_35 {
 _GLF_struct_34 _f0;
} ;

struct _GLF_struct_33 {
 mat3x2 _f0;
 uvec2 _f1;
 mat4 _f2;
 float _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_31 {
 vec2 _f0;
 vec2 _f1;
 uint _f2;
 uvec3 _f3;
 mat2x4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_32 {
 uvec4 _f0;
 ivec3 _f1;
 _GLF_struct_31 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_29 {
 vec3 _f0;
 mat4x2 _f1;
 uint workgroup_size;
 mat4x3 _f2;
 int _f3;
} ;

struct _GLF_struct_28 {
 ivec2 _f0;
 mat4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_30 {
 vec2 _f0;
 uvec2 _f1;
 _GLF_struct_28 _f2;
 _GLF_struct_29 _f3;
} ;

struct _GLF_struct_36 {
 _GLF_struct_30 _f0;
 _GLF_struct_32 _f1;
 float _f2;
 _GLF_struct_33 _f3;
 _GLF_struct_35 _f4;
} ;

struct _GLF_struct_25 {
 vec4 _f0;
 mat4 _f1;
 ivec2 _f2;
 mat3x4 _f3;
 mat4x2 _f4;
 vec2 _f5;
 int _f6;
} ;

struct _GLF_struct_24 {
 uint _f0;
 mat3x4 _f1;
 uvec4 _f2;
 bvec2 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_23 {
 uint _f0;
 uvec2 _f1;
 ivec4 _f2;
 vec3 _f3;
 mat3x4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_22 {
 bvec3 _f0;
 mat2x3 _f1;
 mat2x3 _f2;
 mat4 _f3;
 mat3x4 _f4;
 mat2x3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_21 {
 ivec2 _f0;
 uvec4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_26 {
 _GLF_struct_21 _f0;
 mat2x3 _f1;
 _GLF_struct_22 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_24 _f4;
 _GLF_struct_25 _f5;
} ;

struct _GLF_struct_19 {
 uvec4 _f0;
 ivec3 _f1;
 mat4 _f2;
 mat2x4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_20 {
 _GLF_struct_19 _f0;
} ;

struct _GLF_struct_17 {
 vec2 _f0;
 ivec4 _f1;
 mat2 _f2;
 uvec4 _f3;
 bvec3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_16 {
 ivec3 _f0;
 mat2x4 _f1;
 mat2x4 _f2;
 float _f3;
 int _f4;
} ;

struct _GLF_struct_15 {
 vec2 _f0;
 bvec4 _f1;
 float _f2;
} ;

struct _GLF_struct_18 {
 mat4x2 _f0;
 bvec2 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 _GLF_struct_17 _f4;
} ;

struct _GLF_struct_27 {
 _GLF_struct_18 _f0;
 _GLF_struct_20 _f1;
 _GLF_struct_26 _f2;
 uint read_2;
} ;

struct _GLF_struct_13 {
 mat2 _f0;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 mat2 _f1;
 uvec2 _f2;
 uint _f3;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 _GLF_struct_9 _f1;
 uvec2 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 uint _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 uint num_workgroup;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_6 {
 uint workgroup_id;
 bvec4 _f0;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_8 {
 bool _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_3 {
 int _f0;
 mat4 _f1;
 ivec4 _f2;
 vec2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_2 {
 bool _f0;
 mat3x2 _f1;
 mat3x2 _f2;
 uint _f3;
 bvec3 _f4;
 ivec2 _f5;
 bool _f6;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 uvec3 _f3;
 uvec4 _f4;
 uint subgroup_size;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_1(vec3(1.0), _GLF_struct_0(_GLF_IDENTITY(uvec4(1u), (true ? _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))) : _GLF_FUZZED(uvec4(138987u, 133673u, _GLF_IDENTITY(114548u, ~ (~ (114548u))), 10194u)))))), _GLF_struct_4(mat3x2(1.0), _GLF_struct_2(true, mat3x2(1.0), mat3x2(1.0), 1u, bvec3(true), ivec2(1), true), _GLF_struct_3(1, mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.8)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(false)), bool(_GLF_IDENTITY(bool((bool(false))), ! (! (bool((bool(false)))))))) && true)))), ivec4(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), 0 + (_GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec4((1), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), min(ivec4((1), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec4((1), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), (~ (1)) + (0 << _GLF_IDENTITY(int(7), int(7))))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(577.658), _GLF_FUZZED(-7.9)), vec2((vec2(1.0))[0], (vec2(1.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(577.658), _GLF_FUZZED(_GLF_IDENTITY(-7.9, min(-7.9, -7.9)))), vec2((vec2(1.0))[0], (vec2(1.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[0], mix(float((_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(577.658), _GLF_FUZZED(-7.9)), vec2((vec2(1.0))[0], (vec2(1.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[0]), float(_GLF_FUZZED(50.48)), bool(false))), (_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(577.658), _GLF_FUZZED(-7.9)), vec2((vec2(1.0))[0], (vec2(1.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(247.844, (_GLF_IDENTITY(247.844, (247.844) - 0.0)) * exp(0.0))), _GLF_FUZZED(_GLF_IDENTITY(471.038, min(_GLF_IDENTITY(471.038, clamp(_GLF_IDENTITY(471.038, clamp(471.038, 471.038, 471.038)), 471.038, 471.038)), 471.038)))), bvec2(false, false))), ivec2(1)), uvec3(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) - uvec4(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), 0u, 0u, 0u)), gl_SubgroupSize));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2249.4533) : injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
            barrier();
           return;
          }
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-1407.8890 / 6.5))), bool(false))) : _GLF_FUZZED(56.25))) < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_12(mat2(1.0), _GLF_struct_9(_GLF_IDENTITY(vec3(1.0), clamp(_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], _GLF_FUZZED((true ? 89.26 : -7.9)), (vec3(1.0))[2]), vec3(_GLF_FUZZED(-76.73), (vec3(1.0))[1], _GLF_FUZZED(4134.9061)), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), vec3(1.0), vec3(1.0)))), uvec2(1u), _GLF_struct_10(uvec4(1u), mat2(1.0), uvec2(1u), 1u), _GLF_struct_11(_GLF_IDENTITY(vec3(1.0), (true ? _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(-616.525, 5.5, 245.599))))), 1u), _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_struct_13(mat2(1.0)));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 1 * (int(2)))))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_36 _GLF_struct_replacement_36 = _GLF_struct_36(_GLF_struct_30(vec2(1.0), uvec2(1u), _GLF_struct_28(ivec2(1), mat4(1.0), mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_struct_29(vec3(1.0), mat4x2(_GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(81329u, 111230u, 24248u)) : (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), max(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(81329u, 111230u, 24248u)) : (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(81329u, 111230u, 24248u)) : (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))))).x, _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) >> 0u) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x), 0u | ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) ^ 0u)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), (gl_WorkGroupSize.x) | 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), (false ? _GLF_FUZZED(18488u) : _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) >> 0u)) * 1u)))))))), mat4x3(1.0), _GLF_IDENTITY(1, 0 + (1)))), _GLF_struct_32(uvec4(1u), ivec3(1), _GLF_struct_31(vec2(1.0), vec2(1.0), 1u, uvec3(1u), mat2x4(1.0), _GLF_IDENTITY(ivec3(1), max(_GLF_IDENTITY(ivec3(1), ivec3(ivec3(ivec3(1)))), ivec3(1)))), vec4(1.0)), 1.0, _GLF_struct_33(mat3x2(1.0), uvec2(1u), mat4(1.0), 1.0, uvec4(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), _GLF_struct_35(_GLF_struct_34(vec2(1.0), vec3(1.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bool(! ((false))), ! (! (bool(! ((false)))))))))), ((false)) || false)) || false)))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         do
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bvec3(_GLF_DEAD(false), false, true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0) | (1 | 0))); _injected_loop_counter ++)
        {
         return;
        }
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(true, _GLF_struct_7(_GLF_struct_6(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) | (gl_WorkGroupID)).x, bvec4(true))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1620.3434))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(806.371), _GLF_FUZZED(3.3)), bvec2(false, false))).y : _GLF_FUZZED(-1620.3434))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(-1620.3434))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_IDENTITY(_GLF_FUZZED(-1620.3434), float(mat3x4(_GLF_FUZZED(-1620.3434), 0.0, 0.0, 1.0, 1.0, sin(0.0), 1.0, sqrt(0.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0))), (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_IDENTITY(_GLF_FUZZED(-1620.3434), float(mat3x4(_GLF_FUZZED(-1620.3434), 0.0, 0.0, 1.0, 1.0, sin(0.0), 1.0, sqrt(0.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0)))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))), (! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0)), 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434)))))) && true)), false || (false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))), (! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0)), 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434)))))) && true))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(-1620.3434))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_IDENTITY(_GLF_FUZZED(-1620.3434), float(mat3x4(_GLF_FUZZED(-1620.3434), 0.0, 0.0, 1.0, 1.0, sin(0.0), 1.0, sqrt(0.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0))), (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_IDENTITY(_GLF_FUZZED(-1620.3434), float(mat3x4(_GLF_FUZZED(-1620.3434), 0.0, 0.0, 1.0, 1.0, sin(0.0), 1.0, sqrt(0.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0)))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))), (! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0)), 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434)))))) && true)), false || (false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))), (! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0)), 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434)))))) && true))))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(-1620.3434))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_IDENTITY(_GLF_FUZZED(-1620.3434), float(mat3x4(_GLF_FUZZED(-1620.3434), 0.0, 0.0, 1.0, 1.0, sin(0.0), 1.0, sqrt(0.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0))), (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_IDENTITY(_GLF_FUZZED(-1620.3434), float(mat3x4(_GLF_FUZZED(-1620.3434), 0.0, 0.0, 1.0, 1.0, sin(0.0), 1.0, sqrt(0.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0)))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))), (! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0)), 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434)))))) && true)), false || (false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))), (! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0)), 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434)))))) && true)))))))) && true)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1620.3434))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))), (! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0)), 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434)))))) && true)))))), (bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1620.3434))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))), (! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0)), 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434)))))) && true))))))) || false), (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1620.3434))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))), (! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0)), 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, 1.0, 1.0))), injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434)))))) && true)))))), (bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1620.3434))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1620.3434))))), (! (! (_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.7) : 1.0)))), 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(546.895), _GLF_FUZZED(-49.73)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434), max(true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(546.895), _GLF_FUZZED(-49.73)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(546.895), _GLF_FUZZED(-49.73)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(546.895), _GLF_FUZZED(-49.73)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434), clamp(true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(546.895), _GLF_FUZZED(-49.73)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434), true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(546.895), _GLF_FUZZED(-49.73)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434), true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(546.895), _GLF_FUZZED(-49.73)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), 0.0, 0.0))) - vec2(0.0, 0.0))))).y : _GLF_FUZZED(-1620.3434)))), float(_GLF_FUZZED((32.38))), bool(false)))))))))) && true))))))) || false)) || false))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.0), _GLF_FUZZED(6441.8535)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y : _GLF_FUZZED(-1620.3434)), ((true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.0), _GLF_FUZZED(6441.8535)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y : _GLF_FUZZED(-1620.3434))) / 1.0)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1620.3434)))))))))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true, true), false))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(_GLF_struct_54 _GLF_struct_replacement_54 = _GLF_struct_54(_GLF_struct_44(_GLF_struct_40(ivec4(1), mat4x3(1.0), mat3x2(1.0), mat3x4(1.0), ivec3(1)), _GLF_struct_41(vec2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), mat4x3(1.0), mat3x2(1.0), mat2x4(1.0), _GLF_struct_42(ivec4(1), vec2(1.0), mat4(1.0), mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0, sin(0.0), 0.0, tan(0.0), tan(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0), 0.0), (true ? mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, abs(1.0), 0.0, log(1.0), 1.0, sin(0.0), 0.0, tan(0.0), tan(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0), 0.0) : _GLF_FUZZED(mat4(77.56, -0.8, 3643.1975, -3.6, 587.999, 88.26, -657.184, -0.5, -62.07, 3.3, -5.5, -2.9, -7.0, 8.5, -7.0, 19.90)))))))), _GLF_struct_43(mat2x3(1.0), uvec3(_GLF_IDENTITY(1u, 1u * (1u))), ivec4(1), _GLF_IDENTITY(ivec4(1), (ivec4(1)) << ivec4(0, 0, 0, 0)))), _GLF_struct_45(true), mat2(1.0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0, ~ (~ (0))), 0, int(_GLF_ONE(1.0, injectionSwitch.y))), max(ivec4(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(85758) : 0)), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0, (0) * 1), 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, int(_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) + ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) | ivec4(0, 0, 0, 0))), ivec4(0, 0, 0, 0) | (max(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) + ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) | ivec4(0, 0, 0, 0)))))), ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), ivec4(1, 1, 1, 1) * (_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, int(_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), int(_GLF_ONE(1.0, injectionSwitch.y))), min(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), int(_GLF_ONE(1.0, injectionSwitch.y))), max(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), int(_GLF_ONE(1.0, injectionSwitch.y))), min(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) + ivec4(0, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) | ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) | ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) | ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) * 1))) | ivec4(0, 0, 0, 0))) / ivec4(1, 1, 1, 1))) - ivec4(0, 0, 0, 0))) + ivec4(0, 0, 0, 0))), ivec4(0, 0, 0, 0) | (max(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1 * (int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) + ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) | ivec4(0, 0, 0, 0)))))), ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))) : _GLF_FUZZED(-1245)))), _GLF_struct_48(_GLF_struct_46(mat2(1.0), mat4x3(1.0), mat2x3(1.0)), _GLF_struct_47(vec3(1.0), 1u), 1, mat3x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)))), _GLF_struct_53(_GLF_struct_49(1.0, mat4x2(1.0), 1.0, true), _GLF_struct_50(vec4(1.0), mat2x3(1.0), vec2(1.0), mat4x3(1.0), bvec3(true), uvec3(1u), true), _GLF_struct_51(uvec4(1u), mat4x3(1.0), mat4x3(1.0)), vec2(1.0), _GLF_struct_52(uvec2(_GLF_IDENTITY(1u, 0u | (1u))), mat2x3(1.0), ivec2(1), mat3(1.0)))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_54._injected_loop_counter != 1); _GLF_struct_replacement_54._injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(903.890)), vec2(_GLF_FUZZED(565.355), (injectionSwitch)[1]), bvec2(false, true))).x, (false ? _GLF_FUZZED(-7.6) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(903.890)), vec2(_GLF_FUZZED(565.355), (injectionSwitch)[1]), bvec2(false, true))).x)) > injectionSwitch.y))))
            continue;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          continue;
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(10.89) : injectionSwitch.x)) > injectionSwitch.y))))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     return;
    }
  }
 uint workgroup_base = _GLF_struct_replacement_36._f0._f3.workgroup_size * _GLF_struct_replacement_8._f1._f0.workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
            {
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
              }
            }
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 _GLF_struct_60 _GLF_struct_replacement_60 = _GLF_struct_60(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_size, (_GLF_struct_replacement_5._f1.subgroup_size) | (_GLF_struct_replacement_5._f1.subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), _GLF_struct_59(_GLF_struct_55(ivec3(1), mat2(1.0), vec4(1.0), vec2(1.0)), _GLF_struct_56(ivec2(1), mat4x3(1.0), mat3(1.0), mat3(1.0), true, mat2x3(1.0), mat3x2(1.0)), _GLF_struct_57(uvec2(1u), mat2x4(1.0), uvec3(1u), 1.0, mat3(1.0), _GLF_IDENTITY(ivec2(1), clamp(ivec2(1), _GLF_IDENTITY(ivec2(1), ~ (~ (_GLF_IDENTITY(ivec2(1), (ivec2(1)) - ivec2(0, 0))))), ivec2(1)))), _GLF_struct_58(mat2x3(1.0), uvec2(1u), mat3(1.0), bvec4(true), mat4x2(1.0), mat3x2(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true, false, true))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))))); _injected_loop_counter --)
    {
     return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) ^ 0u) ^ (subgroup_id)) * _GLF_struct_replacement_5._f1.subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_size, (_GLF_struct_replacement_5._f1.subgroup_size) | (_GLF_struct_replacement_5._f1.subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_size, (_GLF_struct_replacement_5._f1.subgroup_size) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_size, (_GLF_struct_replacement_5._f1.subgroup_size) | _GLF_IDENTITY((_GLF_struct_replacement_5._f1.subgroup_size), ~ (~ (_GLF_IDENTITY((_GLF_struct_replacement_5._f1.subgroup_size), uint(uvec4((_GLF_struct_replacement_5._f1.subgroup_size), 1u, 0u, 1u)))))))))), _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), 1u * (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))) % _GLF_struct_replacement_5._f1.subgroup_size), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))), mix(float(0.0), float(_GLF_FUZZED(-1294.1018)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(55.88)), bool(false)))))))), 1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(workgroup_base))), uint(uvec3(_GLF_IDENTITY(uint(0u), uint(0u)), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u | (_GLF_IDENTITY(uint(6u), uint(6u)))))))), _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(uint(0u), uint(0u))) ^ (0u & 157126u))))), (_GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1.subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))) % _GLF_struct_replacement_5._f1.subgroup_size), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(abs(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(abs(1.0), 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0))))), 1u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(atomicCompSwap(workgroup_base, 194518u, subgroup_id)) : uint(0u))), _GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(103081u) : uint(0u)))), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uvec3(uint(0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u), clamp(uvec3(uint(0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u), uvec3(uint(0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u), uvec3(uint(0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u))))), _GLF_IDENTITY(uint(0u), 0u + (uint(0u))))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))))), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))), min(max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))), (false ? _GLF_FUZZED((14117u & 181552u)) : max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u)))))))))))))) >> 0u)) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ 0u))))), 0u ^ (uint(uvec4(workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY((subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2((subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1), 1u * ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY((subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2((subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1))), (subgroup_local_id + 1))) % _GLF_struct_replacement_5._f1.subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)))), 0u ^ (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))))))) / 1u), 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))) | (uint(uvec4(workgroup_base + subgroup_id * _GLF_struct_replacement_5._f1.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_5._f1.subgroup_size), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_ZERO(0.0, injectionSwitch.x))) - 0.0) - tan(_GLF_IDENTITY(log(1.0), 1.0 * (_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(degrees(-75.90))))))))), 1u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), uint(uvec4(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u, 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(0u, (0u) >> 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u)))), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), max((0u), (0u))), (0u))))) >> 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) - 0u))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 | 0), ((0 | 0)) ^ 0)); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (1) ^ 0), ! (! (_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (1) ^ 0), bool(bvec3(_injected_loop_counter < _GLF_IDENTITY(1, (1) ^ 0), false, true))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (_injected_loop_counter ++))) * 1))))) << 0))
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(- -248.459, (true ? - -248.459 : _GLF_FUZZED(5188.7950))))), _GLF_FUZZED(-8249.1603)), vec2(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-2.4, -0.0))))[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.2))), _GLF_IDENTITY(0.0, min(0.0, 0.0))), (true ? max(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(41.29))) : _GLF_FUZZED(8.2))), _GLF_IDENTITY(0.0, min(0.0, 0.0))) : _GLF_FUZZED(-58.33)))), 1.0, sqrt(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)), float(mat4x2(float(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), sqrt(1.0), 0.0, 1.0, 1.0)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0)))) - vec2(0.0, 0.0)).y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0)))) - vec2(0.0, 0.0)).y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0)))) - vec2(0.0, 0.0)).y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0)))) - vec2(0.0, 0.0)).y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0)))) - vec2(0.0, 0.0)).y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.0)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_FUZZED((-7.6 / -74.61))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_FUZZED((-7.6 / -74.61))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_FUZZED((-7.6 / -74.61))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))))))))))) || false)))))))) && true, false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.0)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_FUZZED((-7.6 / -74.61))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_FUZZED((-7.6 / -74.61))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_FUZZED((-7.6 / -74.61))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))))))))))) || false)))))))) && true, ! (! ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0))), 1.0)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.0)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))), bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 1.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), max(_GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), sqrt(1.0))), 0.0, 1.0, 1.0))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_FUZZED((-7.6 / -74.61))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1], (injectionSwitch)[1]))), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1], (injectionSwitch)[1])))) - vec2(0.0, 0.0)), bvec2(true, true))).y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_FUZZED((-7.6 / -74.61))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]))), mix(vec2(_GLF_FUZZED(-2.7), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]))))[1]), vec2((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]))))[0], _GLF_FUZZED((61.57 * -9.1))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec2(true, true))).y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_FUZZED((-7.6 / -74.61))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]))), mix(vec2(_GLF_FUZZED(-2.7), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]))))[1]), vec2((vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], (injectionSwitch)[1]))))[0], _GLF_FUZZED((61.57 * -9.1))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec2(true, true))).y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-3.9)), bool(false)))))), false || _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), clamp(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_IDENTITY(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), mix(float(_GLF_FUZZED(3.4)), float(_GLF_FUZZED(vec2(-1811.1108, -6.5).r)), bool(true))))), _GLF_FUZZED(vec2(-1811.1108, -6.5).r))), _GLF_FUZZED((_GLF_IDENTITY(-7.6 / -74.61, min(-7.6 / -74.61, -7.6 / -74.61))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, length(0.0))))))[1]))), bvec2(true, true))).y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))))), bool(_GLF_IDENTITY(bool((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), clamp(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_IDENTITY(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), mix(float(_GLF_FUZZED(3.4)), float(_GLF_FUZZED(vec2(-1811.1108, -6.5).r)), bool(true))))), _GLF_FUZZED(vec2(-1811.1108, -6.5).r))), _GLF_FUZZED((_GLF_IDENTITY(-7.6 / -74.61, min(-7.6 / -74.61, -7.6 / -74.61))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, length(0.0))))))[1]))), bvec2(true, true))).y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))))), ! (_GLF_IDENTITY(! (bool((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), clamp(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_IDENTITY(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), mix(float(_GLF_FUZZED(3.4)), float(_GLF_FUZZED(vec2(-1811.1108, -6.5).r)), bool(true))))), _GLF_FUZZED(vec2(-1811.1108, -6.5).r))), _GLF_FUZZED((_GLF_IDENTITY(-7.6 / -74.61, min(-7.6 / -74.61, -7.6 / -74.61))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, length(0.0))))))[1]))), bvec2(true, true))).y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))))))), ! (! (! (bool((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), clamp(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_FUZZED(vec2(-1811.1108, -6.5).r), _GLF_IDENTITY(_GLF_FUZZED(vec2(-1811.1108, -6.5).r), mix(float(_GLF_FUZZED(3.4)), float(_GLF_FUZZED(vec2(-1811.1108, -6.5).r)), bool(true))))), _GLF_FUZZED(vec2(-1811.1108, -6.5).r))), _GLF_FUZZED((_GLF_IDENTITY(-7.6 / -74.61, min(-7.6 / -74.61, -7.6 / -74.61))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, length(0.0))))))[1]))), bvec2(true, true))).y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))))))))))))))))))))) || false)))))))) && true)))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))))), ! (! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0), transpose(transpose(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, abs(abs(0.0)), 0.0))) > injectionSwitch.y))) || false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))))), ! (! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))))), ! (! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, true && ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0))))))), ! (! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0)))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) && true))) || false)))), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(false, true, true)), false, true)), bool(bvec3(bool(bvec3(bool(bvec3(false, true, true)), false, true)), false, true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))), false))))))))) && true)))), true, true))))
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))) || false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))), true, true, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))) || false)))) && true))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-455.152, 92.94)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
            {
             barrier();
            }
          }
         continue;
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false)) && true))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_38(_GLF_struct_37(vec4(1.0)), atomicLoad(buf[_GLF_struct_replacement_60.virtual_gid], 4, 64, 0)), _GLF_IDENTITY(vec2(1.0), vec2(1.0, 1.0) * (vec2(1.0))), mat3x2(1.0), mat3x2(1.0), mat2x3(1.0), vec3(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), (! (false)) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), (bool(bvec4(_GLF_DEAD(false), false, true, true))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_18(mat4x2(1.0), bvec2(true), _GLF_struct_15(vec2(1.0), bvec4(true), 1.0), _GLF_struct_16(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << _GLF_IDENTITY(0, (0) | (0)), min(_GLF_IDENTITY((1) << _GLF_IDENTITY(0, int(int(0))), ((1) << 0) << 0), (1) << 0)))), mat2x4(1.0), mat2x4(1.0), 1.0, 1), _GLF_struct_17(vec2(1.0), ivec4(1), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x3(mat2(1.0)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? mat4x3(mat2(1.0)) : _GLF_FUZZED(mat4x3(7752.0012, 6.1, -294.012, -8043.3937, -78.98, _GLF_IDENTITY(8.7, float(mat3(_GLF_IDENTITY(8.7, float(vec2(8.7, 1.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0))), -2573.3426, -651.675, 5.2, 550.784, -5071.3920, 122.081))))), mat2(mat2x4(mat2(_GLF_IDENTITY(mat4x3(mat2(1.0)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))) ? mat4x3(mat2(1.0)) : _GLF_FUZZED(mat4x3(7752.0012, 6.1, -294.012, -8043.3937, -78.98, 8.7, -2573.3426, -651.675, 5.2, 550.784, -5071.3920, 122.081))))))))), uvec4(1u), bvec3(true), uvec3(1u))), _GLF_struct_20(_GLF_struct_19(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u + (1u)), 1u)), (1u) - _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | ((0u))) | (0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u + (1u)), 1u)), (1u) - _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | ((0u))) | (0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u + (1u)), 1u)), (1u) - _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | ((0u))) | (0u))))))))), ivec3(1), mat4(1.0), mat2x4(1.0), bvec2(true))), _GLF_struct_26(_GLF_struct_21(_GLF_IDENTITY(ivec2(1), ivec2(0, 0) + (ivec2(1))), uvec4(1u), mat4x2(1.0)), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-196.208)), float(1.0), bool(true))))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) * cos(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), min(determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) * cos(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) * cos(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 1.0, 0.0))), 1.0), (false ? _GLF_FUZZED(3.8) : min(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) * cos(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)), mix(float(determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) * cos(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0))), float(_GLF_FUZZED(6943.1659)), bool(false))), 0.0, 1.0, 0.0))), 1.0))))), _GLF_struct_22(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), true && ((_GLF_IDENTITY(true, true && (true))))))))), bool(bool(true)))))), mat2x3(1.0), mat2x3(1.0), mat4(1.0), mat3x4(1.0), mat2x3(1.0), _GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), _GLF_IDENTITY(ivec3(1), max(ivec3(1), _GLF_IDENTITY(ivec3(1), (ivec3(1)) + ivec3(0, 0, 0))))))), _GLF_struct_23(1u, _GLF_IDENTITY(uvec2(1u), (true ? uvec2(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED(44072u)))) : _GLF_FUZZED(uvec2(190450u, 114971u)))), ivec4(1), vec3(1.0), mat3x4(1.0), mat2x3(1.0)), _GLF_struct_24(1u, mat3x4(1.0), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_struct_replacement_39._f0.read_1) : 1u))), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), false))))))), bvec3(true)), _GLF_struct_25(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(vec4(_GLF_IDENTITY(vec4(1.0), (vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - 0.0))) * mat4(1.0)))), (true ? _GLF_IDENTITY(vec4(vec4(_GLF_IDENTITY(vec4(1.0), (vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0))) * mat4(1.0)))), min(vec4(vec4(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))))), min(vec4(1.0), vec4(1.0))), vec4(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * vec4(1.0, 1.0, 1.0, 1.0)))), (vec4(1.0)) * mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.0)), float(1.0), bool(true)))), float(_GLF_FUZZED(87.18)), bool(false)))) - log(1.0)))))), vec4(vec4(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)))))) : _GLF_FUZZED(vec4(6441.6793, 5.0, -0.0, -293.351))))), mat4(1.0), ivec2(_GLF_IDENTITY(1, max(1, 1))), mat3x4(1.0), mat4x2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec2(-6511.8806, -8143.0561).g)), bool(false))), 1.0, 1.0)), 1.0))), clamp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0))), mix(vec2(_GLF_FUZZED(92.10), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0))))[1]), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0))))[0], _GLF_FUZZED(78.67)), bvec2(true, false))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(floor(3060.0838)) : 1.0)))), min(1.0, 1.0))))), 1)), atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_60.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_60.virtual_gid, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u))))), uint(uint(uint(uvec3(_GLF_struct_replacement_60.virtual_gid, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)))))))), 1u * (_GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_60.virtual_gid, 0u, _GLF_IDENTITY(((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) >> 0u)) / 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, 1u))), (uint(_GLF_IDENTITY(1u, max(1u, 1u)))) | 0u)) >> 0u))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), (_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)) | (_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)))) | (_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u))))), ~ (~ (((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) >> 0u)) / 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, 1u))), (uint(_GLF_IDENTITY(1u, max(1u, 1u)))) | 0u)) >> 0u))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), (_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)) | (_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)))) | (_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)))))))))), uint(uint(uint(uvec3(_GLF_struct_replacement_60.virtual_gid, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)))))))))))], 4, 64, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(62971)))));
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_5._f1.subgroup_size, min(_GLF_struct_replacement_5._f1.subgroup_size, _GLF_struct_replacement_5._f1.subgroup_size)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), bool(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 | 0) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-72419))))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
        {
         return;
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_struct_replacement_39._f0.read_1, _GLF_IDENTITY((_GLF_struct_replacement_39._f0.read_1), (_GLF_IDENTITY((_GLF_struct_replacement_39._f0.read_1), uint(_GLF_IDENTITY(uvec3((_GLF_struct_replacement_39._f0.read_1), (1u | 1u), 1u), (true ? uvec3((_GLF_struct_replacement_39._f0.read_1), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) | (1u)))) | 1u), 1u) : _GLF_FUZZED(uvec3(12249u, 8940u, 142785u))))))) << (0u ^ 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == _GLF_struct_replacement_27.read_2) + _GLF_IDENTITY(1, 0 ^ (1)), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec2(bvec2(false, true)))))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false)))), bvec2(bvec2(bvec2(false, true))))))))) || false))) || false), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           continue;
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            continue;
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), max(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))).x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))) && true)))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), false, true)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec2(! (! (_GLF_WRAPPED_IF_FALSE(false))), false)))))) || false), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec2(! (! (_GLF_WRAPPED_IF_FALSE(false))), false)))))) || false), false, true))), false || (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec2(! (! (_GLF_WRAPPED_IF_FALSE(false))), false)))))) || false), false, true))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), false, true))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), false, true)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), true)))))))))), false, true)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), false || (! (! (_GLF_WRAPPED_IF_FALSE(false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), false, true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), false, true))))) || false)))))))))), false, true, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(int(5), max(int(5), int(5)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(int(5), max(int(5), int(5))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(int(5), max(int(5), int(5))))), clamp(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(int(5), max(int(5), int(5))))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(int(5), max(int(5), int(5))))), max(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(int(5), max(int(5), int(5))))), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(int(5), max(int(5), int(5))))))), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(int(5), max(int(5), int(5))))))), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(int(5), max(int(5), int(5))))), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(int(5), max(int(5), int(5))))))))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), max(int(5), int(5))))))), ~ (~ ((_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), max(int(5), int(5)))))))))), ~ (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(int(5), max(int(5), int(5))))))), ~ (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(42228) : _GLF_IDENTITY(int(5), max(int(5), int(5)))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, max(2, 2)))))); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), false, true)), bool(bvec2(bool(bvec3(! (! (false)), false, true)), true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), false, true)), bool(bvec2(bool(bvec3(! (! (false)), false, true)), true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), false, true)), bool(bvec2(bool(bvec3(! (! (false)), false, true)), true)))))))))) && true))), (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                   else
                    {
                    }
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                return;
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                break;
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), bool(bvec2(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), true)))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.1) : injectionSwitch.y))))))
                    barrier();
                  }
                 else
                  {
                  }
                 return;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              return;
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_struct_replacement_39._f0.read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_27.read_2, uint(uint(_GLF_struct_replacement_27.read_2))), max(_GLF_struct_replacement_27.read_2, _GLF_struct_replacement_27.read_2))) + _GLF_IDENTITY(1, int(ivec3(1, 1, 1))), min(uint(_GLF_struct_replacement_39._f0.read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_27.read_2, uint(uint(_GLF_struct_replacement_27.read_2))), max(_GLF_struct_replacement_27.read_2, _GLF_struct_replacement_27.read_2))) + 1, uint(_GLF_struct_replacement_39._f0.read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_27.read_2, uint(uint(_GLF_struct_replacement_27.read_2))), max(_GLF_struct_replacement_27.read_2, _GLF_struct_replacement_27.read_2))) + 1)), 4, 64, 4);
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) || false)))
    return;
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(true)), false || (bool(_GLF_WRAPPED_IF_TRUE(true)))), ! (! (bool(_GLF_WRAPPED_IF_TRUE(true)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(true)), false || (bool(_GLF_WRAPPED_IF_TRUE(true)))), ! (! (bool(_GLF_WRAPPED_IF_TRUE(true)))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))))), ! (! (bool(_GLF_WRAPPED_IF_TRUE(true)))))), true)))))
      {
       subgroupAll(true);
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(74.45)), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sqrt(1.0), 1.0))).y) && true)))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(5)), (~ (int(5))) << 0)))), ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(5)), (~ (int(5))) << 0))))) << 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_injected_loop_counter < 1), ! (! (! (_injected_loop_counter < 1)))), (! (_injected_loop_counter < 1)) && true)))); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false), true, true))))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (true)))))))), (bool(bool(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), _GLF_IDENTITY((true), _GLF_IDENTITY(((true)), bool(bvec4(((true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(226.347)), bool(false)))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3807.9574)), float(injectionSwitch.y), bool(true))), min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6326.3993)), bool(false)))), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, _GLF_IDENTITY((injectionSwitch.x) / 1.0, float(mat4x3((injectionSwitch.x) / 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3807.9574), max(_GLF_IDENTITY(_GLF_FUZZED(-3807.9574), (_GLF_FUZZED(-3807.9574)) + log(1.0)), _GLF_FUZZED(-3807.9574)))), float(injectionSwitch.y), bool(true))), min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6326.3993)), bool(_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))), false, true, true))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.7))))))), false, true)))))))), (injectionSwitch.x > injectionSwitch.y)))))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.9)), float(injectionSwitch.y), bool(true)))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.9)), float(injectionSwitch.y), bool(true))))))))), (_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))))) * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true))), true))))))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true))), true)), false), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true))), true)), false), true)))))))))), false, true), bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true))))), false, true)))))))), (injectionSwitch.x > injectionSwitch.y)))))))) && true))) || false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(_GLF_IDENTITY(-1.7, (-1.7) / 1.0), 4674.2947, 9.7, 425.195, 9210.4174, _GLF_IDENTITY(583.693, 0.0 + (583.693)), 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(_GLF_IDENTITY(-1.7, (-1.7) / 1.0), 4674.2947, 9.7, 425.195, 9210.4174, _GLF_IDENTITY(583.693, 0.0 + (583.693)), 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(_GLF_IDENTITY(-1.7, (-1.7) / 1.0), 4674.2947, 9.7, 425.195, 9210.4174, _GLF_IDENTITY(_GLF_IDENTITY(583.693, 0.0 + (583.693)), max(_GLF_IDENTITY(583.693, 0.0 + (583.693)), _GLF_IDENTITY(583.693, 0.0 + (583.693)))), 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(_GLF_IDENTITY(-1.7, (-1.7) / 1.0), 4674.2947, 9.7, 425.195, 9210.4174, _GLF_IDENTITY(583.693, 0.0 + (583.693)), 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0)))))))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(_GLF_IDENTITY(-1.7, (-1.7) / 1.0), 4674.2947, 9.7, _GLF_IDENTITY(425.195, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-880.761) : _GLF_IDENTITY(425.195, (false ? _GLF_FUZZED(241.584) : 425.195)))), 9210.4174, _GLF_IDENTITY(583.693, 0.0 + (583.693)), 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0)))))))) : _GLF_FUZZED(vec2(-1.1, -1.1)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-67.86) : cos(0.0))), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(_GLF_IDENTITY(-1.7, (-1.7) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(180735u))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 4674.2947, 9.7, 425.195, 9210.4174, _GLF_IDENTITY(583.693, 0.0 + (583.693)), 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(sin(0.0), max(_GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), sin(0.0))), _GLF_IDENTITY(cos(0.0), float(_GLF_IDENTITY(mat3(cos(0.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, sqrt(0.0))), _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3(cos(0.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, sqrt(0.0))), _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(mat3(cos(0.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, sqrt(0.0))), _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0)))))))), 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(_GLF_IDENTITY(-1.7, (-1.7) / 1.0), 4674.2947, 9.7, 425.195, 9210.4174, _GLF_IDENTITY(_GLF_IDENTITY(583.693, _GLF_IDENTITY(0.0 + (583.693), (0.0 + (583.693)) * determinant(mat3(1.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0)))), max(_GLF_IDENTITY(583.693, 0.0 + (583.693)), _GLF_IDENTITY(583.693, 0.0 + (583.693)))), 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-1.7, _GLF_IDENTITY(4674.2947, (_GLF_IDENTITY(4674.2947, mix(float(_GLF_FUZZED(-7.0)), float(4674.2947), bool(true)))) / 1.0), 9.7, 425.195, 9210.4174, 583.693, 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-1.7, _GLF_IDENTITY(4674.2947, (_GLF_IDENTITY(4674.2947, mix(float(_GLF_FUZZED(-7.0)), float(4674.2947), bool(true)))) / 1.0), 9.7, 425.195, 9210.4174, 583.693, 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false, true))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false)))) && ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), _GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat3x2(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0))))), min(float(_GLF_IDENTITY(mat3x2(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat3x2(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0))))), float(_GLF_IDENTITY(mat3x2(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat3x2(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0)))))))), 1.0, 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-1.7, 4674.2947, 9.7, _GLF_IDENTITY(425.195, (_GLF_IDENTITY(425.195, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), true, false)))), true, true))) ? _GLF_FUZZED(-132.481) : 425.195))) / 1.0), 9210.4174, 583.693, 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0), transpose(transpose(mat3x4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat3(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))))), _GLF_IDENTITY(cos(0.0), max(cos(0.0), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))))), 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6643.4239)), bool(false))), 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-1.7, 4674.2947, 9.7, _GLF_IDENTITY(425.195, (_GLF_IDENTITY(425.195, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(-132.481) : 425.195))) / 1.0), 9210.4174, 583.693, 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0), transpose(transpose(mat3x4(0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))) - 0.0), 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), clamp(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), vec4(mat3x2(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), max(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))), 0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), vec4(mat2(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), clamp(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)))))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (true ? vec4(0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(-433.173, -0.5, -6.2, -44.85)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0))))))), cos(0.0), 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-1.7, _GLF_IDENTITY(4674.2947, (_GLF_IDENTITY(4674.2947, mix(float(_GLF_FUZZED(-7.0)), float(4674.2947), bool(true)))) / 1.0), 9.7, 425.195, 9210.4174, 583.693, 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-1.7, _GLF_IDENTITY(4674.2947, (_GLF_IDENTITY(4674.2947, mix(float(_GLF_FUZZED(-7.0)), float(4674.2947), bool(true)))) / 1.0), 9.7, 425.195, 9210.4174, 583.693, 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false, true))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false)))) && ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), _GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat3x2(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0))))), min(float(_GLF_IDENTITY(mat3x2(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat3x2(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0))))), float(_GLF_IDENTITY(mat3x2(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat3x2(cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0)))))))), 1.0, 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-1.7, 4674.2947, 9.7, _GLF_IDENTITY(425.195, (_GLF_IDENTITY(425.195, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), true, false)))), true, true))) ? _GLF_FUZZED(-132.481) : 425.195))) / 1.0), 9210.4174, 583.693, 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0), transpose(transpose(mat3x4(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat3(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))))), _GLF_IDENTITY(cos(0.0), max(cos(0.0), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))))), 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6643.4239)), bool(false))), 1.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-1.7, 4674.2947, 9.7, _GLF_IDENTITY(425.195, (_GLF_IDENTITY(425.195, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(-132.481) : 425.195))) / 1.0), 9210.4174, 583.693, 10.01, -80.84)) : mat2x4(injectionSwitch, 0.0, sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0), transpose(transpose(mat3x4(0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0))) - 0.0), 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), clamp(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), vec4(mat3x2(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), max(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))), 0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), vec4(mat2(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), clamp(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)))))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-9465.2526, 0.8, 2273.1578, -0.3).s)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (true ? vec4(0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(-433.173, -0.5, -6.2, -44.85)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0))))))), cos(0.0), 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y))))))))))))))
      barrier();
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 1 * (int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
}
