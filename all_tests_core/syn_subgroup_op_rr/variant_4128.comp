#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, false)))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, false)))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, false))))))))), false))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(false, (false) || false)) || false) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, false)))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, false))))))))), true, false, true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(445.970)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) && true))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 1.0, 1.0)), float(mat4(float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(sqrt(0.0))), 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) - 0.0))))), clamp(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))), float(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, determinant(mat4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, tan(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) + (0.0)), 1.0)))))), ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) && true))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), clamp(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), clamp(float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)), float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))))) / 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-1.2)) : injectionSwitch.y)), 1.0, 0.0, 1.0)))))), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))) && true)))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), min(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(min(gl_WorkGroupID, gl_WorkGroupID), uvec3(uvec4(min(gl_WorkGroupID, gl_WorkGroupID), 0u)))), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) | uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u), 0u, _GLF_IDENTITY(0u, (0u) ^ 0u))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (injectionSwitch.y))))), min(injectionSwitch.y, injectionSwitch.y))))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))))), true, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(369.614) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) - 0u), subgroup_size)))) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) : _GLF_FUZZED(num_workgroup)))) ^ 0u), (true ? subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (max(subgroup_size, subgroup_size))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(mix(subgroup_size, workgroup_id, false)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, (1u & 1u), 0u)), (uint(uvec4(subgroup_id, 0u, (1u & 1u), 0u))) / 1u)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) * 1u)))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : subgroup_id), ((false ? _GLF_FUZZED(virtual_gid) : subgroup_id)) | ((false ? _GLF_FUZZED(virtual_gid) : subgroup_id)))))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) ^ 1u) | (subgroup_size)), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), 0u + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), min(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), ~ (~ ((0u))))), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))), 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (1u ^ 1u) | (subgroup_size)), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, (1u & 1u), 0u)), (uint(uvec4(subgroup_id, 0u, (_GLF_IDENTITY(1u & 1u, ~ (~ (1u & 1u)))), 0u))) / 1u)), subgroup_id))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : subgroup_id), ((false ? _GLF_FUZZED(virtual_gid) : subgroup_id)) | ((false ? _GLF_FUZZED(virtual_gid) : subgroup_id)))))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)) ^ 1u) | (subgroup_size)), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), 0u + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u))), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, (false ? _GLF_FUZZED(atomicMax(subgroup_size, subgroup_size)) : (subgroup_size) >> 0u)))), min(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u))), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))), 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (1u ^ 1u) | (subgroup_size)), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), (true ? ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u))), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, (false ? _GLF_FUZZED(atomicMax(subgroup_size, subgroup_size)) : (subgroup_size) >> 0u)))), min(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u))), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))), 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (1u ^ 1u) | (subgroup_size)), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))) : _GLF_FUZZED(workgroup_base))))), (workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, (1u & 1u), 0u)), (uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY((1u & 1u), (_GLF_IDENTITY((1u & 1u), ((1u & 1u)) | ((1u & 1u)))) / 1u), 0u))) / 1u)), subgroup_id))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : subgroup_id), ((false ? _GLF_FUZZED(virtual_gid) : subgroup_id)) | ((false ? _GLF_FUZZED(virtual_gid) : subgroup_id)))))) * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) ^ 1u) | (subgroup_size)), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) ^ 1u) | (subgroup_size)), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))) | ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) ^ 1u) | (subgroup_size)), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), 0u + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) + (clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)))) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), 1u)), (false ? _GLF_FUZZED(workgroup_base) : uint(uvec2(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), 1u)))))))))), 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (1u ^ 1u) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))) | (workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, (1u & 1u), 0u)), (uint(uvec4(subgroup_id, 0u, (1u & 1u), 0u))) / 1u)), subgroup_id))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true) ? _GLF_FUZZED(virtual_gid) : subgroup_id), ((false ? _GLF_FUZZED(virtual_gid) : subgroup_id)) | ((false ? _GLF_FUZZED(virtual_gid) : subgroup_id)))))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) ^ 1u) | (subgroup_size)), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), 0u + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size))) >> 0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u)), min(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), uint(uvec3((0u), 0u, 1u)))), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))), 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (1u ^ 1u) | (subgroup_size)), 0u ^ (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (1u ^ 1u) | (subgroup_size)), 0u ^ (subgroup_size))) | 0u), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))))))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), min(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, (1u & 1u), 0u)), (uint(uvec4(subgroup_id, 0u, (1u & 1u), 0u))) / 1u)), subgroup_id))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : subgroup_id), ((false ? _GLF_FUZZED(virtual_gid) : subgroup_id)) | ((false ? _GLF_FUZZED(virtual_gid) : subgroup_id)))))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) ^ 1u) | (subgroup_size)), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), uint(uvec4(_GLF_IDENTITY(0u ^ (subgroup_size), ~ (~ (0u ^ (subgroup_size)))), 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) * 1u))), 0u)))))), 0u + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), min(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), min(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))))) | 0u))), 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (1u ^ 1u) | (subgroup_size)), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true), true))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)) | (next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))) : uint(1))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))))), (false ? _GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))) : uint(1))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))) : uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1) >> 0, max((1) >> 0, _GLF_IDENTITY(_GLF_IDENTITY((1) >> 0, ((1) >> 0) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), int(ivec4((1) >> 0, 0, 0, 1))))), (0 << _GLF_IDENTITY(int(3), int(3))), 1, (1 | 0)), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1) >> 0, max((1) >> 0, _GLF_IDENTITY((1) >> 0, int(ivec4((1) >> 0, 0, 0, 1))))), (0 << _GLF_IDENTITY(int(3), int(3))), 1, (1 | 0)), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1) >> 0, max((1) >> 0, _GLF_IDENTITY((1) >> 0, int(ivec4((1) >> 0, 0, 0, 1))))), (0 << _GLF_IDENTITY(int(3), int(3))), 1, (1 | 0)), (ivec4(_GLF_IDENTITY((1) >> 0, max((1) >> 0, _GLF_IDENTITY((1) >> 0, int(ivec4((1) >> 0, 0, 0, 1))))), (0 << _GLF_IDENTITY(int(3), int(3))), 1, (1 | 0))) / ((ivec4(1, 1, 1, 1) << _GLF_IDENTITY(ivec4(5), _GLF_IDENTITY(ivec4(5), ivec4(0, 0, 0, 0) ^ (ivec4(5))))) >> _GLF_IDENTITY(ivec4(5), _GLF_IDENTITY(ivec4(5), ~ (~ (ivec4(5))))))), ivec4(_GLF_IDENTITY((1) >> 0, max((1) >> 0, _GLF_IDENTITY((1) >> 0, int(ivec4(_GLF_IDENTITY((1) >> 0, ~ (~ ((1) >> 0))), 0, 0, 1))))), (0 << _GLF_IDENTITY(int(3), int(3))), 1, (1 | 0)))))))))), min(false ? _GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))) : uint(_GLF_IDENTITY(1, (1) >> 0)), false ? _GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))) : uint(_GLF_IDENTITY(1, (1) >> 0))))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))) : uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1) >> 0, max((1) >> 0, _GLF_IDENTITY(_GLF_IDENTITY((1) >> 0, ((1) >> 0) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), int(ivec4((1) >> 0, 0, 0, 1))))), (0 << _GLF_IDENTITY(int(3), int(3))), 1, (1 | 0)), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1) >> 0, max((1) >> 0, _GLF_IDENTITY((1) >> 0, int(ivec4((1) >> 0, 0, 0, 1))))), (0 << _GLF_IDENTITY(int(3), int(3))), 1, (1 | 0)), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1) >> 0, max((1) >> 0, _GLF_IDENTITY((1) >> 0, int(ivec4((1) >> 0, 0, 0, 1))))), (0 << _GLF_IDENTITY(int(3), int(3))), 1, (1 | 0)), (ivec4(_GLF_IDENTITY((1) >> 0, max((1) >> 0, _GLF_IDENTITY((1) >> 0, int(ivec4((1) >> 0, 0, 0, 1))))), (0 << _GLF_IDENTITY(int(3), int(3))), 1, (1 | 0))) / ((ivec4(1, 1, 1, 1) << _GLF_IDENTITY(ivec4(5), _GLF_IDENTITY(ivec4(5), ivec4(0, 0, 0, 0) ^ (ivec4(5))))) >> _GLF_IDENTITY(ivec4(5), _GLF_IDENTITY(ivec4(5), ~ (~ (ivec4(5))))))), ivec4(_GLF_IDENTITY((1) >> 0, max((1) >> 0, _GLF_IDENTITY((1) >> 0, int(ivec4(_GLF_IDENTITY((1) >> 0, ~ (~ ((1) >> 0))), 0, 0, 1))))), (0 << _GLF_IDENTITY(int(3), int(3))), 1, (1 | 0)))))))))), min(false ? _GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))) : uint(_GLF_IDENTITY(1, (1) >> 0)), false ? _GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))) : uint(_GLF_IDENTITY(1, (1) >> 0)))))))), _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))) : uint(1))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), _GLF_IDENTITY((bool(bvec4(false, true, false, false))) && true, bool(bvec4(_GLF_IDENTITY((bool(bvec4(false, true, false, false))) && true, ! (! ((bool(bvec4(false, true, false, false))) && true))), false, false, true))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec2(bool(bvec4(false, true, false, false)), true))), (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true)) || false)))))) ? _GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))) : uint(1))), max(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(floatBitsToUint(_GLF_IDENTITY(uintBitsToFloat(subgroup_local_id), (uintBitsToFloat(subgroup_local_id)) - 0.0))) : uint(1))), _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))) : uint(1)))))) >> 0u), _GLF_IDENTITY(uint(1), (false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))), min(_GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))), _GLF_FUZZED(floatBitsToUint(uintBitsToFloat(subgroup_local_id))))) : uint(1))))), 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, (false ? _GLF_FUZZED(next_virtual_gid) : (virtual_gid) - 0u))), (virtual_gid) >> (0u ^ 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), (virtual_gid) >> (0u ^ 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), (virtual_gid) >> (0u ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), (virtual_gid) >> (0u ^ 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), (virtual_gid) >> (0u ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), (virtual_gid) >> (0u ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), (virtual_gid) >> (0u ^ 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) - 0u, ((virtual_gid) - 0u) | ((virtual_gid) - 0u))), (virtual_gid) >> (0u ^ 0u))))))), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> (0u ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), max(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 1u * (3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))), uint(uvec4(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u))), 0u, 1u, 1u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY((virtual_gid) >> (0u ^ 0u), uint(uvec4((virtual_gid) >> (0u ^ 0u), 1u, 1u, 1u))))))], 4, _GLF_IDENTITY(64, min(64, 64)), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))) - vec2(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (vec4(0.0, 0.0, 1.0, 1.0)) * mat4(1.0)), vec4(1.0, 1.0, 0.0, 0.0))), 0.0))), 1.0))))), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY(((injectionSwitch)), (true ? _GLF_IDENTITY(((injectionSwitch)), mix(vec2(_GLF_FUZZED(-42.12), _GLF_FUZZED(916.369)), vec2((((injectionSwitch)))[0], (((injectionSwitch)))[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(24.11, -1.3)))) / vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-8.1)), (float(_GLF_FUZZED(-8.1))) - 0.0), float(1.0), bool(true))), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY(((injectionSwitch)), (true ? _GLF_IDENTITY(((injectionSwitch)), mix(vec2(_GLF_FUZZED(-42.12), _GLF_FUZZED(916.369)), vec2((((injectionSwitch)))[0], (((injectionSwitch)))[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(24.11, -1.3)))) / vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-8.1)), (float(_GLF_FUZZED(-8.1))) - 0.0), float(1.0), bool(true))), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0), max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY(((injectionSwitch)), (true ? _GLF_IDENTITY(((injectionSwitch)), mix(vec2(_GLF_FUZZED(-42.12), _GLF_FUZZED(916.369)), vec2((((injectionSwitch)))[0], (((injectionSwitch)))[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(24.11, -1.3)))) / vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-8.1)), (float(_GLF_FUZZED(-8.1))) - 0.0), float(1.0), bool(true))), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY(((injectionSwitch)), (true ? _GLF_IDENTITY(((injectionSwitch)), mix(vec2(_GLF_FUZZED(-42.12), _GLF_FUZZED(916.369)), vec2((((injectionSwitch)))[0], (((injectionSwitch)))[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(24.11, -1.3)))) / vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-8.1)), (float(_GLF_FUZZED(-8.1))) - 0.0), float(1.0), bool(true))), 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0))))) - vec2(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, sqrt(1.0), _GLF_IDENTITY(0.0, float(mat3x2(0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0))))))).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(19127, 6355, 96711, -97844)), min(_GLF_FUZZED(bitfieldInsert(19127, _GLF_IDENTITY(6355, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(6355, _GLF_IDENTITY((true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304)), (1 ^ 1) ^ (_GLF_IDENTITY((true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304)), min((true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304)), _GLF_IDENTITY((true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304)), ((true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))) << 0)))))), (_GLF_IDENTITY(6355, _GLF_IDENTITY((true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304)), (_GLF_IDENTITY(_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, _GLF_IDENTITY(1 ^ 1, int(ivec3(1 ^ 1, 0, 1))))), (_GLF_IDENTITY(1 ^ 1, (false ? _GLF_FUZZED((86841 & -5668)) : 1 ^ 1))) | (1 ^ 1))) ^ (_GLF_IDENTITY((true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304)), min((true ? _GLF_IDENTITY(6355, (6355) | _GLF_IDENTITY((6355), min((6355), (6355)))) : _GLF_FUZZED(24304)), (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304)))))))) - 0), (1 & 1))), (int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(18869))) & _GLF_IDENTITY(1, (1) >> 0))))) | (int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))), _GLF_IDENTITY((1 & 1), clamp(_GLF_IDENTITY((1 & 1), min((1 & 1), (1 & 1))), (1 & 1), (1 & 1)))))))), 96711, -97844)), _GLF_FUZZED(bitfieldInsert(19127, 6355, 96711, -97844)))), min(_GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(19127, 6355, 96711, -97844)), min(_GLF_FUZZED(bitfieldInsert(19127, _GLF_IDENTITY(6355, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))), (1 & 1))), clamp(int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(_GLF_IDENTITY(6355, (6355) | (6355)), int(int(_GLF_IDENTITY(6355, (6355) | (6355))))) : _GLF_FUZZED(24304))), (1 & 1))), int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))), (1 & 1))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))), (1 & 1))), clamp(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(_GLF_IDENTITY(6355, (false ? _GLF_FUZZED(-20504) : _GLF_IDENTITY(6355, (6355) + (0 << _GLF_IDENTITY(int(2), int(2)))))), (6355) | (6355)) : _GLF_FUZZED(24304))), (1 & 1))), (int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))), (1 & 1)))) | (0 << _GLF_IDENTITY(int(7), int(7)))), int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))), _GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(_GLF_IDENTITY(1 & 1, (1 & 1) - 0), 1 & 1))) - 0)), min((_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(_GLF_IDENTITY(1 & 1, (1 & 1) - 0), 1 & 1))) - 0)), (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(_GLF_IDENTITY(1 & 1, (1 & 1) - 0), 1 & 1))) - 0)))))), int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, _GLF_IDENTITY((6355) | (6355), (_GLF_IDENTITY((6355) | (6355), clamp((6355) | (6355), (6355) | (6355), _GLF_IDENTITY((6355) | (6355), max((6355) | (6355), (6355) | (6355)))))) ^ 0)) : _GLF_FUZZED(24304))), (1 & 1))))))), _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))), (_GLF_IDENTITY(1 & 1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1 & 1)))))) | (int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))), (1 & 1)))), 0 + ((int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(_GLF_IDENTITY(6355, (6355) | (6355)), max(_GLF_IDENTITY(6355, (6355) | (6355)), _GLF_IDENTITY(6355, (6355) | (6355)))) : _GLF_FUZZED(24304))), (1 & 1)))) | (int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))), (1 & 1)))))))), 96711, -97844)), _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(19127, _GLF_IDENTITY(6355, (6355) | 0), 96711, -97844), int(ivec3(_GLF_IDENTITY(bitfieldInsert(19127, 6355, 96711, -97844), (bitfieldInsert(19127, 6355, 96711, -97844)) | _GLF_IDENTITY((bitfieldInsert(19127, 6355, 96711, -97844)), min((bitfieldInsert(19127, 6355, 96711, -97844)), (bitfieldInsert(19127, 6355, 96711, -97844))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))), _GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(19127, 6355, 96711, -97844)), min(_GLF_FUZZED(bitfieldInsert(19127, _GLF_IDENTITY(6355, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(24304, max(24304, 24304))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(_GLF_IDENTITY(24304, max(24304, 24304))), 1, 0), max(ivec3(_GLF_FUZZED(_GLF_IDENTITY(24304, max(24304, 24304))), 1, 0), ivec3(_GLF_FUZZED(_GLF_IDENTITY(24304, max(24304, 24304))), 1, 0)))), int(ivec2(int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(_GLF_IDENTITY(24304, max(24304, 24304))), 1, 0), max(ivec3(_GLF_FUZZED(_GLF_IDENTITY(24304, max(24304, 24304))), 1, 0), ivec3(_GLF_FUZZED(_GLF_IDENTITY(24304, _GLF_IDENTITY(max(24304, 24304), (max(24304, 24304)) << 0))), 1, 0)))), 1)))))), _GLF_IDENTITY((1 & 1), 1 * ((1 & 1))))), (int(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))), (1 & _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (1)))))))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))), (1 & 1)), (ivec2(_GLF_IDENTITY(6355, (true ? _GLF_IDENTITY(6355, (6355) | (6355)) : _GLF_FUZZED(24304))), (1 & 1))) + ivec2(0, 0)))))), 96711, -97844)), _GLF_FUZZED(bitfieldInsert(19127, 6355, 96711, -97844)))))) : 4)), _GLF_IDENTITY(64, _GLF_IDENTITY((64) | (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) | (64)), 64))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * (0 ^ 1)), (_GLF_IDENTITY(64, (64) * (0 ^ 1))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) * (0 ^ 1)), (_GLF_IDENTITY(64, (64) * (0 ^ 1))) | 0)) * 1), (64) | (_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, (64) << 0), 1), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(64, (64) << 0), 1)) << ivec2(0, 0), clamp((ivec2(_GLF_IDENTITY(64, (64) << 0), 1)) << ivec2(0, 0), (ivec2(_GLF_IDENTITY(64, (64) << 0), 1)) << ivec2(0, 0), (ivec2(_GLF_IDENTITY(64, (64) << 0), 1)) << ivec2(0, 0)))))), _GLF_IDENTITY((64), max((64), (64))) / 1)))) | (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), min((64) | (64), (64) | (64)))), ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), min((64) | _GLF_IDENTITY((64), max((64), (64))), (64) | (_GLF_IDENTITY(64, (64) << (0 | 0))))))))), 64)))) | 0)), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))) < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), (! (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY((subgroup_size / num_workgroup), 0u ^ (_GLF_IDENTITY((subgroup_size / num_workgroup), ((subgroup_size / num_workgroup)) / 1u)))))) + 1 < subgroup_size)) || _GLF_IDENTITY(false, (false) || false)))))
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-67.09)), vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(278.046) : (injectionSwitch)[1]))), bvec2(false, true))).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.3)), bool(false))) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, sqrt(0.0), 0.0, 1.0, exp(0.0), length(vec2(0.0, 0.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)))).y)))))), (injectionSwitch.x > injectionSwitch.y))))), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, 0.0, 1.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0))))))) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)) && true))), (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED((float(-93188) + 740.825))), float(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)) && true))), (injectionSwitch.x > injectionSwitch.y)))), (false ? _GLF_FUZZED((false ? -393.825 : -4993.0252)) : mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.8))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)) && true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, 0.0, 1.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0))))))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0 + (injectionSwitch.x)) < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0 + (injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))))))) + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), _GLF_IDENTITY(0.0 + (injectionSwitch.x), (0.0 + (injectionSwitch.x)) - 0.0))) : _GLF_FUZZED(acos(-2.5)))), 1.0 * (_GLF_IDENTITY(0.0 + (injectionSwitch.x), 1.0 * (0.0 + (injectionSwitch.x))))), 0.0 + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)))) < _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1576.3583), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(46.49)), bvec2(true, false))), injectionSwitch)))).y))))))) && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), true, false))))), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! (_GLF_DEAD(false))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false, false, false))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0))), 1.0))).x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0))), 1.0))).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0))), 1.0))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0))), 1.0))).x > injectionSwitch.y), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0))), 1.0))).x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0))), 1.0))).x > injectionSwitch.y), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0))), 1.0))).x > injectionSwitch.y))))), ! (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0))), 1.0))).x > injectionSwitch.y), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(cos(0.0), 0.0))), 1.0))).x > injectionSwitch.y)))))))))))))))))))))))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), true)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), true)), false, false))), true))))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1201.3248), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(1.8)), bvec2(true, false))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1201.3248), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(1.8)), bvec2(true, false))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1201.3248), _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(1.8)), bvec2(true, false))).x > injectionSwitch.y))))))) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2343.6132) : injectionSwitch.x)) < injectionSwitch.y)) && (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), true)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}
