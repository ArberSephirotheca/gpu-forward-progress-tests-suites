#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 bvec4 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 float _f1;
 uvec2 _f2;
 uvec2 _f3;
 ivec2 _f4;
 mat2x4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 vec3 _f1;
 mat2 _f2;
 float _f3;
 mat2 _f4;
 vec3 _f5;
 float _f6;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 _GLF_struct_0 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 mat3 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
 uint workgroup_size;
 _GLF_struct_1 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true), false))))))))))), false))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, ((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0) / cos(0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.6), _GLF_FUZZED(1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0))) : _GLF_FUZZED(546.422)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.5)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), max(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (! (false)), true, true, true)), false || (bool(bvec4(! (! (false)), true, true, true))))))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat3x4(1.0), mat3(1.0), mat3x2(1.0), mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, _GLF_struct_1(mat2x4(1.0), _GLF_struct_0(mat3(1.0), vec3(1.0), _GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))), 1.0, mat2(1.0), vec3(1.0), 1.0), mat3(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(-23.13, -34.28), injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(483.013)), float(0.0), bool(true)))) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.5, -6040.4638)) : injectionSwitch)), injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(63.71)), bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(63.71)), bvec2(true, false))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(63.71)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), ! (! (bool(bvec3(true, true, false)))))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))) : _GLF_FUZZED((vec4(-8.2, -4.7, -3.1, -5817.3154) * mat2x4(6819.9596, -9.7, -1262.4617, 7.2, 4.2, -8.9, -662.422, 7.2)))))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(vec2(308.920, -9.1).x), max(_GLF_FUZZED(vec2(308.920, -9.1).x), _GLF_FUZZED(vec2(308.920, -9.1).x)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(96.88)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_5(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false), true, false)), false || (bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false), true, false)))))), bvec3(bvec3(bvec3(true)))), _GLF_struct_3(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4192.8622, (-4192.8622) - 0.0), min(-4192.8622, -4192.8622)))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4192.8622, (-4192.8622) - 0.0), min(-4192.8622, -4192.8622)))), min(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4192.8622, (-4192.8622) - 0.0), min(-4192.8622, -4192.8622)))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4192.8622, (-4192.8622) - 0.0), min(-4192.8622, -4192.8622)))), min(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4192.8622, (-4192.8622) - 0.0), min(-4192.8622, -4192.8622)))), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4192.8622, (-4192.8622) - 0.0), min(-4192.8622, -4192.8622)))))))), sqrt(1.0), 1.0, 0.0)), (float(mat2(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4192.8622, (-4192.8622) - 0.0), min(-4192.8622, -4192.8622)))), min(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4192.8622, (-4192.8622) - 0.0), min(-4192.8622, -4192.8622)))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4192.8622, (-4192.8622) - 0.0), min(-4192.8622, -4192.8622)))), min(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4192.8622, (-4192.8622) - 0.0), min(-4192.8622, -4192.8622)))), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-4192.8622, (-4192.8622) - 0.0), min(-4192.8622, -4192.8622)))))))), sqrt(1.0), 1.0, 0.0))) * 1.0)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (1.0) - 0.0))) + 0.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), false || (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(true && (bool(true)), (true && (bool(true))) && true))) && true)), true && ((_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(true && (bool(true)), (true && (bool(true))) && true))) && true)))) || false))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4192.8622)), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4192.8622)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? _GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), ((1.0)) / 1.0), (1.0), (1.0))) : _GLF_FUZZED(sign(-67.06)))) + 0.0)), bool(true)), max(mix(float(_GLF_FUZZED(-4192.8622)), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(true)), mix(float(_GLF_FUZZED(-4192.8622)), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(true))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4192.8622)), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))), uvec2(1u), uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(1))), ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(1)))), (ivec2(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) | 0)), max(ivec2(_GLF_IDENTITY(1, (1) | 0)), ivec2(_GLF_IDENTITY(1, (1) | 0)))), ivec2(1))))) ^ ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0), 0)))), mat2x4(1.0), bvec2(true)), _GLF_struct_4(bvec4(true), gl_WorkGroupID.x)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_struct_replacement_2.workgroup_size * _GLF_struct_replacement_6._f0._f2.workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) / 1u)) ^ 0u) * subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), max(0u ^ (workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : 0u ^ (workgroup_base + subgroup_id * subgroup_size))))), (0u ^ 0u), 0u), (uvec3(_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), max(0u ^ (workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), (0u ^ (workgroup_base + subgroup_id * subgroup_size)) | (0u ^ (workgroup_base + subgroup_id * subgroup_size))), (false ? _GLF_FUZZED(subgroup_id) : 0u ^ (workgroup_base + subgroup_id * subgroup_size))))), _GLF_IDENTITY((0u ^ 0u), uint(uvec2((0u ^ 0u), 1u))), 0u)) >> uvec3(0u, 0u, 0u))), min(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), max(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u)))) / 1u)) ^ (workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)), 0u ^ ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))))) >> 0u), (false ? _GLF_FUZZED(subgroup_id) : 0u ^ (workgroup_base + subgroup_id * subgroup_size))))), (0u ^ 0u), 0u), (uvec3(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), max(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), (true ? 0u ^ (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_size))))))), (0u ^ 0u), 0u)) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 0u)), ~ (~ (uint(uvec3(0u, 0u, 0u))))))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(max(0u ^ (workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), uint(uvec2(max(0u ^ (workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), 1u)))), (0u ^ 0u), 0u), (uvec3(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u + ((workgroup_base + subgroup_id * subgroup_size)))) ^ 0u)) - 0u), max(0u ^ (workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), (false ? _GLF_FUZZED(59128u) : 0u ^ (workgroup_base + subgroup_id * subgroup_size))))))), (0u ^ 0u), 0u)) >> uvec3(0u, 0u, 0u))))))), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) + uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), max(_GLF_IDENTITY(log(vec2(1.0, 1.0)), vec2(vec4(log(vec2(1.0, 1.0)), 0.0, 0.0))), log(vec2(1.0, 1.0)))) + (injectionSwitch)), 1.0, 1.0))).x)), _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (workgroup_base + subgroup_id * subgroup_size))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY(uint(uvec2(((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (workgroup_base + subgroup_id * subgroup_size))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))), 1u)), min(_GLF_IDENTITY(uint(uvec2(((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (workgroup_base + subgroup_id * subgroup_size), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (workgroup_base + subgroup_id * subgroup_size)) - (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u)), uint(uvec4(_GLF_IDENTITY(uint(uvec2(((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (workgroup_base + subgroup_id * subgroup_size))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u)), ~ (_GLF_IDENTITY(~ (uint(uvec2(((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (workgroup_base + subgroup_id * subgroup_size))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u))), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) + (~ (uint(uvec2(((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (workgroup_base + subgroup_id * subgroup_size))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u))))))), 0u, 1u, 1u))), uint(uvec2(((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (workgroup_base + subgroup_id * subgroup_size))))) + uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 1u)))))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) * 1u), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 0u), max(uvec3(subgroup_id * subgroup_size, 0u, 0u), _GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 0u, 0u), (true ? uvec3(subgroup_id * subgroup_size, 0u, 0u) : _GLF_FUZZED(uvec3(83411u, 53901u, 97098u))))))))))), workgroup_base + subgroup_id * subgroup_size))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) - 0u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), (false ? _GLF_FUZZED(subgroup_local_id) : 0u ^ ((subgroup_local_id + 1)))), 1u, 0u), max(uvec3(_GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), (false ? _GLF_FUZZED(subgroup_local_id) : 0u ^ ((subgroup_local_id + 1)))), 1u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)), (false ? _GLF_FUZZED(subgroup_local_id) : 0u ^ ((subgroup_local_id + 1)))), 1u, 0u), (uvec3(_GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), (false ? _GLF_FUZZED(subgroup_local_id) : 0u ^ ((subgroup_local_id + 1)))), 1u, 0u)) << uvec3(0u, 0u, 0u))))))) % subgroup_size)), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bvec2((true), false))), (! (true)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), ((true)) || false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) || false))) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (! ((true))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) || false)))))), false || (! (! (_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) || false)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false))), false || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)))))), (! (_GLF_IDENTITY(true, (true) && true))) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, ! (! (_GLF_IDENTITY((! (true)), ! (! ((! (true))))) && true)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, ! (! (_GLF_IDENTITY((! (true)), ! (! ((! (true))))) && true))))))), ! (! (! ((! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, ! (! (_GLF_IDENTITY((! (true)), ! (! ((! (true))))) && true)))))))))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), bool(bvec3(! ((! (true))), false, false))))), ((! (true))) || false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! _GLF_IDENTITY((true), ((true)) || false))) || false) && true, (_GLF_IDENTITY((! (true)), ((! (true))) || false) && true) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, ! (! (_GLF_IDENTITY((! (true)), ((! (true))) || false) && true)))) && true)), false, false, false)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, (_GLF_IDENTITY((! (true)), _GLF_IDENTITY(((! (true))), false || (((! (true))))) || false) && true) && true)), false, false, false))) || false))))))))), false, true)), ! (! (bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY((! (true)), ((! (true))) || false) && true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY((! (true)), ((! (true))) || false) && true)))))) || false), false, true))))))) && true))))) && true))))), ! (! (! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bvec2((true), false))), (! (true)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY(_GLF_IDENTITY((true), ! (! ((true)))), ((true)) || false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) || false))) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) || false)))))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))), (! (true)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))))))), (bool(_GLF_IDENTITY(true, ! (! (true))))) || false)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)))), (! (_GLF_IDENTITY(true, (true) && true))) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))), ! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, ! (! (_GLF_IDENTITY((! (true)), ! (! ((! (true))))) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))))) && _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))), ! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY((! (true)) && true, ((! (true)) && true) && true), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, false), bvec3(bvec3(bvec3((true), true, false))))))), ! (! ((! (true))))) && true)))))))) || false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! (true)) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, (_GLF_IDENTITY((! (true)), ((! (true))) || false) && true) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, (_GLF_IDENTITY((! (true)), ((! (true))) || false) && true) && true)), false, false, false)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, (_GLF_IDENTITY((! (true)), ((! (true))) || false) && true) && true)), false, false, false))) || false))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), true && ((! (true))))) || false) && true, (_GLF_IDENTITY((! (true)), ((! (true))) || false) && true) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (true)))), ((_GLF_IDENTITY(! (true), ! (! (! (true)))))) || false) && true, (_GLF_IDENTITY((! (true)), ((! (true))) || false) && true) && true)), false, false, false)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, (_GLF_IDENTITY((! (true)), ((! (true))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) && true) && true)), false, _GLF_IDENTITY(false, (false) || false), false))) || false))))))))), (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, ! (! (_GLF_IDENTITY((! (true)), ((! (true))) || false) && true))), false, false, false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, ! (! (_GLF_IDENTITY((! (true)), ((! (true))) || false) && true))), false, false, false)))), true))))), (_GLF_IDENTITY((! (true)), ((! (true))) || false) && true) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (_GLF_IDENTITY(true, (true) && true)))) || false) && true, (_GLF_IDENTITY((! (true)), ((! (true))) || false) && true) && true)), false, false, false)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, (_GLF_IDENTITY((! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))), ! (! (bool(_GLF_IDENTITY(bool((true)), true && (bool((true)))))))))), _GLF_IDENTITY(((! (true))), bool(bvec4(((! (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false) && true) && true)), false, false, false))) || false))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), true && ((! (true))))) || false) && true, (_GLF_IDENTITY((! (true)), ((! (true))) || false) && true) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (true)))), ((_GLF_IDENTITY(! (true), ! (! (! (true)))))) || false) && true, (_GLF_IDENTITY((! (true)), ((! (true))) || false) && true) && true)), false, false, false)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false) && true, (_GLF_IDENTITY((! (true)), ((! (true))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) && true) && true)), false, _GLF_IDENTITY(false, (false) || false), false))) || false)))))))))) || false))), false, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), _GLF_IDENTITY(((! (true))) || false, bool(bvec4(((! (true))) || false, true, false, false)))) && true))))), false, true))))))) && true))))) && true))))))))) ? uint(uint((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED((+ (-89555 * -33635))), (_GLF_FUZZED((+ (-89555 * -33635)))) | 0) : _GLF_IDENTITY(1, min(1, 1))))) % subgroup_size)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))) ^ 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) ^ 0u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)))) ^ 0u)) + 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) ^ 0u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)))) ^ 0u)) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) ^ 0u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)))) ^ 0u)) + 0u))), 0u, 0u))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(58121))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | 0), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_base)))) | 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), max(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))) : _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_base)))) | 0u)))], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ((0)) >> 0))) | 0));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-587.862)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) / vec2(1.0, 1.0))))).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-158.818) : injectionSwitch.x))))), float(_GLF_FUZZED(-2745.3888)), bool(false))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, true && (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2))) || false)), 1u), uvec2(0u, 0u) | (uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(read_1)), (uint(uint(read_1))) << 0u)), ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), ~ (~ (read_1))) == read_2) || false)), 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u), ~ (~ (read_1))) == read_2) || false))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1))))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false, ! (! ((_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false))))), 1u), uvec2(0u, 0u) | (uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)))))))), min(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)))) || false)), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), 1u), uvec2(0u, 0u) | (uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), 1u), uvec2(0u, 0u) | (uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) || false)))))))))))) + 1, max(uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) + 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7407.7209)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0))).y, float(mat3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), tan(0.0), 1.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), tan(0.0), 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(float(_GLF_FUZZED(451.063)), clamp(float(_GLF_FUZZED(451.063)), _GLF_IDENTITY(float(_GLF_FUZZED(451.063)), max(float(_GLF_FUZZED(451.063)), float(_GLF_FUZZED(451.063)))), float(_GLF_FUZZED(451.063)))), bool(false))), injectionSwitch.y))), float(_GLF_FUZZED(-504.037)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), min(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)))), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)), float(mat3x2(_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), min(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)))), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)), (true ? float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), min(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)))), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)) : _GLF_FUZZED(-9.3))), determinant(mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), exp(0.0), 0.0, 1.0, 0.0))), (true ? float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0)), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat4x3(min(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0)), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat4x3(min(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0)), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? vec4(_GLF_IDENTITY(mat4x3(min(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0)), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat4x3(min(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0)), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(vec4(7.3, 7.9, 0.6, -16.48))))))))), 1.0)) : _GLF_FUZZED(6.6))))), (clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), min(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), mix(vec4(_GLF_FUZZED(3.1), (normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)))[1], _GLF_FUZZED(1.7), _GLF_FUZZED(506.789)), vec4((normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)))[0], _GLF_FUZZED(-1.8), (normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)))[2], (normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)))[3]), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))))), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)), float(mat3x2(_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), min(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)))), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)), (true ? float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), min(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 1.0)), normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)))), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)) : _GLF_FUZZED(-9.3))), determinant(mat4(1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), exp(0.0), 0.0, 1.0, 0.0))), (true ? float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0)), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat4x3(min(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0)), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat4x3(min(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0)), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? vec4(_GLF_IDENTITY(mat4x3(min(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0)), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0), (mat4x3(min(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0)), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(vec4(7.3, 7.9, 0.6, -16.48))))))))), 1.0)) : _GLF_FUZZED(6.6)))))) + 0.0)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t), min(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t), _GLF_FUZZED(vec4(-9.5, _GLF_IDENTITY(-8674.8974, (true ? _GLF_IDENTITY(-8674.8974, 1.0 * (-8674.8974)) : _GLF_FUZZED(803.466))), -7.5, 0.8).t)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)), (true ? float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * cos(0.0)))))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)) : _GLF_FUZZED(6.6)))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true))))), 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), float(mat3(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true))))), 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), clamp(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), mix(float(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-651.728)), bool(false))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(38.76)), float(0.0), bool(true))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true)))))) - 0.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.4) : 1.0)), 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)), (true ? float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(vec4(-3551.7759, 9.2, -148.119, -3.7)) : _GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)), min(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat4x2(vec4(1.0, 1.0, 1.0, 1.0), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), log(1.0), 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-21.61)), bool(false))), 1.0))))))), 1.0)) : _GLF_FUZZED(6.6))))))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(mix(2894.5881, -42.04, true)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(_GLF_IDENTITY(-9.5, (_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5))) / 1.0), -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1695.7750)), float(injectionSwitch.y), bool(true))), abs(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec4(5400.5334, 612.199, -11.69, -8663.6290)) : min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) / vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch - 16.14)) : injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0))))))))), 1.0)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) && true)) ? float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(mat3x2((normalize(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0), 1.0, 1.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3x2((normalize(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0), 1.0, 1.0)))))), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)) : _GLF_FUZZED(6.6)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 0.0, _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(774.406)), float(sin(0.0)), bool(true))), 0.0, length(0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)), max(float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 0.0, _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(774.406)), float(sin(0.0)), bool(true))), 0.0, length(0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)), float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 0.0, _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(774.406)), float(sin(0.0)), bool(true))), 0.0, length(0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)))), (true ? float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 1.0)) : _GLF_FUZZED(6.6)))))), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-9.5, -8674.8974, -7.5, 0.8).t)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, abs(round(_GLF_IDENTITY(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-19.55)), bool(false))))), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(8343.4546) : length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-19.55)), bool(false))))), mat4(1.0) * (normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-19.55)), bool(false))))))), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), 1.0)), (true ? float(vec3(injectionSwitch.y, abs(round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), max(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(vec4(mat2x3((_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), max(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)), vec4(mat4(vec4(mat2x3((_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), max(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.8))), 0.0, 1.0, 1.0, 1.0)), (float(mat2x3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.8))), 0.0, 1.0, 1.0, 1.0))) + 0.0)))), min(_GLF_IDENTITY(normalize(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), float(vec4(max(1.0, 1.0), 1.0, 0.0, 1.0)))), 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))), normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))) : _GLF_FUZZED(6.6))))))) * _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-10.02))), 1.0))), float(_GLF_FUZZED(float(178553u))), bool(false))))) - 0.0))))) || false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), ! (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), bool(bvec4(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + 1, _GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), _GLF_IDENTITY((4), ((4)) / ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, _GLF_IDENTITY((0) + 0, ~ (~ ((0) + 0)))) ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(6, max(6, 6))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(0 ^ (6), ~ (~ (0 ^ (6)))))), (int(6)) | 0), int(6), int(_GLF_IDENTITY(6, (6) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))))) - 0))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(6801)))))), (4)), (clamp((4), _GLF_IDENTITY((4), ((4)) / ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(0 ^ (int(6)), ~ (~ (0 ^ (int(6)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0) + 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(-11967) : (_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)))))))) - 0))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(6801)))))), (4))) | (_GLF_IDENTITY(clamp((4), _GLF_IDENTITY((4), ((4)) / ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0) + 0) ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(6, max(6, 6))), clamp(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) * 1), (true ? _GLF_IDENTITY(int(6), (int(6)) / 1) : _GLF_FUZZED(66648)))) | 0), int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, max(6, 6))))), int(6)))))) - 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-94805) : _GLF_IDENTITY(int(6), (int(6)) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << 0), (_GLF_IDENTITY(true, true && (true)) ? int(6) : _GLF_FUZZED(6801)))))), (4)), (true ? clamp((4), _GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY(((4)) / ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0) + 0) ^ (_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)))))) - 0))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(6801))))), max(((4)) / ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) ^ 0), 0 ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0) + 0) ^ (_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)) | 0, int(int((int(6)) | 0)))), int(6), int(_GLF_IDENTITY(6, 0 | (6)))))))) - 0))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(6801))))), ((4)) / ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (0) + 0) ^ (_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)))))) - 0))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(6801)))))))), 0 | (_GLF_IDENTITY((4), ((4)) / ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0) + 0) ^ (_GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)), (clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6))) | (clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)))))))) - 0)), clamp(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), ~ (~ (_GLF_IDENTITY(int(6), 0 ^ (int(6)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0) + 0) ^ (_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)))))) - 0)), 1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0) + 0) ^ (_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)))))) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 0, (1 | 1)))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0) + 0) ^ (_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0) + 0) ^ (_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)))))) - 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0) + 0) ^ (_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)))))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0) + 0) ^ (_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)))))) - 0)))) << 0)), ~ (~ (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0) + 0) ^ (_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (int(6)) | 0), int(6), int(6)))))) - 0)))))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | 0)), (true ? int(6) : _GLF_FUZZED(6801)))))))), (4)) : _GLF_FUZZED(_GLF_IDENTITY(68196, (_GLF_IDENTITY(68196, ~ (~ (68196)))) + (0 >> _GLF_IDENTITY(int(5), int(5)))))))))) + 0), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), true && (! (_GLF_IDENTITY(true, (true) && true))))))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(91.10)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sinh(1848.6549)) : injectionSwitch.x))), float(_GLF_FUZZED(_GLF_IDENTITY(-1.0, clamp(-1.0, -1.0, -1.0)))), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((54.55)), _GLF_FUZZED(7153.0243)), bvec2(false, false)), (true ? _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((54.55)), _GLF_FUZZED(7153.0243)), bvec2(false, false)), (false ? _GLF_FUZZED(vec2(711.777, 0.2)) : mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), min(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(cos(0.0), 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(cos(0.0), 0.0, 0.0)))))))[1], (true ? (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), min(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(cos(0.0), 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(cos(0.0), 0.0, 0.0)))))))[1] : _GLF_FUZZED(614.529)))), vec2(_GLF_FUZZED((54.55)), _GLF_FUZZED(7153.0243)), bvec2(false, false)))) : _GLF_FUZZED(injectionSwitch)))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
