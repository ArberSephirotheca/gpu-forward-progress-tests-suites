#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))), bool(bvec4(! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))), true, false, true)))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(false)) && true), bool(bool(bool(false)))))))))))) || false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bool(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))) || _GLF_IDENTITY(false, true && (false)))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)), min(max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0)), min((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(9.7), clamp(_GLF_IDENTITY(_GLF_FUZZED(9.7), _GLF_IDENTITY(min(_GLF_FUZZED(9.7), _GLF_FUZZED(9.7)), max(min(_GLF_FUZZED(9.7), _GLF_FUZZED(9.7)), min(_GLF_FUZZED(9.7), _GLF_FUZZED(9.7))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9.7, max(9.7, 9.7))), min(_GLF_IDENTITY(_GLF_FUZZED(9.7), (false ? _GLF_FUZZED(2.4) : _GLF_FUZZED(9.7))), _GLF_IDENTITY(_GLF_FUZZED(9.7), max(_GLF_FUZZED(9.7), _GLF_FUZZED(_GLF_IDENTITY(9.7, 0.0 + (_GLF_IDENTITY(9.7, mix(float(_GLF_FUZZED(vec2(1.8, 7841.0437).s)), float(9.7), bool(true)))))))))), _GLF_FUZZED(9.7))), max(_GLF_FUZZED(9.7), _GLF_FUZZED(9.7)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY((false ? -3.1 : _GLF_IDENTITY(-41.11, _GLF_IDENTITY(float(vec3(-41.11, exp(0.0), exp(sin(0.0)))), 1.0 * (_GLF_IDENTITY(float(vec3(-41.11, exp(0.0), exp(sin(0.0)))), (float(vec3(-41.11, exp(0.0), exp(sin(0.0))))) * 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.8) : (false ? -3.1 : _GLF_IDENTITY(-41.11, _GLF_IDENTITY(float(vec3(-41.11, exp(0.0), exp(sin(0.0)))), 1.0 * (float(vec3(-41.11, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(1600.5386, -5.1, 3.0).s)), float(0.0), bool(true)))), exp(_GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(true ? sin(0.0) : _GLF_FUZZED(-6.8), (true ? _GLF_IDENTITY(true ? sin(0.0) : _GLF_FUZZED(-6.8), min(_GLF_IDENTITY(true ? sin(0.0) : _GLF_FUZZED(-6.8), (true ? sin(0.0) : _GLF_FUZZED(-6.8)) * 1.0), true ? sin(0.0) : _GLF_FUZZED(-6.8))) : _GLF_FUZZED(-305.616))))))))))))))), (vec2(1.0, 1.0))[1]), min(vec2(_GLF_FUZZED(_GLF_IDENTITY((false ? -3.1 : -41.11), mix(float(_GLF_FUZZED(-3.7)), float((_GLF_IDENTITY(_GLF_IDENTITY(false ? -3.1 : -41.11, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(false ? -3.1 : -41.11, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(4.9, -90.52, -1846.5185, -54.95), transpose(transpose(mat2(4.9, -90.52, -1846.5185, -54.95))))) : mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), max(float(_GLF_IDENTITY(mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95)) : mat2(_GLF_IDENTITY(false, (false) && true) ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95)), (true ? _GLF_IDENTITY(_GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95)), transpose(transpose(_GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95))))) : _GLF_FUZZED(mat2(8.6, 3839.3868, -1.4, 969.165)))) : mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_IDENTITY(false ? -3.1 : -41.11, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (false ? _GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95)) : mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95)), mat2(1.0) * (_GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95))))) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95)), mat2(1.0) * (_GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95))))) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), (transpose(_GLF_IDENTITY(mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95)), mat2(1.0) * (_GLF_FUZZED(mat2(4.9, -90.52, -1846.5185, -54.95))))) + mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))) * mat2(1.0))))), float(_GLF_IDENTITY(mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(4.9, clamp(_GLF_IDENTITY(4.9, clamp(4.9, _GLF_IDENTITY(4.9, (4.9) - 0.0), 4.9)), 4.9, 4.9)), -90.52, -1846.5185, -54.95)) : mat2(false ? -3.1 : -41.11, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))))))) - determinant(mat2(0.0, 0.0, 0.0, 0.0))))), bool(true)))), (vec2(1.0, 1.0))[1]), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY((false ? -3.1 : -41.11), min((false ? -3.1 : -41.11), (false ? -3.1 : -41.11)))), (vec2(1.0, 1.0))[1]), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), _GLF_IDENTITY((vec2(1.0, 1.0)), max((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[1]), min(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))) ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), min(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]))))), min(_GLF_IDENTITY(vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[_GLF_IDENTITY(1, min(1, 1))]), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), min(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), vec2(0.0, 0.0) + (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]))), false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]))))), _GLF_IDENTITY(vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), min(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? _GLF_IDENTITY(-3.1, (true ? -3.1 : _GLF_FUZZED(775.962))) : -41.11)), _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))[1], (_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))[1], float(mat2x4((vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))[1], 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, cos(0.0))))) - tan(0.0))), false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]))))))), _GLF_IDENTITY(vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), min(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY((false ? -3.1 : _GLF_IDENTITY(-41.11, 1.0 * (-41.11))), ((false ? -3.1 : _GLF_IDENTITY(-41.11, 1.0 * (-41.11)))) * determinant(mat4(1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0)))), (vec2(1.0, 1.0))[1]), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), min(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1])) * mat2(1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((_GLF_IDENTITY(false, true && (false)) ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), min(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), min(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]))), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? _GLF_IDENTITY(-3.1, clamp(-3.1, -3.1, -3.1)) : -41.11)), (vec2(1.0, 1.0))[1]), min(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), _GLF_IDENTITY((vec2(1.0, 1.0))[1], clamp((vec2(1.0, 1.0))[1], _GLF_IDENTITY((vec2(1.0, 1.0))[1], (true ? (vec2(1.0, 1.0))[1] : _GLF_FUZZED(2.1))), _GLF_IDENTITY((vec2(1.0, 1.0))[1], (false ? _GLF_FUZZED((-134.978 - -5131.9566)) : _GLF_IDENTITY((vec2(1.0, 1.0))[1], 1.0 * ((vec2(1.0, 1.0))[1])))))))))) - vec2(0.0, 0.0)))), min(_GLF_IDENTITY(vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), (vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1])) / exp(vec2(0.0, 0.0))), min(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]))))), _GLF_IDENTITY(vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), min(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((_GLF_IDENTITY(false, (false) || false) ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]))))))), _GLF_IDENTITY(vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0))[_GLF_IDENTITY(1, clamp(1, 1, 1))]), min(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), _GLF_IDENTITY((vec2(1.0, 1.0)), max((vec2(1.0, 1.0)), (vec2(1.0, 1.0))))[1]))))), _GLF_IDENTITY(vec2(_GLF_FUZZED((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), true))))) ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat4x2(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))[1]), min(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1]), vec2(1.0, 1.0) * (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED((false ? -3.1 : -41.11)), (vec2(1.0, 1.0))[1])))))))))) * mat2(1.0)))), bvec2(false, true))) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0))))))).y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))), (~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))) / uvec3(1u, 1u, 1u))))))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))), (~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))), uvec3(uvec3(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))))))) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))) / uvec3(1u, 1u, 1u))))))))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), min(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))))) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(uvec4(gl_NumWorkGroups, uint(_GLF_ONE(1.0, injectionSwitch.y))))) / uvec3(1u, 1u, 1u))))))))) >> uvec3(0u, 0u, 0u))) - uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(packUnorm2x16(vec2(382.992, -6461.6499))) : 0u)), 0u, 0u))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.7))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (gl_NumWorkGroups)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false, true))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, ! (! (false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, ! (! (false)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, _GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), false || ((false))), true, true))) && true)), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)), true)))))))))))), bool(bvec4((! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false), _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), _GLF_IDENTITY(true, false || (true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)), false))), true)))))))))))), false, false, false)))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id * subgroup_size)))), 0u ^ (workgroup_base + subgroup_id * subgroup_size)))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u)) * uvec2(1u, 1u))), (uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) * uvec2(1u, 1u)))) | 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u)) * uvec2(1u, 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) * uvec2(1u, 1u))), min(uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) * uvec2(1u, 1u)))))) | 0u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true && (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, exp(0.0), determinant(mat3(1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, exp(0.0), determinant(mat3(1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0)), max(vec2(mat3(injectionSwitch, 0.0, exp(0.0), determinant(mat3(1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 0.0, exp(0.0), determinant(mat3(1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0))))) + abs(vec2(0.0, 0.0))), min(vec2(mat3(injectionSwitch, 0.0, exp(0.0), determinant(mat3(1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(23.00, 3.0, 92.07).t)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.0) : 0.0)), _GLF_IDENTITY(0.0, float(mat4x3(0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), 0.0)), 1.0)), 1.0, 1.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 0.0, exp(0.0), determinant(mat3(1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(-50.64), _GLF_FUZZED(7.1)), vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, exp(0.0), determinant(mat3(1.0, length(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 0.0, exp(0.0), _GLF_IDENTITY(determinant(mat3(1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (determinant(mat3(1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(log2(-83.99)))))), 1.0, 0.0, 1.0))) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 0.0)), (float(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 0.0))) / 1.0))), 1.0, 1.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 0.0, exp(0.0), determinant(mat3(1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0))))))).x < injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(vec2(-9849.3935, -2.6), 762.446).g), (injectionSwitch)[_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)))]), vec2((injectionSwitch)[0], _GLF_FUZZED(60.08)), bvec2(true, false))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(956.954) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(vec2(-9849.3935, -2.6), 762.446).g), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(60.08)), bvec2(true, false))).y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(vec2(-9849.3935, -2.6), 762.446).g), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(60.08)), bvec2(true, false))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(vec2(-9849.3935, -2.6), 762.446).g), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(60.08), max(_GLF_FUZZED(60.08), _GLF_FUZZED(60.08)))), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(vec2(-9849.3935, -2.6), 762.446).g), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(60.08, float(vec4(60.08, 1.0, 0.0, 1.0))))), bvec2(true, false))).y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec3(vec2(-9849.3935, -2.6), 762.446).g), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(60.08)), bvec2(true, false)), mix(vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(vec3(vec2(-9849.3935, -2.6), 762.446).g), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.9, -7.1)) : injectionSwitch)))[0], _GLF_FUZZED(60.08)), bvec2(true, false)))[0], mix(float((mix(vec2(_GLF_FUZZED(vec3(vec2(-9849.3935, -2.6), 762.446).g), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(60.08)), bvec2(true, _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))[0]), float(_GLF_FUZZED(-52.19)), bool(false))), _GLF_FUZZED(_GLF_IDENTITY(-3.0, min(-3.0, -3.0)))), vec2(_GLF_FUZZED(-984.536), (mix(vec2(_GLF_FUZZED(vec3(vec2(-9849.3935, -2.6), 762.446).g), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(60.08)), bvec2(true, false)))[1]), bvec2(false, true)))).y))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), ! (! (! (bool(bvec3(false, true, false)))))), (! (bool(bvec3(false, true, false)))) && true))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), (min(workgroup_base, workgroup_base)) | (min(workgroup_base, workgroup_base)))), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), 0u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, (false ? _GLF_FUZZED(num_workgroup) : (workgroup_base) + 0u))), 0u)))))))))) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, (0u & 31279u) ^ (0u))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u)))) * (subgroup_size)), uint(uint(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))), ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u)) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, max(1u, 1u)))) - 0u)))) >> 0u));
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ (_GLF_IDENTITY((next_virtual_gid) ^ 0u, clamp((next_virtual_gid) ^ 0u, (next_virtual_gid) ^ 0u, (next_virtual_gid) ^ 0u)))))], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY((4) >> 0, 1 * _GLF_IDENTITY(((4) >> 0), min(_GLF_IDENTITY(((4) >> 0), int(ivec3(((4) >> 0), 0, 1))), _GLF_IDENTITY(((4) >> 0), (false ? _GLF_FUZZED(21028) : _GLF_IDENTITY(((4) >> 0), (((4) >> 0)) ^ 0))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-50.64, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(-50.64, 1.0, 0.0, abs(abs(0.0)), 1.0, 0.0), (false ? _GLF_FUZZED((- mat3x2(1.4, -941.380, 353.416, 331.563, 2.1, -5.6))) : mat3x2(-50.64, 1.0, 0.0, abs(abs(0.0)), 1.0, 0.0)))), min(float(_GLF_IDENTITY(mat3x2(-50.64, 1.0, 0.0, abs(abs(0.0)), 1.0, 0.0), (false ? _GLF_FUZZED((- mat3x2(1.4, -941.380, 353.416, 331.563, 2.1, -5.6))) : mat3x2(-50.64, 1.0, 0.0, abs(abs(0.0)), 1.0, 0.0)))), float(_GLF_IDENTITY(mat3x2(-50.64, 1.0, 0.0, abs(abs(0.0)), 1.0, 0.0), (false ? _GLF_FUZZED((- mat3x2(1.4, -941.380, 353.416, 331.563, 2.1, -5.6))) : mat3x2(-50.64, 1.0, 0.0, abs(abs(0.0)), 1.0, 0.0)))))))), _GLF_FUZZED(-359.101)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) + 0)]), bvec2(true, true)), max(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-50.64), _GLF_FUZZED(-359.101)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), false)))))), (true ? _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-50.64), _GLF_FUZZED(-359.101)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), max(mix(vec2(_GLF_FUZZED(-50.64), _GLF_FUZZED(-359.101)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-50.64), _GLF_FUZZED(-359.101)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], (injectionSwitch)[1]), bvec2(true, true)))) : _GLF_FUZZED(vec2(4.8, 1.0)))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-50.64), _GLF_FUZZED(-359.101)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (true ? mix(vec2(_GLF_FUZZED(-50.64), _GLF_FUZZED(-359.101)), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, false || (true)), true)) : _GLF_FUZZED(vec2(3071.3663, -2.9))))))).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(714.461, 94.82)) : (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))) && true)) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.9)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0.0, 1.0 * (0.0)) + (_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u))), (_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0.0, 1.0 * (0.0)) + (_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)))) << 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(84548))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(84548))), 0 | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(84548)))))) >> 0))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, true)), false, false, true)), bool(bvec4(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, false, true)), false, false, true)), false, false, false))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false), true, true)))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), false, true))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.y))) - sin(0.0))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-723.708)), max((true ? injectionSwitch.x : _GLF_FUZZED(-723.708)), (true ? injectionSwitch.x : _GLF_FUZZED(-723.708))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) ^ 0u, (_GLF_IDENTITY((read_1) ^ 0u, 0u | ((read_1) ^ 0u))) << 0u)) == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) << (0u | 0u)))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) * 1)) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), (int(8)) ^ 0)), (~ (_GLF_IDENTITY(int(8), (int(8)) ^ 0))) / 1))), int(8)), (0 << _GLF_IDENTITY(int(8), int(8))) ^ _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1))))))))) | 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-66846) : (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(8), int(8)), (0 << _GLF_IDENTITY(int(8), int(8))) ^ 0)))) | 0))), (uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2))), ! (! (read_1 == read_2)))) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - (_GLF_IDENTITY(0, (0) << 0) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), min(int(8), int(8)))) | (int(8))))))) | 0, (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), int(ivec4(_GLF_IDENTITY(1, (1) * 1), 0, 0, 0)))) - (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) + 0), int(8))))) | 0, ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, 1 * (1)))) - (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) << 0)) | 0)) ^ 0), int(8))))) | _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0))))) | ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - (0 << _GLF_IDENTITY(int(8), int(8))))) | 0))) + _GLF_IDENTITY(0, min(0, 0))))) ^ 0u), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) - 0))), _GLF_IDENTITY(64, 0 ^ (64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y))))))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ (next_virtual_gid)), max(~ (~ (next_virtual_gid)), _GLF_IDENTITY(~ (~ (next_virtual_gid)), (_GLF_IDENTITY(~ (~ (next_virtual_gid)), (~ (~ (next_virtual_gid))) | 0u)) << 0u))))], uint(read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), true)))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (! (false)))))))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(false))), false || (bool(true && (_GLF_DEAD(false))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(true && (_GLF_DEAD(false))), false || (bool(true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))) && true, ((_GLF_IDENTITY(bool(true && (_GLF_DEAD(false))), false || (bool(true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))) && true) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY((false), ((false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}
