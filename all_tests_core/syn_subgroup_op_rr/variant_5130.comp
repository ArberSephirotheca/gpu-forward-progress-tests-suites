#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid;
 uvec4 GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w = subgroup_id, 0u | (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w = subgroup_id));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), sqrt(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, cos(tan(0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), true)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), true)))))), true, false, true))))), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, (false) || false), true))))))));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(465.784), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(65.03)), bvec2(true, false))).y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z = subgroup_size;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, false || (false))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), false || (false))), true), false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, false || (false))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), false || (false))), true), false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))));
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.y = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))), false || (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))), false || (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))))), (! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))), false || (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))))))) && true))))))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec3(479.911, 9.6, -5.1)) : vec3(1.0, 0.0, 1.0))))), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3979.6857, 574.819)))).y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))
        {
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.x = _GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, 0u + (num_workgroup)), (num_workgroup) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base)) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid) >> uvec4(0u, 0u, 0u, 0u)).z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), _GLF_IDENTITY(0u + (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z) >> 0u), min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z))) | (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid) - uvec4(0u, 0u, 0u, 0u)))).z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z))))), (true ? 0u + (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z) >> 0u), min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z))) | (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid) - uvec4(0u, 0u, 0u, 0u)))).z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z))))) : _GLF_FUZZED(subgroup_size))))), (1u ^ 0u) * _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), 0u + (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, uint(uint(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)))))) | (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, clamp(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid)), GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid)), max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid : _GLF_FUZZED((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid << _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid)) << uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))).z, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec4(116859u, 121209u, 38333u, 89680u)) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid))) | (uvec4(0u, 0u, 0u, 0u) & uvec4(22319u, 85587u, 176525u, 186549u))).z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)))))))), 0u ^ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), 0u + (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z))) | (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid : _GLF_FUZZED((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid << workgroup_base)))), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid)) << uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))).z, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec4(116859u, 121209u, 38333u, 89680u)) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid))) | (uvec4(0u, 0u, 0u, 0u) & uvec4(22319u, 85587u, 176525u, 186549u))).z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)))))), (false ? _GLF_FUZZED(atomicCompSwap(subgroup_id, workgroup_id, workgroup_id)) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), 0u + (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z))) | (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid : _GLF_FUZZED((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid << workgroup_base)))), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid)) << uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))).z, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(116859u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(116859u, (116859u) >> 0u))), 121209u, 38333u, 89680u)) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid))) | (uvec4(0u, 0u, 0u, 0u) & uvec4(22319u, 85587u, 176525u, 186549u))).z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)))))))))), (((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), 0u + (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid)) : _GLF_FUZZED((mat4(-16.98, -34.06, -8723.2743, 521.710, 8924.1344, -3.7, 3.2, -71.76, 2.6, -4.4, -5903.6973, -4.2, -41.22, -7825.5052, -7397.9809, 77.15) , (-- GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id))))).z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z))) | (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid : _GLF_FUZZED((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid << workgroup_base)))), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid)) << uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))).z, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec4(116859u, 121209u, 38333u, 89680u)) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid))) | (uvec4(0u, 0u, 0u, 0u) & uvec4(22319u, 85587u, 176525u, 186549u))).z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z))), ((GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z))) | (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid : _GLF_FUZZED((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid << workgroup_base)))), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid)) << uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))).z, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec4(116859u, 121209u, 38333u, 89680u)) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid))) | (uvec4(0u, 0u, 0u, 0u) & uvec4(22319u, 85587u, 176525u, 186549u))).z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)))) ^ 0u))))))) | (((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z) / 1u), GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), 0u + (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid : _GLF_FUZZED((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid << workgroup_base)))), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid)) << uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))).z, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec4(116859u, 121209u, 38333u, 89680u)) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid))) | (uvec4(0u, 0u, 0u, 0u) & uvec4(22319u, 85587u, 176525u, 186549u))).z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)), (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, max(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid : _GLF_FUZZED((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid << workgroup_base)))), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid), ((GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid)) << uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))).z, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec4(116859u, 121209u, 38333u, 89680u)) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid))) | (uvec4(0u, 0u, 0u, 0u) & uvec4(22319u, 85587u, 176525u, 186549u))).z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z))) ^ 0u)))))))))))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w, (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w) << 0u) * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)))) + GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.y;
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.w = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z), (~ (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)) - (72879u & 0u)))), (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.w * GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z) << 0u) + ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.y) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(950.884)))) + 0.0, min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(59.68)), bool(false))), (true ? 0.0 : _GLF_FUZZED(950.884)))) + 0.0, 0.0 + ((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(950.884)))) + 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(950.884), mix(float(true ? 0.0 : _GLF_FUZZED(950.884)), float(_GLF_FUZZED((-9.3 * 0.2))), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) + 0.0, clamp((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(950.884)))) + 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(950.884))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(950.884), mix(float(_GLF_FUZZED(-3847.1147)), float(_GLF_FUZZED(950.884)), bool(true)))))) / 1.0)) + 0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (! (true)))))))) ? 0.0 : _GLF_FUZZED(950.884)))) + 0.0)))), ((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(950.884, max(_GLF_IDENTITY(950.884, clamp(950.884, 950.884, 950.884)), 950.884)), min(_GLF_IDENTITY(950.884, max(_GLF_IDENTITY(950.884, clamp(950.884, 950.884, 950.884)), 950.884)), _GLF_IDENTITY(_GLF_IDENTITY(950.884, (950.884) - length(vec2(0.0, 0.0))), max(_GLF_IDENTITY(950.884, _GLF_IDENTITY(clamp(950.884, 950.884, 950.884), (true ? _GLF_IDENTITY(clamp(950.884, 950.884, 950.884), mix(float(clamp(950.884, 950.884, 950.884)), float(_GLF_FUZZED(-128.844)), bool(false))) : _GLF_FUZZED(5.6)))), 950.884)))))))) + 0.0) * 1.0)), injectionSwitch.x))) + 1) % GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
    {
     barrier();
    }
   else
    {
    }
  }
 GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.x = next_virtual_gid;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.x], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), min(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), ~ (~ (ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), min(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), ~ (~ (ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0)))))), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), min(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), ~ (~ (ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0)))))))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), min(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), ~ (~ (ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0)))))))))), max(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), min(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))))), 0, 0, 0), ~ (~ (ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0))), 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0)))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1)))))) + 0))), 0, 0, 0), min(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0), ~ (~ (ivec4(_GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), clamp(ivec3(1, 1, 0), ivec3(1, 1, 0), ivec3(1, 1, 0))))))))), 1), min(min(_GLF_IDENTITY(1, min(1, 1)), 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), 0, 0, 0)))))))))))), 4, 64, 4);
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.w], _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(50214) : (4))), 0 | ((4))) >> _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), _GLF_IDENTITY((true ? int(2) : _GLF_FUZZED(-10274)), max((true ? int(2) : _GLF_FUZZED(-10274)), (true ? int(2) : _GLF_FUZZED(-10274)))))) << 0)), 0 ^ (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(int((subgroup_local_id > workgroup_base))))) : _GLF_FUZZED(-10274)))) << 0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(69640), clamp(_GLF_IDENTITY(_GLF_FUZZED(69640), (_GLF_FUZZED(69640)) >> 0), _GLF_FUZZED(69640), _GLF_FUZZED(69640))) : (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-10274)))) << 0)), _GLF_IDENTITY(0 ^ (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-10274)))) << 0))), (0 ^ (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-10274)))) << 0)))) << 0)))))), 4)), 64, _GLF_IDENTITY(0, (0) / 1));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), bool(_GLF_IDENTITY(bvec2(bool(bool((! (false)))), false), bvec2(bvec2(bvec2(bool(bool((! (false)))), false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.y = read_1, (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.y = read_1) | 0u);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, clamp(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid)), GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid)).w, ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.w))), GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.w))], 4, 64, 0);
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)) * 1, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)) * 1), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)) * 1), max(~ ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)) * 1), ~ ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)) * 1)))) / 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_FALSE(false), true), true, true))))))
                {
                }
               else
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.z = read_2;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (true)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
          barrier();
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.y + 1 < GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11num_workgroupsubgroup_local_idsubgroup_sizevirtual_gid.z)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.x], uint(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.y == GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.z) + 1, 4, 64, _GLF_IDENTITY(4, 1 * (4)));
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true, true))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asinh(9.6)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))));
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.x], uint(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id.y == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id, (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id) << uvec4(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)), GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_11next_virtual_gidread_1read_2subgroup_id)).z) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) - 0), 4, 64, 4);
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false))))))))))
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-388.427, 61.77)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))), (injectionSwitch) / vec2(1.0, 1.0)).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1 & 1, (1 & 1) - 0))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true, false, true)), ! (! (bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true, false, true)))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), true), true, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), true), true, false)))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), true), true, false)))))), true))))))))));
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))).y)))))));
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1)))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) != 0); _injected_loop_counter --)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (! (_GLF_WRAPPED_LOOP(false))) || false))), true))));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
