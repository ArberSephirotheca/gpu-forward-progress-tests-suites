#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id;
 uvec4 GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size;
 uvec2 GLF_merged2_0_1_6_1_1_13read_2subgroup_size;
 GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.zw = GLF_merged2_0_1_6_1_1_13read_2subgroup_size;
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.y = subgroup_size;
 GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.zw.y = GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.y;
 GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy.y = GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.zw.y;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.x = subgroup_local_id;
 GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy.x = GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.x;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.z = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_17_1_1_13_2_1_12subgroup_local_idsubgroup_sizeworkgroup_id.z;
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy.y + GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy.x;
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy.y + ((GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy.x + 1) % GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy.y);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.zw.x = read_2;
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 | 0), max((0 | 0), (0 | 0)))); _injected_loop_counter --)
  {
   if(GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy.x + 1 < GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.xy.y)
    {
     int i = 0;
     atomicStore(buf[next_virtual_gid], uint(read_1 == GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.zw.x) + 1, 4, 64, 4);
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(read_1 == GLF_merged2_0_2_55_2_2_43GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizeGLF_merged2_0_1_6_1_1_13read_2subgroup_size.zw.x) + 1, 4, 64, 4);
    }
  }
}
