#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 ivec3 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_17 {
 mat3x4 _f0;
 uint read_2;
 vec4 _f1;
 mat3x2 _f2;
 vec2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_16 {
 mat2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_19 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
} ;

struct _GLF_struct_20 {
 mat2x3 _f0;
 _GLF_struct_19 _f1;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 ivec4 _f1;
 _GLF_struct_13 _f2;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 uvec4 _f1;
 mat2 _f2;
 uvec4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 bool _f1;
} ;

struct _GLF_struct_11 {
 mat2x3 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 int _f1;
 mat2 _f2;
 int _f3;
 uint _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 int _f1;
 bvec4 _f2;
 mat3x2 _f3;
 uint _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 mat2 _f1;
 _GLF_struct_6 _f2;
 uvec2 _f3;
 _GLF_struct_7 _f4;
 uvec4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_15 {
 bvec3 _f0;
 vec2 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_11 _f3;
 mat2x4 _f4;
 mat2x4 _f5;
 _GLF_struct_14 _f6;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 ivec3 _f1;
 uint subgroup_size;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 mat3x2 _f1;
 mat3x2 _f2;
 bool _f3;
 mat3 _f4;
 mat3x4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 mat2 _f1;
 bvec2 _f2;
 ivec3 _f3;
 bvec3 _f4;
 mat3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_2 {
 uint workgroup_id;
 _GLF_struct_0 _f0;
 mat4x3 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 _GLF_struct_2 _f1;
 mat2 _f2;
 int _f3;
 mat2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 _GLF_struct_15 _GLF_struct_replacement_15;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x = subgroup_id;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(ivec3(1), ivec3(1), gl_SubgroupSize);
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y = _GLF_struct_replacement_4.subgroup_size;
 _GLF_struct_replacement_15.GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y = workgroup_size;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(ivec3(1), _GLF_struct_2(gl_WorkGroupID.x, _GLF_struct_0(mat3(1.0), mat2(1.0), bvec2(true), ivec3(1), bvec3(true), mat3(1.0), mat4(1.0)), mat4x3(1.0), _GLF_struct_1(uvec4(1u), mat3x2(1.0), mat3x2(1.0), true, mat3(1.0), mat3x4(1.0), mat3(1.0))), mat2(1.0), 1, mat2(1.0));
 uint workgroup_base = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * _GLF_struct_replacement_3._f1.workgroup_id;
 _GLF_struct_replacement_15.GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base;
 uint virtual_gid = _GLF_struct_replacement_15.GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_struct_replacement_15.GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x + subgroup_local_id;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid;
 uint next_virtual_gid = _GLF_struct_replacement_15.GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_struct_replacement_15.GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x + ((subgroup_local_id + 1) % _GLF_struct_replacement_15.GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x], 4, 64, 0);
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(mat2x3(1.0), _GLF_struct_19(_GLF_struct_16(mat2(1.0), uvec4(1u)), _GLF_struct_17(mat3x4(1.0), atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x], 4, 64, 0), vec4(1.0), mat3x2(1.0), vec2(1.0), mat2x4(1.0)), _GLF_struct_18(ivec3(1), vec2(1.0))));
 if(subgroup_local_id + 1 < _GLF_struct_replacement_15.GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_struct_replacement_20._f1._f1.read_2) + 1, 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_struct_replacement_20._f1._f1.read_2) + 1, 4, 64, 4);
  }
}
