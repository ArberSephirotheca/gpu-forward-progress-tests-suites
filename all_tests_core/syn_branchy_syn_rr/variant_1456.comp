#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(distance(injectionSwitch, injectionSwitch))), mix(float((true ? injectionSwitch.x : _GLF_FUZZED(distance(injectionSwitch, injectionSwitch)))), float(_GLF_FUZZED((- 7824.2752))), bool(false))))), float(_GLF_FUZZED(1.0)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, false, false, false)))) || false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), true))))), true, true, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), true, true, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) && true), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), true, true, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))) || false))))), ! (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), true, true, _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (! ((bool(false))))) || false))))), (false) && true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))) || false), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))), (false) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true), false), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))) || false)) || false), true, true))) && true), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))) || false)) || false), true, true))) && true), false), false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))) || false)) || false), true, true))) && true), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))) || false)) || false), true, true))) && true), false), false)), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))) || false)) || false), true, true))) && true), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))) || false)) || false), true, true))) && true), false), false)), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), (bool(bool(_GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), (bool(bool(_GLF_IDENTITY(false, (false) && true)))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true))) || false)))) && true), false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true), false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true), false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))), false)))), true, true))), false, true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true), false), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))), ! (! ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))))) && true), false), true, true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), true && (bool(_GLF_IDENTITY(false, (false) && true)))))))))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))), ! (! ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))))) && true), false), true, true))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))), ! (! ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))))) && true), false), true, true))), true)), true)))), false, true)))), true)))))) || false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-49.88)), vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))))))).x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))).x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))).x, 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))).x, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))).x, 1.0, 0.0, 0.0, 1.0, 1.0)))))))) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, true && ((false) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-95.72)), bool(false)), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-95.72)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-95.72, _GLF_IDENTITY(float(mat3(-95.72, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3(-95.72, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), 1.0 * (float(mat3(-95.72, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)))), clamp(_GLF_IDENTITY(float(mat3(-95.72, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), 1.0 * (float(mat3(-95.72, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(float(mat3(-95.72, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), 1.0 * (float(mat3(-95.72, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(float(mat3(-95.72, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), 1.0 * (float(mat3(-95.72, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)))))), 1.0, 0.0, 0.0)))))), bool(false))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4((vec4(injectionSwitch, 0.0, 0.0))[0], _GLF_FUZZED(461.178), (vec4(injectionSwitch, 0.0, 0.0))[2], _GLF_IDENTITY((vec4(injectionSwitch, 0.0, 0.0))[3], mix(float(_GLF_FUZZED(9049.9920)), float((vec4(injectionSwitch, 0.0, 0.0))[3]), bool(true)))), vec4(_GLF_FUZZED(-84.21), (vec4(injectionSwitch, 0.0, 0.0))[1], _GLF_FUZZED((26.74)), _GLF_FUZZED(3228.1088)), bvec4(false, true, false, false)))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4((vec4(injectionSwitch, 0.0, 0.0))[0], _GLF_FUZZED(461.178), (vec4(injectionSwitch, 0.0, 0.0))[2], _GLF_IDENTITY((vec4(injectionSwitch, 0.0, 0.0))[3], mix(float(_GLF_FUZZED(9049.9920)), float((vec4(injectionSwitch, 0.0, 0.0))[3]), bool(true)))), vec4(_GLF_FUZZED(-84.21), (vec4(injectionSwitch, 0.0, 0.0))[1], _GLF_FUZZED((26.74)), _GLF_FUZZED(3228.1088)), bvec4(false, true, false, false))))) * mat2(1.0))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(8978.6367)), vec2(_GLF_FUZZED(-5.1), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))))))), mix(vec2(_GLF_FUZZED(-3.5), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(80.38)), bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * 1), 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))))], (true ? injectionSwitch[1] : _GLF_FUZZED(cos(1.5)))))))))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], (_GLF_FUZZED(injectionSwitch))[1]), vec2(_GLF_FUZZED(3401.3781), _GLF_FUZZED(-3795.9685)), bvec2(false, false))))), _GLF_FUZZED(injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-17.69), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) - vec2(0.0, 0.0)))))) - vec2(0.0, 0.0)))[1]), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), max((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) + _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))) / _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(-8.1, 28.65)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), (_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), max(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), mix(vec2(((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0], _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1], min(((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1], ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1]))), vec2(_GLF_FUZZED(-6749.3528), _GLF_FUZZED(-10.83)), bvec2(false, false))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) - vec2(0.0, 0.0)))[_GLF_IDENTITY(0, 0 + (0))], _GLF_FUZZED(-5.0)), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mix(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-6.0)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], min((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0])), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), bvec2(true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - sqrt(vec2(0.0, 0.0)))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(0.0, 0.0) + ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))))) - vec2(0.0, 0.0)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), bool(bool(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, false))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))), false, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))), false, false)), true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), clamp(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), ((gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)) | (_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), ((gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)) ^ uvec3(0u, 0u, 0u)))), (gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(0u, (0u) + 0u)) / 1u), 0u), (gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)) << uvec3(0u, 0u, 0u))))).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x))), min((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), clamp((gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), (gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), (gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)))).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x))), (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), clamp((gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), (gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)))).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x))))) - (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))) + 0u), ~ (0u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u) : _GLF_FUZZED(subgroup_local_id)))) | 0u)))) >> _GLF_IDENTITY(0u, 0u | (0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))))).x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(0u, (0u) - 0u), 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ (uvec2(0u, 1u)))))), 0u, 0u)), clamp(uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ (uvec2(0u, 1u)))))), 0u, 0u)), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ (uvec2(0u, 1u)))))), 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ (uvec2(0u, 1u)))))), 0u, 0u)), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ (uvec2(0u, 1u)))))), 0u, 0u)))))))).x) | (gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) ? (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) : _GLF_FUZZED(49372u))) | (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(175637u, 158540u, 1166u)) : uvec3(uvec3(gl_WorkGroupID))))), _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u))))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_WorkGroupID), uvec3(uvec4((gl_WorkGroupID), 1u))) ^ uvec3(0u, 0u, 0u))))))).x) | (gl_WorkGroupID.x))))) + 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, clamp((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ 0u)) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, (true ? (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : 0u)), 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u))))))))) - 0u))) - _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (6u)))), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u))), clamp(_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(_GLF_IDENTITY(6u, (6u) / 1u)))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)))) >> 0u), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u))), ~ (~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)))) << 0u)))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), (uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u)))) >> 0u), uint(6u), uint(6u))), uint(6u))))))) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x) | (gl_WorkGroupID.x)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)).x) | (gl_WorkGroupID.x))) - (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u)))), min(0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u)))), 0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))))))), max((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)).x, clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)).x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)).x))) | (gl_WorkGroupID.x))) - (0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec2(uint(5u), 0u), (false ? _GLF_FUZZED(uvec2(24450u, 77554u)) : uvec2(uint(5u), 0u))))), uint(5u))), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec2(uint(5u), 0u), (false ? _GLF_FUZZED(uvec2(24450u, 77554u)) : uvec2(uint(5u), 0u))))), uint(5u)))) | ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec2(uint(5u), 0u), (false ? _GLF_FUZZED(uvec2(24450u, 77554u)) : uvec2(uint(5u), 0u))))), uint(5u))))) | 0u) + (6u))))), (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)).x) | (gl_WorkGroupID.x))) - _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uint(_GLF_IDENTITY(uint(6u), uint(6u)))))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, (6u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u), uint(6u)))) | ((0u << _GLF_IDENTITY(uint(6u), uint(6u))))))))) >> 0u))), 1u * (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), ~ (~ (~ (gl_WorkGroupID)))))).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), clamp((gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), (gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), (gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)))).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID)))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID)))), (~ (_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID))))) | (~ (_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID)))))) : _GLF_FUZZED(uvec3(41745u, 145398u, 59331u))))))).x))), min((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), clamp((gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), (gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) ^ uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (0u) + 0u), 0u)))).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x))), (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((gl_WorkGroupID), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))) ^ ((gl_WorkGroupID))))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), clamp((gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, ((0u) + 0u) >> 0u)), 0u), (gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), (gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) ^ 0u)), 0u)))).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x))))) - (_GLF_IDENTITY(0u, ~ (~ (0u))) << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(0u, 0u | (0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), min(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))))).x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ _GLF_IDENTITY((uvec2(0u, 1u)), (true ? (uvec2(0u, 1u)) : _GLF_FUZZED(uvec2(192048u, 175360u)))))))), 0u, 0u)))).x) | (gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x), (true ? (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, max(0u, 0u)), 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) : _GLF_FUZZED(49372u))) | (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)) ^ uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, _GLF_IDENTITY(clamp((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(22187u, 185615u, 131716u)))), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u))))).x) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), ~ (~ (uint((gl_WorkGroupID.x)))))))) | (_GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), (gl_WorkGroupID.x)))))), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u), 1u * (clamp((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(22187u, 185615u, 131716u)))), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u))))).x) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x)), 0u | (~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), (((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))) ^ 0u)))) + 0u, (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), min(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))), (gl_WorkGroupID))), _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (gl_WorkGroupID))), (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x))), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), ~ (_GLF_IDENTITY(~ (uint((gl_WorkGroupID.x))), min(~ (uint((gl_WorkGroupID.x))), ~ (uint((gl_WorkGroupID.x)))))))))) | (_GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), (gl_WorkGroupID.x)))))), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))).x) | (gl_WorkGroupID.x))))) + 0u))))))))))) - 0u))) - _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u)))), (~ (uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))))) << 0u))), uint(6u), uint(6u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))))), uint(_GLF_IDENTITY(6u, (6u) | (6u))))), clamp(_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)), min(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)), (true ? 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)) : _GLF_FUZZED(workgroup_size))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)))))) >> _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(clamp(6u, 6u, 6u), min(clamp(6u, 6u, 6u), clamp(6u, 6u, 6u))))), uint(6u), uint(6u))), uint(6u))), ~ (~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)))) << 0u)))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), min(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))))).x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ _GLF_IDENTITY((uvec2(0u, 1u)), (true ? (uvec2(0u, 1u)) : _GLF_FUZZED(uvec2(192048u, 175360u)))))))), 0u, 0u)))).x) | (gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x), (true ? (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, max(0u, 0u)), 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) : _GLF_FUZZED(49372u))) | (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)) ^ uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, _GLF_IDENTITY(clamp((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(22187u, 185615u, 131716u)))), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u))))).x) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), ~ (~ (uint((gl_WorkGroupID.x)))))))) | (_GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), (gl_WorkGroupID.x)))))), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u), 1u * (clamp((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(22187u, 185615u, 131716u)))), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u))))).x) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x)), 0u | (~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), (((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))) ^ 0u)))) + 0u, (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), min(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))), (gl_WorkGroupID))), _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (gl_WorkGroupID))), (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x))), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), ~ (_GLF_IDENTITY(~ (uint((gl_WorkGroupID.x))), min(~ (uint((gl_WorkGroupID.x))), ~ (uint((gl_WorkGroupID.x)))))))))) | (_GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), (gl_WorkGroupID.x)))))), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))).x) | (gl_WorkGroupID.x))))) + 0u))))))))))) - 0u))) - _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u)))), (~ (uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))))) << 0u))), uint(6u), uint(6u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))))), uint(_GLF_IDENTITY(6u, (6u) | (6u))))), clamp(_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)), min(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)), (true ? 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)) : _GLF_FUZZED(workgroup_size))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)))))) >> _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(clamp(6u, 6u, 6u), min(clamp(6u, 6u, 6u), clamp(6u, 6u, 6u))))), uint(6u), uint(6u))), uint(6u))), ~ (~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)))) << 0u)))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), min(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))))).x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), ~ (~ _GLF_IDENTITY((uvec2(0u, 1u)), (true ? (uvec2(0u, 1u)) : _GLF_FUZZED(uvec2(192048u, 175360u)))))))), 0u, 0u)))).x) | (gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)), 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x), (true ? (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, max(0u, 0u)), 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) : _GLF_FUZZED(49372u))) | (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u)) ^ uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, _GLF_IDENTITY(clamp((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(22187u, 185615u, 131716u)))), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u))))).x) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), ~ (~ (uint((gl_WorkGroupID.x)))))))) | (_GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), (gl_WorkGroupID.x)))))), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u), 1u * (clamp((_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), (true ? (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(22187u, 185615u, 131716u)))), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u))))).x) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)).x)), 0u | (~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), (((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))) ^ 0u)))) + 0u, (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), min(_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID))), (gl_WorkGroupID))), _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (gl_WorkGroupID))), (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x)), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | (gl_WorkGroupID.x))))) + 0u, (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x) | _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), (gl_WorkGroupID.x), (gl_WorkGroupID.x))), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), ~ (_GLF_IDENTITY(~ (uint((gl_WorkGroupID.x))), min(~ (uint((gl_WorkGroupID.x))), ~ (uint((gl_WorkGroupID.x)))))))))) | (_GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), (gl_WorkGroupID.x)))))), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))).x) | (gl_WorkGroupID.x))))) + 0u))))))))))) - 0u))) - _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u)))), (~ (uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))))) << 0u))), uint(6u), uint(6u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))))), uint(_GLF_IDENTITY(6u, (6u) | (6u))))), clamp(_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)), min(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)), (true ? 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)) : _GLF_FUZZED(workgroup_size))), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)))))) >> _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(clamp(6u, 6u, 6u), min(clamp(6u, 6u, 6u), clamp(6u, 6u, 6u))))), uint(6u), uint(6u))), uint(6u))), ~ (~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)))) << 0u)))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), uint(6u), uint(6u))), uint(6u)))))))))))) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x) | (gl_WorkGroupID.x)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID)))) << uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)).x) | (gl_WorkGroupID.x))) - (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u)))), min(0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u)))), 0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), (uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u)))) / 1u))))), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)).x) | (gl_WorkGroupID.x)), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)).x) | (gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)).x) | (gl_WorkGroupID.x))), (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)).x) | (gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)).x) | (gl_WorkGroupID.x))), uint(uvec3(min(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)).x) | (gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)).x) | (gl_WorkGroupID.x))), 0u, 1u)))) * 1u))) - (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))), 0u)), _GLF_IDENTITY(~ (~ (0u)), clamp(~ (~ (0u)), ~ (~ (0u)), ~ (~ (0u))))) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | 0u) + (6u))))), (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size)), min(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size)), ~ (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))) ^ 0u)))), 0u)).x) | (gl_WorkGroupID.x))) - _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uint(_GLF_IDENTITY(uint(6u), uint(6u)))))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u), uint(6u)))) | ((0u << _GLF_IDENTITY(uint(6u), uint(6u))))))))) >> 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), true)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.3)), bvec2(true, false))))).y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fract(vec2(77.21, -4649.3400))) : _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))))).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_id) : subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u | (workgroup_base + subgroup_id * subgroup_size))), 0u ^ ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u | (workgroup_base + subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)) - 0u), workgroup_base)) + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u), (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) << _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) - uvec2(0u, 0u)))), (uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u), (_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u), max(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u), min(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u), uvec2(workgroup_base + subgroup_id * subgroup_size, 0u))), uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) << uvec2(0u, 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) >> 0u, min((workgroup_base + subgroup_id * subgroup_size) >> 0u, (workgroup_base + subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, max(0u, 0u))))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED((workgroup_id --)) : workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size) | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (12927u & 0u) + (subgroup_id * subgroup_size))), (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u + (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ ((workgroup_base + subgroup_id * subgroup_size))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x)) + (true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, uint(uvec3((subgroup_size) >> 0u, ((0u | 0u) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u))))) : _GLF_FUZZED(subgroup_id))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 1u)))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)))))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 1u)))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)))))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)))) - 0u), (_GLF_IDENTITY(true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_id))))), 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) / _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), ~ (~ ((1u)))))) ^ (1u ^ 1u))))) * subgroup_size))), (workgroup_base + subgroup_id * subgroup_size))))), max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))))) * subgroup_size) | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))))), (workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ ((workgroup_base + subgroup_id * subgroup_size))))) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u)), (_GLF_IDENTITY(true ? (workgroup_base + subgroup_id * subgroup_size) : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (true ? _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), 0u + ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))) | 0u))) : _GLF_FUZZED(subgroup_id)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u) + (_GLF_IDENTITY(true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_id), ~ (~ (true ? (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) : _GLF_FUZZED(subgroup_id))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (_GLF_IDENTITY(true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_id), (true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_id)) | (_GLF_IDENTITY(true ? (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_id), (true ? true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(workgroup_size)))) >> 0u)))))) : _GLF_FUZZED(subgroup_size)))))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(0u, (0u) - (0u & 194933u)) << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u)))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) : _GLF_FUZZED(subgroup_local_id))), max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) / 1u))) * subgroup_size))), (workgroup_base + subgroup_id * subgroup_size))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size) | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 0u, 0u)))), clamp((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - 0u)) + 0u)), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) / 1u))))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x2((injectionSwitch)[0], 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8482.7197), _GLF_FUZZED(-9.8)), bvec2(false, false))))))).x))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)), clamp(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u)))) >> 0u)) : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(true ? (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_id), (true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_id)) | (true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_id)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(true ? (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_id), (true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_id)) | (true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY((subgroup_size) >> 0u, 0u | ((subgroup_size) >> 0u)))) : _GLF_FUZZED(subgroup_id))))) - (0u ^ 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(155916u))) + subgroup_id * subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), min((subgroup_id), _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))))) << 0u)) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ _GLF_IDENTITY(0u, 0u + (0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u))))), (uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))))) ^ 0u)))) - 0u, max((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u))))), (uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))))) ^ 0u)))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u))))), (uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))))) ^ 0u)))) - 0u))) / 1u))) * subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))) / 1u))) * subgroup_size))), uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))) / 1u))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))) / 1u))) * subgroup_size, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) | (subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))) / 1u))) * subgroup_size)))) << 0u))))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u, min((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u, min((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u, min((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u, min((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u, min((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u, min((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) ^ 0u))))))) ^ 0u))))) / 1u))) * subgroup_size))))), (workgroup_base + subgroup_id * subgroup_size))))))) / (0u | 1u)), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) : _GLF_FUZZED(num_workgroup))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) / 1u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) / 1u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))), 0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) / 1u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))))))) >> _GLF_IDENTITY(0u, 0u ^ (0u))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y)), false, false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(uintBitsToFloat(uvec2(142541u, 84243u))) : injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))))), false, false)))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, false)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y)), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))))))), true && (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y)), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))))))), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y)), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))))))))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x, injectionSwitch.x)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0)), min(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)), 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0)))[0], mix(float((normalize(vec3(1.0, 1.0, 1.0)))[0]), float(_GLF_FUZZED(-9730.6444)), bool(false))), (normalize(vec3(1.0, 1.0, 1.0)))[1], _GLF_FUZZED(-80.89)), vec3(_GLF_FUZZED(-44.67), _GLF_FUZZED(4.0), (normalize(vec3(1.0, 1.0, 1.0)))[2]), bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0))))), injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(15.65, -2453.5686)) : injectionSwitch)).x > injectionSwitch.y), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) + 0)], _GLF_FUZZED(-55.08)), vec2(_GLF_FUZZED(float(false)), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(trunc(vec2(9.8, -5957.0882))))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y)), false, false)))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), exp(0.0))), float(vec3(float(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), exp(0.0))), 0.0, 1.0)))), injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, (false) || false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2337.4872, -367.335)) : injectionSwitch)).y)), false, false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, _GLF_IDENTITY(-7532.3121, mix(float(_GLF_IDENTITY(-7532.3121, _GLF_IDENTITY(float(mat4x3(-7532.3121, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(1556.5992) : float(mat4x3(-7532.3121, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), float(_GLF_FUZZED((3905.3289 / -863.410))), bool(false))), -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(1.0), min((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(1.0), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-55.08), min(_GLF_FUZZED(-55.08), _GLF_IDENTITY(_GLF_FUZZED(-55.08), clamp(_GLF_FUZZED(-55.08), _GLF_FUZZED(-55.08), _GLF_FUZZED(-55.08)))))) : _GLF_FUZZED((_GLF_IDENTITY(mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974), (mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974)) / vec2(1.0, 1.0)))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(1.0))))).x < injectionSwitch.y)), false, false)))))), bool(bvec4(! (! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(1.0), min((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(1.0), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, _GLF_IDENTITY(-28.86, mix(float(-28.86), float(_GLF_FUZZED(0.6)), bool(false))), 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true)), false, true))))))))))) * mat2(1.0))))).x < injectionSwitch.y)), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(1.0), min((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(1.0), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, _GLF_IDENTITY(-28.86, mix(float(-28.86), float(_GLF_FUZZED(0.6)), bool(false))), 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true)), false, true))))))))))) * mat2(1.0))))).x < injectionSwitch.y)), false, false))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(1.0), min((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(1.0), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, _GLF_IDENTITY(-28.86, mix(float(-28.86), float(_GLF_FUZZED(0.6)), bool(false))), 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true)), false, true))))))))))) * mat2(1.0))))).x < injectionSwitch.y)), false, false)))))) || false)), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(1.0), min((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(1.0), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, _GLF_IDENTITY(-28.86, mix(float(-28.86), float(_GLF_FUZZED(0.6)), bool(false))), 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true)), false, true))))))))))) * mat2(1.0))))).x < injectionSwitch.y)), false, false))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(1.0), min((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, -28.86, 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * mat2(1.0), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)), (true ? vec2((injectionSwitch)[0], _GLF_FUZZED(-55.08)) : _GLF_FUZZED((mat4x2(-3.3, -7532.3121, _GLF_IDENTITY(-28.86, mix(float(-28.86), float(_GLF_FUZZED(0.6)), bool(false))), 80.79, -15.02, -2.1, 3504.9662, -3.6) * vec4(-6929.0045, 76.63, 5.0, 974.974))))), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true)), false, true))))))))))) * mat2(1.0))))).x < injectionSwitch.y)), false, false)))))) || false))))))), true, false, false))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), min(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))), bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))), true && (! (! (_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, ! (! (false))))) || false)))))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) >> 0u), subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), false, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, min(64, 64))))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))) || (bool(bvec3(false, false, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bvec4(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true, false, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), 0 | ((4)))), 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)) && true))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false)))))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1994.0003)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) : _GLF_FUZZED(-493.841)))), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), 1.0, 1.0))).y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))) && true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (! (bool(bool(false))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(756.429, 1.4)))), injectionSwitch)).y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true)), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && true)), true))), true, false))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(82.15)), float(injectionSwitch.y), bool(true))), tan(0.0), 1.0, 1.0))))) || false)))) || false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), _GLF_IDENTITY(false, bool(bool(false))))))))) || false))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, ~ (~ (1))) : _GLF_FUZZED(i))), (_GLF_IDENTITY(1, _GLF_IDENTITY(1, clamp(1, 1, 1)) * _GLF_IDENTITY((1), _GLF_IDENTITY((false ? _GLF_FUZZED(79712) : (1)), (_GLF_IDENTITY((false ? _GLF_FUZZED(79712) : (1)), ((false ? _GLF_FUZZED(79712) : (1))) ^ 0)) | 0)))) / 1)), (false ? _GLF_FUZZED(i) : _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(1, clamp(1, 1, 1)) * _GLF_IDENTITY((1), (false ? _GLF_FUZZED(79712) : (1))))) / 1)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0), 1)) * _GLF_IDENTITY((1), (false ? _GLF_FUZZED(79712) : (1))))) / 1))) | ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) * 1)) + int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (clamp(1, 1, 1)))) * _GLF_IDENTITY((1), (false ? _GLF_FUZZED(79712) : (1))))) / 1)))))) >> 0), _GLF_IDENTITY(4, (4) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)]) / 1.0), _GLF_FUZZED(82.10)), vec2(_GLF_FUZZED(-81.52), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-9111.8323) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0))), 1.0, log(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(round(length(normalize(1.0))), log(1.0)), vec2(1.0, 0.0)), dot(vec2(round(length(normalize(1.0))), log(1.0)), vec2(1.0, 0.0))), round(length(normalize(1.0))), 0.0, 1.0, 1.0), (true ? mat4(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-9111.8323) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0))), 1.0, log(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(round(length(normalize(1.0))), log(1.0)), vec2(1.0, 0.0)), dot(vec2(round(length(normalize(1.0))), log(1.0)), vec2(1.0, 0.0))), round(length(normalize(1.0))), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(4702.7514, 30.21, 0.2, -8.4, 4.1, 9569.6086, 55.04, -6221.3850, 69.40, 6798.2014, 5.8, 339.430, -7009.0767, -488.160, -2.2, 5.5))))))), bvec2(false, true))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(82.10)), vec2(_GLF_FUZZED(-81.52), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-68.65), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.5)), bvec2(true, false)))) + vec2(0.0, 0.0)).y))))))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false))) || false, ! (! ((bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false))) || false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, (true) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false)))))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true)))), true && (! (bool(false)))))))))), true, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false)))))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (! (bool(false)))))))))), true, false)), true, true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.9) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-45.44)), bool(false))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-473.331) : injectionSwitch.x, 0.0 + (false ? _GLF_FUZZED(-473.331) : injectionSwitch.x)))) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-9137.6399, -3.7, 6546.5093, -7.5)) : mat2(1.0)))).y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(736.919, 40.35))), mix(vec2(_GLF_FUZZED(9.6), ((true ? injectionSwitch : _GLF_FUZZED(vec2(736.919, 40.35))))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(vec2(736.919, 40.35))))[0], _GLF_FUZZED((vec3(-49.13, -7642.5156, -1.6).y - -5225.4435))), bvec2(true, false)))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true, true))) || false)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u + (_GLF_IDENTITY(read_1, (read_1) << 0u))) == read_2), (uint(read_1 == read_2)) + 0u), uint(read_1 == read_2))) + 1, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, ((4) - 0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), clamp(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(4, (4) - 0))), _GLF_IDENTITY(4, (4) - 0))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
}
