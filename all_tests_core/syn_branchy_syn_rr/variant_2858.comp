#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_46 {
 ivec4 _f0;
 ivec2 _f1;
 uvec3 _f2;
 uvec3 _f3;
 bvec3 _f4;
 vec2 _f5;
 float _f6;
} ;

struct _GLF_struct_45 {
 mat3x2 _f0;
 bool _f1;
 bvec3 _GLF_SWITCH_1_14v;
 bool _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_47 {
 _GLF_struct_45 _f0;
 vec3 _f1;
 mat2x4 _f2;
 uint _f3;
 mat2x4 _f4;
 _GLF_struct_46 _f5;
} ;

struct _GLF_struct_48 {
 _GLF_struct_47 _f0;
} ;

struct _GLF_struct_42 {
 mat2x3 _f0;
} ;

struct _GLF_struct_43 {
 bvec4 _f0;
 _GLF_struct_42 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_44 {
 bvec4 _GLF_SWITCH_4_2v;
 _GLF_struct_43 _f0;
} ;

struct _GLF_struct_39 {
 uvec2 _f0;
 vec2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_38 {
 mat4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_37 {
 bvec2 _f0;
} ;

struct _GLF_struct_36 {
 mat2 _f0;
 ivec3 _f1;
 mat4 _f2;
 mat2x3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_35 {
 vec2 _f0;
 bvec2 _f1;
 ivec3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_40 {
 _GLF_struct_35 _f0;
 _GLF_struct_36 _f1;
 _GLF_struct_37 _f2;
 _GLF_struct_38 _f3;
 _GLF_struct_39 _f4;
} ;

struct _GLF_struct_33 {
 mat4 _f0;
 mat4x3 _f1;
 mat2 _f2;
 int _f3;
 uint _f4;
} ;

struct _GLF_struct_34 {
 float _f0;
 _GLF_struct_33 _f1;
} ;

struct _GLF_struct_41 {
 _GLF_struct_34 _f0;
 ivec3 _GLF_SWITCH_2_0v;
 _GLF_struct_40 _f1;
} ;

struct _GLF_struct_30 {
 int _injected_loop_counter;
 mat3 _f0;
 uint _f1;
 float _f2;
 vec3 _f3;
 mat3x2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_29 {
 float _f0;
 vec3 _f1;
 uvec2 _f2;
 uint _f3;
 mat3 _f4;
 mat2x4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_28 {
 uvec4 _f0;
 bvec2 _f1;
 uvec2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_31 {
 _GLF_struct_28 _f0;
 _GLF_struct_29 _f1;
 mat3x2 _f2;
 bvec2 _f3;
 _GLF_struct_30 _f4;
} ;

struct _GLF_struct_26 {
 ivec4 _f0;
} ;

struct _GLF_struct_25 {
 uvec3 _f0;
 ivec4 _f1;
 mat2 _f2;
 mat3x2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_27 {
 uvec4 _f0;
 _GLF_struct_25 _f1;
 _GLF_struct_26 _f2;
 bvec3 _f3;
 float _f4;
 mat4 _f5;
 uint _f6;
} ;

struct _GLF_struct_23 {
 uint _f0;
 mat2x4 _f1;
 vec3 _f2;
 float _f3;
} ;

struct _GLF_struct_22 {
 mat3x4 _f0;
 bool _f1;
 mat3x2 _f2;
 bvec3 _f3;
 mat3 _f4;
 vec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_21 {
 mat3 _f0;
 mat2 _f1;
 uvec4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_20 {
 mat3x2 _f0;
 mat4 _f1;
 mat4x2 _f2;
 mat3 _f3;
 int _f4;
} ;

struct _GLF_struct_24 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
 vec3 _f3;
 int _f4;
 _GLF_struct_23 _f5;
} ;

struct _GLF_struct_32 {
 _GLF_struct_24 _f0;
 _GLF_struct_27 _f1;
 vec2 _f2;
 int _f3;
 _GLF_struct_31 _f4;
} ;

struct _GLF_struct_17 {
 ivec2 _f0;
 mat2x4 _f1;
 bvec4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
 vec3 _f1;
 ivec2 _f2;
 uvec4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_16 {
 uvec4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_19 {
 _GLF_struct_16 _f0;
 uint read_1;
 _GLF_struct_18 _f1;
} ;

struct _GLF_struct_13 {
 mat3x2 _f0;
 ivec4 _f1;
 mat3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_14 {
 ivec4 _f0;
 vec2 _f1;
 float _f2;
 _GLF_struct_13 _f3;
} ;

struct _GLF_struct_11 {
 int _f0;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 mat2 _f1;
 uvec2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 mat3 _f1;
 ivec4 _f2;
 _GLF_struct_11 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 ivec4 _f1;
 uint workgroup_base;
 ivec4 _f2;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 mat3x2 _f1;
 mat4 _f2;
 mat4x3 _f3;
 uvec3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 ivec3 _f1;
 mat4 _f2;
 ivec3 _f3;
 uvec2 _f4;
 ivec4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_4 {
 float _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 vec3 _f3;
 int _f4;
 mat4x2 _f5;
 float _f6;
} ;

struct _GLF_struct_3 {
 uint _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 mat4 _f1;
 uvec4 _f2;
 mat4x3 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_15 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_12 _f4;
 ivec2 _f5;
 _GLF_struct_14 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       if(_GLF_DEAD(false))
        barrier();
       case 33:
       case 83:
       case 9:
       case 93:
       case 12:
       case 74:
       if(_GLF_DEAD(false))
        barrier();
       case 85:
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         else
          {
          }
        }
       break;
       case 35:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             ;
            }
           else
            {
            }
          }
         else
          {
          }
        }
       default:
       do
        {
         1;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     switch(_GLF_SWITCH(0))
      {
       case 76:
       {
        subgroup_id;
       }
       case 0:
       case 71:
       case 64:
       case 7:
       case 92:
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       break;
       case 72:
       do
        {
         if(false)
          {
           bitfieldReverse((ivec2(-67516, -26318) >> -46605));
           false;
           mat4x3(-4155.0126, 4.1, 10.36, 5.9, 377.276, 8061.3553, 2910.5161, -3212.8653, -5.4, -4.7, -1103.3834, -412.294);
           vec3(6.7, -8663.1354, 5.4);
           mat4x3 _GLF_SWITCH_6_0v;
          }
         for(         lessThanEqual(ivec4(-51064, 64703, -65694, -71205), ivec4(-79451, 6436, 58557, -48157));
 (false != true); mat2(mat3x2(mat2x4(-70.49, -240.932, -5886.7405, -0.3, -9.2, 4.9, -485.591, 2.0))))
          {
           bvec4 _GLF_SWITCH_6_1v[56];
           (77107u < (subgroup_id ++));
           mat2x3(-8886.5367, -4.9, 9823.1663, 98.34, -5.8, 8.9);
           ;
           mat4x3(-60.36, 3495.9905, -3257.1559, -231.845, 140.559, -93.97, -3.8, -9845.8116, -782.040, 2.2, -3.4, 548.298);
           ivec2(-59384, 40404);
          }
         while((753.281 >= acosh(faceforward(-685.323, 83.47, 7061.1673))))
          {
           mat2x4(8.9, -0.7, 26.42, -4.8, 13.09, -5.8, -327.113, 43.42);
           ;
           matrixCompMult(mat3(-29.70, 998.585, -6870.0700, -3.3, -3691.6203, 3.2, -2061.2719, -727.133, 69.52), mat3(18.01, 0.7, 4.5, -2.5, 8696.7343, -3285.4024, -3.2, 9887.4609, 13.15));
           uvec3(19577u, 6944u, 139190u);
          }
         for(         abs(ivec3(-34535, 62528, 4357));
 true; uvec2(8780u, 23324u)[0])
          {
           bvec3(true, false, true);
           mat4x2 _GLF_SWITCH_6_2v;
           64573;
           int _GLF_SWITCH_6_3v;
           mat2x3(-3.1, 2.6, 3.6, -5120.6135, 40.58, -751.186);
           vec3 _GLF_SWITCH_6_4v[31];
          }
         if(false)
          {
           mat2x3(6578.2906, 1.0, -7514.1377, 2.4, -31.33, -185.305);
          }
         (-30127 >= -97822);
         false;
        }
       while((mat3(-26.07, -358.985, 2811.4279, -26.00, 809.188, -7.2, -8.0, -6.8, 5.5) == mat3(-9.1, -302.586, 4.1, 1.9, 8.1, -399.609, 8692.0794, 8961.4702, 4.3)));
       case 42:
       ivec2(76313, -91216);
       default:
       1;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_1(_GLF_struct_0(mat3x2(1.0), mat4(1.0), _GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(113903u, 188437u, 101533u, 134333u)) : uvec4(1u))), mat4x3(1.0), vec4(1.0)), mat2x4(1.0)), _GLF_struct_2(uvec4(1u), mat3x4(1.0)), _GLF_struct_6(_GLF_struct_3(1u), _GLF_struct_4(1.0, mat4x2(1.0), mat2x4(1.0), vec3(1.0), _GLF_IDENTITY(1, clamp(1, 1, 1)), mat4x2(1.0), 1.0), _GLF_struct_5(mat4(1.0), ivec3(1), mat4(1.0), ivec3(1), uvec2(1u), ivec4(1), mat4x2(1.0)), uvec2(1u)), _GLF_struct_9(_GLF_struct_7(mat4x2(1.0), mat3x2(1.0), mat4(1.0), mat4x3(1.0), uvec3(1u), mat4x2(1.0)), _GLF_struct_8(uvec2(1u), ivec4(1), workgroup_size * workgroup_id, ivec4(1))), _GLF_struct_12(_GLF_struct_10(mat3x4(1.0), mat2(1.0), uvec2(1u), ivec3(1)), mat3(1.0), ivec4(1), _GLF_struct_11(1), vec3(1.0)), ivec2(1), _GLF_struct_14(ivec4(1), vec2(1.0), 1.0, _GLF_struct_13(mat3x2(1.0), ivec4(1), _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))), mat4x2(1.0))));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -94206)); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint virtual_gid = _GLF_struct_replacement_15._f3._f1.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_15._f3._f1.workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = (((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false)))))))) ? _GLF_FUZZED(-83294) : int(_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, int(ivec4(5, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)))))))))) >> _GLF_IDENTITY(int(5), int(5))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_16(uvec4(1u), mat3(1.0)), atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_struct_18(_GLF_struct_17(ivec2(1), mat2x4(1.0), bvec4(true), mat4x3(1.0)), vec3(1.0), ivec2(1), uvec4(1u), ivec3(1)));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size)
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), (max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) - 0.0)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         switch(_GLF_SWITCH(0))
          {
           case 79:
           {
            mat2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
             barrier();
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))
               {
                mat3(mat4x2(8.9, 117.712, 7.6, -282.153, 6.6, -8.3, 2.6, 7409.2819));
               }
              else
               {
               }
             }
            else
             {
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            do
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
               }
              do
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 0:
                  case 3:
                  case 50:
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      barrier();
                     }
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      barrier();
                     }
                    else
                     {
                     }
                   }
                  break;
                  case 58:
                  mat4x2 _GLF_SWITCH_6_0v;
                  case 18:
                  (uvec4(12325u, 152380u, 49222u, 155859u) * (virtual_gid / uvec4(176739u, 123443u, 9340u, 143119u)));
                  default:
                  1;
                 }
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(((uvec2(313u, _GLF_IDENTITY(2744u, (_GLF_IDENTITY(2744u, (2744u) + 0u)) << 0u))) != uvec2(141713u, 159842u)))
               {
                switch(_GLF_SWITCH(((0 ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(-60148) : _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))))))))
                 {
                  case 0:
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                   {
                    do
                     {
                      for(uvec3 _GLF_SWITCH_0_3v[77]; (mat3(_GLF_IDENTITY(-3382.4103, mix(float(_GLF_FUZZED(-17.44)), float(_GLF_IDENTITY(-3382.4103, max(-3382.4103, -3382.4103))), bool(true))), _GLF_IDENTITY(-3174.8534, (_GLF_IDENTITY(-3174.8534, clamp(-3174.8534, -3174.8534, -3174.8534))) - 0.0), -3365.6181, 1.1, 3.1, 1.2, 2.1, -8177.4111, -972.007) == ((mat4x3(9.4, -3.8, 6.9, 3.1, 2.9, -9.7, 3.6, 116.843, -77.30, 259.421, -606.573, 853.325) + mat4x3(-7.4, 2.8, -300.573, -2.8, 3.9, -4.9, 386.456, -2.5, _GLF_IDENTITY(5.3, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(607.444))), 0.0, 0.0)) + (5.3)), _GLF_IDENTITY(8.8, mix(float(8.8), float(_GLF_FUZZED(-9.3)), bool(false))), 0.8, -75.96)) * mat3x4(-42.91, _GLF_IDENTITY(-5.4, mix(float(_GLF_FUZZED(-1236.0371)), float(-5.4), bool(true))), -273.616, 1114.9622, 723.765, -7.4, -52.50, -561.276, -0.6, 9.4, -6945.9691, 93.57))); workgroup_size)
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          switch(_GLF_SWITCH(0))
                           {
                            case 50:
                            ivec4(-7081, -53393, 56880, -45795);
                            case 17:
                            mat3x2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v[99], _GLF_SWITCH_6_2v;
                            case 0:
                            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                             {
                              uvec4(141898u, 52530u, 121876u, 121905u);
                             }
                            break;
                            default:
                            1;
                           }
                         }
                        do
                         {
                          switch(_GLF_SWITCH(0))
                           {
                            case 62:
                            (false ? mat3x2(9592.1842, -0.0, -6.2, -3.0, -9773.1388, 1041.6830) : mat3x2(716.984, -9581.2782, 3617.6971, 4.2, 0.9, -0.8));
                            case 0:
                            case 5:
                            case 90:
                            case 83:
                            case 17:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                               {
                                barrier();
                               }
                             }
                            break;
                            case 76:
                            ivec4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
                            default:
                            1;
                           }
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                        uvec4 _GLF_SWITCH_0_4v;
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          ;
                         }
                        else
                         {
                         }
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          mat4x2(-5.5, -4.8, 73.80, 7011.0683, -5324.9282, -6.5, -8.6, -0.9);
                         }
                        else
                         {
                         }
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        mat3x4(-8.3);
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                         barrier();
                        bvec2 _GLF_SWITCH_0_5v[31], _GLF_SWITCH_0_6v[76];
                        ivec2(22069, -97698);
                        ivec2(53843, 7566);
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  else
                   {
                   }
                  if((bitfieldInsert(ivec4(84172, -25046, -7035, 4514), ivec4(-48925, 98067, 94819, 451), sign(19165), 86521) == ivec4(-18197, -45457, 17669, 32393)))
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        barrier();
                       }
                      else
                       {
                       }
                     }
                    ;
                    ivec3 _GLF_SWITCH_0_7v[26];
                    vec2 _GLF_SWITCH_0_8v[42], _GLF_SWITCH_0_9v[52];
                    int _GLF_SWITCH_0_10v[80], _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
                    subgroup_local_id;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        barrier();
                       }
                      else
                       {
                       }
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      do
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    mat2 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
                    uvec3(_GLF_IDENTITY(128228u, max(_GLF_IDENTITY(128228u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(128228u, clamp(128228u, 128228u, 128228u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(128228u, clamp(128228u, 128228u, 128228u)), 1u, 1u)))), 1u * (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(128228u, clamp(128228u, 128228u, 128228u)), _GLF_IDENTITY(1u, (1u) | (1u)), 1u), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, (128228u) ^ 0u), 128228u, 128228u)), 1u, 1u)), max((uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, (128228u) ^ 0u), 128228u, 128228u)), 1u, 1u)), (uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, (128228u) ^ 0u), 128228u, 128228u)), 1u, 1u)))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(128228u, clamp(128228u, 128228u, 128228u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (128228u)), 128228u, 128228u)), 1u, 1u)))), 1u * (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(128228u, clamp(128228u, 128228u, 128228u)), 1u, 1u), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, (128228u) ^ 0u), 128228u, 128228u)), 1u, 1u)), max((uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, (128228u) ^ 0u), 128228u, 128228u)), 1u, 1u)), (uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, (128228u) ^ 0u), 128228u, 128228u)), 1u, 1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(128228u, clamp(128228u, 128228u, 128228u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(128228u, clamp(128228u, 128228u, 128228u)), 1u, 1u)))), 1u * (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(128228u, clamp(128228u, 128228u, 128228u)), 1u, 1u), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, (128228u) ^ 0u), _GLF_IDENTITY(128228u, (128228u) | (_GLF_IDENTITY(128228u, (128228u) / 1u))), 128228u)), 1u, 1u)), max(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, (128228u) ^ 0u), 128228u, 128228u)), 1u, 1u)), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, (128228u) ^ 0u), 128228u, 128228u)), 1u, 1u)))), (uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, (128228u) ^ 0u), 128228u, 128228u)), 1u, 1u)))))))), (false ? _GLF_FUZZED(89159u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(128228u, clamp(128228u, 128228u, 128228u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(128228u, clamp(128228u, 128228u, 128228u)), 1u, 1u)))), 1u * (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(128228u, clamp(128228u, 128228u, 128228u)), 1u, 1u), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, (128228u) ^ 0u), 128228u, 128228u)), 1u, 1u)), max((uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, (128228u) ^ 0u), 128228u, 128228u)), 1u, 1u)), (uvec3(_GLF_IDENTITY(128228u, clamp(_GLF_IDENTITY(128228u, (128228u) ^ 0u), 128228u, 128228u)), 1u, 1u))))))))))))), 128228u)), 28287u, 81396u);
                    bvec2(true, true);
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        barrier();
                       }
                      else
                       {
                       }
                     }
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          do
                           {
                            barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         }
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))); _injected_loop_counter --)
                           {
                            barrier();
                           }
                         }
                       }
                     }
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    switch(_GLF_SWITCH(0))
                     {
                      case 0:
                      case 89:
                      case 22:
                      case 42:
                      mat3x4(1097.4933, 600.930, 12.36, -55.32, -2500.3208, 99.14, 8.5, -29.55, 48.88, 7.7, -9.0, 4.7);
                      case 15:
                      case 74:
                      case 1:
                      case 92:
                      refract(8.2, 53.39, -311.311);
                      break;
                      case 10:
                      3285.8279;
                      if(_GLF_DEAD(false))
                       barrier();
                      default:
                      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                       {
                        1;
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  ivec2 _GLF_SWITCH_0_16v;
                  if(((next_virtual_gid --) < workgroup_id))
                   {
                   }
                  vec4 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v;
                  bvec4(false, false, true, true).bbab;
                  mat4x3(-2430.1472, -5207.3877, 3.6, 7578.4727, _GLF_IDENTITY(3.4, (3.4) * 1.0), -5.0, 6182.2016, 1915.0423, -7.1, 972.084, -3.4, -28.04);
                  for(                  bvec2(false);
 (uvec4(74062u, 126240u, 131459u, 5461u) != uvec4(71093u, 194232u, 189181u, 135702u)); (transpose(mat2x3(9.8, -486.817, -9957.2994, -2.9, 555.293, -61.37)) + float(false)))
                   {
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                     }
                    mat2x3 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[75];
                    uvec2(47181u, 68941u);
                    if(_GLF_DEAD(false))
                     {
                      do
                       {
                        barrier();
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                   }
                  break;
                  case 91:
                  mat2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                  case 25:
                  if(_GLF_DEAD(false))
                   barrier();
                  _GLF_struct_44 _GLF_struct_replacement_44;
                  default:
                  1;
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                if(_GLF_DEAD(false))
                 barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
             {
              _GLF_IDENTITY(max(floatBitsToInt(vec3(4.6, 1202.9718, -28.01)), ivec3(-75768, -53062, -58424)), (max(floatBitsToInt(vec3(4.6, 1202.9718, -28.01)), ivec3(-75768, -53062, _GLF_IDENTITY(-58424, min(-58424, -58424))))) - ivec3(0, 0, 0));
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
             barrier();
            mat2 _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v[37];
            if(_GLF_DEAD(false))
             barrier();
            bvec4 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v;
           }
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))))))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           case 0:
           case 98:
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 10:
               mix(bvec4(true, false, false, false), bvec4(false, false, true, false), bvec4(false, false, true, true));
               case 0:
               case 89:
               case 48:
               case 91:
               case 55:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               break;
               case 32:
               bvec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
               case 96:
               mat4x3 _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v;
               default:
               1;
              }
            }
           case 57:
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) > injectionSwitch.y) || false))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false))) && true)))))))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           case 28:
           int i = 0;
           case 36:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_19.read_1 == read_2) + _GLF_IDENTITY(1, clamp(1, 1, 1)), 4, 64, 4);
                }
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           break;
           if(_GLF_DEAD(false))
            barrier();
           case 40:
           ivec4(55808, 37808, 10449, -5332);
           case 20:
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false);
           default:
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   1;
                  }
                 else
                  {
                  }
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     break;
     case 44:
     if(_GLF_DEAD(false))
      barrier();
     for(     read_2;
 false; vec3(7.9, _GLF_IDENTITY(930.363, min(930.363, _GLF_IDENTITY(930.363, min(930.363, 930.363)))), -939.061))
      {
       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(8), int(8)))))
        {
         case 0:
         do
          {
           for(           (ivec4(18813, -59954, 17798, 79519));
 true; mat2x3(80.32, _GLF_IDENTITY(9.9, (_GLF_IDENTITY(9.9, min(_GLF_IDENTITY(9.9, clamp(9.9, 9.9, 9.9)), 9.9))) - 0.0), _GLF_IDENTITY(55.92, min(55.92, 55.92)), 98.21, 9100.0596, -82.97))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) & 76457)))
                {
                 case 42:
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                  {
                   ivec4(-25464, 71368, 47832, -80055);
                  }
                 case 28:
                 if(_GLF_DEAD(false))
                  barrier();
                 ivec4 _GLF_SWITCH_4_0v[2], _GLF_SWITCH_4_1v[48], _GLF_SWITCH_4_2v;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 case 0:
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                  barrier();
                 uvec3 _GLF_SWITCH_2_0v[56];
                 case 71:
                 case 49:
                 int _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v[67];
                 mat3x2(324.264, _GLF_IDENTITY(21.79, 1.0 * (21.79)), -246.074, 2029.1671, -63.08, 1663.2102);
                 if(_GLF_DEAD(false))
                  barrier();
                 case 3:
                 ;
                 case 21:
                 (ivec2(-76083, -77868) * _GLF_SWITCH_2_2v);
                 case 64:
                 case 37:
                 uint _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v[73], _GLF_SWITCH_2_6v[93];
                 if(_GLF_DEAD(false))
                  barrier();
                 mat3x2 _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v, _GLF_SWITCH_2_9v[97];
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 mod(vec3(-3.9, -3848.6232, 1.2), 3251.1595);
                 case 16:
                 case 7:
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
                      {
                       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(6), int(6)))))
                        {
                         case 0:
                         case 83:
                         case 37:
                         case 46:
                         if(_GLF_DEAD(false))
                          barrier();
                         break;
                         case 67:
                         ;
                         case 52:
                         vec4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v[94], _GLF_SWITCH_6_2v;
                         default:
                         1;
                        }
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                 mat3(5659.4446, 6.6, -6.3, 553.610, -9167.2977, -4.1, 48.84, 7673.0395, 47.84);
                 break;
                 case 84:
                 _GLF_SWITCH_2_8v;
                 case 29:
                 if(_GLF_DEAD(false))
                  barrier();
                 mat4(0.7, 3.0, 9360.7664, -1854.8662, -620.404, 1842.2108, -514.839, -269.841, -7394.7957, 3854.9940, -1.8, -910.817, -41.42, -19.68, 4234.3710, 4.6);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 default:
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  {
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 1;
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while((min(35.30, -12.53) == 6.0))
              {
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
              {
              }
             else
              {
               mat2(mat2x3(-29.80, -2.7, 0.3, 37.92, -9.8, -2707.1229));
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             {
              if(_GLF_DEAD(false))
               barrier();
             }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 94:
                 case 4:
                 case 97:
                 case 27:
                 case 13:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 88:
                 case 70:
                 case 37:
                 case 19:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(ivec3 _GLF_SWITCH_2_10v, _GLF_SWITCH_2_11v[3]; false; mat2x4(4.8, 1.8, -85.94, -7.4, _GLF_IDENTITY(0.5, clamp(0.5, _GLF_IDENTITY(0.5, clamp(0.5, 0.5, 0.5)), 0.5)), -8.2, -53.85, -47.16))
                    {
                     do
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 break;
                 default:
                 1;
                }
              }
             mat3x4(-7.2, 3623.6910, 184.183, 922.662, 1.0, -3087.7137, 746.694, 7.0, -664.293, 883.638, -7.3, _GLF_IDENTITY(390.820, min(390.820, 390.820)));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         case 15:
         case 57:
         ivec2(59824, -69740);
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
          }
         else
          {
          }
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          bool _GLF_SWITCH_2_12v[58], _GLF_SWITCH_2_13v;
          while((-8021.7208 != 5.8))
           {
           }
          while(_GLF_SWITCH_2_13v)
           {
            (mat4x2(-53.78, 4897.0504, 4.8, -51.18, 970.050, -3.2, -0.2, 38.06) * mat3x4(-8624.9318, -7.5, -8119.7556, -905.994, -362.851, -3238.6352, 55.07, 8.3, -7223.7405, 501.583, _GLF_IDENTITY(2.3, mix(float(_GLF_FUZZED(-6342.5374)), float(_GLF_IDENTITY(2.3, (2.3) - 0.0)), bool(_GLF_IDENTITY(true, true && (true))))), -68.63));
           }
          ivec3 _GLF_SWITCH_2_14v;
          if(_GLF_DEAD(false))
           {
            switch(_GLF_SWITCH((1 ^ 1)))
             {
              case 19:
              (mat2(7.9, 5.7, -316.860, 23.94) * mat3x2(5.1, -86.64, 388.377, -299.419, 478.498, -77.38));
              case 6:
              vec4 _GLF_SWITCH_6_0v[80], _GLF_SWITCH_6_1v;
              case 0:
              case 50:
              case 11:
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))
                   {
                    barrier();
                   }
                  else
                   {
                   }
                 }
                barrier();
               }
              break;
              default:
              1;
             }
           }
          lessThan((-4664.4162 * vec4(-2.6, -23.40, 44.23, 26.01)), vec4(7697.4260, 2.5, 804.597, 6.1));
         }
         case 7:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         case 74:
         mat4x3(-6.0, 9662.7350, 564.412, 637.390, 1.0, 8709.0892, 860.343, -8036.2671, 56.05, -4773.9201, 5418.1578, 959.966);
         break;
         default:
         1;
        }
      }
     case 82:
     bvec4 _GLF_SWITCH_2_15v[2], _GLF_SWITCH_2_16v, _GLF_SWITCH_2_17v;
     default:
     1;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 49:
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           switch(_GLF_SWITCH(0))
            {
             case 86:
             if(false)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat2x3(mat4(-52.77, 5.6, 3.0, 6.8, 3.9, 326.023, -78.27, -1.2, -18.21, -64.82, -399.868, 7.9, 1.4, -9.0, 9.2, 3.1));
               int _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[80];
               transpose(mat3(mat4x2(0.7, -81.23, -6080.6323, 186.847, 0.0, -318.070, 448.845, 1.6)));
               for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 | (1))); _injected_loop_counter ++)
                {
                 mat3x2(-9944.5022, -5782.6711, 81.88, -1273.6020, 1.9, -2738.8623);
                }
               ceil(vec3(-79.74, -24.01, 9.0));
               uvec4 _GLF_SWITCH_5_2v;
               false;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat4((-72.34 - mat2x3(-449.968, -118.195, 5162.2708, -0.6, -0.2, -9.0)));
              }
             case 75:
             if(_GLF_DEAD(false))
              barrier();
             ;
             case 0:
             greaterThan((ivec2(-70471, -97935) - ivec2(-84710)), ivec2(-11057, 17610));
             break;
             default:
             1;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       case 70:
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        barrier();
       vec4 _GLF_SWITCH_3_0v;
       case 0:
       case 65:
       case 5:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       case 40:
       case 87:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             switch(_GLF_SWITCH((0 | 0)))
              {
               case 69:
               mat2x3 _GLF_SWITCH_6_0v;
               case 37:
               (mat3x2(-9698.3352, 83.56, 2500.8772, 942.247, -8797.0648, -3959.0484) * mat3(-275.818, -968.925, 77.05, -1165.7439, -5.8, -2572.7648, 897.511, -9.7, 9171.4619));
               case 0:
               case 40:
               case 31:
               case 12:
               case 38:
               case 78:
               case 49:
               barrier();
               break;
               case 2:
               uvec4(21465u, 199543u, 188114u, 16864u);
               default:
               1;
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       else
        {
        }
       case 1:
       case 95:
       case 66:
       case 85:
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 30:
         case 37:
         case 58:
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 21:
                   case 33:
                   case 22:
                   case 92:
                   case 68:
                   case 42:
                   case 3:
                   case 87:
                   case 6:
                   barrier();
                   break;
                   default:
                   1;
                  }
                }
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         case 62:
         case 6:
         case 52:
         if(_GLF_DEAD(false))
          barrier();
         for(_GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(_GLF_struct_24(_GLF_struct_20(mat3x2(1.0), mat4(1.0), mat4x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(10.24)))), mat3(1.0), 1), _GLF_struct_21(mat3(1.0), mat2(1.0), uvec4(1u), bvec3(true)), _GLF_struct_22(mat3x4(1.0), true, mat3x2(1.0), bvec3(true), mat3(1.0), vec3(1.0), ivec2(1)), vec3(1.0), 1, _GLF_struct_23(1u, mat2x4(1.0), vec3(1.0), 1.0)), _GLF_struct_27(uvec4(1u), _GLF_struct_25(uvec3(1u), ivec4(1), mat2(1.0), mat3x2(1.0), ivec3(1)), _GLF_struct_26(ivec4(1)), bvec3(true), 1.0, mat4(1.0), 1u), vec2(1.0), 1, _GLF_struct_31(_GLF_struct_28(uvec4(1u), bvec2(true), uvec2(1u), bvec3(true)), _GLF_struct_29(1.0, vec3(1.0), uvec2(1u), 1u, mat3(1.0), mat2x4(1.0), mat3x4(1.0)), mat3x2(1.0), bvec2(true), _GLF_struct_30(_GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y)) & 1) & 1), 0 ^ (((int(_GLF_ONE(1.0, injectionSwitch.y)) & 1) & 1))), mat3(1.0), 1u, 1.0, vec3(1.0), mat3x2(1.0), ivec3(1)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_struct_replacement_32._f4._f4._injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_struct_replacement_32._f4._f4._injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_GLF_struct_replacement_32._f4._f4._injected_loop_counter > 0)))) && true); _GLF_struct_replacement_32._f4._f4._injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))))))
            {
             case 51:
             (true ? ivec4(-21989, 8684, 84928, -50231) : ivec4(17014, 15449, -22392, -88572));
             case 0:
             case 54:
             case 34:
             case 38:
             case 89:
             case 19:
             case 43:
             case 7:
             case 27:
             case 69:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
             break;
             default:
             1;
            }
          }
         case 1:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 69:
         case 17:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 13:
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_19.read_1 == read_2) + 1, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), min(64, 64)), 4);
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((5808.6974 * 695.018)), _GLF_FUZZED(494.496)), bvec2(false, false))).y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             break;
             case 82:
             (- mat3x4(4.5, 42.05, 59.69, 8.3, -8.4, -2.8, 233.012, -6.6, -888.815, -27.16, -3.0, -3.8));
             case 65:
             (uvec3(99174u, 130110u, 87116u) >> uvec3(128288u, 18436u, 144543u));
             default:
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               1;
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         break;
         case 79:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         {
          if(_GLF_DEAD(false))
           {
            for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
             {
              barrier();
             }
           }
          switch(_GLF_SWITCH((97966 & 0)))
           {
            case 0:
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                barrier();
               }
             }
            else
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  while(true)
                   {
                    if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
                     barrier();
                    for(                    vec2(-571.939, 6.3);
 (vec3(_GLF_IDENTITY(975.341, (975.341) / 1.0), 6636.5379, 2.0) != vec3(650.385, 6361.3772, 0.1)); vec2(102.720, -759.672))
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        if(_GLF_DEAD(false))
                         barrier();
                        case 44:
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          do
                           {
                            barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                        case 92:
                        case 81:
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          ivec3(-55783, -61065, -13678);
                         }
                        else
                         {
                         }
                        do
                         {
                          do
                           {
                            (false ? mat4x2(57.51, -9509.3492, -2.5, _GLF_IDENTITY(6.1, (6.1) - 0.0), -412.410, -5.5, -8.2, 0.6) : mat4x2(6.2, -3.6, 443.563, -35.84, 3.0, 8.6, 6.5, -69.62));
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))));
                        case 16:
                        bvec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
                        do
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                        break;
                        if(_GLF_DEAD(false))
                         barrier();
                        case 4:
                        mat2x4(mat4(-88.40, 3604.4826, -4761.7947, 3635.3790, -79.27, 6926.0671, -93.35, -1.5, 2.7, -0.1, 6.7, 2.7, 4757.9326, 53.44, 28.67, -14.34));
                        case 65:
                        mat3x4(mat4(-1122.5315, -6828.8157, 5004.2425, -53.34, 8.8, -2.7, 3.7, 7885.9578, 1.3, -1048.8246, _GLF_IDENTITY(0.1, clamp(0.1, _GLF_IDENTITY(0.1, (true ? 0.1 : _GLF_FUZZED(-0.4))), 0.1)), -3.6, -4.1, -2326.2668, 0.1, -8512.8423));
                        if(_GLF_DEAD(false))
                         barrier();
                        default:
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            barrier();
                           }
                         }
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          1;
                         }
                        else
                         {
                         }
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                     }
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        barrier();
                       }
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                 }
                else
                 {
                 }
               }
             }
            case 83:
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
             {
              switch(_GLF_SWITCH(0))
               {
                case 31:
                faceforward(_GLF_SWITCH_3_0v.rgab, _GLF_SWITCH_3_0v, _GLF_SWITCH_3_0v).yywz;
                case 0:
                case 46:
                if(_GLF_DEAD(false))
                 {
                  do
                   {
                    barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 }
                case 74:
                uvec2(197734u, 86185u);
                if(true)
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      barrier();
                     }
                    else
                     {
                     }
                   }
                  ivec4 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v;
                  mat2x4(mat2(-1.9, 38.30, 8.4, 47.59));
                  do
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        barrier();
                       }
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  mat4(mat2x3(-68.09, 32.33, 8567.5185, -321.052, -789.042, 1451.6840));
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                     {
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                       {
                        barrier();
                       }
                     }
                   }
                  else
                   {
                   }
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        barrier();
                       }
                      else
                       {
                       }
                     }
                    mat2x3(-7.9, -24.81, 59.53, -5.8, 9.7, 4219.6905);
                    if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      barrier();
                     }
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  acosh(vec4(-65.69, 1373.1246, 2.6, 7.7));
                  notEqual((uvec2(13347u, 179215u) | read_2), uvec2(129969u, 127645u));
                  bool _GLF_SWITCH_1_4v[1];
                  bvec3 _GLF_SWITCH_1_5v[80], _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v;
                 }
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                case 68:
                case 15:
                if((mat3(367.672, -9.6, 6.2, -1.2, -2291.6759, 5.3, -3.7, -9943.8714, -71.78) == mat3(78.36, 26.57, -84.10, -51.16, -1.3, _GLF_IDENTITY(8.1, mix(float(_GLF_FUZZED(-0.9)), float(8.1), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -339.107, -3833.4309, 3.4)))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        do
                         {
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                               {
                                barrier();
                               }
                              else
                               {
                               }
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            do
                             {
                              barrier();
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                           }
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                      else
                       {
                       }
                      barrier();
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                   }
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    bvec2(false, true);
                   }
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), bool(bvec4(true, false, false, false)))))
                   {
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                     {
                      for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          mat4x2(-6943.8561, 5149.4886, 5.1, -169.885, -9.7, -2.0, -0.8, 9.0);
                         }
                       }
                     }
                   }
                  else
                   {
                   }
                  do
                   {
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 & 42393, min(0 & 42393, _GLF_IDENTITY(0 & 42393, (0 & 42393) << 0))))); _injected_loop_counter --)
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      else
                       {
                        vec2(-721.821, -86.80);
                        do
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, true), true, true))))))))) || false)))
                   barrier();
                  ivec4 _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v;
                 }
                else
                 {
                  mat3x2(-6.7, -128.160, 104.003, -7.9, -6.9, 6.0);
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      bvec3(false, false, false);
                     }
                    else
                     {
                     }
                   }
                  else
                   {
                   }
                  uint _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v[43];
                  do
                   {
                    for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                     {
                      vec4(-9.7, -699.673, 9.9, _GLF_IDENTITY(3.0, mix(float(_GLF_FUZZED(vec2(-9346.5916, 6826.4675).g)), float(3.0), bool(true))));
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      _GLF_IDENTITY((subgroup_local_id - uvec3(66525u, 75917u, 107656u)), ((subgroup_local_id - uvec3(66525u, 75917u, 107656u))) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), max(clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))) - uvec3(66525u, 75917u, 107656u))));
                     }
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                for(                uvec4(78118u, 82446u, _GLF_IDENTITY(169210u, min(_GLF_IDENTITY(169210u, (169210u) / 1u), 169210u)), 162086u);
 (48361 != 20575); outerProduct(vec3(695.640, -7.2, -0.8), vec4(-1720.2997, -1.2, -15.40, -31.42))[3])
                 {
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    ;
                   }
                  mat2x4(-88.12, -274.421, -93.81, 704.936, 963.488, 5.5, 5264.8070, 5.9);
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY((vec2(mat4(injectionSwitch, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))) * mat2(1.0), vec2(1.0, 1.0) * ((vec2(mat4(injectionSwitch, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))) * mat2(1.0))))).y))))
                   barrier();
                  ;
                 }
                break;
                case 96:
                bvec2(bvec4(true, true, true, false));
                case 19:
                mat4 _GLF_SWITCH_6_0v[68], _GLF_SWITCH_6_1v;
                default:
                1;
               }
             }
            case 75:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            case 82:
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            case 46:
            uint _GLF_SWITCH_1_13v;
            mat4x3(-6.3, -28.86, 0.2, _GLF_IDENTITY(782.381, (_GLF_IDENTITY(782.381, mix(float(_GLF_FUZZED(-2.8)), float(782.381), bool(true)))) + 0.0), -398.391, -4.4, -761.265, 6826.7181, 58.11, 78.36, 5191.7602, -4446.5413);
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                barrier();
               }
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
             barrier();
            case 47:
            _GLF_struct_48 _GLF_struct_replacement_48;
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
             }
            else
             {
             }
            case 19:
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            case 22:
            case 32:
            case 44:
            do
             {
              for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(false))
                 barrier();
                bvec4(true, true, false, false);
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
             {
              while(false)
               {
                if((_GLF_struct_replacement_48._f0._f0._GLF_SWITCH_1_14v).s)
                 {
                  do
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          do
                           {
                            barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         }
                       }
                      else
                       {
                       }
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  bvec4 _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v;
                  mat3x2 _GLF_SWITCH_1_17v[42], _GLF_SWITCH_1_18v[71], _GLF_SWITCH_1_19v;
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                   }
                  else
                   {
                   }
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    degrees(vec3(-24.25, 76.49, 8243.5001));
                   }
                  int _GLF_SWITCH_1_20v[30], _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v;
                 }
                if(false)
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                   }
                  bvec4 _GLF_SWITCH_1_23v;
                  for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                       {
                        barrier();
                       }
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  uvec4 _GLF_SWITCH_1_24v, _GLF_SWITCH_1_25v;
                  mat3 _GLF_SWITCH_1_26v, _GLF_SWITCH_1_27v;
                  do
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                       barrier();
                      for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                       {
                        barrier();
                       }
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  mat4 _GLF_SWITCH_1_28v, _GLF_SWITCH_1_29v, _GLF_SWITCH_1_30v[74];
                  7094u;
                  do
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 {
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      barrier();
                     }
                    else
                     {
                     }
                   }
                 }
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
                else
                 {
                 }
                ivec4(-75086, -94152, -51639, _GLF_IDENTITY(82648, (false ? _GLF_FUZZED(-67673) : 82648)));
                mat4x2 _GLF_SWITCH_1_31v[81], _GLF_SWITCH_1_32v, _GLF_SWITCH_1_33v;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    barrier();
                   }
                 }
                if(true)
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 0:
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & ((-56324 >> -43124) * 15973))); _injected_loop_counter --)
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        case 52:
                        case 22:
                        case 49:
                        case 37:
                        case 6:
                        case 7:
                        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          else
                           {
                           }
                          barrier();
                         }
                        break;
                        case 82:
                        vec3(-6367.2014, 3408.0019, 8.7);
                        default:
                        1;
                       }
                     }
                    case 42:
                    case 72:
                    case 32:
                    case 64:
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 40:
                        ;
                        case 54:
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                           barrier();
                         }
                        if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y))))
                         barrier();
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
                         {
                          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))), true)))))
                           barrier();
                         }
                        _GLF_struct_41 _GLF_struct_replacement_41;
                        case 0:
                        ;
                        break;
                        default:
                        1;
                       }
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    break;
                    if(_GLF_DEAD(false))
                     barrier();
                    case 45:
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                     }
                    else
                     {
                      next_virtual_gid;
                     }
                    default:
                    1;
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      barrier();
                     }
                   }
                 }
               }
             }
            else
             {
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            mat4x3 _GLF_SWITCH_1_34v, _GLF_SWITCH_1_35v, _GLF_SWITCH_1_36v;
            do
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 93:
                    mat3x4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v[94];
                    case 0:
                    case 25:
                    case 89:
                    case 19:
                    case 17:
                    case 24:
                    case 22:
                    case 84:
                    barrier();
                    break;
                    default:
                    1;
                   }
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   {
                    for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                     {
                      barrier();
                     }
                   }
                 }
               }
             }
            while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
            break;
            default:
            for(int _injected_loop_counter = (((-55262 + -62880) | (-8833 >> -15878)) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
             {
              1;
             }
           }
         }
         default:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
          {
          }
         else
          {
           1;
          }
        }
       break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 48:
       while((ivec4(20017, -72180, -30163, -44950) != _GLF_IDENTITY((ivec4(7832, 36168, 27229, -28999) >> ivec4(-11978, 43715, 24101, 60821)), ((ivec4(7832, 36168, 27229, -28999) >> ivec4(-11978, 43715, 24101, 60821))) >> (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(7), ivec4(7))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         vec3(-61.14, 1.1, -2936.8890);
         {
          if(((uaddCarry(next_virtual_gid, subgroup_local_id, workgroup_size) ^ 59380u) >= subgroup_local_id))
           {
            switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), int(7)))))
             {
              case 38:
              ;
              case 0:
              case 57:
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                greaterThan((-44827 | _GLF_IDENTITY(ivec2(99852, -62370), (false ? _GLF_FUZZED((ivec2(_GLF_IDENTITY(92163, (_GLF_IDENTITY(92163, (92163) / 1)) | (92163)), 97058) - (79303 | ivec2(-43711, 13894)))) : ivec2(99852, -62370)))), ivec2(-1424, 12114));
               }
              else
               {
               }
              case 48:
              case 46:
              ivec3 _GLF_SWITCH_3_1v[95], _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v;
              if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(false, (false) && true)))))
               barrier();
              break;
              case 89:
              ;
              default:
              1;
             }
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.9)), float(injectionSwitch.x), bool(true)))) - 0.0) > injectionSwitch.y))))
           barrier();
          -3332.0142;
          ;
          vec4 _GLF_SWITCH_3_4v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(-71319) : int(0))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
           {
            uvec4 _GLF_SWITCH_3_5v[19], _GLF_SWITCH_3_6v[28];
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            max(ivec3(11592, -75405, -80645), 17009);
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                barrier();
               }
              else
               {
               }
             }
            dot(_GLF_IDENTITY(_GLF_SWITCH_3_0v, mix(vec4(_GLF_FUZZED(-211.133), _GLF_FUZZED(-909.269), (_GLF_SWITCH_3_0v)[2], (_GLF_SWITCH_3_0v)[3]), vec4((_GLF_SWITCH_3_0v)[0], (_GLF_SWITCH_3_0v)[1], _GLF_FUZZED(-54.71), _GLF_FUZZED(7745.3355)), bvec4(true, true, false, false))), vec4(1196.8212, -2.0, -9345.8996, -1.4));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(4.1)), bvec2(false, false)))) + vec2(0.0, 0.0)).y))))
             barrier();
            do
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                (floatBitsToInt(vec2(8.9, -3197.7651)) , bvec4(true, _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bool(true))), true))), false));
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                 {
                  barrier();
                 }
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
            -62015;
           }
          bvec4(false, true, false, false);
         }
        }
       default:
       1;
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
