#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_20 {
 mat4 _f0;
 mat2x3 _f1;
 mat3x2 _f2;
 uint _f3;
} ;

struct _GLF_struct_19 {
 mat3x4 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_18 {
 mat4x3 _f0;
 bvec4 _f1;
 ivec2 _f2;
 mat4x2 _f3;
 ivec4 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_21 {
 vec4 _f0;
 _GLF_struct_18 _f1;
 ivec3 _f2;
 uint _f3;
 _GLF_struct_19 _f4;
 _GLF_struct_20 _f5;
} ;

struct _GLF_struct_17 {
 bvec2 _f0;
} ;

struct _GLF_struct_22 {
 uint read_2;
 _GLF_struct_17 _f0;
 bool _f1;
 _GLF_struct_21 _f2;
} ;

struct _GLF_struct_14 {
 vec3 _f0;
 mat4x2 _f1;
 uvec2 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_13 {
 mat4 _f0;
 mat3x2 _f1;
 mat4x2 _f2;
 mat4 _f3;
 uvec3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 ivec2 _f1;
 bvec2 _f2;
 vec4 _f3;
 ivec3 _f4;
 uint _f5;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_10 {
 mat4 _f0;
 ivec4 _f1;
 ivec2 _f2;
 uint _f3;
 bvec4 _f4;
 uint _f5;
 uint workgroup_id;
} ;

struct _GLF_struct_15 {
 _GLF_struct_10 _f0;
 mat3x2 _f1;
 vec4 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 int _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_7 {
 uint _f0;
 ivec3 _f1;
 ivec3 _f2;
 mat4 _f3;
 bool _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_16 {
 uvec4 _f0;
 _GLF_struct_9 _f1;
 uvec2 _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 ivec4 _f1;
 bvec2 _f2;
 bvec2 _f3;
 bool _f4;
 uvec3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 mat3x2 _f1;
 mat3x4 _f2;
 bvec3 _f3;
 bvec4 _f4;
 ivec4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_5 {
 int _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uvec3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 ivec3 _f1;
 _GLF_struct_5 _f2;
 mat4x3 _f3;
 uint workgroup_size;
 mat4 _f4;
 uint _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), false, true))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), false || (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, false)), bool(bool(bool(bvec4(! (false), false, true, false))))))))) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y) || false), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec2(1.0, cos(0.0)))), 1.0))) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))).x > injectionSwitch.y)))), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)), (bool(bvec2(_GLF_IDENTITY(true, (true) && true), false))) && true), true, true, true)))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED(36.38), (injectionSwitch)[1]), bvec2(false, true))))).y))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), ((bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)), (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) * mat2(1.0), clamp((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED((vec4(73.83, 2.6, -5.9, 682.136).y - -9186.5155)), _GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0))[1], max(((injectionSwitch) - vec2(0.0, 0.0))[1], ((injectionSwitch) - vec2(0.0, 0.0))[1]))), vec2(((injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_FUZZED(6028.5930)), bvec2(true, false)))), mix(vec2(_GLF_FUZZED(-248.157), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1], max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]))), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(-26.09)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) * mat2(1.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0)))).x : _GLF_FUZZED(7821.9306))) > injectionSwitch.y)), false || (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-248.157), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1], max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0]) / exp(0.0)), _GLF_FUZZED(-26.09)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) * mat2(1.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(3.1)), vec2(_GLF_FUZZED(float(false)), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))), clamp((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0)))).x : _GLF_FUZZED(7821.9306))) > injectionSwitch.y)), bool(bvec4(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-248.157), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1], max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]))), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(-26.09)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) * mat2(1.0)))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0)))).x : _GLF_FUZZED(7821.9306))) > injectionSwitch.y)), false, false, false)))))))) && true)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! _GLF_IDENTITY((! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4((! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (true)))), true, false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(_GLF_struct_0(vec2(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9622.8593)), float(1.0), bool(true))), 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4583.3227) : 1.0)), 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), abs(1.0)))))), uvec3(1u), bvec4(true)), ivec3(1), _GLF_struct_5(1, _GLF_struct_2(bvec3(_GLF_IDENTITY(true, false || (true))), mat3x2(1.0), mat3x4(1.0), bvec3(true), bvec4(true), ivec4(_GLF_IDENTITY(1, min(1, 1))), vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)))), _GLF_struct_3(uvec3(1u)), _GLF_struct_4(vec3(1.0), ivec4(1), bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), true), true, false))))))), bvec2(bvec4(bvec2(bvec4(bvec2(true), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), bvec2(bvec3(bvec2(false, false), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), true, true))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), true), true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), true), true, false))))))), bvec2(bvec4(bvec2(bvec4(bvec2(true), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))), true, true))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)))) || false), false), bvec2(bvec3(bvec2(false, false), false))))), true), true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), true, false))), true, uvec3(1u), mat4(1.0)), vec4(1.0)), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0)), (_GLF_IDENTITY(float(vec3(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) + tan(0.0)), 0.0)), float(mat2(float(vec3(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.8)), bool(false))))), 1.0, 1.0, 1.0)))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(-63.29), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(4357.8231)), bvec2(true, false)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(75705u, 27535u, 168328u)))).x, mat4(1.0), 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(uvec4(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), _GLF_struct_9(_GLF_struct_7(1u, _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0))))), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0))))))), ivec3(1), mat4(1.0), true), _GLF_struct_8(ivec3(1), mat2x4(1.0), _GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) << 0)) | 0), uvec2(1u)), _GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(60108u, 9352u))))), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) / uvec2(1u, _GLF_IDENTITY(1u, (1u) / 1u))), _GLF_struct_15(_GLF_struct_10(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), min(1.0, 1.0), min(1.0, 1.0))))), ivec4(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)), 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)), 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))))), _GLF_IDENTITY(0, (0) / (1 & 1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), min(ivec4(clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)), 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))))), _GLF_IDENTITY(0, (0) / (1 & 1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec4(clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)), 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))))), _GLF_IDENTITY(0, (0) / (1 & 1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))), 0 | (_GLF_IDENTITY(int(ivec4(clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)), 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))), ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)))) | ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))))))), 0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1, 1)), (int(ivec3(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1, 1))) >> 0)), 0)), ~ (~ (_GLF_IDENTITY(int(ivec4(clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec4(~ (1), 0, 1, 0)), (int(ivec4(~ (1), 0, 1, 0))) | (int(ivec4(~ (1), 0, 1, 0))))))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)), (false ? _GLF_FUZZED(30492) : _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))) | 0)) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))))))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), (int(ivec4(clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec4(~ (1), 0, 1, 0)), (int(ivec4(~ (1), 0, 1, 0))) | (int(ivec4(~ (1), 0, 1, 0))))))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)), (false ? _GLF_FUZZED(30492) : _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))) | 0)) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))))))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))) << 0))))))))), (ivec2(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), 1 * (_GLF_IDENTITY(1, int(int(1))))))), 1)), 1, 1)))) + (ivec2(0, 0) | ivec2(0, 0))), 1u, bvec4(true), 1u, gl_WorkGroupID.x), mat3x2(1.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, 0.0 + (_GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) - tan(0.0)))))), _GLF_struct_11(mat4x2(1.0), mat2(1.0)), _GLF_struct_12(vec2(1.0), ivec2(1), bvec2(_GLF_IDENTITY(true, bool(bool(true)))), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(ivec3(1), (ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) - _GLF_IDENTITY(0, min(0, 0))))) << ivec3(0, 0, 0)), 1u), _GLF_struct_13(mat4(1.0), mat3x2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 1.0)))), mat4x2(1.0), mat4(1.0), uvec3(1u), mat4x2(1.0)), _GLF_struct_14(vec3(1.0), mat4x2(1.0), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(uvec3(uvec2(1u), 0u)), ~ (_GLF_IDENTITY(~ (uvec2(uvec3(uvec2(1u), 0u))), _GLF_IDENTITY(uvec2(uvec4(~ (uvec2(uvec3(uvec2(1u), 0u))), 1u, 1u)), (uvec2(uvec4(~ (uvec2(uvec3(uvec2(1u), 0u))), 1u, 1u))) | uvec2(0u, 0u)))))), uvec2(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))), (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) ^ uvec2(0u, 0u))) ^ uvec2(0u, 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))), (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) ^ uvec2(0u, 0u))) ^ uvec2(0u, 0u), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))), (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) ^ uvec2(0u, 0u))) ^ uvec2(0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))), (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) ^ uvec2(0u, 0u))) ^ uvec2(0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))), (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) ^ uvec2(0u, 0u))) ^ _GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(0u, 0u), uvec2(1u, 1u) * (uvec2(0u, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(1u), uvec2(1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) ^ uvec2(0u, 0u), ((_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) ^ uvec2(0u, 0u)) / (uvec2(1u, 1u) ^ uvec2(0u, 0u))))) ^ uvec2(0u, 0u), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))), (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) ^ uvec2(0u, 0u))) ^ uvec2(0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))), (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) ^ uvec2(0u, 0u))) ^ uvec2(0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))), (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) ^ uvec2(0u, 0u))) ^ uvec2(0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))), (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) ^ uvec2(0u, 0u))) ^ uvec2(0u, 0u)) >> uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))), (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) ^ uvec2(0u, 0u))) ^ uvec2(0u, 0u)))), 1u, 0u))))), _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-6.4 - 37.72)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(85568))), bvec2(true, false))).y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_struct_replacement_6.workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_16._f3._f0.workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_16._f3._f0.workgroup_id, (_GLF_struct_replacement_16._f3._f0.workgroup_id) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 0u | (_GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), 1u), (uvec2(_GLF_IDENTITY(_GLF_struct_replacement_16._f3._f0.workgroup_id, (_GLF_struct_replacement_16._f3._f0.workgroup_id) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), 1u)) >> uvec2(0u, 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) | (0u)) ^ 1u), 1u)))) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) + subgroup_id * subgroup_size + subgroup_local_id, 1u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) >> 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (~ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u), (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (~ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u)) ^ 0u)))))))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) + subgroup_id * subgroup_size + subgroup_local_id, 1u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) >> 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (~ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u), (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (~ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u)) ^ 0u)))))))), (uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) + subgroup_id * subgroup_size + subgroup_local_id, 1u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) >> 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (~ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u), (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(8u), uint(8u))), (~ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u)) ^ 0u))))))))) * 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(-4.9)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) + 0u, ((uint(1)) + 0u) / 1u)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-27336) : 64)), 0);
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-77709) : 0)))))), _GLF_struct_17(bvec2(true)), true, _GLF_struct_21(vec4(1.0), _GLF_struct_18(mat4x3(1.0), bvec4(true), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (_GLF_IDENTITY(ivec2(1), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec2(29862, 57483)), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(29862, 57483)), ivec2(ivec3(_GLF_FUZZED(ivec2(29862, 57483)), 1)))) - ivec2(0, 0)) : ivec2(1))))), ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | 0) / 1, min((0) / 1, _GLF_IDENTITY((0) / 1, (_GLF_IDENTITY((0) / 1, max((0) / 1, (0) / 1))) | 0)))), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))))) ^ ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 1, 0, 1))), (_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 1, 0, 1)))) ^ 0), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(47384) : _GLF_IDENTITY(int(0), (int(0)) - 0))))))))), clamp(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) / 1), 0), min(ivec2(_GLF_IDENTITY(0, (0) / 1), 0), ivec2(_GLF_IDENTITY(0, (0) / 1), 0))) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | ivec2(0, 0)), min(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)), ~ _GLF_IDENTITY((~ ((ivec2(1)))), ((~ ((ivec2(1))))) * ivec2(1, 1))) ^ ivec2(0, 0)), _GLF_IDENTITY(ivec2(1), (ivec2(1)) | ivec2(0, 0)))))), (ivec2(-81523, 8105) & ivec2(0, 0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) / 1), 0), min(ivec2(_GLF_IDENTITY(0, (0) / 1), 0), ivec2(_GLF_IDENTITY(0, (0) / 1), 0))) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | ivec2(0, 0)), min(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)), ~ _GLF_IDENTITY((~ ((ivec2(1)))), ((~ ((ivec2(1))))) * ivec2(1, 1))) ^ ivec2(0, 0)), _GLF_IDENTITY(ivec2(1), (ivec2(1)) | ivec2(0, 0)))))), min(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) / 1), 0), min(ivec2(_GLF_IDENTITY(0, (0) / 1), 0), ivec2(_GLF_IDENTITY(0, (0) / 1), 0))) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | ivec2(0, 0)), min(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)), ~ _GLF_IDENTITY((~ ((ivec2(1)))), ((~ ((ivec2(1))))) * ivec2(1, 1))) ^ ivec2(0, 0)), _GLF_IDENTITY(ivec2(1), (ivec2(1)) | ivec2(0, 0)))))), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) / 1), 0), min(ivec2(_GLF_IDENTITY(0, (0) / 1), 0), ivec2(_GLF_IDENTITY(0, (0) / 1), 0))) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | ivec2(0, 0)), min(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)), ~ _GLF_IDENTITY((~ ((ivec2(1)))), ((~ ((ivec2(1))))) * ivec2(1, 1))) ^ ivec2(0, 0)), _GLF_IDENTITY(ivec2(1), (ivec2(1)) | ivec2(0, 0))))))))))) ^ ivec2(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | (0))))) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(0, 0)) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))))) ^ _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0))), ((_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | (0))))) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(0, 0)) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))))) ^ _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))) >> ivec2(0, 0))), max(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0))) >> ivec2(0, 0)), ivec2(1))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(_GLF_IDENTITY(1, (1) / 1))) ^ ivec2(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (0)))), ivec2(_GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY(ivec2(ivec2((_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(_GLF_IDENTITY(1, min(1, 1)))))))), max(ivec2(ivec2((_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)) ^ ivec2(0, 0), ~ (~ ((ivec2(1)) ^ ivec2(0, 0))))), ivec2(_GLF_IDENTITY(1, min(1, 1)))))))), ivec2(ivec2((_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), (false ? _GLF_FUZZED(ivec2(96529, -72498)) : _GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0))), min(1, 1)))))))))))))))) ^ ivec2(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0)), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))), ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0)), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0)), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))), min((_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0)), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))), (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0)), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1))))))) - ivec2(0, 0))), ~ (~ (ivec2(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0)), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0)), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))), min((_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0)), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))), (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0)), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1))))))) - ivec2(0, 0)))))))))) ^ ivec2(0, 0)), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 1 * (1))), (_GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-30328, 39983)) : _GLF_IDENTITY(ivec2(0, 0), (ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) + 0), 0)) + ivec2(0, 0)))) << _GLF_IDENTITY(ivec2(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, max(6, 6))) ^ 0), 6))), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))))) ^ ivec2(0, 0))) << ivec2(0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), int(ivec3(_GLF_IDENTITY(0, (0) | (0)), 0, 0)))))) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(0, 0)) << _GLF_IDENTITY(ivec2(6), ivec2(6))), ((_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(0, 0)) << _GLF_IDENTITY(ivec2(6), ivec2(6)))) << ivec2(0, 0)) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))))) ^ _GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), ivec2(0, 0), ivec2(0, 0)))), max(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0))) >> ivec2(0, 0)), ivec2(1))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(_GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY(ivec2(ivec2((_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(_GLF_IDENTITY(1, min(1, 1)))))))), max(ivec2(ivec2((_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(_GLF_IDENTITY(1, min(1, 1)))))))), ivec2(ivec2((_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(_GLF_IDENTITY(1, min(1, 1)))))))))))))))) ^ ivec2(0, 0), ivec2(0, 0) | ((_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0))) >> ivec2(0, 0)), ivec2(1))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(_GLF_IDENTITY(1, min(1, 1)))))), _GLF_IDENTITY(ivec2(ivec2((_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(_GLF_IDENTITY(1, min(1, 1)))))))), max(ivec2(ivec2((_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(_GLF_IDENTITY(1, min(1, 1)))))))), ivec2(ivec2((_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(_GLF_IDENTITY(1, min(1, 1)))))))))))))))) ^ ivec2(0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, int(int(1)))), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0)), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))))) ^ ivec2(0, 0)), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 1 * (1))), (_GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-30328, 39983)) : _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) + ivec2(0, 0)))) << _GLF_IDENTITY(ivec2(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, max(6, 6))) ^ 0), 6))), ivec2(6))) ^ (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (true ? ivec2(1) : _GLF_FUZZED(ivec2(-80513, -76437))))) | (ivec2(1)))))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))))) ^ ivec2(0, 0))) << ivec2(0, 0))))) << ivec2(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(1)) * ivec2(1, 1)))), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(ivec2(1), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, (6) * 1)))))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), ivec2(1)))))) ^ _GLF_IDENTITY(ivec2(0, 0), ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) >> ivec2(0, 0))))), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, (0) / 1), 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(ivec2(1), _GLF_IDENTITY(ivec2(1), (ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) / 1) + (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1))))) | 0)))))))) / ivec2(1, 1)))), (_GLF_IDENTITY(ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6)), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))) | (ivec2(0, 0) << _GLF_IDENTITY(ivec2(6), ivec2(6))))) ^ (ivec2(1)))))) | (_GLF_IDENTITY(ivec2(1), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) ^ ivec2(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))), (false ? _GLF_FUZZED(ivec2(8232, -63542)) : ivec2(1)))))))) ^ ivec2(0, 0))) - ivec2(0, 0)))), mat4x2(1.0), ivec4(1), mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.2)))) - 0.0), max(1.0, 1.0)), 1.0)))), ivec3(1), _GLF_IDENTITY(1u, (1u) << 0u), _GLF_struct_19(mat3x4(1.0), mat2x3(1.0)), _GLF_struct_20(mat4(1.0), mat2x3(1.0), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * 1.0)), 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), clamp(min(1, _GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), max(min(1, _GLF_IDENTITY(1, (1) / 1)), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ _GLF_IDENTITY(((1)), (_GLF_IDENTITY(((1)), (_GLF_IDENTITY(((1)), (false ? _GLF_FUZZED(-82254) : ((1))))) / 1)) + 0))) / 1) / 1)))), min(1, _GLF_IDENTITY(1, (1) / 1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))), max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), clamp(min(1, _GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), max(min(1, _GLF_IDENTITY(1, (1) / 1)), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((1)), (_GLF_IDENTITY(0 ^ ((1)), (false ? _GLF_FUZZED(-45806) : 0 ^ ((1))))) / 1))) / 1) / 1)))), min(1, _GLF_IDENTITY(1, (1) / 1))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))), max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))) * 1)))))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), clamp(min(1, _GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), max(min(1, _GLF_IDENTITY(1, (1) / 1)), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) / 1) / 1)))), min(1, _GLF_IDENTITY(1, (1) / 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), clamp(min(1, _GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), max(min(1, _GLF_IDENTITY(1, (1) / 1)), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) / 1) / 1)))), min(1, _GLF_IDENTITY(1, (1) / 1))))), (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), clamp(min(1, _GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), max(min(1, _GLF_IDENTITY(1, (1) / 1)), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) / 1) / 1)))), min(1, _GLF_IDENTITY(1, (1) / 1)))))) >> 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), clamp(min(1, _GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), max(min(1, _GLF_IDENTITY(1, (1) / 1)), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) / 1) / 1)))), min(1, _GLF_IDENTITY(1, (1) / 1))))), (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), clamp(min(1, _GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), max(min(1, _GLF_IDENTITY(1, (1) / 1)), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) / 1) / 1)))), min(1, _GLF_IDENTITY(1, (1) / 1)))))) >> 0))) ^ (0 ^ 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))), max(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) / 1)), max(min(1, _GLF_IDENTITY(1, (1) / 1)), min(1, _GLF_IDENTITY(1, (1) / 1))))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-56.17) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.4))), injectionSwitch.x)))), (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x), float(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x), (max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY((injectionSwitch.x) - 0.0, max((injectionSwitch.x) - 0.0, _GLF_IDENTITY((injectionSwitch.x) - 0.0, cos(0.0) * (_GLF_IDENTITY((injectionSwitch.x) - 0.0, max((injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0)) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0)) / 1.0)), float(_GLF_FUZZED(-796.042)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0))))))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-56.17) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).x, injectionSwitch.x), (max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))).x, injectionSwitch.x)) - abs(0.0))), (injectionSwitch.x) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x)), (injectionSwitch.x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.4))), injectionSwitch.x)))), (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9176.5337)))), float(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), (max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY((injectionSwitch.x) - 0.0, max((injectionSwitch.x) - 0.0, _GLF_IDENTITY((injectionSwitch.x) - 0.0, cos(0.0) * (_GLF_IDENTITY((injectionSwitch.x) - 0.0, max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) - 0.0, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x) - 0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0)) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) - 0.0)) / 1.0)), float(_GLF_FUZZED(-796.042)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), (injectionSwitch.x) - 0.0))))))))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false))))))), (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(mat2x4((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), (_GLF_IDENTITY(vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), min(vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), _GLF_IDENTITY(vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (length(vec4(0.0, 0.0, 0.0, 0.0))) / round(length(normalize(vec2(1.0, 1.0))))), 1.0, 0.0)), clamp(vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, 1.0, 0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.3) : 0.0)), 0.0, 0.0)), 1.0, 0.0)), vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)), vec2(mat2x4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0 + (length(vec4(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(9.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0))))))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec2((false) || false, true), bvec2(bvec3(bvec2((false) || false, true), true))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(5959.2048, -7.6)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) / vec2(1.0, 1.0)).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) / vec2(1.0, 1.0)).y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) | (read_1)))) == _GLF_struct_replacement_22.read_2) + _GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | 0)) | 0), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-61.50) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == _GLF_struct_replacement_22.read_2), _GLF_IDENTITY(0u, 0u + (0u)) | (uint(read_1 == _GLF_IDENTITY(_GLF_struct_replacement_22.read_2, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_22.read_2), 1u * (~ (_GLF_struct_replacement_22.read_2)))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
  barrier();
}
