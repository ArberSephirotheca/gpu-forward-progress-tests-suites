#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), bool(bvec2(! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), bool(bvec2(! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), false))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, log(1.0), sqrt(0.0)))).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, log(1.0), sqrt(0.0)))).y)))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))), bool(bvec4(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), false || (! (_GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), true, false, true)))))))), (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))) > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), false || (! (_GLF_IDENTITY(! (! ((! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))))))))) || false)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u)) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) | (min(1u, 1u)))))))), uint(uint(uint(uvec3(0u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u))))))))))) >> 0u), 0u)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id))) / 1u)) | (workgroup_size * workgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), (false ? _GLF_FUZZED(atomicXor(subgroup_id, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) : (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(2.3), (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(2.3), mix(float(_GLF_FUZZED(-3.5)), float(true ? injectionSwitch.x : _GLF_FUZZED(2.3)), bool(true)))) - 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sin(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ (~ (_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), (false ? _GLF_FUZZED(atomicXor(subgroup_id, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) : (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), (false ? _GLF_FUZZED(atomicXor(subgroup_id, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) : (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(2.3), (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(2.3), mix(float(_GLF_FUZZED(-3.5)), float(true ? injectionSwitch.x : _GLF_FUZZED(2.3)), bool(true)))) - 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sin(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ (~ (_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), (false ? _GLF_FUZZED(atomicXor(subgroup_id, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) : (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), (false ? _GLF_FUZZED(atomicXor(subgroup_id, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) : (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(2.3), (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(2.3), mix(float(_GLF_FUZZED(-3.5)), float(true ? injectionSwitch.x : _GLF_FUZZED(2.3)), bool(true)))) - 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sin(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ (~ (_GLF_IDENTITY((workgroup_size * workgroup_id) | _GLF_IDENTITY((workgroup_size * workgroup_id), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + ((workgroup_size * workgroup_id))), (false ? _GLF_FUZZED(atomicXor(subgroup_id, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) : (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ ((workgroup_id)), (~ ((workgroup_id))) | 0u))) / 1u), (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), (true ? (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) | (workgroup_size * workgroup_id) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)) * workgroup_id) | (workgroup_size * workgroup_id))), ((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))), _GLF_IDENTITY((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id), ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)))))) / 1u) / 1u)) ^ 0u)) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), bool(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), true))))), bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), bool(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))), true))))), true, true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)).y, _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(mat3x2(_GLF_IDENTITY((injectionSwitch.y), 1.0 * ((injectionSwitch.y))), 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(9.2))) * 1.0), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))))) ? _GLF_FUZZED(mat3x2(mat4(-5.8, 3.3, -1274.1227, -7.4, -95.22, -6.1, 2504.9236, 7020.3016, 7.9, 2222.1277, 2.1, -7.2, -5.5, 8.7, 6925.3812, _GLF_IDENTITY(-8.7, (-8.7) + 0.0)))) : mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-1439.0503, -450.631))))), 0.0, 1.0, 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)).y, _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(mat3x2(_GLF_IDENTITY((injectionSwitch.y), 1.0 * ((injectionSwitch.y))), 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(9.2))) * 1.0), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))))) ? _GLF_FUZZED(mat3x2(mat4(-5.8, 3.3, -1274.1227, -7.4, -95.22, -6.1, 2504.9236, 7020.3016, 7.9, 2222.1277, 2.1, -7.2, -5.5, 8.7, 6925.3812, _GLF_IDENTITY(-8.7, (-8.7) + 0.0)))) : mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-1439.0503, -450.631))))), 0.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)).y, _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(mat3x2(_GLF_IDENTITY((injectionSwitch.y), 1.0 * ((injectionSwitch.y))), 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(9.2))) * 1.0), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))))) ? _GLF_FUZZED(mat3x2(mat4(-5.8, 3.3, -1274.1227, -7.4, -95.22, -6.1, 2504.9236, 7020.3016, 7.9, 2222.1277, 2.1, -7.2, -5.5, 8.7, 6925.3812, _GLF_IDENTITY(-8.7, (-8.7) + 0.0)))) : mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(-1439.0503, -450.631))))), 0.0, 1.0, 1.0)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false))))) && true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), true)))), true))))))))))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-1.3)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(mat4x2(vec2((injectionSwitch)[0], (injectionSwitch)[1]), cos(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - determinant(mat3(0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0)))), injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(-53.06)), vec2((vec2(mat4x2(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4x2(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))]), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true)))), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0))))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)) / 1u)], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], 4, _GLF_IDENTITY(64, max(64, 64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), true, true, true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bool(! (bool(false))))))))), _GLF_IDENTITY(! (! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), false || (! (! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, sqrt(0.0))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, sqrt(0.0))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, sqrt(0.0))))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true)) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true)) && true), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec4(cos(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(cos(0.0), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < subgroup_size)), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (1) << 0)), ((1) | (_GLF_IDENTITY(1, (1) << 0))) - 0)) < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u), ~ (subgroup_size))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))), ~ (subgroup_size)))))))) ^ 0u)))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), bool(bvec2(bool(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size), (! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size)) || false)), true))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), bool(bvec2(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)))))) < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))), 0u | (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u)))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size)), true))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(asin(vec2(1.9, -2.3))))).y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(asin(vec2(1.9, -2.3))))).y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))))))))), false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), 0u | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))))))))) ^ 0u)))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), true, true, false)), true && (bool(bvec4(! (true), true, true, false)))))))))))), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u)))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u)))) ^ 0u))), bool(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), true, true, false))), (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u)))))), _GLF_IDENTITY(true, false || (true))))), bool(bvec4(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ (1)) < subgroup_size)), true))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5788.6173) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), false, true))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), max((_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))), max(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size))), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u)))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ (1)) < subgroup_size)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), max((_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))), max(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size))), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u)))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ (1)) < subgroup_size)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), bool(bvec4((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), max((_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))), max(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size))), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u)))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ (1)) < subgroup_size)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))) && true), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size), ! (! (! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size))))), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(max(~ (subgroup_size), ~ (subgroup_size)), clamp(max(~ (subgroup_size), ~ (subgroup_size)), max(~ (subgroup_size), ~ (subgroup_size)), max(~ (subgroup_size), ~ (subgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u, 0u | ((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u)))))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size), (! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size)) || false)), true)), (bool(bvec2(bool(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size), (! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size)) || false)), true))) || false)), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), false, true))))), true, true, false)))) || false)) || false)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), false), bvec2(bvec2(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), false))))), (bool(_GLF_IDENTITY(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), false), bvec2(bvec2(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), false)))))) && true)), bool(bvec2(bool(! (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u) < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(~ (subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (subgroup_size))))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY(max(~ (subgroup_size), ~ (subgroup_size)), min(max(~ (subgroup_size), ~ (subgroup_size)), _GLF_IDENTITY(max(~ (subgroup_size), ~ (subgroup_size)), uint(uvec4(max(~ (subgroup_size), ~ (subgroup_size)), 0u, 0u, 0u)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), max(~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))) ^ 0u)))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size)), true))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))))))))))))), false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u)), (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), 0u ^ (~ (subgroup_size))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))) ^ 0u))) / 1u))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < subgroup_size)), bool(bvec2(bool(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size, ! (! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), ! (! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u)), (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), 0u ^ (~ (subgroup_size))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))) ^ 0u))) / 1u))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < subgroup_size)), bool(bvec2(bool(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size, ! (! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0)))) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ _GLF_IDENTITY((subgroup_size), uint(uvec4((subgroup_size), 0u, 0u, 1u))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u)))))), true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size))))))), ! (! (bool(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))))))))), bool(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), true, true, _GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))) ^ 0u)))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ (1)) < subgroup_size)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))), (false ? _GLF_FUZZED(read_1) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))) ^ 0))))) < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), min(~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), _GLF_IDENTITY(max(~ (subgroup_size), ~ (subgroup_size)), (_GLF_IDENTITY(max(~ (subgroup_size), ~ (subgroup_size)), min(max(~ (subgroup_size), ~ (subgroup_size)), max(~ (subgroup_size), ~ (subgroup_size))))) - 0u))))))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), min(~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), _GLF_IDENTITY(max(~ (subgroup_size), ~ (subgroup_size)), (_GLF_IDENTITY(max(~ (subgroup_size), ~ (subgroup_size)), min(max(~ (subgroup_size), ~ (subgroup_size)), max(~ (subgroup_size), ~ (subgroup_size))))) - 0u)))))))))) ^ 0u)))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (subgroup_local_id + 1 < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ (1)) < subgroup_size)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))) && true), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size)), bool(bvec2(bool(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) * 1u))), ~ (subgroup_size))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), max(~ (subgroup_size), ~ (subgroup_size))))), max(~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), max(_GLF_IDENTITY(~ (subgroup_size), 0u ^ (~ (subgroup_size))), ~ (subgroup_size)))))))))) ^ 0u)))))), true))), bool(bvec4(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size), (! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size)) || false)), true)), (bool(bvec2(bool(_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size), _GLF_IDENTITY(true, false || (true)) && ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size))), (! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size)) || false)), true))) || false)), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x < injectionSwitch.y)), false, true))))), true, true, false)))) || false)) || false))) || false)))))))))
  {
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(970.904, 9.5)) : injectionSwitch)).y))))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(659.393, _GLF_IDENTITY(63.27, (63.27) / 1.0))))))).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(-13.69)), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).x), _GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, true, true))))) > injectionSwitch.y)) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) && true), ! (! (! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec2((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(372.183)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(false))), (float(_GLF_FUZZED(float(false)))) - 0.0), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), bool(bool((true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), bool(bool((true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), bool(bool((true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (true))), (((! (true)))) && true), bool(bvec4(! _GLF_IDENTITY(((! (true))), (((! (true)))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))), ! (_GLF_IDENTITY(! (bool(bool((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))))), bool(bvec2(! (bool(bool((! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))))), false))))))) || false)))))), ! (! (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))), false, true, true)), (bool(bvec4((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))), false, true, true))) || false)), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | _GLF_IDENTITY((next_virtual_gid), clamp((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), (false ? _GLF_FUZZED(read_1) : (next_virtual_gid))), _GLF_IDENTITY((next_virtual_gid), ~ (~ ((next_virtual_gid)))))))], uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) << 0u, clamp((read_1) << 0u, _GLF_IDENTITY(_GLF_IDENTITY((read_1) << 0u, ~ (~ ((read_1) << 0u))), ((read_1) << 0u) / 1u), (read_1) << 0u)))))), ((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) << 0u, clamp((read_1) << 0u, _GLF_IDENTITY(_GLF_IDENTITY((read_1) << 0u, ~ (~ ((read_1) << 0u))), ((read_1) << 0u) / 1u), (read_1) << 0u))))))) | ((_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) << 0u, clamp((read_1) << 0u, _GLF_IDENTITY(_GLF_IDENTITY((read_1) << 0u, ~ (~ ((read_1) << 0u))), ((read_1) << 0u) / 1u), (read_1) << 0u))))))))) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) ^ 0u) | (read_2))) | _GLF_IDENTITY((read_2), max((read_2), (read_2))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-74571)))) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | ((4))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) << 0))))) - 0), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0)), length(abs(0.0)), 1.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 0.0)), length(abs(0.0)), 1.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
