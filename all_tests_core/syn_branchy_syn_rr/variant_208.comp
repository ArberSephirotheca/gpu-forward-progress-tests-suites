#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, true)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) || false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), (true && (_GLF_IDENTITY(false, true && (false)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(! (! (! (! (_GLF_DEAD(false))))), bool(bvec3(! (! (! (! (_GLF_DEAD(false))))), true, true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4793.9179, -9.3)) : injectionSwitch)).x > injectionSwitch.y)), true))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8776.1502, 5.2)))), (false ? _GLF_FUZZED(vec2(-4793.9179, -9.3)) : injectionSwitch)).x > injectionSwitch.y)), true))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x) ^ 0u, ((gl_WorkGroupID.x) ^ 0u) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x) ^ 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 0u)), (uint(uvec2(1u, 0u))) << 0u)))))) << 0u), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u)))))), 0u | (uint(uvec3((gl_WorkGroupID.x) ^ 0u, 1u, 0u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupID.x) ^ _GLF_IDENTITY(0u, min(0u, 0u)), 1u, 0u)), 0u | (uint(uvec3((gl_WorkGroupID.x) ^ 0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3((gl_WorkGroupID.x) ^ 0u, 1u, 0u)), 0u | (uint(uvec3((_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x) ^ 0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << ((0u & 47363u) << _GLF_IDENTITY(uint(1u), uint(1u)))) ^ 0u, 1u, 0u)), 0u | (uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)))) >> (0u ^ 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)))) >> (0u ^ 0u))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)))) >> (0u ^ 0u))))))) | ((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)))) >> (0u ^ 0u))))) ^ 0u, 1u, 0u))))), (clamp(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupID.x) ^ 0u, 1u, 0u)), 0u | (uint(uvec3((gl_WorkGroupID.x) ^ 0u, 1u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupID.x) ^ 0u, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(bitfieldInsert(workgroup_size, subgroup_local_id, _GLF_IDENTITY(37113, (false ? _GLF_FUZZED(97453) : 37113)), 27143))))))), max(uint(uvec3((gl_WorkGroupID.x) ^ 0u, 1u, _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uint(uvec3((gl_WorkGroupID.x) ^ 0u, 1u, _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (uint(uvec3((gl_WorkGroupID.x) ^ 0u, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u))), 0u | _GLF_IDENTITY((uint(uvec3((_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u), (uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) << 0u), 1u)) >> uvec4(0u, 0u, 0u, 0u)))), gl_WorkGroupID.x))) ^ 0u, 1u, 0u))), 0u | ((uint(uvec3((_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupID.x, 0u, 0u, 1u), (uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) << 0u), 1u)) >> uvec4(0u, 0u, 0u, 0u)))), gl_WorkGroupID.x))) ^ 0u, 1u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((gl_WorkGroupID.x) ^ 0u, 1u, 0u)), 0u | (uint(uvec3((gl_WorkGroupID.x) ^ 0u, 1u, 0u)))), (_GLF_IDENTITY(uint(uvec3((gl_WorkGroupID.x) ^ 0u, 1u, 0u)), 0u | (uint(uvec3((gl_WorkGroupID.x) ^ 0u, 1u, 0u))))) >> 0u))) << 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), min(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))) * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), min(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | (workgroup_size))), min(~ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | (workgroup_size))), ~ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))) | (workgroup_size))))))) * workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id))) / 1u), _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)) * workgroup_id))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.z = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(atanh(99.96)))), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))) && true), true)))))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7636.7053))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(subgroup_local_id + 1, 0u, 0u, 1u), (uvec4(subgroup_local_id + 1, 0u, 0u, 1u)) | (uvec4(subgroup_local_id + 1, 0u, 0u, 1u)))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(67469))), 0, 0)), (int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(67469), (true ? 1 : _GLF_FUZZED(67469)) | 0))), 0, 0))) << _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1), ~ (~ (clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(67469))), 0, 0)), (int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(67469), (true ? 1 : _GLF_FUZZED(67469)) | 0))), 0, 0))) << 0)), 1)))))) % subgroup_size)), (_GLF_IDENTITY(~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(67469))), 0, 0)), _GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(67469), (true ? 1 : _GLF_FUZZED(67469)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) / 1)))))), 0, 0))), ~ (~ (_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(67469), (true ? 1 : _GLF_FUZZED(67469)) | 0))), 0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(2708)))))), ((int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(67469), (true ? 1 : _GLF_FUZZED(67469)) | 0))), 0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(2708))))))) << (0 ^ 0))))) << 0)), 1), ~ (~ (clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(67469))), 0, 0)), (int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(67469), (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(67469, max(67469, 67469)))) | 0))), 0, 0))) << 0)), 1)))))) % subgroup_size)), 0u | (~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(67469))), 0, 0)), (int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(67469, (67469) | (67469))), (true ? 1 : _GLF_FUZZED(67469)) | 0))), 0, 0))) << 0)), 1), ~ (~ (clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(67469))), 0, 0)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 ^ (1)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(67469), (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(67469, (67469) | 0))) | 0), max(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(67469), (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(67469, (67469) | 0))) | 0), _GLF_IDENTITY(true ? 1 : _GLF_FUZZED(67469), (true ? 1 : _GLF_FUZZED(67469)) | 0))))), 0, 0))) << _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-16967))), 0, 0))))), 1)))))) % subgroup_size))))) >> 0u)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)) | 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), min(~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), ~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))), (subgroup_local_id + 1) % subgroup_size))))) / 1u)) + 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false)), false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.z], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x = read_1;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) || false))) || false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false))))))), (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))))))))))) && true)), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.1) : 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.1) : 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.1) : 0.0)), (false ? _GLF_FUZZED(7.0) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.1) : 0.0))))), float(_GLF_FUZZED(700.152)), bool(false)))) / round(length(normalize(1.0)))), 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), false, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.z], 4, 64, _GLF_IDENTITY(0, (0) << 0));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y = _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, 1u, (0u | 1u)))), read_2));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, true, false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))) + 1) | 0u) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y), uint(uint(uint(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)))), (_GLF_IDENTITY(uint(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y), uint(uint(uint(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y))))) * 1u) + 1, 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))]), vec2(_GLF_FUZZED(5875.2477), _GLF_FUZZED(-1.8)), bvec2(false, false))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5875.2477), _GLF_FUZZED(-1.8)), bvec2(false, false))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9491.1794)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y)))), true, true)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && true)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat3(mat2(1.0))), (false ? _GLF_FUZZED(mat2(4437.4522, 96.68, -30.69, -9.2)) : mat2(mat3(mat2(1.0)))))) * (injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.58), _GLF_FUZZED(9458.4906)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), 0.0, 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), 0.0, 0.0) : _GLF_FUZZED(mat2(-116.936, 974.295, 8.0, -707.365)))))).y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false || ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid) | (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid)).x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid) | (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid)).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid) | (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid)).x, max(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid) | (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid)).x, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid) | (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid)).x))))))) == _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u), true && (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid) | (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid) | (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid)), (false ? _GLF_FUZZED(uvec3(78150u, 194385u, 7902u)) : _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid) | (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid))))) | (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid) | (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid)))).x == _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY((GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u, clamp((GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u))), true && (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, clamp(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid)).y) * _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (1u) - 0u)), true && (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid) | uvec3(0u, 0u, 0u)).x == _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, uvec3(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid[0], GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid[1], GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid[2])).y, _GLF_IDENTITY(bool(bvec4(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1092.6568), _GLF_FUZZED((_GLF_IDENTITY(true ? 548.419 : -4394.9942, min(true ? 548.419 : -4394.9942, true ? 548.419 : -4394.9942))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, ~ (~ (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, uvec3(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid[0], _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid[1], (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid[1]) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid[2])))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false, true, true)), ! (! (bool(bvec4(bool(bvec4(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, uvec3(0u, 0u, 0u) + (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid)).x == _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid))) << uvec3(0u, 0u, 0u)).y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_IDENTITY(true, true && (true)))), false, true, true)))))))))), _GLF_IDENTITY(0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, 0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, clamp(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, clamp(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, max(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)), GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)), GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)))), (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u), (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, 0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, clamp(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, clamp(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, max(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)), GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)), GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)))), (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u), ! (! (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, clamp(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, clamp(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, max(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)), GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)), GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y))), (0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, clamp(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, clamp(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, max(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)), GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)), GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)))) ^ 0u)), (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u))))) && true), true && (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)))), (0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, 0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, clamp(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, clamp(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, 0u | (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y))) >> (0u & 156543u)), GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)), GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)))), _GLF_IDENTITY((GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u, 1u * ((GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u))), true && (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y))), (_GLF_IDENTITY((1u ^ 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY((1u ^ 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), ((1u ^ 1u) << _GLF_IDENTITY(uint(4u), uint(4u))) * 1u), _GLF_IDENTITY((1u ^ 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), min((1u ^ 1u) << _GLF_IDENTITY(uint(4u), uint(4u)), (1u ^ 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))))) ^ (uint(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) ^ 0u), 0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, clamp(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, clamp(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, 0u | (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y))) >> (0u & 156543u)), GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)), GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y)))), _GLF_IDENTITY((GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u, 1u * ((GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u))), true && (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y))))))) | 0u))) | (uint(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, _GLF_IDENTITY((GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y) * 1u, ((_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y, (true ? GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y : _GLF_FUZZED(read_2)))) | (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y))) * 1u) - 0u), ((_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, max(GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid, GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid)).y) * 1u) + 0u), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))))))), true && (GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.x == GLF_merged3_0_1_6_1_1_6_2_1_11read_1read_2virtual_gid.y))))) + _GLF_IDENTITY(1, int(ivec3(1, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2967.9185)), bool(false))) > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) && true)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)))).x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y), true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], 1.0, sqrt(0.0), 1.0))))), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true, true, true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
