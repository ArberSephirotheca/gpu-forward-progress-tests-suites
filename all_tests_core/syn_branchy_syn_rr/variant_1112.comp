#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))), injectionSwitch.y))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (false ? _GLF_FUZZED(vec2(350.146, -8.8)) : vec2(injectionSwitch.y, 0.0)))))) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true), true))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), false, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) && true)), false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), false, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) && true)), false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u + (gl_NumWorkGroups.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(146521u) : gl_NumWorkGroups.x), ((false ? _GLF_FUZZED(146521u) : gl_NumWorkGroups.x)) >> 0u))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 1u)), (true ? uint(uvec2(_GLF_IDENTITY(0u, 0u + (0u)), 1u)) : _GLF_FUZZED(102840u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), ((injectionSwitch)) - vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-742.983) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) ? _GLF_FUZZED(-1.4) : injectionSwitch.x, float(mat3x2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-742.983) : injectionSwitch.y)))) ? _GLF_FUZZED(-1.4) : injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0))), 0.0))))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(-6.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(94.97)), bvec2(true, false)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false))))))), bool(bvec4(! (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, bool(bvec2(((false)) && true, false))))), true, false, true))))) && true)))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.8, 4.0))))[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) ^ (_GLF_IDENTITY(1, 0 ^ (1))))])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.6)), bool(false))), mix(float(_GLF_FUZZED((5974.5150 - 463.747))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(true)))) / 1.0)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.6), _GLF_FUZZED(39.74)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(-55.05, -745.906, vec2(8.4, 84.48))))))).x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), true && (! (! ((injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), true && (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true))))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, false, false)), ! (! (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, false, false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), ! (! (! _GLF_IDENTITY((! (true)), ((_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))))))) || false)))))))) && true, false || ((_GLF_IDENTITY(! (! (true)), ! (! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))) && true)))) ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6917.3865)), bool(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), float(_GLF_FUZZED(-6917.3865)), bool(false))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(-6917.3865)), bool(false))), false)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), float(_GLF_FUZZED(-6917.3865)), bool(false))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(-6917.3865)), bool(false))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 1u * _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), 1u * (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u))), ((workgroup_base)) | ((workgroup_base)))) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-8513.0490))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.6)), bool(false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))), (float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))))) - 0.0)))))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, length(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-6.2 - 230.091))), bool(false))))) > injectionSwitch.y)))))), true))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (false), false), false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), bool(bvec2(! (false), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), ! (! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! _GLF_IDENTITY((false), ! (! ((false)))), false))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))) && true, ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))) && true)))))))))))), bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(3697.7582, 1976.9399)) : _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) + vec2(0.0, 0.0), _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) + vec2(0.0, 0.0)) * mat2(1.0), mix(vec2((((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) + vec2(0.0, 0.0)) * mat2(1.0))[0], (((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) + vec2(0.0, 0.0)) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-1029.1443), _GLF_FUZZED(-5.5)), bvec2(false, false)))))) - vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(72.40)), bool(false))), 0.0))[1]), vec2(_GLF_FUZZED(float(134261u)), _GLF_FUZZED(float(-12798))), bvec2(false, false))) : _GLF_FUZZED(vec2(-715.020, 49.12)))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED(-393.812)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(true, true && (true)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1), _GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 + (1))), (true ? uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))) + (1))) : _GLF_FUZZED(subgroup_local_id))), (uint(1)) - 0u), uint(1)))), (clamp(uint(_GLF_IDENTITY(1, (1) - 0)), uint(1), _GLF_IDENTITY(uint(1), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 + (1))), (true ? uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))) + (1))) : _GLF_FUZZED(subgroup_local_id))), (uint(1)) - 0u), uint(1))))) ^ (1u ^ 1u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sin(injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(62327) : _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) ^ (0 | 0)), _GLF_IDENTITY(64, (64) | (64)))), _GLF_IDENTITY(64, min(64, 64)))))), 0);
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), uint(_GLF_IDENTITY(uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (max(virtual_gid, virtual_gid)) | _GLF_IDENTITY((max(virtual_gid, virtual_gid)), 0u + ((max(virtual_gid, virtual_gid)))))), 0u, (0u | 0u), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << 0u))))), 1u), uvec2(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))) ^ (165982u & 0u))) * (uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), 1u))))))], 0u + (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), uint(_GLF_IDENTITY(uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (max(virtual_gid, virtual_gid)) | (max(virtual_gid, virtual_gid)))), 0u, (0u | 0u), 0u)), 1u), uvec2(1u, 1u) * (uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), uint(_GLF_IDENTITY(uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (max(virtual_gid, virtual_gid)) | (max(virtual_gid, virtual_gid)))), 0u, (0u | 0u), 0u)), 1u), uvec2(1u, 1u) * (uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), 1u))))), (true ? _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), uint(_GLF_IDENTITY(uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (max(virtual_gid, virtual_gid)) | (max(virtual_gid, virtual_gid)))), 0u, (0u | 0u), 0u)), 1u), uvec2(1u, 1u) * (uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), 1u))))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), uint(_GLF_IDENTITY(uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (max(virtual_gid, virtual_gid)) | (max(virtual_gid, virtual_gid)))), 0u, (0u | 0u), 0u)), 1u), uvec2(1u, 1u) * (uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), uint(_GLF_IDENTITY(uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (max(virtual_gid, virtual_gid)) | (max(virtual_gid, virtual_gid)))), 0u, (0u | 0u), 0u)), 1u), uvec2(1u, 1u) * (uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), 1u))))), ~ (~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), uint(_GLF_IDENTITY(uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (max(virtual_gid, virtual_gid)) | (max(virtual_gid, virtual_gid)))), 0u, (0u | 0u), 0u)), 1u), uvec2(1u, 1u) * (uvec2(uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 0u, (0u | 0u), 0u)), 1u)))))))))))])), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), max(max(0, 0), max(0, _GLF_IDENTITY(0, (0) / (1 & 1)))))), (0) << _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (0)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (0 >> _GLF_IDENTITY(int(0), int(0))) + (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) | (3))) >> 0), 0 ^ (_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) | (3))) >> 0)))) | 0))), 0 | (_GLF_IDENTITY(int(3), int(3)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-25661) : _GLF_IDENTITY(3, (3) / 1)))), int(3))) / 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) / 1)) >> 0, ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) / 1)) >> 0) << 0), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))))))))), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, ~ (~ (3))), 3, 3))))) / 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) / 1), ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) >> 0)), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) >> 0)) | _GLF_IDENTITY(0, ~ (~ (0)))))))))))), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), 0 + (int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, ~ (~ (0))))), (true ? int(int(_GLF_IDENTITY(0, ~ (~ (0))))) : _GLF_FUZZED(-93296))))) ^ 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3)))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), int(3))) / 1) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) * 1)))))))))))))) / 1))))) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) << (1 ^ 1)))))), (false ? _GLF_FUZZED((ivec3(8650, -62770, 98277).p & -23351)) : ((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))))))))), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, ~ (~ (3))), 3, 3))))) / 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) / 1), ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) >> 0)), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) >> 0)) | _GLF_IDENTITY(0, ~ (~ (0)))))))))))), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), 0 + (int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, ~ (~ (0))))), (true ? int(int(_GLF_IDENTITY(0, ~ (~ (0))))) : _GLF_FUZZED(-93296))))) ^ 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3)), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3)))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), int(3))) / 1) | _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) * 1)))))))))))))) / 1))))) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) << (1 ^ 1)))))))) >> 0))), ~ (~ ((_GLF_IDENTITY(0, 0 ^ (0)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (0 >> _GLF_IDENTITY(int(0), int(0))) + (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(ivec4(int(3), 1, 0, 0), (true ? ivec4(int(3), 1, 0, 0) : _GLF_FUZZED(ivec4(-24523, 16470, -73136, 67913))))))))))), (_GLF_IDENTITY(int(3), int(3))) / 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) / 1)) >> 0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | _GLF_IDENTITY((3), max((3), (3)))), (_GLF_IDENTITY(3, 0 | (3))) << 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0))))))))))) >> 0) >> 0, 1 * (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (_GLF_IDENTITY(3, (_GLF_IDENTITY(3, 0 | (3))) / 1)))) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (int(_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (_GLF_IDENTITY(3, (_GLF_IDENTITY(3, 0 | (3))) / 1)))) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0))))))))))) >> 0) >> 0, min(((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3)), clamp(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3)), _GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3)), _GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))))))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(0, min(0, 0)))), ~ (~ _GLF_IDENTITY((0), min((0), (0))))))))))))) >> 0) >> 0, ((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0)), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(3, 0 | (3)), (_GLF_IDENTITY(3, 0 | (3))) << 0))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(3)), _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, min((_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, min(3, 3)), 3))), int(3))) / 1, _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))) / 1, ((_GLF_IDENTITY(int(3), int(3))) / 1) | _GLF_IDENTITY(0, ~ (~ (0))))))))))) >> 0) >> 0)))))))))), (true ? (_GLF_IDENTITY(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(ivec4(-31717, 22998, 2856, -86873).y))) ^ (0)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) * (1 & 1)), int(3)), (true ? _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(3) : _GLF_FUZZED(bitCount((subgroup_local_id & workgroup_size)))))) : _GLF_FUZZED(-47556))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, max(3, 3))) | (_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, (3) / 1)))))), int(3))), max((_GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(int(3), int(3))))) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) * (1 & 1)), int(3)), (true ? _GLF_IDENTITY(int(3), int(3)) : _GLF_FUZZED(-47556))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), 0 ^ (int(3))))))), max((_GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(int(3), int(3)))) | ((_GLF_IDENTITY(int(3), int(3))))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) * (1 & 1)), int(3)), (true ? _GLF_IDENTITY(int(3), int(3)) : _GLF_FUZZED(-47556))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) << 0)), int(3))), _GLF_IDENTITY(max((_GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(int(3), int(3)))), max(max((_GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(int(3), int(3)))), max((_GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(int(3), int(3))))))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) * (1 & 1)), int(3)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3)) : _GLF_FUZZED(_GLF_IDENTITY(-47556, min(_GLF_IDENTITY(-47556, _GLF_IDENTITY(int(ivec2(-47556, 1)), 0 | (int(ivec2(-47556, 1))))), _GLF_IDENTITY(-47556, clamp(-47556, -47556, -47556))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(3), int(3))), max((_GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(int(3), int(3))))) / 1)) >> 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) / 1)) >> 0, ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))), (_GLF_IDENTITY(int(3), int(3))) / 1)) >> _GLF_IDENTITY(0, (0) | (0))) >> _GLF_IDENTITY(0, int(ivec3(0, 0, 1)))))) : _GLF_FUZZED(-73482)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], _GLF_FUZZED(563.722)), vec2(_GLF_FUZZED(-19.32), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) / vec2(1.0, 1.0))[1]), bvec2(false, true)))))[1]), vec2(_GLF_FUZZED(-5.2), _GLF_FUZZED(7900.9497)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1.9))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) ? _GLF_FUZZED(-93.06) : 1.0))))))) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0)), float(vec4(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0))) : _GLF_FUZZED(837.746))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))) - determinant(mat2(0.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))))), bool(bvec4(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, false || (true)), true))), _GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, 0.0))) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, true))))))), true)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, true))))))), true)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, true))))))), true)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bvec2(bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, true))))))), true)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false))))))) || false)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(58.32), _GLF_FUZZED(103.427)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(58.32), _GLF_FUZZED(103.427)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) ^ 0)))]), min(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) ^ 0)))]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) ^ 0)))]))), bvec2(true, true))).y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(58.32), _GLF_FUZZED(103.427)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) ^ 0)))]), min(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) ^ 0)))]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) ^ 0))), 0 ^ (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) ^ 0)))))]))), bvec2(true, true))).y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true, false)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false || (bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.8, 7.0)) : injectionSwitch)))).y)))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, false, false)), (bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, false, false))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 0)))), (true ? int(_GLF_IDENTITY(int(0), int(ivec3(int(0), 1, 0)))) : _GLF_FUZZED(bitfieldInsert(-6284, -31374, 42702, -30729)))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), ! (! (true && (true))))) || false)), (injectionSwitch.x < injectionSwitch.y)), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, (4) - 0), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (false))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))), false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (false))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))), false, false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (false))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))), false, false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (false))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))), false, false, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.6)), bool(false))))), true))) && (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.6)), bool(false))))), true))) && (false)))) || false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))))), injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))), false, false, false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), max(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)), true)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! (_GLF_IDENTITY((false), false || ((false))))) || false)))), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))) && true))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), _GLF_IDENTITY(true, (true) && true), true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(_GLF_DEAD(false)), true, true, false))), (! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(false)), true, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(bool(_GLF_DEAD(false)), true, true, false)))))) || _GLF_IDENTITY(false, (false) || false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))), true, true, false))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec4(true, true, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))))) && true), (_GLF_IDENTITY(true, (true) || false)) && true)))) || false))))) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(mat4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0)), (mat4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(mat2(mat3x2(9.1, -7.1, 2.5, 991.530, -8.3, 77.67))), (_GLF_IDENTITY(_GLF_FUZZED(mat2(mat3x2(_GLF_IDENTITY(9.1, min(9.1, 9.1)), -7.1, 2.5, 991.530, _GLF_IDENTITY(-8.3, (_GLF_IDENTITY(-8.3, (false ? _GLF_FUZZED(7.8) : -8.3))) - 0.0), _GLF_IDENTITY(77.67, clamp(_GLF_IDENTITY(77.67, min(77.67, 77.67)), 77.67, 77.67))))), (true ? _GLF_FUZZED(mat2(mat3x2(9.1, -7.1, 2.5, 991.530, -8.3, 77.67))) : _GLF_FUZZED(mat2(549.265, 3.0, 394.114, 7.3))))) + mat2(0.0, 0.0, 0.0, 0.0)))), min((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0)))).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))) * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))))), sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0))), _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.7)), bool(false))), clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0)), (false ? _GLF_FUZZED(-413.650) : float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), sqrt(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 0.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true && (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(829.419), clamp(_GLF_IDENTITY(_GLF_FUZZED(829.419), float(mat2x4(_GLF_FUZZED(829.419), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED(829.419), clamp(_GLF_FUZZED(829.419), _GLF_FUZZED(829.419), _GLF_FUZZED(829.419))), _GLF_FUZZED(829.419))), _GLF_FUZZED(-294.970)), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), injectionSwitch.y, injectionSwitch.y)))), false))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(455.078), _GLF_FUZZED(276.600)), vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), bvec2(true, true))))).y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), false, true)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.8)), bool(false)))), float(_GLF_FUZZED(-793.186)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), true, false))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), false, true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) && true), false, false))))) || false), false, true)))))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), false, true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), false, true))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))), false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, true && (false)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), false, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false))), false)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true), false))))) || false)) && true), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), false, true))))))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(1003.4571)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false))), false)))))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true), false))))) || false)) && true), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(0.0), 0.0, 0.0))), false, false)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))) || false), false, true)))))))))))))))) && true)) || false)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y)))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), true, false)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), true, false)))))))))))))))))) || false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)))), (_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, 0.0)), mix(float(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1.9)), bool(false)))) / 1.0)) > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) : _GLF_FUZZED(vec2(2.1, 1.7)))).x), abs(0.0), 1.0, 0.0, 0.0)), (_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, 0.0)), mix(float(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1.9)), bool(false)))) / 1.0)) > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false, true, true))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + length(vec3(0.0, 0.0, 0.0)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true, true))))), true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)))), (_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, 0.0)), mix(float(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1.9)), bool(false)))) / 1.0)) > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) : _GLF_FUZZED(vec2(2.1, 1.7)))).x), abs(0.0), 1.0, 0.0, 0.0)), (_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, 0.0)), mix(float(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1.9)), bool(false)))) / 1.0)) > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false, true, true))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + length(vec3(0.0, 0.0, 0.0)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true, true))))), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)))), (_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, 0.0)), mix(float(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1.9)), bool(false)))) / 1.0)) > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)) : _GLF_FUZZED(vec2(2.1, 1.7)))).x), abs(0.0), 1.0, 0.0, 0.0)), (_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, 0.0)), mix(float(float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(1.9)), bool(false)))) / 1.0)) > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false, true, true))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + length(vec3(0.0, 0.0, 0.0)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true, true))))), true), true)))), true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-564.299), _GLF_FUZZED(-932.401)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-564.299), _GLF_FUZZED(-932.401)), (true ? vec2(_GLF_FUZZED(-564.299), _GLF_FUZZED(-932.401)) : _GLF_FUZZED(vec2(8.0, 269.726)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.4)), bool(false)))), float(_GLF_FUZZED(756.525)), bool(false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false)))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false)))))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false))))) && true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), false || ((false) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
