#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, false, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-2.6)), bool(false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5555.3951)), float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(1.0)) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) && true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0))).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), true, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5555.3951)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5555.3951)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5555.3951)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(-17718), clamp(float(-17718), float(-17718), float(-17718)))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.0)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), false)), true)))))).x > injectionSwitch.y)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5555.3951)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(-17718)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.0)), bvec2(true, false))).x > injectionSwitch.y)))) || false), false, false, false))))))))))) || false)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))) < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))) < injectionSwitch.y)), true)), bool(bvec2(bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))) < injectionSwitch.y)), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(vec3(-6.4, 8.9, 7449.2243).r)), bool(false)))) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(2039.1474) : _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(vec3(-6.4, 8.9, 7449.2243).r)), bool(false)))) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(vec3(-6.4, 8.9, 7449.2243).r)), bool(false)))) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(vec3(-6.4, 8.9, 7449.2243).r)), bool(false)))) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), 1.0 * (min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(vec3(-6.4, 8.9, 7449.2243).r)), bool(false)))) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))))))) < injectionSwitch.y)))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), sqrt(1.0), 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), sqrt(1.0), 0.0, 1.0, 1.0, 0.0)))))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(((_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))), (~ (uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), ((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u))), ~ (~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), ((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), ((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec3(_GLF_IDENTITY((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), ((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) - (uvec3(174259u, 186937u, 135104u) & uvec3(0u, 0u, 0u))))))))))))) << 0u), 1u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), (uvec3(7u)) - uvec3(0u, 0u, 0u))))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u)))), (_GLF_IDENTITY(~ (uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))), (~ (uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), ((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u))), ~ (~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), ((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), ((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec3(_GLF_IDENTITY((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), ((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) - (uvec3(174259u, 186937u, 135104u) & uvec3(0u, 0u, 0u))))))))))))) << 0u), 1u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), (uvec3(7u)) - uvec3(0u, 0u, 0u))))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))))) << uvec3(0u, 0u, 0u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))), _GLF_IDENTITY(uvec3(7u), (uvec3(7u)) | _GLF_IDENTITY((uvec3(7u)), (_GLF_IDENTITY((uvec3(7u)), uvec3(1u, 1u, 1u) * ((uvec3(7u))))) ^ uvec3(0u, 0u, 0u))))), clamp(_GLF_IDENTITY(((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), 0u | ((1u)))) / 1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, max(7u, 7u))), (uvec3(7u)) | _GLF_IDENTITY((uvec3(7u)), ((uvec3(7u))) - uvec3(0u, 0u, 0u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, (7u) | (7u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, _GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_size) : 7u))))), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)) | (uvec3(7u)), max((uvec3(7u)) | (uvec3(7u)), (uvec3(7u)) | (uvec3(7u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, (7u) | (7u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, _GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_size) : 7u))))), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)) | (uvec3(7u)), max((uvec3(7u)) | (uvec3(7u)), (uvec3(7u)) | (uvec3(7u)))))), ((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, (7u) | (7u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, _GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_size) : 7u))))), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)) | (uvec3(7u)), max((uvec3(7u)) | (uvec3(7u)), (uvec3(7u)) | (uvec3(7u))))))) ^ uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, (7u) | (7u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, _GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_size) : 7u))))), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)) | (uvec3(7u)), max((uvec3(7u)) | (uvec3(7u)), (uvec3(7u)) | (uvec3(7u)))))), ((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, (7u) | (7u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, _GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_size) : 7u))))), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)) | (uvec3(7u)), max((uvec3(7u)) | (uvec3(7u)), (uvec3(7u)) | (uvec3(7u))))))) ^ uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, (7u) | (7u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, _GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_size) : 7u))))), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)) | (uvec3(7u)), max((uvec3(7u)) | (uvec3(7u)), (uvec3(7u)) | (uvec3(7u)))))), ((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, (7u) | (7u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, _GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_size) : 7u))))), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)) | (uvec3(7u)), max((uvec3(7u)) | (uvec3(7u)), (uvec3(7u)) | (uvec3(7u))))))) ^ uvec3(0u, 0u, 0u)))) | (~ (_GLF_IDENTITY((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, (7u) | (7u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, _GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_size) : 7u))))), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)) | (uvec3(7u)), max((uvec3(7u)) | (uvec3(7u)), (uvec3(7u)) | (uvec3(7u)))))), ((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, (7u) | (7u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, _GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_size) : 7u))))), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)) | (uvec3(7u)), max((uvec3(7u)) | (uvec3(7u)), (uvec3(7u)) | (uvec3(7u))))))) ^ uvec3(0u, 0u, 0u))))), ~ (_GLF_IDENTITY((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, (7u) | (7u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, _GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_size) : 7u))))), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)) | (uvec3(7u)), max((uvec3(7u)) | (uvec3(7u)), (uvec3(7u)) | (uvec3(7u)))))), ((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), _GLF_IDENTITY(1u, 0u ^ (1u))) << _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, (7u) | (7u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, _GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_size) : 7u))))), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)) | (uvec3(7u)), max((uvec3(7u)) | (uvec3(7u)), (uvec3(7u)) | (uvec3(7u))))))) ^ uvec3(0u, 0u, 0u)))))))), (true ? ((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), ((1u)) | 0u), (1u), (1u)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(7u), (uvec3(7u)) / uvec3(1u, 1u, 1u)), (uvec3(7u)) | (uvec3(7u))))) : _GLF_FUZZED(uvec3(117415u, 110379u, 174858u))))))), ((uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))), _GLF_IDENTITY(uvec3(7u), (uvec3(_GLF_IDENTITY(7u, (7u) << uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))), mix(float(0.0), float(_GLF_FUZZED(10.60)), bool(false))), injectionSwitch.x))))) | (uvec3(7u))))), (_GLF_IDENTITY((uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), max((1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))) << 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (1u) >> _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (true ? (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) : _GLF_FUZZED(subgroup_local_id))))) << 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u)) / 1u))), 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))), _GLF_IDENTITY(uvec3(7u), (uvec3(7u)) | (_GLF_IDENTITY(uvec3(7u), (uvec3(7u)) - (uvec3(0u, 0u, 0u) & uvec3(20690u, 43148u, 48912u)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY((uvec3(193854u, 121990u, 165640u) - subgroup_local_id), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((uvec3(193854u, 121990u, 165640u) - subgroup_local_id), ((uvec3(193854u, 121990u, 165640u) - subgroup_local_id)) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) : (uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), clamp(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))), (uint(6u)) | (uint(6u))), uint(6u)))), 0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u, clamp((_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u, (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u)), (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u)), max((_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u, clamp((_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u, (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u)), (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) << _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))))))) << 0u)), max((_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) << 0u)))) - 0u)) / 1u))), 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))), _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY((uvec3(7u)), uvec3(0u, 0u, 0u) ^ ((uvec3(7u)))) | (uvec3(7u))))))))) * (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1])))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(46.54)), bool(false))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), bool(bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ! (! ((! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), bool(bvec4(((false)), false, false, true))) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) && true)))))), true))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && ((false))) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), false || ((! (_GLF_IDENTITY(false, (false) || false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && ((false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), true, false, true)))) ? injectionSwitch.x : _GLF_FUZZED(-751.427))) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), true, false, true)))) ? injectionSwitch.x : _GLF_FUZZED(-751.427))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), true, false, true)))) ? injectionSwitch.x : _GLF_FUZZED(-751.427))) > injectionSwitch.y)))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, false || (true))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, false)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, false))), true && ((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), false, true, false))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, true)))) && true))), _GLF_IDENTITY(true && (bool(bvec3(false, false, true))), (true && (bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), false)), true))))))) && true))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8854.1203) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))) && true, true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) && true)))), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))) && true))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true, true && ((_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))))) && true, true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))) && true))), false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))) && true, true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) && true)))), (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))) && true))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true, true && ((_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))))) && true, true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))) && true))), false))))) && true))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false || (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))) || false, ! (! ((false) || false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false))) || false) || _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (((_GLF_IDENTITY(false, true && (false))) || false) || _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), false || (bool(false)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), false || (bool(false))))))), (! (bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), false || (bool(false)))))))) || false)))), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! ((false) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) || false), ! (! (_GLF_IDENTITY((false), false || ((false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, false, true))))) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), true, false))))))), bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, log(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bool(bool(bvec4(false, false, false, true)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), false)))))), false, true, false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bool(! (! (! (_GLF_DEAD(false))))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bool(! (! (! (_GLF_DEAD(false))))))))), false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, 1u))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (true ? _GLF_IDENTITY(1, (1) ^ 0) : _GLF_FUZZED(19328))))), ~ (~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), true, false)), false, true))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.6)), _GLF_IDENTITY(bool(false), false || (bool(false)))))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), min((64), (64))) | 0, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((64), min((64), _GLF_IDENTITY((64), ((64)) / 1))), clamp(_GLF_IDENTITY((64), min((64), _GLF_IDENTITY((64), ((64)) / 1))), _GLF_IDENTITY((64), min((64), _GLF_IDENTITY((64), ((64)) / 1))), _GLF_IDENTITY((64), min((64), _GLF_IDENTITY((_GLF_IDENTITY(64, int(int(64)))), ((64)) / 1))))) | 0))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))).y), float(_GLF_FUZZED(4.8)), bool(false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(74135, 48271))))])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(74135, 48271))))])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(74135, 48271))))])))).y)))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(74135, 48271))))])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(74135, 48271))))])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(74135, 48271))))])))).y)))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(74135, 48271))))])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(74135, 48271))))])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(74135, 48271))))])))).y)))) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 1u * (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, 64)) / 1)), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, int(int(64))), (_GLF_IDENTITY(64, int(int(64)))) << ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), (true ? 0 << _GLF_IDENTITY(int(3), int(3)) : _GLF_FUZZED(58140)))) << _GLF_IDENTITY(int(4), int(4)))), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec4((subgroup_size), 1u, 0u, 1u))) | 0u))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   int i = _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)), clamp((_GLF_IDENTITY(0, (0) >> 0)), (_GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)), max((_GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)), ((_GLF_IDENTITY(0, (0) >> 0))) / 1))))) + 0)))) << 0, ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)), clamp((_GLF_IDENTITY(0, (0) >> 0)), (_GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)), max((_GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)), ((_GLF_IDENTITY(0, (0) >> 0))) / 1))))) + 0)))) << 0) + 0))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) ^ 0u) + 1, 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), mix(vec4((vec4(injectionSwitch, sqrt(0.0), 1.0))[0], (vec4(injectionSwitch, sqrt(0.0), 1.0))[1], (vec4(injectionSwitch, sqrt(0.0), 1.0))[2], (vec4(injectionSwitch, sqrt(0.0), 1.0))[3]), vec4(_GLF_FUZZED(float(false)), _GLF_FUZZED(-7.7), _GLF_FUZZED(121.009), _GLF_FUZZED((- -0.2))), bvec4(false, false, false, false))))).y))))))), true))) || false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, true, true))))), bool(bvec3(! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, true, true))))), false, true)))) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
}
