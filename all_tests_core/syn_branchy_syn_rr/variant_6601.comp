#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, sin(0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0), (true ? mat2x4(injectionSwitch, sin(0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0) : _GLF_FUZZED(mat2x4(-3067.8558, 4.5, 7.8, 810.420, -7.3, 143.412, 84.17, 529.221))))), vec2(vec3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, sin(0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0), (true ? mat2x4(injectionSwitch, sin(0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0) : _GLF_FUZZED(mat2x4(-3067.8558, 4.5, 7.8, 810.420, -7.3, 143.412, 84.17, 529.221))))), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, sin(0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0), (true ? mat2x4(injectionSwitch, sin(0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0) : _GLF_FUZZED(mat2x4(-3067.8558, 4.5, 7.8, 810.420, -7.3, 143.412, 84.17, 529.221))))))), 1.0)))), injectionSwitch))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(atan(vec2(8.2, 9936.1886), vec2(-8.0, _GLF_IDENTITY(9.2, min(9.2, 9.2)))))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))) || false), true && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))) && true, true && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), clamp(_GLF_IDENTITY(uvec2(subgroup_size, 0u), _GLF_IDENTITY((uvec2(subgroup_size, 0u)) * uvec2(1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY((uvec2(subgroup_size, 0u)) * uvec2(1u, 1u), (_GLF_IDENTITY((uvec2(subgroup_size, 0u)) * uvec2(1u, 1u), ((uvec2(subgroup_size, 0u)) * uvec2(1u, 1u)) << uvec2(0u, 0u))) / uvec2(1u, 1u))) * uvec2(1u, 1u), (_GLF_IDENTITY((_GLF_IDENTITY((uvec2(subgroup_size, 0u)) * uvec2(1u, 1u), (_GLF_IDENTITY((uvec2(subgroup_size, 0u)) * uvec2(1u, 1u), ((uvec2(subgroup_size, 0u)) * uvec2(1u, 1u)) << uvec2(0u, 0u))) / uvec2(1u, 1u))) * uvec2(1u, 1u), ((_GLF_IDENTITY((uvec2(subgroup_size, 0u)) * uvec2(1u, 1u), (_GLF_IDENTITY((uvec2(subgroup_size, 0u)) * uvec2(1u, 1u), ((uvec2(subgroup_size, 0u)) * uvec2(1u, 1u)) << uvec2(0u, 0u))) / uvec2(1u, 1u))) * uvec2(1u, 1u)) - uvec2(0u, 0u))) | ((_GLF_IDENTITY((uvec2(subgroup_size, 0u)) * uvec2(1u, 1u), (_GLF_IDENTITY((uvec2(subgroup_size, 0u)) * uvec2(1u, 1u), ((uvec2(subgroup_size, 0u)) * uvec2(1u, 1u)) << uvec2(0u, 0u))) / uvec2(1u, 1u))) * uvec2(1u, 1u))))), uvec2(subgroup_size, 0u), uvec2(subgroup_size, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size))))))) + subgroup_local_id, max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), 0u ^ (uint(uvec3(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / _GLF_IDENTITY(1u, (1u) << 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size))) << 0u)))))) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u), (uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (false ? _GLF_FUZZED((mat3x2(-58.34, -45.80, 4546.6388, 5.2, 35.73, -34.13) , workgroup_id)) : clamp(subgroup_size, subgroup_size, subgroup_size))), 1u), clamp(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u), uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u), uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size, subgroup_size), 1u))), _GLF_IDENTITY(((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))), (((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))) - 0u) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(135062u) : subgroup_size)))), subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(_GLF_IDENTITY(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u), uvec2(0u, 0u) + (uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) - 0u))), subgroup_id * subgroup_size)), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u))) | (1u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u))) | (1u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size))), uint(uint(min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u))) | (1u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)))))), 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 174155u), 0u), (uvec4(_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u))) | (1u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size))), uint(uint(min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u))) | (1u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)))))), 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 174155u), 0u)) >> uvec4(0u, 0u, 0u, 0u)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), clamp(_GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), min((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), clamp(_GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), min((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), clamp(_GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), min((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u)) - 0u)) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) : _GLF_FUZZED(subgroup_size))))))), subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) ^ 0u)), ~ (~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) | (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) ^ 0u))))))), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u) : _GLF_FUZZED(45952u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))), (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))) - 0u)) - 0u)) / ((((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) >> 0u))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(1u, (1u) << 0u))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))), (_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))) - 0u)) - 0u)) / ((((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) >> 0u)))))))))) / 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) - 0u))), subgroup_id * subgroup_size)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), 0u)), uint(uint(uint(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), 0u))))))))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) - 0u), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))), ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / 1u), ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), 0u + _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), clamp(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), _GLF_IDENTITY(uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)), (uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))) + 0u), uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))), _GLF_IDENTITY(((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))), (((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))) | (((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u)))))) | ((uint(uvec2(clamp(subgroup_size, subgroup_size, subgroup_size), 1u))))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u))) | (1u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), subgroup_id * subgroup_size)))))))) << 0u))) + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), 0u | ((((subgroup_local_id + 1) % subgroup_size)))) + 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y : _GLF_FUZZED(-6896.8015))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y : _GLF_FUZZED(-6896.8015))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * mat2(1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y : _GLF_FUZZED(-6896.8015))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y : _GLF_FUZZED(-6896.8015))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * mat2(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y : _GLF_FUZZED(-6896.8015))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y : _GLF_FUZZED(-6896.8015))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * mat2(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y : _GLF_FUZZED(-6896.8015))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, tan(0.0), log(1.0), cos(sqrt(0.0)), 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(64.96)), bool(false))), log(1.0), cos(sqrt(0.0)), 1.0, 1.0)))))).y : _GLF_FUZZED(-6896.8015))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * mat2(1.0))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true, true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true, true, true)), true), bvec2(bvec4(bvec2(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true, true, true)), true), true, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true, false)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))))).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))), true && (bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))))), (bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))))) && true)))) || false)), false, true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(0u | (uint(read_1 == read_2)), clamp(0u | (uint(read_1 == read_2)), 0u | (uint(read_1 == read_2)), 0u | (uint(read_1 == read_2))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))) || false)), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((true ? 4.3 : (13.34 * 91.33)))), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-53.47) : injectionSwitch.y))), bool(true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))), true && (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + _GLF_IDENTITY(1, max(1, 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, true)), false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
