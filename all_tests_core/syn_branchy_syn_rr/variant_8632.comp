#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 75:
     mat4x3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
     case 83:
     (atomicMax(workgroup_size, read_1) | uvec2(77226u, 69502u));
     case 0:
     case 20:
     case 13:
     case 19:
     case 26:
     case 56:
     atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
     break;
     case 85:
     {
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 87:
         {
          uvec3 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v[28];
         }
         for(bvec4 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[55]; (mat4x2(-51.68, 6.7, -0.8, 38.50, 61.52, -5832.7216, -0.6, -734.829) != mat4x2(-21.77, -19.94, -0.4, -429.103, 90.71, 105.196, 42.94, 75.60)); (+ mat4(-402.565, 0.3, 1.4, -1079.0089, 2.3, -6.9, 48.30, -7954.7601, -7698.3137, -611.950, 6130.3278, -82.43, -5961.6493, 6.4, 0.4, -26.67)))
          {
           mat3(-77.38, -5.7, -768.867, 626.417, 8824.6104, 23.38, -8653.5389, 4.7, 5.2);
           vec3(95.33, -601.708, -8.6);
           (uvec3(65071u, 32051u, 157707u) + 69556u);
           mat3(-3.0, 8.4, 784.937, 66.49, -0.5, -676.794, 36.85, -424.350, -3.2);
           ;
           mat4x2 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
           mat3x4 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
           int _GLF_SWITCH_0_11v[36], _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[11];
          }
         {
          bvec2 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
          float _GLF_SWITCH_0_17v;
          ;
          ivec3 _GLF_SWITCH_0_18v;
          tanh(vec4(5.7, -6.0, 197.343, 556.249));
          mat4x2 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[95];
          mat3x2(-5973.8155, -5.6, -59.15, 8176.0023, -0.2, 137.135);
         }
         vec3(362.583, -3193.7626, -6.7);
         while((subgroup_size < workgroup_id))
          {
           ;
           mat3(863.991, -59.68, 4439.9057, -3.6, 1272.0078, -76.76, 6639.2790, 1164.0897, 5711.8612);
           transpose(mat4x2(-237.719, -3.5, 40.88, -893.470, 7.9, 37.60, 2001.0170, 639.453));
           vec3(1.0, -595.618, 670.330);
           bool _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
           mat3(53.29, -90.95, 962.140, -3645.1901, -8.7, 585.551, -2.2, 17.76, -0.5);
           bvec3(false, false, true);
           uvec3(54103u, 40313u, 88289u);
          }
         for(vec2 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v; (ivec4(29265, -81733, -92886, -74707) == ivec4(-47245, 3452, -53215, 51906)); ivec4(-88159, 85863, 59577, -33472))
          {
           switch(_GLF_SWITCH((-67228 & (0 << _GLF_IDENTITY(int(2), int(2))))))
            {
             case 70:
             uvec3(18758u, 126746u, 118011u);
             case 0:
             mat4x3 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v;
             mat4x3 _GLF_SWITCH_0_29v;
             bvec2(true, false);
             transpose(mat3(-7.3, -6055.4104, -42.83, 7.3, -4.8, -430.421, 7209.7412, 58.13, -4.3));
             break;
             case 60:
             mat3x4(8465.1041, -3.8, 35.35, -6.2, -6629.8405, -485.545, 24.69, -4.5, -5.5, 7.6, -4748.0210, 5.9);
             case 29:
             mat4x2(-3.8, -5638.1717, -1431.1355, -701.739, 66.36, 5.0, 289.860, 83.95);
             default:
             1;
            }
          }
         subgroup_local_id;
         for(         transpose(mat4(-60.26, -2.4, -465.617, 4.5, 6621.6010, 38.38, -498.265, -9.8, -572.745, 40.50, -4.8, -91.18, -377.784, 732.932, -0.9, -7.2));
 (bvec3(false, true, true) != bvec3(false, true, false)); bvec3(false, true, false))
          {
           mat3x4(-1710.2855, -3934.5678, -8.3, -111.077, -6258.3558, 2303.9297, -7.6, 3.2, 769.512, 8566.7274, -2.3, 9.4);
           uvec4(41006u, 17834u, 157417u, 36649u);
           (-3.9 / mat4(mat3x4(-50.10, 8865.7223, -48.85, -96.12, 829.272, 46.80, 62.23, -7.8, 971.095, -0.7, -51.81, -196.391)));
           int _GLF_SWITCH_0_30v[71], _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
           mat2(-34.40, 3.0, -7.2, -8985.7205);
          }
         {
          (mat3(normalize(-0.7)) - mat3(-237.899, -2.5, 6.1, 5421.1370, 7.9, 8.5, 81.54, -33.53, 3896.9308));
          ivec4 _GLF_SWITCH_0_33v[57], _GLF_SWITCH_0_34v;
          (mat2(-4.4, -3.5, 226.364, -369.770) * vec2(690.387, -8.2));
          bvec4((mat3x2(-378.357, -3.9, -4710.2384, 247.175, 9.2, -2.9) == mat3x2(3.8, -1382.6192, -7.4, -7395.3074, -129.384, 8.5)));
          clamp(_GLF_SWITCH_0_34v, floatBitsToInt(-7.2), 76594);
          int _GLF_SWITCH_0_35v;
         }
         break;
         case 11:
         mat3x4(2.6, -4844.9067, 484.355, -1109.6961, -120.798, 13.67, -6.8, 21.94, 4.5, -6.9, 60.14, -9.2);
         case 14:
         ivec3(71593, -76594, 45009);
         default:
         1;
        }
      }
     }
     default:
     1;
    }
  }
}
