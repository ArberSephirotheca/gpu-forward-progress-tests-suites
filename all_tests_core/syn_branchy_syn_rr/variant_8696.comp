#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 mat2x3 _f0;
} ;

struct _GLF_struct_19 {
 _GLF_struct_18 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_16 {
 bool _f0;
 vec3 _f1;
 mat4 _f2;
 bool _f3;
 mat4x2 _f4;
 bvec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_15 {
 mat3x4 _f0;
 bvec2 _f1;
 uvec4 _f2;
 mat3 _f3;
 mat3 _f4;
 bvec4 _f5;
 uint _f6;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 bvec3 _f1;
 mat3x4 _f2;
 mat2 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_16 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_13 {
 mat3 _f0;
 mat4x2 _f1;
 mat2 _f2;
 ivec3 _f3;
 ivec2 _f4;
 vec2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 mat2x4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 ivec3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
 bool _f1;
 vec4 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_10 _f0;
 bvec2 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 ivec2 _f1;
 mat3x4 _f2;
 bvec4 _f3;
 ivec3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_20 {
 _GLF_struct_9 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_19 _f3;
 mat2x3 _f4;
 uint subgroup_local_id;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 bvec3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_3 {
 int _f0;
 ivec3 _f1;
 mat4x3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 mat4x2 _f1;
 int _f2;
 float _f3;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 mat2x4 _f1;
 vec4 _f2;
 vec4 _f3;
 bool _f4;
 vec4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 vec2 _f1;
 float _f2;
 uint subgroup_id;
 vec3 _f3;
 uvec4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 int _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 uvec2 _f1;
 _GLF_struct_6 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_4(vec2(1.0), _GLF_struct_0(mat4x2(1.0), vec2(1.0), 1.0, gl_SubgroupID, vec3(1.0), uvec4(1u), mat3(1.0)), _GLF_struct_1(vec4(1.0), mat2x4(1.0), vec4(1.0), vec4(1.0), true, vec4(1.0), vec2(1.0)), 1, _GLF_struct_2(bvec3(true), mat4x2(1.0), 1, 1.0), _GLF_struct_3(1, ivec3(1), mat4x3(1.0), vec2(1.0)), bvec4(true)), uvec2(1u), _GLF_struct_6(_GLF_struct_5(mat2x3(1.0)), bvec3(true), mat4x2(1.0)));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.z = _GLF_struct_replacement_7._f0._f1.subgroup_id;
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.w = subgroup_size;
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_9(_GLF_struct_8(ivec3(1), ivec2(1), mat3x4(1.0), bvec4(true), ivec3(1), bvec4(true))), _GLF_struct_14(_GLF_struct_10(mat4x2(1.0), true, vec4(1.0)), bvec2(true), _GLF_struct_11(bvec4(true), ivec3(1), mat4x3(1.0)), _GLF_struct_12(vec2(1.0), mat2x4(1.0), ivec3(1)), _GLF_struct_13(mat3(1.0), mat4x2(1.0), mat2(1.0), ivec3(1), ivec2(1), vec2(1.0), bvec4(true)), mat2x3(1.0)), _GLF_struct_17(bvec4(true), bvec3(true), mat3x4(1.0), mat2(1.0), _GLF_struct_15(mat3x4(1.0), bvec2(true), uvec4(1u), mat3(1.0), mat3(1.0), bvec4(true), 1u), _GLF_struct_16(true, vec3(1.0), mat4(1.0), true, mat4x2(1.0), bvec2(true), mat2(1.0)), bvec4(true)), _GLF_struct_19(_GLF_struct_18(mat2x3(1.0)), uvec2(1u)), mat2x3(1.0), gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.w + _GLF_struct_replacement_20.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.w + ((_GLF_struct_replacement_20.subgroup_local_id + 1) % GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.w);
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.x = next_virtual_gid;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.x], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.y = read_1;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_struct_replacement_20.subgroup_local_id + 1 < GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.w)
  {
   int i = 0;
   atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.x], uint(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.y == read_2) + 1, 4, 64, 4);
  }
 else
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.x], uint(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_13next_virtual_gidread_1subgroup_idsubgroup_size.y == read_2) + 1, 4, 64, 4);
  }
}
