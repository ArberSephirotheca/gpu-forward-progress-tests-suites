#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 uvec4 _f0;
 mat2x4 _f1;
 int _f2;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 bvec2 _f1;
 bool _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
 float _f1;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 _GLF_struct_8 _f1;
 mat3x4 _f2;
 bvec2 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 vec4 _f1;
 uvec3 _f2;
 uvec3 _f3;
 mat4 _f4;
 mat3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_5 {
 bool _f0;
 uvec4 _f1;
 mat4 _f2;
 ivec2 _f3;
 mat4 _f4;
 mat3x4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 mat3x4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
 bvec3 _f1;
 _GLF_struct_4 _f2;
 int _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_2 {
 int _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 mat2x3 _f1;
 uint _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 mat3x2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 uint read_2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_0 _f0;
 mat3 _f1;
 _GLF_struct_3 _f2;
 bool _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_11 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.9)), bvec2(true, false))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (false))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED((false ? -45.05 : 2899.3221))), bvec2(false, false))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))[1], max((injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(56248))), 1)), 1))], _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[1])), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))[1], max((injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(56248))), 1)), 1))], _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[1])), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))[1], max((injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(56248))), 1)), 1))], _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[1]))))), vec2(_GLF_FUZZED(((mat3x2(-9.2, _GLF_IDENTITY(-0.2, (-0.2) + 0.0), 9047.1980, 89.76, -214.616, -91.98) == mat3x2(-1.7, -62.48, -2893.7262, -31.03, _GLF_IDENTITY(-8802.2799, min(_GLF_IDENTITY(-8802.2799, float(mat2(-8802.2799, 0.0, 1.0, 1.0))), -8802.2799)), 7688.3381)) ? -322.072 : (877.112 * -58.26))), _GLF_FUZZED(798.652)), bvec2(false, false))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), float(_GLF_FUZZED(8.1)), bool(false))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), float(_GLF_FUZZED(8.1)), bool(false)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), abs(vec2(0.0, 0.0)) + _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), vec2(mat3x2((min(injectionSwitch, injectionSwitch)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), cos(0.0)))))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), float(_GLF_FUZZED(8.1)), bool(false)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), abs(vec2(0.0, 0.0)) + (min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), injectionSwitch)).y))), float(_GLF_FUZZED(8.1)), bool(false)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))) && true), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.8) : _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(sqrt(_GLF_IDENTITY(3283.4782, (3283.4782) + 0.0))) : _GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(cos(0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, exp(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, exp(0.0)))), 1.0))))))))))))) ^ uvec4(0u, 0u, 0u, 0u))) * _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), max(uvec4(1u, _GLF_IDENTITY(1u, 1u * (1u)), 1u, 1u), uvec4(1u, 1u, 1u, 1u)))) | (uvec4(1u, 1u, 1u, 1u))))))))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))) - uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))) - uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)), (true ? uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)) : _GLF_FUZZED(uvec3(104655u, 56890u, 110088u))))) ^ ((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(_GLF_IDENTITY(1u, (1u) << 0u), 1u, 1u)))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))) - uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))) - uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)), (true ? uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)) : _GLF_FUZZED(uvec3(104655u, 56890u, 110088u))))) ^ ((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(_GLF_IDENTITY(1u, (1u) << 0u), 1u, 1u)))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))) - uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))) - uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)), (true ? uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)) : _GLF_FUZZED(uvec3(104655u, 56890u, 110088u))))) ^ ((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(_GLF_IDENTITY(1u, (1u) << 0u), 1u, 1u))))))) | ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))) - uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))) - uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)), (true ? uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)) : _GLF_FUZZED(uvec3(104655u, 56890u, 110088u))))) ^ ((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(_GLF_IDENTITY(1u, (1u) << 0u), 1u, 1u))))))))) >> uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / (((0u | 1u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)), ((uint(2u))) | (_GLF_IDENTITY((uint(2u)), ((uint(2u))) << 0u))) ^ 0u))))))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u)))), clamp(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), 0u | (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) / 1u)))))), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u)))), clamp(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), 0u | (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) / 1u)))))), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u)))), clamp(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), 0u | (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) / 1u)))))), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u)))))))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u)))), clamp(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), 0u | (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) / 1u)))))), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))))))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, cos(sqrt(0.0)), 1.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), clamp(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 1.0)), 1.0, 1.0)), 1.0)), _GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))))))), mat3x2(mat4x3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(min(0.0, 0.0), 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0), (mat4x3(min(0.0, 0.0), 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4x3(min(0.0, 0.0), 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0), (mat4x3(min(0.0, 0.0), 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x3(min(0.0, 0.0), 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0), (mat4x3(min(0.0, 0.0), 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, 0.0, cos(sqrt(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, cos(sqrt(0.0)), 1.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 1.0, 1.0))))))))))))), injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, _GLF_IDENTITY(1u, (1u) + 0u)), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u)))))) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u)), (uvec3(1u, 1u, 1u)) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))), uvec3(0u, 0u, 0u) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))))) >> uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) ^ 0u)) ^ 0u), 1u), (uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) ^ 0u)) ^ 0u), 1u)) - uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(179069u))), 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))), uvec3(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))))), 0u)))) | ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, 1u))), max((_GLF_IDENTITY(1u, min(1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))))))), 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u)))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (~ (1u))))), 1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY((uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u), ((uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)) ^ uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u), 0u)), 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u)))))) ^ (_GLF_IDENTITY(uvec3(88586u, 75775u, 105737u), ~ (~ (uvec3(88586u, 75775u, 105737u)))) & uvec3(0u, 0u, 0u)))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(uvec3(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / (((0u | 1u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u))))))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u))), (_GLF_IDENTITY((1u) | _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u))), ~ (~ ((1u) | _GLF_IDENTITY(_GLF_IDENTITY((1u), ((1u)) / 1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u))))))) | 0u)), clamp(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec2(1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u))) | (1u)), 0u | (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) / 1u)))))), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-13.98) : _GLF_IDENTITY(0.0, (0.0) + 0.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))))), 1.0, 0.0, cos(sqrt(0.0)), 1.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), clamp(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))))))), mat3x2(mat4x3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, cos(sqrt(0.0)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, cos(sqrt(0.0)), 1.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 1.0, 1.0))))))))))))), injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) ^ 0u)) ^ 0u), 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))), uvec3(1u, 1u, 1u)))) ^ uvec3(0u, 0u, 0u)))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)))))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(1u, 1u)))), 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u)))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (~ _GLF_IDENTITY((1u), clamp((1u), (1u), _GLF_IDENTITY((1u), 0u | ((1u))))))))), 1u, 1u, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) * uvec4(1u, 1u, 1u, 1u))))), ~ (~ (clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), (1u) - 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) - 0u)) | (_GLF_IDENTITY(1u, (1u) - 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) / 1u))), 1u, 1u), (uvec3(1u, 1u, 1u)) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))), min((gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))), (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))))))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) ^ 0u)) ^ 0u), 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(1u, 1u)))), 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) - uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))), 1u))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u)))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (~ (1u))))), 1u, 1u, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, _GLF_IDENTITY(1u, 1u * (1u)), 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))))))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)))))))), (uvec3(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / (((0u | 1u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u)))))), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) / (((0u | 1u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u)))))))))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u ^ (1u)))), 1u))) * uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u))), ((1u) | _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(uvec3((1u), 1u, 0u))), (1u)))) | 0u)), clamp(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec2(1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u))) | (1u)), 0u | (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) / 1u)))))), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.0))))), 1.0, 0.0, cos(sqrt(0.0)), 1.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), clamp(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))))))), mat3x2(mat4x3(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, cos(sqrt(0.0)), 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-0.3))), 1.0))))), transpose(transpose(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, cos(sqrt(0.0)), 1.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 1.0, 1.0))))))))))))), injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u | (1u)))), 1u)), 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u | (1u)))), 1u)), 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))))))) | uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) ^ 0u), min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) ^ 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) ^ 0u)))) ^ 0u), 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(1u, 1u)))), 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u)))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (~ (1u))))), 1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), min((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u)))))), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u))))), ~ (~ (clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(1u, (1u) - 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) * 1u))), 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY((uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u), min((uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u), clamp((uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY((uvec3(1u, 1u, 1u)), clamp((uvec3(1u, 1u, 1u)), (uvec3(1u, 1u, 1u)), (uvec3(1u, 1u, 1u)))) ^ uvec3(0u, 0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY((uvec3(1u, 1u, 1u)), (false ? _GLF_FUZZED((uvec3(82150u, 95443u, 17999u).yxy * uvec3(136095u))) : (uvec3(1u, 1u, 1u)))) ^ uvec3(0u, 0u, 0u)))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))))))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u, _GLF_IDENTITY(1u, min(1u, 1u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) ^ 0u)) ^ 0u), 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) >> 0u), 1u)))), 1u, 1u))) * uvec3(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))), 1u))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u)))))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (~ (1u))))), 1u, 1u, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, 1u * (1u)), 1u))) * uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))))))))))) << uvec3(0u, 0u, 0u))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) && true)) && true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4((false) && true, true, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true, true)))))))), false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), (uvec3(6u)) + uvec3(0u, 0u, 0u)), uvec3(6u)), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (0u))), 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) + uvec3(0u, 0u, 0u)))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) / vec3(1.0, 1.0, 1.0)) + (vec3(1.0, 1.0, 1.0))), mat3(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(_GLF_IDENTITY(2.4, min(2.4, _GLF_IDENTITY(2.4, clamp(2.4, 2.4, 2.4)))), 9887.1828, 1700.4309)) : vec3(0.0, 0.0, 0.0))) + (vec3(1.0, 1.0, 1.0)))), (true ? (_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(_GLF_IDENTITY(2.4, min(2.4, _GLF_IDENTITY(2.4, clamp(2.4, 2.4, 2.4)))), 9887.1828, 1700.4309)) : vec3(0.0, 0.0, 0.0))) + (vec3(1.0, 1.0, 1.0)))) : _GLF_FUZZED(vec3(-6.7, -7215.7312, -972.886))))))))))) > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))), mix(vec3((normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))[0], _GLF_FUZZED(float(-61059)), (normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(max(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(1.0, 1.0, 1.0)), (max(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(1.0, 1.0, 1.0))) * mat3(1.0)))))[2]), vec3(_GLF_FUZZED(-6.8), (normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), mix(vec3(_GLF_FUZZED(-1982.2906), (_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))))[1], _GLF_FUZZED(-300.303)), vec3((_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))))[0], _GLF_FUZZED(169.733), (_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))[1], _GLF_FUZZED(-61.74)), bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), clamp(round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) + 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(max(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.0)), bool(false))), 1.0)), 1.0, 1.0)), vec3(mat3x2(max(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.0)), bool(false))), 1.0)), 1.0, 1.0)), 0.0, 0.0, 0.0))))), mix(vec3((normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))[0], _GLF_FUZZED(float(-61059)), (normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))[2]), vec3(_GLF_FUZZED(-6.8), (normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(1.0, 1.0, 1.0))))), vec3(1.0, 1.0, 1.0)))))[1], _GLF_FUZZED(-61.74)), bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), clamp(round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), min(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))) - 0.0), round(length(normalize(vec3(1.0, 1.0, 1.0))))))))) > injectionSwitch.y))), false || (! (((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))), mix(vec3((normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))[0], _GLF_FUZZED(float(-61059)), (normalize(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(8.7)), bool(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(float(mat2(mix(float(1.0), float(_GLF_FUZZED(8.7)), bool(false)), sqrt(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.6, 585.206)) : injectionSwitch)).x), 0.0)), (float(mat2(mix(float(1.0), float(_GLF_FUZZED(8.7)), bool(false)), sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) - log(1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), _GLF_IDENTITY(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec3(9.3, -2033.1022, 6.4)) : _GLF_IDENTITY(_GLF_IDENTITY(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), vec3(mat4x3(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), vec3(mat4x3(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), vec3(mat4x3(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), vec3(mat4x3(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), vec3(mat4x3(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), vec3(mat4x3(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), vec3(mat4x3(max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))))))))[2]), vec3(_GLF_FUZZED(-6.8), (normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))[1], _GLF_FUZZED(-61.74)), bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), clamp(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))))) > injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(3.7) : float(injectionSwitch.x))))), 0.0, 0.0))) > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : workgroup_base)))), (workgroup_base) | 0u), workgroup_base))) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(3.7) : float(injectionSwitch.x))))), 0.0, 0.0))) > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : workgroup_base)))), (workgroup_base) | 0u), workgroup_base))) / 1u, clamp((_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(3.7) : float(injectionSwitch.x))))), 0.0, 0.0))) > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : workgroup_base)))), (workgroup_base) | 0u), workgroup_base))) / 1u, (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(3.7) : float(injectionSwitch.x))))), 0.0, 0.0))) > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : workgroup_base)))), (workgroup_base) | 0u), workgroup_base))) / 1u, (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(3.7) : float(injectionSwitch.x))))), 0.0, 0.0))) > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : workgroup_base)))), (workgroup_base) | 0u), workgroup_base))) / 1u))) ^ 0u)), 1u))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) - 0u)) ^ 0u)) % subgroup_size), max(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) - 0u)) ^ 0u)) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) + 1) - 0u)) ^ 0u)) % subgroup_size), clamp(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) - 0u)) ^ 0u)) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) - 0u)) ^ 0u)) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) | (subgroup_local_id)) + 1) - 0u)) ^ 0u)) % subgroup_size), max(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) - 0u)) ^ 0u)) % subgroup_size), 0u ^ (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 0)))) | 0)) - 0u)) ^ 0u)) % subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) - 0u)) ^ 0u)) % subgroup_size)))) | (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) - 0u)) ^ 0u)) % subgroup_size))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) - 0u)) | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) - 0u)) ^ 0u)) % subgroup_size)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec4(bvec3(false, false, false), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), false))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat2x3(mat3(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, tan(0.0), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))).x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, exp(0.0), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2401.8605))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_0(bvec4(true), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], 4, 64, _GLF_IDENTITY(0, ~ (~ (0))))), mat3(1.0), _GLF_struct_3(mat2x3(1.0), _GLF_struct_1(ivec3(1), mat2x3(1.0), 1u, uvec4(1u)), _GLF_struct_2(1, mat3x4(1.0)), mat3x2(1.0), mat2x3(1.0)), true, _GLF_struct_7(uvec4(1u), bvec3(_GLF_IDENTITY(true, true && (true))), _GLF_struct_4(vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0))))), mat3x4(1.0), ivec3(1)), 1, _GLF_struct_5(true, uvec4(1u), mat4(1.0), ivec2(1), mat4(1.0), mat3x4(1.0), mat4x2(1.0)), _GLF_struct_6(mat2x3(1.0), vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), uvec3(_GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : 1u))), uvec3(1u), mat4(1.0), mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(max((vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(injectionSwitch))), mix(vec2((_GLF_IDENTITY((vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(injectionSwitch))))[0], (_GLF_IDENTITY((vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(injectionSwitch))))[1]), vec2(_GLF_FUZZED(-58.47), _GLF_FUZZED(float(13670))), bvec2(false, false)))), (max((vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(injectionSwitch))), mix(vec2((_GLF_IDENTITY((vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(injectionSwitch))))[0], (_GLF_IDENTITY((vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (vec2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(injectionSwitch))))[1]), vec2(_GLF_FUZZED(-58.47), _GLF_FUZZED(float(13670))), bvec2(false, false))))) * mat2(1.0)))), (vec2(1.0)) / vec2(1.0, 1.0)))), _GLF_struct_11(mat4x3(1.0), _GLF_struct_8(mat3x4(1.0), 1.0), mat3x4(1.0), bvec2(true), _GLF_struct_9(bvec2(true), bvec2(true), true, ivec4(1)), _GLF_struct_10(uvec4(1u), mat2x4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2x3(mat2(injectionSwitch, 0.0, 0.0)))))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), injectionSwitch)))[0], _GLF_FUZZED(-910.927)), vec2(_GLF_FUZZED((+ (_GLF_IDENTITY(- 3.8, (true ? - 3.8 : _GLF_FUZZED(-2.1)))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), sin(0.0), sin(sqrt(0.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, log(1.0), sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2x3(mat2(injectionSwitch, 0.0, 0.0)))))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), injectionSwitch)))[0], _GLF_FUZZED(-910.927)), vec2(_GLF_FUZZED((+ (_GLF_IDENTITY(- _GLF_IDENTITY(3.8, mix(float(_GLF_IDENTITY(3.8, 0.0 + (3.8))), float(_GLF_FUZZED(-5.1)), bool(false))), (true ? - 3.8 : _GLF_FUZZED(-2.1)))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), sin(0.0), sin(sqrt(0.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, log(1.0), sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.5) : injectionSwitch.x)), (false ? _GLF_FUZZED(8.1) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.5) : injectionSwitch.x)))) : _GLF_FUZZED(-249.365))))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(923.745)), vec2(_GLF_FUZZED(-5.2), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (true ? false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.5) : injectionSwitch.x)) : _GLF_FUZZED(-249.365))))) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-2.5), max(_GLF_FUZZED(-2.5), _GLF_IDENTITY(_GLF_FUZZED(-2.5), (_GLF_FUZZED(-2.5)) - 0.0))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.2), _GLF_FUZZED(-6232.2866)), bvec2(false, false))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.5) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5.5) : injectionSwitch.x))), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(-249.365), clamp(_GLF_FUZZED(-249.365), _GLF_FUZZED(-249.365), _GLF_FUZZED(-249.365))))))) > injectionSwitch.y))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), true, true), true))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.5, 281.166)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), min(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) << 0)) << _GLF_IDENTITY(0, (0) ^ 0)) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(float(false))), bool(false))) : _GLF_FUZZED(696.961)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(6.2, 4.6))))), min(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(6.2, 4.6))))), ((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(6.2, 4.6)))))) - vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(6.2, 4.6))))), mat2(1.0) * ((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(6.2, 4.6))))))))) / vec2(1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(6.2, 4.6))))) / vec2(1.0, 1.0))).x) + 0.0) > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(362.924) : injectionSwitch.x)) > injectionSwitch.y)) || (false)), false, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false))))), true, false, true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false)))), true)))))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false))))), true, false, true))), false, true)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), false)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2486.0248)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), exp(0.0))))))))
    return;
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_struct_replacement_12._f0.read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * 1), 1, 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) / 1))), _GLF_IDENTITY(4, int(int(4))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-637.928, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(-637.928, 0.0, 0.0, 0.0), (true ? mat2(-637.928, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(-1.2, -2753.6685, -9715.5844, -4.8))))), mix(float(_GLF_FUZZED(13.89)), float(float(_GLF_IDENTITY(mat2(-637.928, 0.0, 0.0, 0.0), (true ? mat2(-637.928, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(-1.2, -2753.6685, -9715.5844, -4.8)))))), bool(true)))), 9.4)) : injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false))), true, false, true)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((-689.750 - -803.601)))))).x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(_GLF_struct_replacement_12._f0.read_2, (_GLF_struct_replacement_12._f0.read_2) * 1u)) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-192.184, -9.8)) : injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-192.184, -9.8)) : injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-192.184, -9.8)) : injectionSwitch)).y))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7517.8706) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
}
