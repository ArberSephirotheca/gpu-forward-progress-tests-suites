#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY((false ? _GLF_FUZZED(827.546) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, abs(0.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, abs(0.0), 0.0)), clamp(dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, abs(0.0), 0.0)), dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, abs(0.0), 0.0)), dot(vec4(1.0, 0.0, length(0.0), 0.0), vec4(1.0, 0.0, abs(0.0), 0.0))))) * (_GLF_IDENTITY((false ? _GLF_FUZZED(827.546) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x), 0.0 + ((false ? _GLF_FUZZED(827.546) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))) > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) | (gl_NumWorkGroups)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u) : gl_WorkGroupSize.x))) / 1u), 1u, 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))))), (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) | 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), 1u, 1u))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0)))), injectionSwitch.x)))) ^ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(int(_GLF_IDENTITY((1), min((1), (1))))))) | _GLF_IDENTITY(((1)), min(_GLF_IDENTITY(((1)), int(ivec2(((1)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(((1)), (((1))) >> 0)))))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0)))), injectionSwitch.x)))) ^ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(int(_GLF_IDENTITY((1), min((1), (1))))))) | _GLF_IDENTITY(((1)), min(_GLF_IDENTITY(((1)), int(ivec2(((1)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(((1)), (((1))) >> 0)))))) % subgroup_size) | ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.7) : 1.0))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0)))), injectionSwitch.x)))) ^ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(int(_GLF_IDENTITY((1), min((1), (1))))))) | _GLF_IDENTITY(((1)), min(_GLF_IDENTITY(((1)), int(ivec2(((1)), int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(((1)), (((1))) >> 0)))))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(9051.4683), min(_GLF_FUZZED(9051.4683), _GLF_FUZZED(9051.4683)))), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) | (64)))), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), false, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), false, true))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), false, true))))), false)))))))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false, true)))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), true, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), true, false, false)), ! (! (bool(bvec4(! (_GLF_DEAD(false)), true, false, false)))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), true, false, false)), ! (! (bool(bvec4(! (_GLF_DEAD(false)), true, false, false)))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), true, false, false)), ! (! (bool(bvec4(! (_GLF_DEAD(false)), true, false, false))))))))), false))))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, (true) || false), false, _GLF_IDENTITY(false, false || (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, sqrt(1.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.x, sqrt(1.0), 0.0, 1.0), transpose(transpose(mat2(injectionSwitch.x, sqrt(1.0), 0.0, 1.0))))))))) < injectionSwitch.y)), true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), max(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))))))))), max(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), max(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), max(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))))))))), (_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), max(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u)))))))))) | (_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), max(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u)))))))))))))), clamp(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u))) << 0u) << 0u))), (uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u))) << 0u) << 0u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), 1u, 0u))), max(max(uint(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u)))))))))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), max(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u)))))))), (_GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 1u)), ~ (~ (uint(uvec3(0u, 0u, 1u))))))) - 0u)))), max(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(0u, 1u, 1u), (uvec3(0u, 1u, 1u)) >> uvec3(0u, 0u, 0u)))))))), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))))))))) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), max(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))))))))), min(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), max(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))))))))), _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), max(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u)))))))))))), 0u | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), max(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec3(0u, 1u, 1u))))))), uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), min(uvec3(virtual_gid, 1u, 0u), uvec3(virtual_gid, 1u, 0u)))), (uvec3(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), min(uvec3(virtual_gid, 1u, 0u), uvec3(virtual_gid, 1u, 0u))))) ^ uvec3(0u, 0u, 0u))))))))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(next_virtual_gid))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup)))))))), uint(uvec3(virtual_gid, 1u, 0u))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), uint(uvec3(0u, 1u, 1u))))), (uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), uint(uvec3(0u, 1u, 1u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec3(virtual_gid, 1u, 0u))), max(max(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), uint(uvec3(0u, 1u, 1u))))), (uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), uint(uvec3(0u, 1u, 1u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec3(virtual_gid, 1u, 0u))), max(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), uint(uvec3(0u, 1u, 1u))))), (uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), uint(uvec3(0u, 1u, 1u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec3(virtual_gid, 1u, 0u))))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))), 0u))), ~ (~ _GLF_IDENTITY((max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), uvec3(uvec3(uvec3(virtual_gid, 1u, 0u))))))), ((max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), min((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) | (0u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), ((0u)) >> 0u))) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), max(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))), min(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))), uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))))), uint(uvec3(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))))), 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))) | (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))) : _GLF_FUZZED(clamp((num_workgroup), subgroup_size, virtual_gid)))))), uint(uvec3(virtual_gid, 1u, 0u))))))))))) ^ _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) * 1u))), uint(uvec2((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))))), uint(uvec3(virtual_gid, 1u, 0u))), max(max(_GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))))), (uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u)))))) + 0u), uint(uvec3(virtual_gid, 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))), (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))) ^ 0u))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))))))))))) ^ 0u, 0u)))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) << 0u)) / 1u)) << 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 1u, 1u))))), uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(virtual_gid, 1u, 0u) : _GLF_FUZZED(uvec3(173266u, 103848u, 139220u)))))), max(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 0u))), _GLF_IDENTITY(max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))), ~ (~ (max(uint(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))), uint(uvec3(virtual_gid, 1u, 0u))))))))))))], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(45338) : _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54291) : 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(45338) : _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54291) : 0))))), 0 | (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(45338) : _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-54291) : 0))))))))), clamp(0, 0, 0)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true)))))))) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | _GLF_IDENTITY(0u, 0u ^ (0u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) < subgroup_size), false || _GLF_IDENTITY((! (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0)))), ~ (~ (int(1)))), _GLF_IDENTITY(int(1), (int(1)) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | 0), 0)))))), ~ _GLF_IDENTITY((~ (int(1))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((~ (int(1))), 1, 1, 0), clamp(ivec4((~ (int(1))), 1, 1, 0), ivec4((~ (int(1))), 1, 1, 0), ivec4((~ (int(1))), 1, 1, 0)))), int(int(int(_GLF_IDENTITY(ivec4((~ (int(1))), 1, 1, 0), clamp(ivec4((~ (int(1))), 1, 1, 0), ivec4((~ (int(1))), 1, 1, 0), ivec4((~ (int(1))), 1, 1, 0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-32970))), (int(_GLF_IDENTITY(1, min(1, 1)))) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0)))), ~ (~ (int(1)))), _GLF_IDENTITY(int(1), (int(1)) ^ 0)))), 0 | (~ (_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0)))), ~ (~ (int(1)))), _GLF_IDENTITY(int(1), (int(1)) ^ 0))))))))) << 0))), 1)) < subgroup_size)), (_GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) << 0)))), ~ (_GLF_IDENTITY(~ (int(1)), (~ (int(1))) + 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), (int(1)) ^ 0))))), 1)) < subgroup_size)), ! _GLF_IDENTITY((! ((! (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0)))), ~ (~ (int(1)))), _GLF_IDENTITY(int(1), (int(1)) ^ 0))))), 1)) < subgroup_size)))), ! (! ((! ((! (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) / 1))))), ~ (~ (int(1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (0 | 0))))), (int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)))) ^ 0))))), 1)) < subgroup_size))))))))) && true)))))
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), max((next_virtual_gid) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid))))], _GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(subgroup_id) : uint(read_1 == read_2))) + 1, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (false ? _GLF_FUZZED((-- i)) : _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 ^ (4))))))), min((_GLF_IDENTITY(4, max(4, 4))), (_GLF_IDENTITY(4, max(4, 4))))) / 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, max(4, 4))) | (_GLF_IDENTITY(4, max(4, 4))))) | (_GLF_IDENTITY(4, max(4, 4))))) / 1 : _GLF_FUZZED(91750)))), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(292.353, -9426.2254)) : injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) - vec2(0.0, 0.0)).y)), 1, 0)), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ~ (~ ((0)))))) ^ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), int(8)), (0 >> _GLF_IDENTITY(int(8), int(8))) | (0 >> _GLF_IDENTITY(int(8), int(8))))))), (ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((0), ~ (~ ((0)))))) ^ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), int(8)), (0 >> _GLF_IDENTITY(int(8), int(8))) | (0 >> _GLF_IDENTITY(int(8), int(8)))))))) ^ ivec4(0, 0, 0, 0)))) - 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (int(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1295.0205))))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / _GLF_IDENTITY(1, 0 ^ (1))), 1, 0))) - 0 : _GLF_IDENTITY(_GLF_FUZZED(55056), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(55056), (_GLF_IDENTITY(_GLF_FUZZED(55056), (_GLF_FUZZED(55056)) / 1)) >> 0)))))))), 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y))) << 0), 1, 0), min(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y))) << 0), 1, 0), ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y))) << 0), 1, 0)))), _GLF_IDENTITY(_GLF_IDENTITY((int(ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4((int(ivec4(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(326.396) : 1.0), (false ? _GLF_FUZZED(min(6131.4121, -0.3)) : (false ? _GLF_FUZZED(326.396) : 1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))) * 1.0))), 1, 0))), _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(0, max(0, 0)), 1), min(ivec4((int(ivec4(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(326.396) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0)), min(float(mat4x3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0)), _GLF_IDENTITY(float(mat4x3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0)), (float(mat4x3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0))) / 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))), (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))) : _GLF_FUZZED(-379.296))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) - 0.0)), transpose(transpose(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) - 0.0)))))), clamp(vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) - 0.0)), transpose(transpose(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) - 0.0)))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) - 0.0)), transpose(transpose(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) - 0.0)))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) - 0.0)), transpose(transpose(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) - 0.0))))))))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))) * 1.0))), 1, 0))), _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(0, max(0, 0)), 1), _GLF_IDENTITY(ivec4((int(ivec4(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(326.396) : 1.0), max((false ? _GLF_FUZZED(326.396) : 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(326.396) : 1.0), clamp((false ? _GLF_FUZZED(326.396) : 1.0), (false ? _GLF_FUZZED(326.396) : 1.0), (false ? _GLF_FUZZED(326.396) : 1.0)))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4)))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y), float(_GLF_FUZZED(-5.6)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))) * 1.0))), 1, 0))), _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(0, max(0, 0)), 1), clamp(_GLF_IDENTITY(ivec4((int(ivec4(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(326.396) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(4.3)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), 0.0)), mix(vec2((vec2(mat2(injectionSwitch, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(4.3)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), 0.0)))[0], (vec2(mat2(injectionSwitch, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(4.3)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), 0.0)))[1]), vec2(_GLF_FUZZED(3121.7995), _GLF_FUZZED(-76.52)), bvec2(false, false)))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))) * 1.0))), 1, 0))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97474) : 1))) / 1), _GLF_IDENTITY(0, max(0, 0)), 1), ivec4(0, 0, 0, 0) + (ivec4((int(ivec4(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(326.396) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), injectionSwitch.x), 0.0))).y, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), injectionSwitch.x), 0.0))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), injectionSwitch.x), 0.0))).y) * 1.0), 1.0, sqrt(1.0)))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), mat2(1.0) * (_GLF_IDENTITY(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (transpose(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, mix(float(_GLF_FUZZED((+ 95.23))), float(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y), bool(true)))))) * 1.0))), 1, 0))), _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), max(max(0, 0), max(0, 0)))), 1))), ivec4(_GLF_IDENTITY((int(ivec4(1, int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(326.396) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))) * 1.0)), mix(float(_GLF_FUZZED(-1.3)), float(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(326.396) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))) * 1.0)), (_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(326.396) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))) * 1.0))) - 0.0)), bool(true)))), 1, 0))), ((int(ivec4(1, int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(326.396) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))) * 1.0)), mix(float(_GLF_FUZZED(-1.3)), float(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(326.396) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))) * 1.0)), (_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(326.396) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))) * 1.0))) - 0.0)), bool(true)))), 1, 0)))) | 0), _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(0, max(0, 0)), 1), ivec4((int(ivec4(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(326.396) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.4)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), 0.0))).y))) * 1.0))), 1, 0))), _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(0, max(0, 0)), 1))))), (true ? ivec4((int(ivec4(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sin(vec2(0.0, 0.0))), (injectionSwitch))) * mat2(1.0)), 0.0, 1.0, 0.0, 0.0))))).y)), 1, 0))), 1, 0, 1) : _GLF_FUZZED(ivec4(-94935, -2112, 90958, 15713)))))) - 0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((int(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0))) - 0, (_GLF_IDENTITY((int(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0))) - 0, ~ (~ ((int(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0))) - 0)))) ^ 0), max((int(_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-387.228)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0), (ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-387.228)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0)) | ivec4(0, 0, 0, 0)))) - 0, (int(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) | 0, ((int(_GLF_ONE(1.0, injectionSwitch.y))) | 0) | 0))) / 1), 1, 0))) - 0)) : _GLF_FUZZED(55056)), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((int(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0))) - 0, (_GLF_IDENTITY((int(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0))) - 0, ~ (~ ((int(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0))) - 0)))) ^ 0), max((int(_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-387.228)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0), (ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-387.228)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0)) | ivec4(0, 0, 0, 0)))) - 0, (int(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) | 0, ((int(_GLF_ONE(1.0, injectionSwitch.y))) | 0) | 0))) / 1), 1, 0))) - 0)) : _GLF_FUZZED(55056)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY((int(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0))) - 0, (_GLF_IDENTITY((int(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0))) - 0, ~ (~ ((int(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0))) - 0)))) ^ 0), max((int(_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-387.228)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0), (ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-387.228)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), bool(true))), injectionSwitch.y)))), (int(_GLF_ONE(1.0, injectionSwitch.y))) | 0)) / 1), 1, 0)) | ivec4(0, 0, 0, 0)))) - 0, (int(ivec4(1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5303.5540)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) | 0, ((int(_GLF_ONE(1.0, injectionSwitch.y))) | 0) | 0))) / 1), 1, 0))) - 0)) : _GLF_FUZZED(55056))) >> (0 ^ 0))) | 0))))))))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false || (bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (bool(_GLF_DEAD(false))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))) && true))))), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
