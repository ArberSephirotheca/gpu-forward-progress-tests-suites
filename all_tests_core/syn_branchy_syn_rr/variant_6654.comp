#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * _GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0)))) * (injectionSwitch))), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || false))), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0)) * (injectionSwitch))), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0)) * (injectionSwitch))), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), log(vec2(1.0, 1.0)) + ((injectionSwitch))))), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || false))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0)) * (injectionSwitch))), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) || false)))))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), false))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))) || _GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.8))) > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(58.50) : injectionSwitch.x)) > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true))))))) || false, bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false)))))) || false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, min(1.0, 1.0))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))), true))) || false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-318.895)), vec2(_GLF_FUZZED(268.821), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), bool(bool(false))), true))).x < injectionSwitch.y))))), false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true)))))))))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true)))))))))), false || ((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true)))))))))))))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), false, false, false))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (false), ! _GLF_IDENTITY((! (true && (false))), ! (! ((! (true && (false)))))))), (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)), (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, true))) && true))), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x))) / sqrt(1.0)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0), mat2x3(mat3x4(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), false, false, false))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (false), ! _GLF_IDENTITY((! (true && (false))), ! (! ((! (true && (false)))))))), (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)), (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, true))) && true))), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x))) / sqrt(1.0)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0), mat2x3(mat3x4(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), false, false, false))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (false), ! _GLF_IDENTITY((! (true && (false))), ! (! ((! (true && (false)))))))), (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)), (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), true, true))) && true))), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec3((bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x))) / sqrt(1.0)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0), mat2x3(mat3x4(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), true))) && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), true))) && (_GLF_DEAD(false))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), true))) && (_GLF_DEAD(false))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), true))) && (_GLF_DEAD(false)), false || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), false || (true)), true))) && (_GLF_DEAD(false))))))), ! (! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))), true))) && (_GLF_DEAD(false)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(bool(true && (false))))) && true)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(bool(true && (false))))) && true)), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(bool(true && (false))))) && true)), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(bool(true && (false))))) && true)), (injectionSwitch.x > injectionSwitch.y)))), false, false, false)))))))))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(510.883, 2.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! _GLF_IDENTITY((! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(12.45) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))) || false)), false || (_GLF_IDENTITY((! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) || false)), ! (! ((! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) || false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(bool(_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.9)), bool(false))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))) || false), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), gl_WorkGroupID))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))), false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), true, true, false)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), true, true, false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), true, true, false)))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), true, true, false))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size)))) << 0u) | 0u), max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size) | 0u, min((subgroup_id * subgroup_size) | 0u, (subgroup_id * subgroup_size) | 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_id * subgroup_size) | 0u, min((subgroup_id * subgroup_size) | 0u, (subgroup_id * subgroup_size) | 0u))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_id * subgroup_size) | 0u, min((subgroup_id * subgroup_size) | 0u, (subgroup_id * subgroup_size) | 0u))), (~ (_GLF_IDENTITY((subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), min((subgroup_id * subgroup_size) | 0u, (subgroup_id * subgroup_size) | 0u)))) / 1u), ~ (_GLF_IDENTITY((subgroup_id * subgroup_size) | 0u, min((subgroup_id * subgroup_size) | 0u, (subgroup_id * subgroup_size) | 0u)))))))) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), subgroup_local_id, subgroup_local_id))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u + (subgroup_local_id), (0u + (subgroup_local_id)) | (0u + (subgroup_local_id)))), (~ (_GLF_IDENTITY(0u + (subgroup_local_id), (0u + (subgroup_local_id)) | (0u + (subgroup_local_id))))) ^ 0u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)).x)) ^ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u + (subgroup_local_id), (0u + (subgroup_local_id)) | (0u + (subgroup_local_id)))), (~ (_GLF_IDENTITY(0u + (subgroup_local_id), (0u + (subgroup_local_id)) | (0u + (subgroup_local_id))))) ^ 0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), min(_GLF_IDENTITY(4, (4) >> (0 << _GLF_IDENTITY(int(5), int(5)))), 4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED((- -12.47))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid])), (true ? _GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid])) : _GLF_FUZZED(atomicMin(workgroup_base, subgroup_size)))), clamp(_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u) * (buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], 1u * _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid]))))))), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid]))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid]))) << 0u, ((_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid]))) << 0u) | ((_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid]))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid]))) << 0u, ((_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid]))) << 0u) + (0u & 60845u))))))), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), 0 + (~ (64)))) | (~ (64))))), 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, min(0, 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) || (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) || (false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) || (false)), ((_GLF_IDENTITY(false, bool(bool(false))) || (false))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) - 0))), clamp(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), clamp((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))))), min(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (1))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1))))), 1)), clamp(int(ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1))))), 1)), int(ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1))))), 1)), int(ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1))))), 1)))))))) / 1), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | 0u, (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))) | 0u) >> 0u))) ^ 0u) + 1), (subgroup_local_id + 1)))) | 0u) >> 0u) < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) >> _GLF_IDENTITY(int(6), int(6))) * (1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0)), injectionSwitch)), mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(47.65), _GLF_FUZZED(-801.122)), bvec2(false, false))), vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))), injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(28763)))]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-22.12), 1.0 * (_GLF_FUZZED(-22.12)))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(28763)))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false)))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(vec2(-69.49, -5.8).s)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4((injectionSwitch), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(abs(0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (true ? _GLF_IDENTITY(mat4((injectionSwitch), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(abs(0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4((injectionSwitch), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(abs(0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.5) : _GLF_ZERO(0.0, injectionSwitch.x))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) : _GLF_FUZZED(mat4(-8.5, -32.15, 7.6, -7471.8370, -22.98, 14.95, 3.8, -149.937, 81.51, 3880.0785, -4.3, -58.56, 65.17, -72.53, 97.10, 1.2))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false)))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch, injectionSwitch))) * mat2(1.0)))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), bool(bvec2(false || (_GLF_IDENTITY(false, false || (false))), false)))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(2756.1593)), vec2(_GLF_FUZZED(-6735.0916), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))), mix(vec2(_GLF_FUZZED(-2.0), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-7.7) : (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)))), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4(_GLF_FUZZED(50.38), _GLF_FUZZED(-51.19), (vec4(injectionSwitch, 0.0, 0.0))[2], (vec4(injectionSwitch, 0.0, 0.0))[3]), vec4((vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, sqrt(1.0)))), 0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], (vec4(injectionSwitch, 0.0, 0.0))[1], _GLF_FUZZED(-9.9), _GLF_FUZZED(-9539.9025)), bvec4(true, true, false, false)))), max(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4(_GLF_FUZZED(_GLF_IDENTITY(50.38, clamp(50.38, _GLF_IDENTITY(50.38, (50.38) - 0.0), 50.38))), _GLF_FUZZED(-51.19), (vec4(injectionSwitch, 0.0, 0.0))[2], (vec4(injectionSwitch, 0.0, 0.0))[3]), vec4((vec4(injectionSwitch, 0.0, 0.0))[0], (vec4(injectionSwitch, 0.0, 0.0))[1], _GLF_FUZZED(-9.9), _GLF_FUZZED(-9539.9025)), bvec4(true, true, false, _GLF_IDENTITY(false, false || (false)))))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4(_GLF_FUZZED(50.38), _GLF_FUZZED(-51.19), (vec4(injectionSwitch, 0.0, 0.0))[2], (vec4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0)))))[3]), vec4((vec4(injectionSwitch, 0.0, 0.0))[0], (vec4(injectionSwitch, 0.0, 0.0))[1], _GLF_FUZZED(-9.9), _GLF_FUZZED(-9539.9025)), bvec4(true, true, false, false))))))))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(52.81, 9.9)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(_GLF_IDENTITY(bool(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(52.81, 9.9)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), ! (! (bool(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(52.81, 9.9)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))))))), false, _GLF_IDENTITY(true, (true) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) >> _GLF_IDENTITY(int(6), int(6))) * (1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0)), injectionSwitch)), mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(47.65), _GLF_FUZZED(-801.122)), bvec2(false, false))), vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))), injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(28763)))]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-22.12), 1.0 * (_GLF_FUZZED(-22.12)))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(28763)))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false)))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(vec2(-69.49, -5.8).s)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4((injectionSwitch), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(abs(0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (true ? _GLF_IDENTITY(mat4((injectionSwitch), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(abs(0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4((injectionSwitch), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(abs(0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.5) : _GLF_ZERO(0.0, injectionSwitch.x))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) : _GLF_FUZZED(mat4(-8.5, -32.15, 7.6, -7471.8370, -22.98, 14.95, 3.8, -149.937, 81.51, 3880.0785, -4.3, -58.56, 65.17, -72.53, 97.10, 1.2))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false)))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch, injectionSwitch))) * mat2(1.0)))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), bool(bvec2(false || (_GLF_IDENTITY(false, false || (false))), false)))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(2756.1593)), vec2(_GLF_FUZZED(-6735.0916), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))), mix(vec2(_GLF_FUZZED(-2.0), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-7.7) : (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)))), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4(_GLF_FUZZED(50.38), _GLF_FUZZED(-51.19), (vec4(injectionSwitch, 0.0, 0.0))[2], (vec4(injectionSwitch, 0.0, 0.0))[3]), vec4((vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, sqrt(1.0)))), 0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], (vec4(injectionSwitch, 0.0, 0.0))[1], _GLF_FUZZED(-9.9), _GLF_FUZZED(-9539.9025)), bvec4(true, true, false, false)))), max(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4(_GLF_FUZZED(_GLF_IDENTITY(50.38, clamp(50.38, _GLF_IDENTITY(50.38, (50.38) - 0.0), 50.38))), _GLF_FUZZED(-51.19), (vec4(injectionSwitch, 0.0, 0.0))[2], (vec4(injectionSwitch, 0.0, 0.0))[3]), vec4((vec4(injectionSwitch, 0.0, 0.0))[0], (vec4(injectionSwitch, 0.0, 0.0))[1], _GLF_FUZZED(-9.9), _GLF_FUZZED(-9539.9025)), bvec4(true, true, false, _GLF_IDENTITY(false, false || (false)))))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4(_GLF_FUZZED(50.38), _GLF_FUZZED(-51.19), (vec4(injectionSwitch, 0.0, 0.0))[2], (vec4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0)))))[3]), vec4((vec4(injectionSwitch, 0.0, 0.0))[0], (vec4(injectionSwitch, 0.0, 0.0))[1], _GLF_FUZZED(-9.9), _GLF_FUZZED(-9539.9025)), bvec4(true, true, false, false))))))))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(52.81, 9.9)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(_GLF_IDENTITY(bool(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(52.81, 9.9)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), ! (! (bool(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(52.81, 9.9)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))))))), false, _GLF_IDENTITY(true, (true) && true))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0) >> _GLF_IDENTITY(int(6), int(6))) * (1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0)), injectionSwitch)), mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), (ivec4(1, 1, 1, 0)) | ivec4(0, 0, 0, 0)))) : _GLF_FUZZED(-41395)))]), vec2(_GLF_FUZZED(47.65), _GLF_FUZZED(-801.122)), bvec2(false, false))), vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))), injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(28763), (_GLF_FUZZED(28763)) | (_GLF_FUZZED(28763)))))]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-22.12), 1.0 * (_GLF_FUZZED(-22.12)))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) + tan(log(vec2(1.0, 1.0))))[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(28763)))]), vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(-22.12)), bvec2(true, false)))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(vec2(-69.49, -5.8).s)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4((injectionSwitch), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(abs(0.0)), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0))), cos(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (true ? _GLF_IDENTITY(mat4((injectionSwitch), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(abs(0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4((injectionSwitch), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(abs(0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) ? _GLF_FUZZED(-5.5) : _GLF_ZERO(0.0, injectionSwitch.x))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) : _GLF_FUZZED(mat4(-8.5, -32.15, 7.6, -7471.8370, -22.98, 14.95, 3.8, -149.937, 81.51, 3880.0785, -4.3, -58.56, 65.17, -72.53, 97.10, 1.2))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(_GLF_IDENTITY(true, (true) && true), false)))) + vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(272.067))), 0.0, 1.0, 0.0, 1.0, 1.0), (mat3x2(_GLF_IDENTITY((0.0) / 1.0, (true ? (0.0) / 1.0 : _GLF_FUZZED(272.067))), 0.0, 1.0, 0.0, 1.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0))))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), bool(bvec2(false || (_GLF_IDENTITY(false, false || (false))), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat2x3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0))), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(2756.1593)), vec2(_GLF_FUZZED(-6735.0916), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))), mix(vec2(_GLF_FUZZED(-2.0), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-7.7) : (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)))), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4(_GLF_FUZZED(50.38), _GLF_FUZZED(-51.19), (vec4(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))), 0.0))[2], (vec4(injectionSwitch, 0.0, 0.0))[3]), vec4((vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, sqrt(1.0)))), 0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], (vec4(injectionSwitch, 0.0, 0.0))[1], _GLF_FUZZED(-9.9), _GLF_FUZZED(-9539.9025)), bvec4(true, true, false, false)))), max(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4(_GLF_FUZZED(_GLF_IDENTITY(50.38, clamp(50.38, _GLF_IDENTITY(50.38, (50.38) - 0.0), 50.38))), _GLF_FUZZED(-51.19), (vec4(injectionSwitch, 0.0, 0.0))[2], (vec4(injectionSwitch, 0.0, 0.0))[3]), vec4((vec4(injectionSwitch, 0.0, 0.0))[0], (vec4(injectionSwitch, 0.0, 0.0))[1], _GLF_IDENTITY(_GLF_FUZZED(-9.9), mix(float(_GLF_FUZZED((-5029.7130 / -3.0))), float(_GLF_FUZZED(-9.9)), bool(true))), _GLF_FUZZED(-9539.9025)), bvec4(true, true, false, _GLF_IDENTITY(false, false || (false)))))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4(_GLF_FUZZED(50.38), _GLF_FUZZED(-51.19), (vec4(injectionSwitch, 0.0, 0.0))[2], (vec4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0)))))[3]), vec4((vec4(injectionSwitch, 0.0, 0.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0))[1], _GLF_FUZZED(-9.9), _GLF_FUZZED(-9539.9025)), bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, false))))))))).x, mix(float(_GLF_FUZZED((10.08 / -6.2))), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat2x3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0))), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(2756.1593)), vec2(_GLF_FUZZED(-6735.0916), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))), mix(vec2(_GLF_FUZZED(-2.0), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-7.7) : (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)))), bvec2(true, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4(_GLF_FUZZED(50.38), _GLF_FUZZED(-51.19), (vec4(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))), 0.0))[2], (vec4(injectionSwitch, 0.0, 0.0))[3]), vec4((vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, sqrt(1.0)))), 0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], (vec4(injectionSwitch, 0.0, 0.0))[1], _GLF_FUZZED(-9.9), _GLF_FUZZED(-9539.9025)), bvec4(true, true, false, false)))), max(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4(_GLF_FUZZED(_GLF_IDENTITY(50.38, clamp(50.38, _GLF_IDENTITY(50.38, (50.38) - 0.0), 50.38))), _GLF_FUZZED(-51.19), (vec4(injectionSwitch, 0.0, 0.0))[2], (vec4(injectionSwitch, 0.0, 0.0))[3]), vec4((vec4(injectionSwitch, 0.0, 0.0))[0], (vec4(injectionSwitch, 0.0, 0.0))[1], _GLF_IDENTITY(_GLF_FUZZED(-9.9), mix(float(_GLF_FUZZED((-5029.7130 / -3.0))), float(_GLF_FUZZED(-9.9)), bool(true))), _GLF_FUZZED(-9539.9025)), bvec4(true, true, false, _GLF_IDENTITY(false, false || (false)))))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), mix(vec4(_GLF_FUZZED(50.38), _GLF_FUZZED(-51.19), (vec4(injectionSwitch, 0.0, 0.0))[2], (vec4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0)))))[3]), vec4((vec4(injectionSwitch, 0.0, 0.0))[0], (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0))[1], _GLF_FUZZED(-9.9), _GLF_FUZZED(-9539.9025)), bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, false))))))))).x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(52.81, 9.9)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), bool(_GLF_IDENTITY(bool(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / _GLF_ONE(1.0, injectionSwitch.y))), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(52.81, 9.9)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, 1.0, 1.0)), (true ? transpose(mat2(injectionSwitch, 1.0, 1.0)) : _GLF_FUZZED(mat2(1.4, 449.650, -4405.9456, -7.4))))))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, 1.0, 1.0)), (true ? transpose(mat2(injectionSwitch, 1.0, 1.0)) : _GLF_FUZZED(mat2(1.4, 449.650, -4405.9456, -7.4))))))), min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, 1.0, 1.0)), (true ? transpose(mat2(injectionSwitch, 1.0, 1.0)) : _GLF_FUZZED(mat2(1.4, 449.650, -4405.9456, -7.4))))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, 1.0, 1.0)), (true ? transpose(mat2(injectionSwitch, 1.0, 1.0)) : _GLF_FUZZED(mat2(1.4, 449.650, -4405.9456, -7.4))))))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, 1.0, 1.0)), (true ? transpose(mat2(injectionSwitch, 1.0, 1.0)) : _GLF_FUZZED(mat2(1.4, 449.650, -4405.9456, -7.4)))))))))))).y))))), ! (! (bool(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(52.81, 9.9)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(52.81, 9.9)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(52.81, 9.9)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-22.12)), bvec2(true, false))), injectionSwitch, injectionSwitch)))).x) / 1.0)) / 1.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))))))), false, _GLF_IDENTITY(true, (true) && true)))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(0, (0) | (0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true)))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), max(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u)))))) + (read_1)), clamp(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)))))), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 0u ^ (_GLF_FUZZED(virtual_gid))) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || false))))), (! (bool(bool(false)))) && true)))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), max(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u)))))) + (read_1)), clamp(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + _GLF_IDENTITY((read_1), 1u * (_GLF_IDENTITY((read_1), ((read_1)) ^ 0u)))), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), max(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) << 0u), _GLF_FUZZED(virtual_gid))) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)))))), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + _GLF_IDENTITY((read_1), (1u & 1u) * ((read_1)))), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true))), true && (bool(! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true))))))))))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, _GLF_IDENTITY((0u ^ 0u) + (read_1), ~ (~ ((0u ^ 0u) + (read_1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), max(_GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), (_GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1))) ^ 0u))), max(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u)))))) + (read_1)), clamp(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)))))), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + _GLF_IDENTITY((read_1), ((read_1)) << 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true)))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), (_GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1))) + (0u ^ 0u)), 0u | (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true)))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), (_GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1))) + (0u ^ 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), max(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (_GLF_IDENTITY(0u, max(0u, 0u)) ^ 0u) + (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u))))), (0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u)))))) | (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u))))), (0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u)))))) << 0u)))) + (read_1)), clamp(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + _GLF_IDENTITY((read_1), 0u ^ (_GLF_IDENTITY((read_1), ((read_1)) | ((read_1)))))), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)))))), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), (bool(bool(false))) || false), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true)))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), min(_GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)))), max(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u)))))) + (read_1)), clamp(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)), (0u ^ _GLF_IDENTITY(0u, 0u | (0u))) + (read_1)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true)))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)))))), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true)))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), max(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u)))))) + (read_1)), clamp(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) + 0u) ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (_GLF_IDENTITY(0u ^ 0u, max(_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) + 0u), 0u ^ 0u))) + (read_1)))))), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)) : _GLF_FUZZED(packUnorm2x16(injectionSwitch)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true)))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) * 1u) + (read_1)), max(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u)))))) + (read_1)), clamp(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) | 0u) + (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) | 0u), read_1)), (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)))))), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) && true)))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), max(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u)))))) + (read_1)), clamp(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)))))), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1)), _GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(read_1, (0u ^ 0u) + (read_1))))) / 1u))))))), (read_1) | (0u ^ 0u)) == _GLF_IDENTITY(read_2, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))))).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6195.0595)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, determinant(mat4(1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_DEAD(false))), true, true, false)), bool(bvec3(bool(bvec4((! (_GLF_DEAD(false))), true, true, false)), true, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))))), false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
