#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.0)), _GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, false || (false)))) && true))) > injectionSwitch.y))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.0)), _GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, false || (false)))) && true))) > injectionSwitch.y)))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(82.80)), vec2(_GLF_FUZZED(-815.109), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-90.53) : injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[1]), vec2(_GLF_FUZZED(-826.657), _GLF_FUZZED(6463.7386)), bvec2(false, false))))).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), ! (! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))))), ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - 0.0))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
        return;
       return;
      }
     return;
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))) || false))), (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))) || false))), (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))) || false))), (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (false) && true)) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)))), false || (bool(bvec4(false, false, false, _GLF_IDENTITY(false, false || (false)))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0))).x > injectionSwitch.y)) || false))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0))).x > injectionSwitch.y)) || false))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), min(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u | 0u) + (0u)) | _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id)))), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u | 0u) + (0u)) | _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id)))), 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), min(_GLF_IDENTITY(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base)) + subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u))) | (subgroup_local_id))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))), (~ (subgroup_id * subgroup_size)) >> 0u))) + ((subgroup_local_id + 1) % subgroup_size)) ^ _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) << 0u), 0u, 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bool(false)), true, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bool(false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true))), true, false, true)), true))), false, false))), true && _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), true, false, true))), ! (! _GLF_IDENTITY(((bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, true)))), bool(bool(((bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, true)))))))))))), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))))) > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(27631) : 0, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(27631) : 0, max(_GLF_IDENTITY(false ? _GLF_FUZZED(27631) : 0, (true ? false ? _GLF_FUZZED(27631) : 0 : _GLF_FUZZED(11731))), false ? _GLF_FUZZED(27631) : 0)), max(false ? _GLF_IDENTITY(_GLF_FUZZED(27631), (_GLF_FUZZED(27631)) | 0) : 0, false ? _GLF_FUZZED(27631) : 0))) << 0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY(_GLF_IDENTITY((4), 0 + ((4))), ~ (~ ((4)))))))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) ^ 0)]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743)))), (false ? _GLF_FUZZED(45.42) : (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0), (true ? vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat3(-9.3, 14.69, 2989.1211, -4013.2589, -1331.7923, 6.6, 63.44, -3.8, -21.34))) : 0.0))) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(_GLF_IDENTITY(8530.2278, max(8530.2278, 8530.2278))) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0) : _GLF_FUZZED((vec4(0.8, -7772.1343, 42.88, 898.341) - 2.6))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0), clamp(vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0))), vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0))), (true ? vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, (1.0) * 1.0)), 1.0, 1.0, 0.0)), 1.0) : _GLF_FUZZED((vec4(0.8, -7772.1343, 42.88, 898.341) - 2.6))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0), (true ? vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), _GLF_IDENTITY((false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743)), min((false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743)), _GLF_IDENTITY((false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743)), max((false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743)), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743)))))) : _GLF_FUZZED(6.5)))))), 0.0, determinant(mat4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0) : _GLF_FUZZED((vec4(0.8, -7772.1343, 42.88, 898.341) - 2.6)))))))), _GLF_FUZZED(-683.362)), clamp(vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)), vec2(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), clamp(_GLF_FUZZED(1575.3743), _GLF_IDENTITY(_GLF_FUZZED(1575.3743), clamp(_GLF_FUZZED(1575.3743), _GLF_FUZZED(1575.3743), _GLF_FUZZED(1575.3743))), _GLF_FUZZED(1575.3743))), _GLF_FUZZED(-683.362)), _GLF_IDENTITY(vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)), min(vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)), vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)))))), bvec2(false, false))).x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) ^ 0)]), mix(vec2(_GLF_FUZZED(-81.51), _GLF_FUZZED((+ 32.13))), vec2((vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) ^ 0)]))[0], (vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) ^ 0)]))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (1.0)), 1.0)), 0.0)), 1.0), (true ? vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0) : _GLF_FUZZED((vec4(0.8, -7772.1343, 42.88, 898.341) - 2.6))))), max(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_IDENTITY(_GLF_FUZZED(1575.3743), (_GLF_FUZZED(1575.3743)) / exp(0.0)))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0), (true ? vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0) : _GLF_FUZZED((vec4(0.8, -7772.1343, 42.88, 898.341) - 2.6))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(0.0), bool(true)))) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.3) : 0.0)))), 1.0), (true ? vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0) : _GLF_FUZZED((vec4(0.8, _GLF_IDENTITY(-7772.1343, (true ? -7772.1343 : _GLF_FUZZED(-4.7))), 42.88, 898.341) - 2.6)))))))), _GLF_FUZZED(-683.362)), clamp(vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)), vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)), _GLF_IDENTITY(vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)), min(vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)), vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)))))), bvec2(_GLF_IDENTITY(false, true && (false)), false))).x > injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)) || (true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) ^ 0)]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0), (true ? vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 1.0, 1.0, 0.0)), 1.0) : _GLF_FUZZED((vec4(0.8, -7772.1343, 42.88, 898.341) - 2.6))))), max(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(_GLF_IDENTITY(0.0, 1.0 * (0.0))) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(_GLF_IDENTITY(1575.3743, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(1575.3743, _GLF_IDENTITY(float(mat4(1575.3743, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-7.7, (true ? -7.7 : _GLF_FUZZED(0.3)))) : float(mat4(1575.3743, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sin(0.0), 0.0)))))))))))), 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5443.1993) : 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0), (true ? vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0)), _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 1.0)))) : _GLF_FUZZED((vec4(0.8, -7772.1343, 42.88, 898.341) - 2.6))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0), (true ? vec4(_GLF_IDENTITY(_GLF_FUZZED(1575.3743), exp(0.0) * (_GLF_IDENTITY(_GLF_FUZZED(1575.3743), (false ? _GLF_FUZZED(8530.2278) : _GLF_FUZZED(1575.3743))))), 0.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(49.15)), float(0.0), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0)), 1.0) : _GLF_FUZZED((vec4(0.8, -7772.1343, 42.88, 898.341) - 2.6)))))))), _GLF_FUZZED(-683.362)), clamp(vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)), vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)), _GLF_IDENTITY(vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)), min(vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)), vec2(_GLF_FUZZED(1575.3743), _GLF_FUZZED(-683.362)))))), bvec2(false, false))).x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1)) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | (read_1)) == _GLF_IDENTITY(read_2, (read_2) << 0u)), max(uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) ^ 0u), read_1, read_1)) == read_2), uint(read_1 == read_2))), uint(read_1 == read_2))) + _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)), max(uint(read_1 == read_2), uint(read_1 == read_2))) + _GLF_IDENTITY(1, (1) >> 0)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)), max(uint(read_1 == read_2), uint(read_1 == read_2))) + _GLF_IDENTITY(1, (1) >> 0)), ~ (~ ((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false), false || (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)))), max(uint(read_1 == read_2), uint(read_1 == read_2))) + _GLF_IDENTITY(1, (1) >> 0))))))) >> _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)))))), uint(0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)))))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, bool(bvec3((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))) && true, false, false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true)) && true, bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))) && true, false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))), bool(bvec3((_GLF_IDENTITY(false, (false) && true)) && true, false, false))))), false || ((bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true)) && true, bool(bvec3((_GLF_IDENTITY(false, (false) && true)) && true, false, false)))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true)) && true, bool(bvec3((_GLF_IDENTITY(false, (false) && true)) && true, false, false)))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), (_GLF_IDENTITY((false), bool(bool((false))))) && true) && true)) && true, bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))) && true)) && true, false, false))))))), false || ((bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true)) && true, bool(bvec3((_GLF_IDENTITY(false, (false) && true)) && true, false, false))))))))))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(-37767, (-37767) | (-37767))))), float(injectionSwitch.x), bool(true)), (false ? _GLF_FUZZED(floor(3.7)) : mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(-37767, (-37767) | _GLF_IDENTITY((-37767), 0 ^ ((-37767))))))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), true, false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> 0u) + _GLF_IDENTITY(1, ~ (~ (1))), 0u + (_GLF_IDENTITY(uint(read_1 == read_2), min(uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), (false ? _GLF_FUZZED(packSnorm2x16(vec2(-3675.9723, -312.328))) : (uint(read_1 == read_2)))) >> 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), (false ? _GLF_FUZZED(packSnorm2x16(vec2(-3675.9723, -312.328))) : (uint(read_1 == read_2)))) >> 0u))))) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, (true ? _GLF_IDENTITY((4) / 1, (_GLF_IDENTITY((4) / 1, ((4) / 1) + _GLF_IDENTITY(0, max(0, 0)))) | 0) : _GLF_FUZZED((-10193 & 7775))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), max(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) / 1)), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), max(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) / 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), max(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) / 1))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(-4730) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), ~ (~ (_GLF_IDENTITY(4, (4) / 1)))), _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1))))), _GLF_IDENTITY(64, max(64, 64)), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
