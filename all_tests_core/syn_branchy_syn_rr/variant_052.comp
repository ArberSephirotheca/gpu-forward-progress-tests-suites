#version 460
struct _GLF_struct_2 {
 mat4 _f0;
 mat3x4 _f1;
 mat4x3 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_1 {
 int _f0;
 mat4x2 _f1;
 int _f2;
 bool _f3;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 ivec3 _f2;
 _GLF_struct_2 _f3;
 mat4x3 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_4 {
 uint read_1;
 _GLF_struct_3 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_12read_2subgroup_sizevirtual_gidworkgroup_id;
 uvec4 GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_12read_2subgroup_sizevirtual_gidworkgroup_id.y = subgroup_size;
 GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x = GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_12read_2subgroup_sizevirtual_gidworkgroup_id.y;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_12read_2subgroup_sizevirtual_gidworkgroup_id.w = workgroup_id;
 GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.z = GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_12read_2subgroup_sizevirtual_gidworkgroup_id.w;
 uint workgroup_base = GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.w * GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.z;
 GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base;
 uint virtual_gid = GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.y + subgroup_id * GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x + subgroup_local_id;
 GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_12read_2subgroup_sizevirtual_gidworkgroup_id.z = virtual_gid;
 uint next_virtual_gid = GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.y + subgroup_id * GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x + ((subgroup_local_id + 1) % GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(atomicLoad(buf[GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_12read_2subgroup_sizevirtual_gidworkgroup_id.z], 4, 64, 0), _GLF_struct_3(_GLF_struct_0(ivec3(1), mat3x2(1.0)), _GLF_struct_1(1, mat4x2(1.0), 1, true), ivec3(1), _GLF_struct_2(mat4(1.0), mat3x4(1.0), mat4x3(1.0), mat2x4(1.0)), mat4x3(1.0), ivec4(1)));
 uint read_2 = atomicLoad(buf[GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_12read_2subgroup_sizevirtual_gidworkgroup_id.z], 4, 64, 0);
 GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_12read_2subgroup_sizevirtual_gidworkgroup_id.x = read_2;
 if(subgroup_local_id + 1 < GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_4.read_1 == GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_12read_2subgroup_sizevirtual_gidworkgroup_id.x) + 1, 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_4.read_1 == GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_12read_2subgroup_sizevirtual_gidworkgroup_id.x) + 1, 4, 64, 4);
  }
}
