#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_24 {
 mat4 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_23 {
 vec3 _f0;
 mat3 _f1;
 bvec4 _f2;
 vec3 _f3;
 uint _f4;
 mat4x2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_22 {
 bvec3 _f0;
} ;

struct _GLF_struct_21 {
 bvec4 _f0;
 uvec4 _f1;
 bvec4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_20 {
 uint _f0;
 mat2x4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_25 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_24 _f4;
} ;

struct _GLF_struct_18 {
 int _f0;
 uvec4 _f1;
 ivec2 _f2;
 vec4 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_17 {
 bool _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_16 {
 vec2 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 mat3x4 _f3;
 vec4 _f4;
 vec4 _f5;
 int _f6;
} ;

struct _GLF_struct_19 {
 vec3 _f0;
 _GLF_struct_16 _f1;
 uvec3 _f2;
 _GLF_struct_17 _f3;
 _GLF_struct_18 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_26 {
 mat3 _f0;
 uint subgroup_id;
 _GLF_struct_19 _f1;
 _GLF_struct_25 _f2;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 vec3 _f1;
 ivec2 _f2;
 mat3x2 _f3;
 vec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_12 {
 bool _f0;
 vec3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 bool _f1;
 bvec4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 mat4x3 _f1;
 mat4 _f2;
 float _f3;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 mat4 _f1;
 int _f2;
 uvec4 _f3;
 _GLF_struct_9 _f4;
 ivec2 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 mat2x4 _f1;
 vec4 _f2;
 vec2 _f3;
 mat3x2 _f4;
 uint _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_15 {
 _GLF_struct_8 _f0;
 bvec4 _f1;
 mat2x4 _f2;
 _GLF_struct_11 _f3;
 mat3 _f4;
 _GLF_struct_14 _f5;
 int i;
} ;

struct _GLF_struct_4 {
 int _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 uint _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_1 {
 uint _f0;
 vec2 _f1;
 mat3x4 _f2;
 bool _f3;
 bvec2 _f4;
 mat4x2 _f5;
 bool _f6;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat4x2 _f1;
 ivec2 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 uint subgroup_local_id;
 _GLF_struct_5 _f1;
 ivec4 _f2;
 bool _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, false))), bool(bvec2(bool(bvec2(false, true)), false))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_6_1_1_14read_2workgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(82.73), _GLF_FUZZED(7474.1352)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))))), injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(mat3(1.0), gl_SubgroupID, _GLF_struct_19(vec3(1.0), _GLF_struct_16(vec2(1.0), mat4x2(1.0), mat2x4(1.0), mat3x4(1.0), vec4(1.0), vec4(1.0), 1), uvec3(1u), _GLF_struct_17(_GLF_IDENTITY(true, (true) && true), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 0.0), (vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 0.0)) * vec3(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(_GLF_FUZZED(-17.75)), float(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) - 0.0)), bool(true))), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, 1.0, 0.0)), max(float(vec4(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-52.38)), float(float(vec4(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, 1.0, 0.0))), bool(true)))))), 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(9.0) : tan(0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0)), (float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 0.0))), 0.0))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0))) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(6.9)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(float(_GLF_FUZZED(6.9)), (float(_GLF_FUZZED(6.9))) * 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(fma(-2.1, 6.8, -7355.7991)))), 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(float(_GLF_FUZZED(6.9)), (float(_GLF_FUZZED(6.9))) * 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))))))))), bool(false)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0)), (float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0))) / 1.0)), float(_GLF_FUZZED(6.9)), bool(_GLF_IDENTITY(false, true && (false)))), clamp(mix(float(_GLF_IDENTITY(float(mat2x3(clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.3)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 0.0, 1.0)), (float(vec3(1.0, 0.0, 1.0))) / 1.0)), 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 0.0, 1.0)), (float(vec3(1.0, 0.0, 1.0))) / 1.0)), 1.0, 1.0)), 0.0 + (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 0.0, 1.0)), (float(vec3(1.0, 0.0, 1.0))) / 1.0)), 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 0.0, 1.0)), (float(vec3(1.0, 0.0, 1.0))) / 1.0)), 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 0.0, 1.0)), (float(vec3(1.0, 0.0, 1.0))) / 1.0)), 1.0, 1.0))) / 1.0))), 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0))))), (float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)), sqrt(_GLF_IDENTITY(0.0, (0.0) - length(tan(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0))) / 1.0)), float(_GLF_FUZZED(6.9)), bool(false)), mix(float(_GLF_IDENTITY(float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)), 0.0)), 0.0, 0.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), _GLF_IDENTITY(tan(0.0), float(mat3x2(_GLF_IDENTITY(tan(0.0), float(mat4x2(tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0))), tan(0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(9172.4646)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0)))), float(_GLF_FUZZED(7306.2371)), bool(false))), 0.0, 0.0, 0.0, 0.0)), sqrt(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(2188.2519)))), 0.0)), (float(mat2x3(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, determinant(mat4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-183.334) : 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0))) / 1.0)), float(_GLF_FUZZED(6.9)), bool(false)), mix(float(_GLF_IDENTITY(float(mat2x3(clamp(_GLF_IDENTITY(1.0, tan(0.0) + (_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0))))), 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0)), (float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0))) / 1.0)), float(_GLF_FUZZED(6.9)), bool(false)))), 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-45.49))) < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-6.0))), 0.0, 0.0, sin(0.0), 0.0, 1.0), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0)), (float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, cos(0.0) * (0.0)), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0))) / 1.0)), float(_GLF_FUZZED(6.9)), bool(false)), clamp(mix(float(_GLF_IDENTITY(float(mat2x3(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0)), (float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, abs(0.0) + (1.0)), 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0))) / 1.0)), float(_GLF_FUZZED(6.9)), bool(false)), mix(float(_GLF_IDENTITY(float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0)), (float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), 0.0))) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(6.9), _GLF_IDENTITY(float(mat2(_GLF_FUZZED(6.9), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(float(mat2(_GLF_FUZZED(6.9), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(float(mat2(_GLF_FUZZED(6.9), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(91.61)), bool(false))), float(mat2(_GLF_FUZZED(6.9), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), bool(false)), mix(float(_GLF_IDENTITY(float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), (float(mat2x3(_GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-453.222) : 1.0)), 1.0))))), float(float(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-453.222) : 1.0)), 1.0)))))))), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0))) / 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(6.9, mix(float(_GLF_IDENTITY(6.9, mix(float(_GLF_FUZZED(146.982)), float(6.9), bool(true)))), float(_GLF_FUZZED(8.8)), bool(_GLF_IDENTITY(false, false || (false))))))), bool(false)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0), mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-47.49)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0)), (float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), sqrt(0.0), 0.0))) / 1.0)), float(_GLF_FUZZED(6.9)), bool(false)), clamp(mix(float(_GLF_IDENTITY(float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0)), (_GLF_IDENTITY(float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)) : _GLF_FUZZED(-0.4))), 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0)), min(float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)) : _GLF_FUZZED(-0.4))), 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0)), float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)) : _GLF_FUZZED(-0.4))), 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0))))) / 1.0)), float(_GLF_FUZZED(6.9)), bool(false)), mix(float(_GLF_IDENTITY(float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, exp(0.0), log(1.0), log(abs(1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))), (float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0))) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(6.9)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(6.9)), 1.0 * (float(_GLF_FUZZED(6.9)))) : _GLF_FUZZED(59.16))), bool(false)), mix(float(_GLF_IDENTITY(float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(0.0), 0.0)), (float(mat2x3(clamp(1.0, 1.0, 1.0), 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, sqrt(0.0)))), 0.0, 0.0)), sqrt(0.0), 0.0))) / _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(994.328) : 1.0)))), float(_GLF_FUZZED(_GLF_IDENTITY(6.9, float(mat2x4(6.9, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), 0.0, 1.0, 0.0, 1.0))))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))), 0.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0))))))))))))) / 1.0))), _GLF_struct_18(1, _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), ivec2(1), _GLF_IDENTITY(vec4(1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), vec4(mat2x4(vec4(1.0), exp(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))), abs(1.0)))), mat4(1.0) * (vec4(1.0))) : _GLF_FUZZED(vec4(4124.9525, -7046.6077, -9127.5893, 6.1)))), uvec4(1u)), mat3x2(1.0)), _GLF_struct_25(_GLF_struct_20(1u, mat2x4(1.0), mat2x4(1.0)), _GLF_struct_21(bvec4(true), uvec4(1u), bvec4(true), mat2(1.0)), _GLF_struct_22(bvec3(true)), _GLF_struct_23(vec3(1.0), mat3(1.0), bvec4(true), vec3(1.0), 1u, mat4x2(1.0), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) + mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-79.94)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_struct_24(mat4(1.0), mat2(1.0))));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-93.88)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_3(_GLF_struct_0(bvec4(true)), mat4x2(1.0), ivec2(1), _GLF_struct_1(1u, vec2(1.0), mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)) : _GLF_FUZZED(8018.6017)))), true, bvec2(true), mat4x2(1.0), true), _GLF_struct_2(mat4x3(1.0), 1u, uvec3(1u)), mat2x4(1.0)), gl_SubgroupInvocationID, _GLF_struct_5(mat4(1.0), _GLF_struct_4(_GLF_IDENTITY(1, (1) - 0), mat4x2(1.0))), ivec4(1), true);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true)) || false), false, true, true)))))), (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0) + (injectionSwitch.x)) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (injectionSwitch.x)) > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (injectionSwitch.x)) > injectionSwitch.y)))))) || false))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_id : _GLF_FUZZED(subgroup_size)));
 _GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y = workgroup_base, (GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y = workgroup_base) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)) : _GLF_FUZZED(vec2(5.3, -484.689)))).x > injectionSwitch.y) && true)) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec3(bool(bvec3(false, false, true)), true, true))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec3(bool(bvec3(false, false, true)), true, true))), false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6659.8523, 4004.9551)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((-1055.2473 - -4.1)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y + _GLF_struct_replacement_26.subgroup_id * subgroup_size, (GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y + _GLF_struct_replacement_26.subgroup_id * subgroup_size) ^ 0u) + _GLF_struct_replacement_6.subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.1) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, min(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, max(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)), GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)) + _GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_struct_replacement_26.subgroup_id)) * subgroup_size + ((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, min(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, max(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)), GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)) + _GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_struct_replacement_26.subgroup_id)) * subgroup_size + ((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, min(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, max(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)), GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)) + _GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_struct_replacement_26.subgroup_id)) * subgroup_size + ((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, min(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, max(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)), GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)) + _GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_struct_replacement_26.subgroup_id)) * subgroup_size + ((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, min(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, max(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)), GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)) + _GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_struct_replacement_26.subgroup_id)) * subgroup_size + ((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, min(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, max(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)), GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)) + _GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_struct_replacement_26.subgroup_id)) * subgroup_size + ((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, min(_GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, max(GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y, GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)), GLF_merged2_0_1_6_1_1_14read_2workgroup_base.y)) + _GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_struct_replacement_26.subgroup_id)) * subgroup_size + ((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size))))) : _GLF_FUZZED(virtual_gid)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.5), _GLF_FUZZED((-733.210 - 620.782))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(9.0)), bool(false))) > injectionSwitch.y)))) && true))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), ! (_GLF_IDENTITY(! ((bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), (! ((bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))) || false))) && true)), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec3(true, false, false))))))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), (! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), ((_GLF_IDENTITY(true, bool(bvec3(true, false, false))))) && true)))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false)))))))))), true), true, false)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))), (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))) && true)))))), true), true, false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), true), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))), true), true, false)))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), true))))))))), false)))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) * 1), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])), min(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])), max(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])))))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), max(max(64, 64), _GLF_IDENTITY(max(64, 64), 0 + _GLF_IDENTITY((max(64, 64)), clamp((max(64, 64)), (max(64, 64)), (max(64, 64)))))))), 0);
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), bool(bvec4(! (false), false, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_6_1_1_14read_2workgroup_base.x = read_2;
 if(_GLF_struct_replacement_6.subgroup_local_id + 1 < subgroup_size)
  {
   _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_8(_GLF_struct_7(mat4(1.0), mat2x4(1.0), vec4(1.0), vec2(1.0), mat3x2(1.0), 1u), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, min(1, 1)))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, min(1, 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, min(1, 1)))))))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, min(1, 1)))))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (_GLF_IDENTITY(1, min(1, 1))))))))) + _GLF_IDENTITY(ivec4(0, 0, 0, 0), clamp(_GLF_IDENTITY(ivec4(0, 0, 0, 0), max(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0))), ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0))))), bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_IDENTITY(false, ! (! (false))))), false || _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)))), (bool((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))))) && true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))), bool(bvec3((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)), true)))))))))), mat2x4(1.0), _GLF_struct_11(_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((mat3(1.0)) / mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.8)), float(1.0), bool(true))), (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-933.077, min(-933.077, -933.077)))))), float(_GLF_FUZZED(-1.4)), bool(false))), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0))), mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.5)))), float(_GLF_FUZZED((791.311 / -398.300))), bool(false))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0), ((mat3(1.0)) / mat3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-933.077, (-933.077) + 0.0)), mix(float(true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-933.077, (-933.077) + 0.0))), float(_GLF_FUZZED(3.8)), bool(false)))))), float(_GLF_FUZZED(-1.4)), bool(false))), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)), float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0))))) * 1.0))))) - 0.0))), mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.5)))), float(_GLF_IDENTITY(_GLF_FUZZED((791.311 / -398.300)), float(vec3(_GLF_IDENTITY(_GLF_FUZZED((791.311 / -398.300)), min(_GLF_FUZZED((791.311 / -398.300)), _GLF_FUZZED((791.311 / -398.300)))), 1.0, 1.0)))), bool(false))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1, uvec4(1u), _GLF_struct_9(ivec3(1), mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (true ? _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))) : _GLF_FUZZED(mat4(-2.7, 9.5, 5.6, 170.904, -7.8, 85.47, -52.27, 91.93, 436.336, -44.08, -378.591, -53.82, -5.0, -238.977, -4273.0683, -0.5)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), (true ? _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, log(1.0))), (float(mat3x2(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 0.0, 1.0, log(1.0)))) / 1.0)))))) : _GLF_FUZZED(mat4(-2.7, 9.5, 5.6, 170.904, -7.8, 85.47, -52.27, 91.93, 436.336, -44.08, -378.591, -53.82, -5.0, -238.977, -4273.0683, -0.5))))), transpose(transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), (true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.0))), 1.0))), transpose(transpose(mat4(1.0)))) : _GLF_FUZZED(mat4(-2.7, 9.5, 5.6, 170.904, -7.8, 85.47, -52.27, _GLF_IDENTITY(91.93, 0.0 + (91.93)), 436.336, -44.08, -378.591, -53.82, -5.0, -238.977, -4273.0683, _GLF_IDENTITY(-0.5, float(_GLF_IDENTITY(mat2x4(-0.5, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), log(1.0), 1.0, 1.0), transpose(transpose(mat2x4(-0.5, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), log(1.0), 1.0, 1.0))))))))))), (true ? transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (true ? _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))) : _GLF_FUZZED(mat4(-2.7, 9.5, 5.6, 170.904, -7.8, 85.47, -52.27, 91.93, 436.336, -44.08, -378.591, -53.82, -5.0, -238.977, -4273.0683, -0.5)))), transpose(transpose(_GLF_IDENTITY(mat4(1.0), (true ? _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))) : _GLF_FUZZED(mat4(-2.7, 9.5, 5.6, 170.904, -7.8, 85.47, -52.27, 91.93, 436.336, -44.08, -378.591, -53.82, -5.0, -238.977, -4273.0683, -0.5)))))))) : _GLF_FUZZED(mat4(-6.5, -30.86, -7774.1601, 4.2, 3.2, 52.47, 24.35, 5221.9491, 1755.7716, -0.3, 642.537, -50.69, 5295.3013, -38.46, -29.88, -224.389))))))))), 1.0), ivec2(1), _GLF_struct_10(uvec4(1u), true, bvec4(true), bvec2(true))), mat3(1.0), _GLF_struct_14(_GLF_struct_12(true, vec3(1.0), mat4x2(1.0)), _GLF_struct_13(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, log(1.0), 1.0)))))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(40.86) : 1.0)) : _GLF_FUZZED(-6823.1954)))))), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / 1.0)), float(_GLF_FUZZED(-8.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)))))), vec2(1.0, 1.0) * (vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0))), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))) * (_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-0.5))), bool(false))), sqrt(1.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0))))))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(40.86) : 1.0)) : _GLF_FUZZED(-6823.1954)))))), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / 1.0)), float(_GLF_FUZZED(-8.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)))))), vec2(1.0, 1.0) * (vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0))), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))) * (_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-0.5))), bool(false))), sqrt(1.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0))))))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(40.86) : 1.0)) : _GLF_FUZZED(-6823.1954)))))), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / 1.0)), float(_GLF_FUZZED(-8.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)))))), vec2(1.0, 1.0) * (vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0))), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))) * (_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-0.5))), bool(false))), sqrt(1.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0))))))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(40.86) : 1.0)) : _GLF_FUZZED(-6823.1954)))))), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / 1.0)), float(_GLF_FUZZED(-8.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)))))), vec2(1.0, 1.0) * (vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0))), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))) * (_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-0.5))), bool(false))), sqrt(1.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0))))))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (true ? (_GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(40.86) : 1.0)) : _GLF_FUZZED(-6823.1954)))))), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / 1.0)), float(_GLF_FUZZED(-8.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)))))), vec2(1.0, 1.0) * (vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0))), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))) * (_GLF_IDENTITY(vec2(1.0), vec2(mat3x4(vec2(1.0), tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-0.5))), bool(false))), sqrt(1.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0))))))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(vec2(16.73, 413.538)))))))), vec3(1.0), ivec2(1), mat3x2(1.0), vec4(1.0), vec3(1.0)), vec4(1.0)), 0);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), true, false, true)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, cos(0.0), sin(0.0)))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) : _GLF_FUZZED(step(-0.6, 5.2)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false)))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base, uvec2(GLF_merged2_0_1_6_1_1_14read_2workgroup_base[0], GLF_merged2_0_1_6_1_1_14read_2workgroup_base[1])).x) + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), max((1) | (1), (1) | (1)))), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 0.0)))))) + vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(41.57), _GLF_FUZZED(-5884.3636)), bvec2(false, false))).x, float(vec4(injectionSwitch.x, 1.0, 1.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(2965.4901)), bool(false))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(GLF_merged2_0_1_6_1_1_14read_2workgroup_base, ~ (~ (GLF_merged2_0_1_6_1_1_14read_2workgroup_base))).x) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
