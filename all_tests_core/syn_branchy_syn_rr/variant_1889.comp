#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 vec2 _f0;
 vec4 _f1;
 uint read_2;
 bool _f2;
 bool _f3;
} ;

struct _GLF_struct_22 {
 vec4 _f0;
 _GLF_struct_21 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_19 {
 mat2x3 _f0;
 ivec2 _f1;
 mat4x3 _f2;
 uvec2 _f3;
 mat2x4 _f4;
 mat2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_18 {
 mat2 _f0;
 bvec2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_20 {
 _GLF_struct_18 _f0;
 mat3x4 _f1;
 _GLF_struct_19 _f2;
} ;

struct _GLF_struct_23 {
 mat3x2 _f0;
 _GLF_struct_20 _f1;
 bvec3 _f2;
 vec3 _f3;
 _GLF_struct_22 _f4;
} ;

struct _GLF_struct_16 {
 mat3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_14 {
 mat3x4 _f0;
 uint _f1;
 uvec4 _f2;
 float _f3;
} ;

struct _GLF_struct_15 {
 uint subgroup_id;
 uvec4 _f0;
 bool _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
} ;

struct _GLF_struct_11 {
 float _f0;
 uvec3 _f1;
 uint _f2;
 mat3x4 _f3;
 uint _f4;
} ;

struct _GLF_struct_10 {
 uvec3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 int _f1;
 mat3x2 _f2;
 mat2x4 _f3;
 mat3 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 mat3x4 _f1;
 _GLF_struct_9 _f2;
 mat3x4 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
 _GLF_struct_12 _f6;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
 mat4x2 _f3;
 mat2 _f4;
 mat2x3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 float _f1;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 bvec4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_2 {
 int _f0;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 vec4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 vec4 _f1;
 mat2 _f2;
 float _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 mat3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_17 {
 _GLF_struct_4 _f0;
 _GLF_struct_8 _f1;
 bvec3 _f2;
 uint _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_15 _f5;
 _GLF_struct_16 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_4(_GLF_struct_0(ivec3(1), vec4(1.0), mat2(1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(1.1, clamp(_GLF_IDENTITY(1.1, max(1.1, 1.1)), 1.1, 1.1))) : 1.0))), _GLF_struct_1(mat3(1.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-57.75)), float(1.0), bool(true)))), mat2x4(1.0)), _GLF_struct_2(1), _GLF_struct_3(mat2x4(1.0), _GLF_IDENTITY(vec2(1.0), mat2(1.0) * (vec2(1.0)))), mat3(1.0), vec2(1.0)), _GLF_struct_8(_GLF_struct_5(mat3x2(1.0), bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-76.61) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))))), ivec4(1)), _GLF_struct_6(mat2x4(1.0), 1.0), _GLF_struct_7(mat2x4(1.0), mat4x2(1.0), mat4x3(1.0), mat4x2(1.0), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-1.7))), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), sqrt(cos(0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))), bool(true))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-44.50)), float(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), bool(true))), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(34.75)), bool(false)), max(mix(float(0.0), float(_GLF_FUZZED(34.75)), bool(false)), _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(34.75)), bool(false)), (false ? _GLF_FUZZED(970.259) : mix(float(0.0), float(_GLF_FUZZED(34.75)), bool(false))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), 1.0), min(vec2(sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-44.50)), float(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), bool(true))), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(34.75)), bool(false)), max(mix(float(0.0), float(_GLF_FUZZED(34.75)), bool(false)), _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(34.75)), bool(false)), (false ? _GLF_FUZZED(970.259) : mix(float(0.0), float(_GLF_FUZZED(34.75)), bool(false))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), 1.0), vec2(sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-44.50)), float(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), bool(_GLF_IDENTITY(true, (true) || false)))), clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(34.75)), bool(false)), max(mix(float(0.0), float(_GLF_FUZZED(34.75)), bool(false)), _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(34.75)), bool(false)), (false ? _GLF_FUZZED(970.259) : mix(float(0.0), float(_GLF_FUZZED(34.75)), bool(false))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), 1.0))), _GLF_IDENTITY(vec2(tan(0.0), 1.0), (vec2(tan(0.0), 1.0)) * mat2(1.0))), dot(vec2(sin(0.0), 1.0), vec2(tan(0.0), 1.0))), 1.0)), mix(float(float(mat4x3(1.0, sqrt(cos(0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0))), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.1)), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.9)), bool(false))), 0.0))))), bool(true))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat2x3(float(mat4x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(583.649)), float(1.0), bool(true))), length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0)), float(vec3(float(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(583.649)), float(1.0), bool(true))), length(vec2(0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(smoothstep(53.54, abs(-81.49), (true ? -5.3 : -728.654))))), tan(0.0), 0.0, 0.0)), 0.0, sqrt(0.0))))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0)), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), vec3(_GLF_FUZZED(_GLF_IDENTITY(45.24, 0.0 + (45.24))), _GLF_FUZZED(-43.20), _GLF_FUZZED(252.597)), bvec3(false, false, false)))))))), 0.0, 1.0, 1.0, 1.0, 0.0)))), (0.0) / round(length(normalize(vec3(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(6.4, -261.060, -510.902, -84.19).a)), bool(false))), min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(6.4, -261.060, -510.902, -84.19).a)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(6.4, -261.060, -510.902, -84.19).a)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(6.4, -261.060, -510.902, -84.19).a)), bool(false))), max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(6.4, -261.060, -510.902, -84.19).a)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(6.4, -261.060, -510.902, -84.19).a)), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(6.4, -261.060, -510.902, -84.19).a)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(6.4, -261.060, -510.902, -84.19).a)), bool(false))))))))))))), _GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(sin(0.0), 1.0), vec2(tan(0.0), 1.0)), max(dot(vec2(sin(0.0), 1.0), vec2(tan(0.0), 1.0)), dot(vec2(sin(0.0), 1.0), vec2(tan(0.0), 1.0)))), clamp(_GLF_IDENTITY(dot(vec2(sin(0.0), 1.0), vec2(tan(0.0), 1.0)), max(dot(vec2(sin(0.0), 1.0), vec2(tan(0.0), 1.0)), dot(vec2(sin(0.0), 1.0), vec2(tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(-7418.4978)), bool(_GLF_IDENTITY(false, (false) || false))))), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(sin(0.0), 1.0), vec2(tan(0.0), 1.0)), max(dot(_GLF_IDENTITY(vec2(sin(0.0), 1.0), (_GLF_IDENTITY(vec2(sin(0.0), 1.0), min(_GLF_IDENTITY(vec2(sin(0.0), 1.0), mix(vec2((vec2(sin(0.0), 1.0))[0], (vec2(sin(0.0), 1.0))[1]), vec2(_GLF_FUZZED(214.580), _GLF_FUZZED(-5440.5844)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(sin(0.0), 1.0)))) / vec2(1.0, 1.0)), vec2(tan(0.0), 1.0)), dot(vec2(sin(0.0), 1.0), vec2(tan(0.0), 1.0)))), float(mat3x2(_GLF_IDENTITY(dot(vec2(sin(0.0), 1.0), vec2(tan(0.0), 1.0)), max(dot(_GLF_IDENTITY(vec2(sin(0.0), 1.0), (_GLF_IDENTITY(vec2(sin(0.0), 1.0), min(_GLF_IDENTITY(vec2(sin(0.0), 1.0), mix(vec2((vec2(sin(0.0), 1.0))[0], (vec2(sin(0.0), 1.0))[1]), vec2(_GLF_FUZZED(214.580), _GLF_FUZZED(-5440.5844)), bvec2(false, false))), vec2(sin(0.0), 1.0)))) / vec2(1.0, 1.0)), vec2(tan(0.0), 1.0)), dot(vec2(sin(0.0), 1.0), vec2(tan(0.0), 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(sin(0.0), 1.0), vec2(tan(0.0), 1.0)), max(dot(vec2(sin(0.0), 1.0), vec2(tan(0.0), 1.0)), dot(vec2(sin(0.0), 1.0), vec2(tan(0.0), 1.0)))))), dot(vec2(sin(0.0), 1.0), _GLF_IDENTITY(vec2(tan(0.0), 1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(tan(0.0), 1.0), (true ? vec2(tan(0.0), 1.0) : _GLF_FUZZED(log(vec2(-639.846, 3306.3423))))))))), 1.0))), float(_GLF_FUZZED(7.6)), bool(false))))), mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2x3(1.0))), bvec3(true), 1u, _GLF_struct_13(mat2x3(1.0), mat3x4(1.0), _GLF_struct_9(uvec3(1u), 1, mat3x2(1.0), mat2x4(1.0), mat3(1.0), ivec4(1)), mat3x4(1.0), _GLF_struct_10(uvec3(1u), mat2x4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(-211.238))))), _GLF_struct_11(1.0, uvec3(1u), 1u, mat3x4(1.0), 1u), _GLF_struct_12(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0)))), _GLF_struct_15(gl_SubgroupID, uvec4(1u), true, _GLF_struct_14(mat3x4(1.0), 1u, uvec4(1u), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED(19.82))))), _GLF_struct_16(mat3(1.0), mat2x3(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x = _GLF_struct_replacement_17._f5.subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false)))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0))) * 1.0)))) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y = subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))), float(_GLF_FUZZED(8820.4628)), bool(false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((! (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.w = subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size.w = workgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size.w = workgroup_size) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) - tan(0.0))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.z = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(741.029), _GLF_FUZZED(85.02)), bvec2(false, false))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(367.883)), float(injectionSwitch.y), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), injectionSwitch.y))) && true))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(367.883)), float(injectionSwitch.y), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), injectionSwitch.y))) && true))), true, true, false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size))))), ~ (~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, max(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size)))))) | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size)))))), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))) + (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size)), min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id) : GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size)))))), min((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))) | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size))) | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size)))), (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size)))))) | uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) - 0u))), 0u))), uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-9.6))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size))), uvec4(0u, 0u, 0u, 0u) + (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size)))), (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) : (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size), max((GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size), (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size)))))))) | uvec4(0u, 0u, 0u, 0u)))))).w * GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.z;
 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size.z = workgroup_base;
 uint virtual_gid = GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x * GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y, _GLF_IDENTITY(uint(uvec4(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y, uint(uvec4(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y, 1u, 0u, 0u)))) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y, (GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y) | _GLF_IDENTITY((GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y), (_GLF_IDENTITY((GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y), 0u + ((GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y)))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), (uint(uvec4(GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x * GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-503.879)), bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) || false))))))), 0u, 0u))) >> 0u)) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.w, (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.w) + 0u)) - 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size.y = virtual_gid, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size.y = virtual_gid) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size.y = virtual_gid, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size.y = virtual_gid) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-870.914, (-870.914) - 0.0))), float(injectionSwitch.x), bool(true)))) / 1.0))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), (true ? float(vec3(injectionSwitch.y, 1.0, 1.0)) : _GLF_FUZZED(7.9))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (injectionSwitch.x > injectionSwitch.y) || false))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true))) || false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8803.3767) : injectionSwitch.x)) > injectionSwitch.y), false, true, false))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8803.3767) : injectionSwitch.x)) > injectionSwitch.y), false, true, false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! _GLF_IDENTITY((false), ((false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true), false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, uvec4(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size[0], GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size[1], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size[2], uint(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, max(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size) + uvec4(0u, 0u, 0u, 0u))))[2], 1u, 0u))), GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size[_GLF_IDENTITY(3, (false ? _GLF_FUZZED(-36692) : 3))])).z + GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.x * GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y + ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.w, (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.w) | (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.w)) + 1) % GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(true && (_GLF_DEAD(false)), false, true, true)), (bool(bvec4(true && (_GLF_DEAD(false)), false, true, true))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.x = GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size.x;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.x], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) / 1), 1))), 4))), (clamp(4, 4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) / 1), 1))), 4)))) - 0)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-222.152, clamp(-222.152, -222.152, -222.152)))), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), (true ? mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(6.1)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(0.9)), _GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-222.152), (_GLF_FUZZED(-222.152)) * 1.0)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.4)), bool(false))), injectionSwitch.y)), injectionSwitch.y))), bool(true)))))), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-222.152, clamp(-222.152, -222.152, -222.152)))), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), (true ? mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(6.1)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(0.9)), _GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-222.152), (_GLF_FUZZED(-222.152)) * 1.0)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), max(vec3(1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), vec3(1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))))) * (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(float(mat3x2(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), determinant(mat3(1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, log(1.0), 0.0, 1.0)), (float(mat3x2(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), determinant(mat3(1.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, log(1.0), 0.0, 1.0))) * 1.0))))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(7.4)), bool(false))), injectionSwitch.y)), injectionSwitch.y))), bool(true)))))), bool(true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-13.93), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(_GLF_FUZZED(-13.93), (_GLF_FUZZED(-13.93)) / 1.0) : _GLF_FUZZED(185.741)))), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-222.152)), max(float(_GLF_FUZZED(-222.152)), float(_GLF_FUZZED(-222.152)))), float(injectionSwitch.y), bool(true)))))), bool(true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acos(vec2(-5.6, -2784.6880))))), injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), (bool(true)) || false)), min(mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))))), bool(true))))))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-222.152)), (float(_GLF_FUZZED(-222.152))) + 0.0), float(injectionSwitch.y), bool(true)))), bool(true))))))), _GLF_IDENTITY(false, (false) || false), false))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), injectionSwitch)).y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), bool(true))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), bool(true))))))), false || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), bool(true)))), false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), bool(true))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), bool(true))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), bool(true))))))), false || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), bool(true)))), false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), bool(true)))))))))))))), ! (! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), bool(true))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), bool(true))))))), false || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), bool(true)))), false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-13.93)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-222.152)), float(injectionSwitch.y), bool(true)))), bool(true))))))))))))))))))))) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size.y], _GLF_IDENTITY(4, (false ? _GLF_FUZZED(clamp((93144 / -35875), 83213, -46657)) : 4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(25.91, mix(float(25.91), float(_GLF_FUZZED(-3396.1307)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(injectionSwitch.y), bool(true)))) * _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(-72.99, -9.5, -6.4).x)), float(0.0), bool(true))), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.y = read_1;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(80.89)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.2)), float(1.0), bool(true))), 0.0, 1.0, 0.0)))))) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9740.8738, (false ? _GLF_FUZZED(-2.5) : -9740.8738)))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x))) / 1.0), _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) / 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)))), _GLF_struct_20(_GLF_struct_18(mat2(1.0), bvec2(true), ivec2(1)), mat3x4(1.0), _GLF_struct_19(mat2x3(1.0), ivec2(1), mat4x3(1.0), uvec2(1u), mat2x4(1.0), mat2(1.0), ivec4(1))), bvec3(true), vec3(1.0), _GLF_struct_22(vec4(1.0), _GLF_struct_21(vec2(1.0), vec4(1.0), atomicLoad(buf[GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidvirtual_gidworkgroup_baseworkgroup_size.y], 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (~ (64))))), 0), true, true), mat2(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), bvec2(true, false)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(-5.9), _GLF_FUZZED(5738.9247)), bvec2(false, false)))), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(_GLF_IDENTITY(vec2(-2.3, -8.8), (true ? vec2(-2.3, -8.8) : _GLF_FUZZED(vec2(-0.9, -3.1)))))) : injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.5)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.3))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.z = _GLF_IDENTITY(_GLF_struct_replacement_23._f4._f1.read_2, (_GLF_struct_replacement_23._f4._f1.read_2) * 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false))), true && ((false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.w + 1 < GLF_merged3_0_1_11_1_1_13_2_1_12subgroup_idsubgroup_sizeworkgroup_id.y)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))), true)), false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-320.011)), bool(false))), 0.0, tan(0.0), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(smoothstep(155.750, -3.4, vec4(-7.4, -185.325, 2.4, -4813.8396))) : vec4(0.0, 0.0, 0.0, 0.0)))), tan(_GLF_IDENTITY(sin(0.0), float(mat4(sin(0.0), 0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), min(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, abs(1.0), 1.0)))))), 0.0 + (float(mat4x3(injectionSwitch.x, 0.0, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), float(mat4x2(sqrt(0.0), 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)))))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.4) : 0.0))))) + 0.0), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), tan(sin(0.0))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch.y), bool(true)), (false ? _GLF_FUZZED(63.16) : mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch.y), bool(true))))))) : _GLF_FUZZED(1451.5702)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), bool(bvec2(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) : _GLF_FUZZED(1451.5702)))), true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), true && ((! (false))))) || false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.x, (0u | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(next_virtual_gid) : 0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.x, 0u ^ (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.x)), min(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.x, GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.x)))), (GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.x) | 0u)], uint(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.y == GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.z) + 1, 4, 64, _GLF_IDENTITY(4, min(4, 4)));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))))), false, false, false)))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * mat2(1.0)) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.x], uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id, max(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id[0], GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id[1], GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id[2], GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id[3])))).y == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.z, min(GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.z, GLF_merged4_0_1_16_1_1_6_2_1_6_3_1_17next_virtual_gidread_1read_2subgroup_local_id.z))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
