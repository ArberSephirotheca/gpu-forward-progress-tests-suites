#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 mat4 _f0;
 uint workgroup_base;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 mat3x4 _f1;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 ivec3 _f1;
 uint _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 mat3x2 _f1;
 bvec2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_5 {
 float _f0;
 mat4x3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 _GLF_struct_5 _f1;
 uint subgroup_id;
 int _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 int _f1;
 bvec2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 bool _f1;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 vec2 _f1;
 mat2x4 _f2;
 _GLF_struct_2 _f3;
 bvec4 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 vec2 _f1;
 uvec4 _f2;
 ivec3 _f3;
 ivec3 _f4;
 vec4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_8 {
 _GLF_struct_1 _f0;
 ivec3 _f1;
 mat2x3 _f2;
 mat4x2 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_7 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (25391 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))), (injectionSwitch.x > injectionSwitch.y)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))), (injectionSwitch.x > injectionSwitch.y)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true)))))) || false)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, max(injectionSwitch.y, injectionSwitch.y))))) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, max(injectionSwitch.y, injectionSwitch.y))))) || false)), false, false, true))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             do
              {
               return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))), (injectionSwitch.x > injectionSwitch.y)), false)))));
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, true))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, abs(1.0))), 0.0 + (float(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, abs(1.0)))))) > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 + (2))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec2(2, 0)))), int(2))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) > 0)))) || false); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    break;
                   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
                          continue;
                         return;
                         do
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               return;
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              break;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                      }
                    }
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
              break;
             if(_GLF_DEAD(false))
              return;
            }
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
  }
 uvec3 GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_1(_GLF_struct_0(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), false))))), false, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || _GLF_IDENTITY((! ((bool(bool(bvec3(false, false, false)))))), bool(bool((! ((bool(bool(bvec3(false, false, false))))))))))))))))))), bool(bvec4(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(bool(bvec3(false, false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, false, false))))), (((bool(bool(bvec3(false, false, false)))))) || false)), (! (_GLF_IDENTITY(((bool(bool(bvec3(false, false, false))))), (((bool(bool(bvec3(false, false, false)))))) || false))) || false))), (! ((bool(bool(bvec3(false, false, false)))))) && true)))))))))))), false, true, true))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, false)), (bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, false))) && true))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), false || (true)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec2(false, false))) || ((false))) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, _GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))), ! (! (bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, _GLF_IDENTITY(false, (false) || false)))), ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || ((false))) || false), false))))), false || (! ((bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || ((false))) || false), false))))), false || (! ((bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))), ! (! ((_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))))))))))))), false || (! ((bool(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true))))))))))))))))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY((bool(bvec4(false, true, false, true))) && true, ! (! ((bool(bvec4(false, true, false, true))) && true))))), false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (! (bool(bool(bvec3(false, false, false)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))), ! (! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false))))))))))))))))))))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))))), false))), (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((true)) && true)) && true))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), false))))), false, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || _GLF_IDENTITY((! ((bool(bool(bvec3(false, false, false)))))), bool(bool((! ((bool(bool(bvec3(false, false, false))))))))))))))))))), bool(bvec4(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))), false || (_GLF_IDENTITY(! ((bool(bool(bvec3(false, false, false))))), (! ((bool(bool(bvec3(false, false, false)))))) && true)))))))))))), false, true, true))))))), false, _GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || _GLF_IDENTITY((! ((bool(bool(bvec3(false, false, false)))))), bool(bool((! ((bool(bool(bvec3(false, false, false))))))))))))))))))), bool(bvec4(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))), false || (_GLF_IDENTITY(! ((bool(bool(bvec3(false, false, false))))), (! ((bool(bool(bvec3(false, false, false)))))) && true)))))))))))), false, true, true))))))), false, _GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || _GLF_IDENTITY((! ((bool(bool(bvec3(false, false, false)))))), bool(bool((! ((bool(bool(bvec3(false, false, false))))))))))))))))))), bool(bvec4(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))), false || (_GLF_IDENTITY(! ((bool(bool(bvec3(false, false, false))))), (! ((bool(bool(bvec3(false, false, false)))))) && true)))))))))))), false, true, true))))))), false, _GLF_IDENTITY(false, ! (! (false))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || _GLF_IDENTITY((! ((bool(bool(bvec3(false, false, false)))))), bool(bool((! ((bool(bool(bvec3(false, false, false))))))))))))))))))), bool(bvec4(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))), false || (_GLF_IDENTITY(! ((bool(bool(bvec3(false, false, false))))), (! ((bool(bool(bvec3(false, false, false)))))) && true)))))))))))), false, true, true))))))), false, _GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || _GLF_IDENTITY((! ((bool(bool(bvec3(false, false, false)))))), bool(bool((! ((bool(bool(bvec3(false, false, false))))))))))))))))))), bool(bvec4(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))), false || (! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))), false || (_GLF_IDENTITY(! ((bool(bool(bvec3(false, false, false))))), (! ((bool(bool(bvec3(false, false, false)))))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))), false || (_GLF_IDENTITY(! ((bool(bool(bvec3(false, false, false))))), (! ((bool(bool(bvec3(false, false, false)))))) && true)))), bool(bool((_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))), false || (_GLF_IDENTITY(! ((bool(bool(bvec3(false, false, false))))), (! ((bool(bool(bvec3(false, false, false)))))) && true)))))))))))))))))), false, true, true))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))))) && true))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, false)), false), bvec2(bvec3(bvec2(bool(bvec3(false, false, false)), false), false)))))) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, false)), false), bvec2(bvec3(bvec2(bool(bvec3(false, false, false)), false), false)))))) || false)), true))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false))))), false || (! (_GLF_IDENTITY((bool(bool(bvec3(false, false, false)))), bool(bool(_GLF_IDENTITY((bool(bool(bvec3(false, false, false)))), false || ((bool(bool(bvec3(false, false, false))))))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || ((false))) || false), false))))), false || (! ((bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), false)), true))))))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, true))))))))), false, false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))), false || (! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))))))))))), false || (! ((bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))) && true))))))))))))))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), _GLF_IDENTITY((bool(bvec4(false, true, false, true))) && true, ! (! ((bool(bvec4(false, true, false, true))) && true))))), false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (! (bool(bool(bvec3(false, false, false)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))), ! (! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false))))), false)))))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), false))))))))))))))))))))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))))), false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), false))))), false, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))))))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || _GLF_IDENTITY(_GLF_IDENTITY((! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), false)))))), ((! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), false))))))) && true), bool(bool((! (_GLF_IDENTITY((bool(bool(bvec3(false, false, false)))), ((bool(bool(bvec3(false, false, false))))) || false)))))))))))))))), bool(bvec4(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))), false || (_GLF_IDENTITY(! ((bool(bool(bvec3(false, false, false))))), (! ((bool(bool(bvec3(false, false, false)))))) && true)))))))))))), false, true, true))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, false)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false))))))))))))))))), (_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false)), bvec3(bvec4(bvec3(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false)), true))))))))), false || (! ((bool(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))), false || ((_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))))))))))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))), _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), (! (! (false))) || false)), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || ((false))) || false), false))))), false || (! ((bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), bool(bvec4(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), ! (! (bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), false, true, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, true)))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), bool(_GLF_IDENTITY(bvec2(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false), bvec2(bvec3(bvec2(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) || false), false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))), false || (! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (_GLF_IDENTITY(! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))), false || (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))))), false || (! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))), (_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))), ! (! (bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))) || false))))))))))))))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))))))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY((bool(bvec4(false, true, false, true))) && true, ! (! (_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, bool(bvec2(false, false))), true))), bool(bvec2((bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, bool(bvec2(false, false))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (! (bool(bool(bvec3(false, false, false)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false)))), ! (! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))), false || (! ((bool(bool(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))), (bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))) || false))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))), false))))))), false || (! ((bool(bool(bvec3(false, false, false))))))))))))))))))))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))), ! (! (((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false))))))))))))))))), (_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false)), bvec3(bvec4(bvec3(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false)), true))))))))), false || (! ((bool(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))), false || ((_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))))))))))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))), _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), (! (! (false))) || false)), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || ((false))) || false), false))))), false || (! ((bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), bool(bvec4(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), ! (! (bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), false, true, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, true)))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), bool(_GLF_IDENTITY(bvec2(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false), bvec2(bvec3(bvec2(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) || false), false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))), false || (! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (_GLF_IDENTITY(! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))), false || (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))))), false || (! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))), (_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))), ! (! (bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))) || false))))))))))))))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))))))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY((bool(bvec4(false, true, false, true))) && true, ! (! (_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, bool(bvec2(false, false))), true))), bool(bvec2((bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, bool(bvec2(false, false))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (! (bool(bool(bvec3(false, false, false)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false)))), ! (! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))), false || (! ((bool(bool(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))), (bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))) || false))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))), false))))))), false || (! ((bool(bool(bvec3(false, false, false))))))))))))))))))))))))), false, _GLF_IDENTITY(false, ! (! (false))))))))))))), false))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), false))))), false, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || _GLF_IDENTITY((! ((bool(bool(bvec3(false, false, false)))))), bool(bool((! ((bool(bool(bvec3(false, false, false))))))))))))))))))), bool(bvec4(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))), false || (_GLF_IDENTITY(! ((bool(bool(bvec3(false, false, false))))), (! ((bool(bool(bvec3(false, false, false)))))) && true)))))))))))), false, true, true))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY((bool(bvec4(false, true, false, true))) && true, ((bool(bvec4(false, true, false, true))) && true) || false))), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))) || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || _GLF_IDENTITY((! ((bool(bool(bvec3(false, false, false)))))), bool(bool((! ((bool(bool(bvec3(false, false, false))))))))))))))))))), bool(bvec4(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), (_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), bool(bool(bool(bool(bvec3(false, false, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false))))))))), _GLF_IDENTITY((false), ! (! ((false)))) || false))), false))))), false || (! ((bool(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), false)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), false)))), false)), false))))))))))))), ! (! _GLF_IDENTITY(((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))), false || (_GLF_IDENTITY(! ((bool(bool(bvec3(false, false, false))))), (! ((bool(bool(bvec3(false, false, false)))))) && true))))))), bool(bvec4(((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false))))), false || (_GLF_IDENTITY(! ((bool(bool(bvec3(false, false, false))))), (! ((bool(bool(bvec3(false, false, false)))))) && true))))))), true, true, true)))))))), false, true, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true)))) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false))))))))))))))))))))) || false)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, false)))), true && (bool(bvec2(false, false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || ((false))) || false), false))))), false || (! ((bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))), false || (! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))))))))))), false || (! ((bool(bool(bvec3(false, false, false))))))))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || ((false))) || false), false))))), false || (! ((bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))), false || (! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))))))))))), false || (! ((bool(bool(bvec3(false, false, false))))))))))))))))))), false, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))) && true)), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || ((false))) || false), false))))), false || (! ((bool(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))))))), false || (! (_GLF_IDENTITY(((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), ! (! (((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))))))))))), false || (! ((bool(bool(bvec3(false, false, false))))))))))))))))))), false, false))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY((bool(bvec4(false, true, false, true))) && true, ! (! ((bool(bvec4(false, true, false, true))) && true))))), false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), ! (! (bool(bool(bvec3(false, false, false)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))), ! (! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))), false || (! ((bool(bool(bvec3(false, false, false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))), ! (! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))), false || (! ((bool(bool(bvec3(false, false, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))), ! (! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))), false || (! ((bool(bool(bvec3(false, false, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))), ! (! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))), false || (! ((bool(bool(bvec3(false, false, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))), ! (! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))))), false || (! ((bool(bool(bvec3(false, false, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), false, false, false))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false), false)), (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false), false))) && true)))), false || (! ((bool(bool(bvec3(false, false, false)))))))))), ! (! ((! _GLF_IDENTITY((bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), ! (_GLF_IDENTITY(! ((bool(bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))))), false || (! ((bool(bool(bvec3(false, false, false))))))))))))))))))))))))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true)))))))))))), false))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)))), ((true)) && true)) && true))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)))), float(mat3x4(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)))), sin(0.0), cos(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), tan(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(9.4)), bool(false)))), exp(0.0), sqrt(1.0), exp(0.0), 0.0, 0.0, 1.0, 0.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), _GLF_IDENTITY(vec2(1.0), (vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.5), (vec2(1.0))[1]), vec2((vec2(1.0))[0], _GLF_FUZZED((-7727.8779 + 1443.1641))), bvec2(true, false)), mix(vec2((mix(vec2(_GLF_FUZZED(3.5), (vec2(1.0))[1]), vec2((vec2(1.0))[0], _GLF_FUZZED((_GLF_IDENTITY(-7727.8779, min(-7727.8779, -7727.8779)) + 1443.1641))), bvec2(true, false)))[0], (mix(vec2(_GLF_FUZZED(3.5), (vec2(1.0))[1]), vec2((vec2(1.0))[0], _GLF_FUZZED((-7727.8779 + 1443.1641))), bvec2(true, false)))[1]), vec2(_GLF_FUZZED(7243.8779), _GLF_FUZZED((+ 603.288))), bvec2(false, false)))))), uvec4(1u), ivec3(1), ivec3(1), vec4(1.0), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1u), ((1u)) >> (0u ^ 0u)), (~ _GLF_IDENTITY((1u), ((1u)) >> (0u ^ 0u))) / 1u)), (~ (~ _GLF_IDENTITY((1u), ((1u)) - 0u))) | (_GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) ^ 0u))))))), _GLF_IDENTITY(ivec3(1), max(ivec3(1), _GLF_IDENTITY(ivec3(1), ivec3(ivec4(ivec3(1), 1))))), mat2x3(1.0), mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_struct_4(vec4(1.0), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)), mix(vec2(_GLF_IDENTITY(((false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))[0], mix(float(((false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))[0]), float(_GLF_FUZZED(65.17)), bool(false))), _GLF_FUZZED(1.1)), vec2(_GLF_FUZZED(28.98), ((false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), mat2x4(1.0), _GLF_struct_2(bvec3(true), true), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3199.1010), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-469.791)), bvec2(true, false)))), vec2(vec4(min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-3199.1010), mix(float(_GLF_FUZZED(4.4)), float(_GLF_FUZZED(-3199.1010)), bool(true))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 1.0, 1.0, determinant(mat4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))))), _GLF_FUZZED(-469.791)), bvec2(true, false)))), abs(1.0), 0.0)))).x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(sqrt(vec2(-56.88, -285.670)), vec2(-733.889, -5.6), injectionSwitch)) : injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(sqrt(vec2(-56.88, -285.670)), vec2(-733.889, -5.6), injectionSwitch)) : injectionSwitch)).y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(sqrt(vec2(-56.88, -285.670)), vec2(-733.889, -5.6), injectionSwitch)) : injectionSwitch)).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(sqrt(vec2(-56.88, -285.670)), vec2(-733.889, -5.6), injectionSwitch)) : injectionSwitch)).y, (false ? _GLF_FUZZED(-4401.3593) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(sqrt(vec2(-56.88, -285.670)), vec2(-733.889, -5.6), injectionSwitch)) : injectionSwitch)).y)) : _GLF_FUZZED(-204.153))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(sqrt(vec2(-56.88, -285.670)), vec2(-733.889, -5.6), injectionSwitch)) : injectionSwitch)).y)))) && (true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (true)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat4x2(injectionSwitch, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0)), 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-7.2), (vec2(mat4x2(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), 1.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0)), 0.0, 1.0, 1.0)))[1]), vec2((vec2(mat4x2(_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-9.5)), bool(false)))), vec2(_GLF_FUZZED(5299.8537), _GLF_FUZZED(-4.1)), bvec2(false, false))) : _GLF_FUZZED(vec2(7.9, -1899.5445)))), injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), 1.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5164.5856)), float(0.0), bool(true))), 0.0)), 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0)), 0.0, 1.0, 1.0)))[0], _GLF_FUZZED(5.7)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))).x < injectionSwitch.y))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) / 1.0)))) && (true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) / 1.0)))) && (true)), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) / 1.0)))) && (true))) || false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) / 1.0)))) && (true)), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) / 1.0)))) && (true))) || false), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) / 1.0)))) && (true)), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) / 1.0)))) && (true))) || false), false), false, false)))))))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(73.51, -8.6))))), clamp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(73.51, -8.6))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(73.51, -8.6))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(73.51, -8.6))))))))).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), abs(tan(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), abs(tan(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) / 1.0)))) && (true)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-5.1)), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(true))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) / 1.0)))) && (true)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))), false))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)) && (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (true)), bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(458.330, 3133.5540)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))).x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)))) && (true)), bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-61.32), _GLF_FUZZED(173.040)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, length(0.0), 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0))), (injectionSwitch) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(458.330, 3133.5540)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), 1.0)), 0.0, 1.0, 0.0))))).x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && (true)))))))) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && true)) && (true)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)) && true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && (true)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))).y)) && true))), false))), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)) && (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (true)), bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(458.330, 3133.5540)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))).x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)))) && (true)), bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-61.32), _GLF_FUZZED(173.040)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, length(0.0), 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0))), (injectionSwitch) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(458.330, 3133.5540)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), 1.0)), 0.0, 1.0, 0.0))))).x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && (true)))))))) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && true)) && (true)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)) && true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && (true)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))).y)) && true))), false))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)) && (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (true)), bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(458.330, 3133.5540)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))).x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)))) && (true)), bool(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-61.32), _GLF_FUZZED(173.040)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, length(0.0), 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0))), (injectionSwitch) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(458.330, 3133.5540)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), 1.0)), 0.0, 1.0, 0.0))))).x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && (true)))))))) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && true)) && (true)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y)) && true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && (true)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))).y)) && true))), false))), true))))))))), true)))), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (_GLF_IDENTITY(! (true), (! (true)) || false))))))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), ! (! (! (! (true)))))))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))), ! _GLF_IDENTITY((! ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ((! ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false))) || false) && true) && (true)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-52.42, -7.9)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).y) - 0.0, clamp((injectionSwitch.y) - 0.0, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-81.95) : 0.0)), _GLF_IDENTITY((injectionSwitch.y) - 0.0, (true ? (injectionSwitch.y) - 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-18.39), float(vec2(_GLF_FUZZED(-18.39), 0.0))))))), (injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x)) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-52.42, -7.9)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])))).y) - 0.0, clamp((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, (_GLF_IDENTITY(true ? (injectionSwitch.y) - 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-18.39), float(vec2(_GLF_FUZZED(-18.39), 0.0))), float(vec4(_GLF_IDENTITY(true ? (injectionSwitch.y) - 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-18.39), float(vec2(_GLF_FUZZED(-18.39), 0.0))), (true ? (injectionSwitch.y) - 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-18.39), float(vec2(_GLF_FUZZED(-18.39), 0.0)))) - 0.0), 1.0, cos(0.0), 0.0))))))), (injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, true))), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))) && (true)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) && true, false || ((injectionSwitch.x < injectionSwitch.y) && true)))))))))), false || (bool(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, true)))))))))))))))))))), _GLF_struct_3(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0)))), (0.0 + (1.0)) * 1.0))) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) / determinant(mat3(1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-163.938)), float(0.0), bool(true))) : _GLF_FUZZED(284.332))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))))) ? 0.0 : _GLF_FUZZED(692.200))))))), 0.0, 1.0)))), float(_GLF_FUZZED(_GLF_IDENTITY(244.898, min(244.898, 244.898)))), bool(false)))), 1, bvec2(_GLF_IDENTITY(true, ! (! (true)))), mat2x3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.8, 0.0 + (0.8)), min(_GLF_IDENTITY(0.8, 0.0 + (0.8)), _GLF_IDENTITY(0.8, 0.0 + (0.8)))), min(0.8, 0.8))) : _GLF_IDENTITY(1.0, (1.0) + 0.0)))))), _GLF_struct_7(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_struct_5(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(591.935), clamp(_GLF_IDENTITY(_GLF_FUZZED(591.935), float(vec2(_GLF_FUZZED(591.935), 0.0))), _GLF_FUZZED(591.935), _GLF_IDENTITY(_GLF_FUZZED(591.935), min(_GLF_FUZZED(591.935), _GLF_FUZZED(591.935)))))), float(1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), bool(true))), float(float(_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0))), 1.0))) - 0.0), 1.0))), float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) / 1.0), clamp(1.0, 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))))), float(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))))), mat4x3(1.0), vec4(1.0)), gl_SubgroupID, _GLF_IDENTITY(1, ~ (~ (1))), _GLF_struct_6(mat2x4(1.0), mat3x2(1.0), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), uvec4(1u))));
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
  {
   GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ((false)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ((false)) || false))), ! (! (! (! (_GLF_IDENTITY((false), ((false)) || false))))))))) && true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), bool(bool((false)))))) && true, bool(bvec3((false) && true, false, true)))) || false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, 1.0))) > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, false || ((false) && true)), bool(bvec3((false) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, true)))) || false))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u)) + 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || false)))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
        }
      }
    }
   return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(vec4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), 1.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0), injectionSwitch[1])))).y)))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_10(mat3x2(1.0), mat3x4(1.0), _GLF_struct_9(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), (float(vec2(1.0, 0.0))) + 0.0))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y, 0u | (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y)))) * workgroup_id)), _GLF_IDENTITY(ivec3(1), max(_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1)))), ivec3(1))), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, uint(uvec3(1u, _GLF_IDENTITY(0u, (0u) + 0u), 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u))))) << _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (0u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) >> 0u)))))) ^ (clamp(1u, 1u, 1u)))), 1u)), _GLF_IDENTITY(0u ^ (1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(~ (~ (_GLF_FUZZED(subgroup_size))), (~ (~ (_GLF_FUZZED(subgroup_size)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_IDENTITY(0u ^ (1u), clamp(0u ^ (1u), _GLF_IDENTITY(0u ^ (1u), (0u ^ (1u)) | (0u ^ (1u))), 0u ^ (1u)))))), bvec3(true));
 uint virtual_gid = _GLF_struct_replacement_11._f0._f2.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_8._f5.subgroup_id, (_GLF_struct_replacement_8._f5.subgroup_id) - 0u) * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_struct_replacement_11._f0._f2.workgroup_base + _GLF_struct_replacement_8._f5.subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))) / uvec2(1u, 1u), (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))) / uvec2(1u, 1u), max((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))) / uvec2(1u, 1u), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))) / uvec2(1u, 1u))))), clamp((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))) / uvec2(1u, 1u), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))) / uvec2(1u, 1u), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))) / uvec2(1u, 1u)))).x + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((~ 96069)) : 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED((~ 96069)) : 1))) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED((~ 96069)) : 1)))), (_GLF_IDENTITY((69491u << 9697u), ((69491u << 9697u)) | 0u) & _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))) ^ (subgroup_local_id + 1))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.x = next_virtual_gid;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, false))))))))
  {
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.x, uint(uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.x)))], _GLF_IDENTITY(uint(1), (uint(1)) - 0u), 4, 64, 4);
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) || false))))) ? _GLF_FUZZED(-98397) : _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(findLSB(_GLF_IDENTITY(-92333, (true ? -92333 : _GLF_FUZZED(95961))))))), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) / 1))) ^ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))) ? 4 : _GLF_FUZZED(findLSB(-92333)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(true, bool(bool(true))) ? 4 : _GLF_FUZZED(findLSB(-92333)), 1, 0, 0)), min(int(ivec4(_GLF_IDENTITY(true, bool(bool(true))) ? 4 : _GLF_FUZZED(findLSB(-92333)), 1, 0, 0)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))) ? 4 : _GLF_FUZZED(findLSB(-92333)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(true, bool(bool(true))) ? 4 : _GLF_FUZZED(findLSB(-92333))), (~ (_GLF_IDENTITY(true, bool(bool(true))) ? 4 : _GLF_FUZZED(findLSB(-92333)))) - 0))), 1, 0, 0))))))))))), 64, 0);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > 0)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y = read_1;
      }
     else
      {
      }
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_FUZZED(44558) : 4)), 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true)))));
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), bool(bool(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)) || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))) || false)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, true, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), false))))) && (injectionSwitch.x > injectionSwitch.y))))))) || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), bool(bool(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, true, false, true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)) || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))) || false)))))))))
      break;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (0) / 1))) | (_GLF_IDENTITY(1, (1) - 0))) : _GLF_FUZZED((_injected_loop_counter ^ _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))));
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), 0 ^ ((1))) - 0, (_GLF_IDENTITY((1), 0 ^ ((1))) - 0) | (_GLF_IDENTITY((1), 0 ^ ((1))) - 0))), (_GLF_IDENTITY(1, (1) * 1)) | 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              break;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(ivec3(0, 1, 0)))); _injected_loop_counter --)
              {
               GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z = read_2;
              }
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))), true && (false)), (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
        break;
       if(_GLF_DEAD(false))
        break;
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(769.771, 4.2)) : mat2(1.0) * (injectionSwitch)))).y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(read_1) : subgroup_local_id + 1)) < GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)
      {
       int i = 0;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(46.24, clamp(46.24, _GLF_IDENTITY(_GLF_IDENTITY(46.24, float(_GLF_IDENTITY(mat4x2(46.24, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(46.24, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED((65.42 / 8118.8594))), float(_GLF_IDENTITY(46.24, float(_GLF_IDENTITY(mat4x2(46.24, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(46.24, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))))), bool(true))), 46.24)))), float(injectionSwitch.x), bool(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))) > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5))))) >> _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5))))) >> _GLF_IDENTITY(int(5), int(5)), clamp((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5))))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5))))) >> _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5))))) >> _GLF_IDENTITY(int(5), int(5)), int(ivec3((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5))))) >> _GLF_IDENTITY(int(5), int(5)), 1, 1)))))) >> 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 ^ 0))); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  break;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0))))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(2.5)), mix(float(_GLF_FUZZED(_GLF_IDENTITY((-2.7 * 297.518), clamp((-2.7 * _GLF_IDENTITY(297.518, float(mat3x2(297.518, 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY((-2.7 * 297.518), min((-2.7 * 297.518), (-2.7 * 297.518))), (true ? _GLF_IDENTITY((-2.7 * 297.518), min((-2.7 * 297.518), (-2.7 * 297.518))) : _GLF_FUZZED(-0.1))), (_GLF_IDENTITY(-2.7, mix(float(-2.7), float(_GLF_FUZZED(((-480.689 + 28.44) * 9548.3125))), bool(false))) * 297.518))))), float(_GLF_IDENTITY(float(_GLF_FUZZED(2.5)), max(_GLF_IDENTITY(float(_GLF_FUZZED(2.5)), (false ? _GLF_FUZZED(-249.698) : _GLF_IDENTITY(float(_GLF_FUZZED(2.5)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(2.5)), mix(float(float(_GLF_FUZZED(2.5))), float(_GLF_FUZZED(9.4)), bool(false))), float(_GLF_FUZZED(2.5)), float(_GLF_FUZZED(2.5)))))), _GLF_IDENTITY(float(_GLF_FUZZED(2.5)), (float(_GLF_FUZZED(2.5))) - 0.0)))), bool(true))), bool(false))) < injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0))))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(2.5)), mix(float(_GLF_FUZZED(_GLF_IDENTITY((-2.7 * 297.518), clamp((_GLF_IDENTITY(-2.7 * 297.518, clamp(-2.7 * 297.518, -2.7 * 297.518, -2.7 * 297.518))), _GLF_IDENTITY((-2.7 * 297.518), min((-2.7 * 297.518), (-2.7 * 297.518))), (-2.7 * _GLF_IDENTITY(297.518, min(297.518, 297.518))))))), float(_GLF_IDENTITY(float(_GLF_FUZZED(2.5)), max(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(2.5)), (false ? _GLF_FUZZED(-249.698) : float(_GLF_FUZZED(2.5)))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(2.5)), (false ? _GLF_FUZZED(-249.698) : float(_GLF_FUZZED(2.5)))), _GLF_IDENTITY(float(_GLF_FUZZED(2.5)), (false ? _GLF_FUZZED(-249.698) : float(_GLF_FUZZED(2.5)))), _GLF_IDENTITY(float(_GLF_FUZZED(2.5)), (false ? _GLF_FUZZED(-249.698) : float(_GLF_FUZZED(2.5)))))), float(_GLF_FUZZED(2.5))))), bool(true))), bool(false))) < injectionSwitch.y)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0))))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(2.5), max(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY((-2.7 * 297.518), clamp((-2.7 * 297.518), _GLF_IDENTITY((-2.7 * 297.518), min((-2.7 * 297.518), (-2.7 * 297.518))), (-2.7 * 297.518))))), float(_GLF_IDENTITY(float(_GLF_FUZZED(2.5)), max(_GLF_IDENTITY(float(_GLF_FUZZED(2.5)), (false ? _GLF_FUZZED(-249.698) : float(_GLF_FUZZED(2.5)))), float(_GLF_FUZZED(2.5))))), bool(true))), bool(false))) < injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3874.8025), _GLF_FUZZED(72.24)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 1.0))))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 1.0), (vec4(injectionSwitch.y, 1.0, 0.0, 1.0)) * mat4(1.0)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(2.5)), mix(float(_GLF_FUZZED(_GLF_IDENTITY((-2.7 * 297.518), clamp((-2.7 * 297.518), _GLF_IDENTITY((-2.7 * 297.518), min((-2.7 * _GLF_IDENTITY(297.518, clamp(297.518, 297.518, _GLF_IDENTITY(297.518, 0.0 + (297.518))))), (-2.7 * 297.518))), (-2.7 * 297.518))))), float(_GLF_IDENTITY(float(_GLF_FUZZED(2.5)), max(_GLF_IDENTITY(float(_GLF_FUZZED(2.5)), (false ? _GLF_FUZZED(-249.698) : float(_GLF_FUZZED(2.5)))), float(_GLF_FUZZED(2.5))))), bool(true))), bool(false))) < injectionSwitch.y)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))), ! (! (false)))))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                   do
                    {
                     atomicStore(buf[GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.x], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, clamp(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2))) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2), max(uvec3(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2), uvec3(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2)))), ~ (~ (uvec3(uvec3(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2)))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, clamp(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2))) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, uvec3(uvec3(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2))))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, clamp(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, clamp(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2))))) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, uvec3(uvec3(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2)))), ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, uvec3(uvec3(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2))))) * uvec3(1u, 1u, 1u))).y, 0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, clamp(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, clamp(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2))))) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, uvec3(uvec3(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2))))).y)), _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, clamp(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2))) | (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, uvec3(uvec3(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2))))).y))) / 1u) == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1, _GLF_IDENTITY((uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1), (_GLF_IDENTITY((uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1), (false ? _GLF_FUZZED((read_2 << subgroup_size)) : (_GLF_IDENTITY(uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z), (uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z)) / 1u) + 1)))) ^ 0u) | (uint(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, clamp(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2)), 0u)), uvec3(uvec4(uvec3(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, clamp(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2)), 0u)), 0u)))).y == _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, max(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2, GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2)).z) + 1)), _GLF_IDENTITY(4, 0 + (4)), 64, 4);
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                    break;
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)), 0.0, 0.0, abs(1.0)))) > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   return;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), clamp(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 + (_GLF_IDENTITY(3, max(3, 3))))), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))))) | (0 >> _GLF_IDENTITY(int(3), int(3))))))), min((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(75697) : _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (0 >> _GLF_IDENTITY(int(3), int(3))) ^ 0))), clamp(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 + (_GLF_IDENTITY(3, max(3, 3))))), _GLF_IDENTITY(int(3), 0 ^ (_GLF_IDENTITY(int(3), (int(3)) ^ 0)))), 0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))))) | (0 >> _GLF_IDENTITY(int(3), int(3))))))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), clamp(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 + (_GLF_IDENTITY(3, max(3, 3))))), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))))) | (0 >> _GLF_IDENTITY(int(3), int(3))))), max(clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), clamp(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 + (_GLF_IDENTITY(3, max(3, 3))))), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))))) | (0 >> _GLF_IDENTITY(int(3), int(3))))), _GLF_IDENTITY(clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), clamp(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 + (_GLF_IDENTITY(3, max(3, 3))))), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))))) | (0 >> _GLF_IDENTITY(int(3), int(3))))), min(clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), clamp(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 + (_GLF_IDENTITY(3, max(3, 3))))), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))))) | (0 >> _GLF_IDENTITY(int(3), int(3))))), clamp(0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), clamp(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 + (_GLF_IDENTITY(3, max(3, 3))))), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3)), 0 >> _GLF_IDENTITY(int(3), int(3))))) | (0 >> _GLF_IDENTITY(int(3), int(3))))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = (0 | (84818 & (0 ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) * 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), int(4)))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                }
              }
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), min(int(int(0)), int(int(0))))), 0, 0))), _GLF_IDENTITY(int(0), int(ivec3(_GLF_IDENTITY(int(0), max(int(0), int(0))), 1, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            break;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, (1) | (1)) | 1)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(int(_GLF_IDENTITY(int(7), (int(7)) | (int(7)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) << 0)))); _injected_loop_counter ++)
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) >> 0)); _injected_loop_counter ++)
                          {
                           do
                            {
                             for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ _GLF_IDENTITY((~ (int(3))), ~ (~ ((~ (int(3))))))), int(3))))); _injected_loop_counter --)
                              {
                               do
                                {
                                 do
                                  {
                                   do
                                    {
                                     for(int _injected_loop_counter = (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))) < _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))); _injected_loop_counter ++)
                                        {
                                         if(_GLF_DEAD(false))
                                          {
                                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                            {
                                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                              continue;
                                             return;
                                            }
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), abs(0.0)))).y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))) && true), false, false)))))
                                              {
                                               if(_GLF_DEAD(false))
                                                continue;
                                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY((1 & 1), ((1 & 1)) | 0), clamp(_GLF_IDENTITY((1 & 1), ((1 & 1)) | 0), _GLF_IDENTITY((1 & 1), ((1 & 1)) | 0), _GLF_IDENTITY((1 & 1), ((1 & 1)) | 0)))); _injected_loop_counter ++)
                                                {
                                                 do
                                                  {
                                                   return;
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(false));
                                                }
                                              }
                                            }
                                           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))
                                            break;
                                           for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ 1), min((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))) * 1) ^ 1), (0 ^ 1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))); _injected_loop_counter --)
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               return;
                                              }
                                            }
                                          }
                                        }
                                       if(_GLF_DEAD(false))
                                        break;
                                       if(_GLF_DEAD(false))
                                        {
                                         if(_GLF_DEAD(false))
                                          return;
                                         break;
                                        }
                                       if(_GLF_DEAD(false))
                                        break;
                                       atomicStore(buf[GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.x], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1, 0u ^ (uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1)), min(_GLF_IDENTITY(uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1, 0u ^ (uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1)), _GLF_IDENTITY(uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1, 0u ^ (_GLF_IDENTITY(uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1, min(uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1, _GLF_IDENTITY(uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1, _GLF_IDENTITY(uint(uvec4(uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1, 0u, 1u, 0u)), (true ? uint(uvec4(uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1, 0u, 1u, 0u)) : _GLF_FUZZED(workgroup_id)))))))))), uint(uvec3(uint(GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.y == GLF_merged3_0_1_16_1_1_6_2_1_6next_virtual_gidread_1read_2.z) + 1, 1u, 0u))), 4, 64, 4);
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))));
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))) || _GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))) || false))))))))), (_GLF_WRAPPED_LOOP(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))));
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true))))))))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 0), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4))), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 0), (true ? ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4))), _GLF_IDENTITY(int(4), 1 * (int(4))))) >> _GLF_IDENTITY(int(4), int(4))), 0) : _GLF_FUZZED(ivec4(50540, 11495, -92709, -81658))))))))); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) & 1)); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)), (_GLF_IDENTITY((int(5)), max((int(5)), (int(5))))) << 0) ^ 0), int(5))) ^ 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
  }
}
