#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   do
    {
     barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))) && true))));
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       continue;
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-56.48), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.1)), bvec2(true, false))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-56.48), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.1)), bvec2(true, false))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-56.48), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.1)), bvec2(true, false))).y))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false))))) && true))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((((1 | 1) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((((1 | 1) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 0 + ((((1 | 1) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false)))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), false))))))))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))) && true), false, false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true, false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (false), false), false)))))), ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (false), false), false))))))) || false))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, false, true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)))))))), (injectionSwitch.x > injectionSwitch.y)))))))
            {
            }
           else
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) * 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            {
             for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
              {
               return;
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.1))), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.1)))) - 0.0), 0.0, cos(0.0))))), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.1))), 0.0, cos(0.0)))))))).x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(8.0)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))) * mat2(1.0)) : _GLF_FUZZED((_GLF_IDENTITY(-54.17 * injectionSwitch, clamp(-54.17 * injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(-54.17, (_GLF_IDENTITY(-54.17, float(mat2x4(-54.17, 1.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, 0.0)))) - 0.0) * injectionSwitch, (-54.17 * injectionSwitch) - vec2(0.0, 0.0)), -54.17 * _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))))).x > injectionSwitch.y))), ! _GLF_IDENTITY((! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED((_GLF_IDENTITY(-54.17 * injectionSwitch, clamp(-54.17 * injectionSwitch, _GLF_IDENTITY(-54.17 * injectionSwitch, (-54.17 * injectionSwitch) - vec2(0.0, 0.0)), -54.17 * injectionSwitch)))))).x > injectionSwitch.y))))), ! (! ((! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED((_GLF_IDENTITY(-54.17 * injectionSwitch, clamp(-54.17 * injectionSwitch, _GLF_IDENTITY(-54.17 * injectionSwitch, (-54.17 * injectionSwitch) - vec2(0.0, 0.0)), -54.17 * injectionSwitch)))))).x > injectionSwitch.y))))))))) || false, bool(bvec4((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))) || false, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0), cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat3(4.5, -614.030, -3.2, 3.2, -1973.7168, 9.0, 384.078, -77.60, -5839.7852))) : 0.0))), length(vec2(0.0, 0.0)), 1.0, 0.0))) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat3(4.5, -614.030, -3.2, 3.2, -1973.7168, 9.0, 384.078, -77.60, -5839.7852)), (determinant(mat3(4.5, -614.030, -3.2, 3.2, -1973.7168, 9.0, 384.078, _GLF_IDENTITY(-77.60, (true ? -77.60 : _GLF_FUZZED(14.45))), -5839.7852))) * 1.0), max(determinant(mat3(4.5, -614.030, -3.2, 3.2, -1973.7168, 9.0, 384.078, -77.60, -5839.7852)), determinant(mat3(4.5, -614.030, -3.2, 3.2, -1973.7168, 9.0, 384.078, _GLF_IDENTITY(-77.60, (_GLF_IDENTITY(-77.60, clamp(-77.60, -77.60, -77.60))) - 0.0), -5839.7852))))) : 0.0))), length(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), min(_GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(808.141), (mat2(1.0) * (vec2(0.0, 0.0)))[1]), vec2((mat2(1.0) * (vec2(0.0, 0.0)))[0], _GLF_FUZZED(-60.61)), bvec2(true, false))), mat2(1.0) * (vec2(0.0, 0.0)))))), 1.0, 0.0))) < injectionSwitch.y)))), true))))))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(4.5))) > injectionSwitch.y))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2((! (_GLF_DEAD(false))), true)))))
                {
                 for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sinh(5.6)))), 1.0)), dot(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, length(vec3(0.0, 0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, length(vec3(0.0, 0.0, 0.0))), vec2(0.0, 1.0))), exp(0.0), tan(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(cos(0.0), 1.0), vec2(0.0, 0.0)), (dot(vec2(cos(0.0), 1.0), vec2(0.0, 0.0))) / 1.0)), 1.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), vec2(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, 0.0, sqrt(length(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0))), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, cos(0.0), 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-5.6, -2.8, -230.352, -498.533, -7.3, 7380.0763)) : _GLF_IDENTITY(mat2x3(1.0, cos(0.0), 0.0, 1.0, 0.0, 0.0), mat2x3(mat4x3(mat2x3(1.0, cos(0.0), 0.0, 1.0, 0.0, 0.0))))))))), _GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(6.2), _GLF_FUZZED(26.29)), vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), bvec2(true, true)))))), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ((1)) | ((1))))))))) + (_GLF_IDENTITY(-33239 & 0, (_GLF_IDENTITY(_GLF_IDENTITY(-33239 & 0, 0 ^ (-33239 & 0)), clamp(_GLF_IDENTITY(-33239, (-33239) << 0) & 0, -33239 & 0, _GLF_IDENTITY(-33239, (true ? -33239 : _GLF_FUZZED(_injected_loop_counter))) & 0))) - (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (0 << _GLF_IDENTITY(int(5), int(5))) << 0), int(ivec2(0 << _GLF_IDENTITY(int(5), int(5)), 0)))))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
                  {
                   return;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               else
                {
                }
              }
             break;
            }
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), true, false, true)), (bool(bvec4(bool(false), true, false, true))) || false)))), _GLF_IDENTITY(false, (false) && true) || (bool(false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         continue;
        }
       return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (_GLF_DEAD(false)) && true)) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) || false)))))), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))))) && true), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) && true)))))), (! (! (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), (! (! (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), (! (! (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), (! (! (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), (! (! (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))), true, true)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true, false))), true), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true, false))), true), true, true))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), (! (! (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || (true))) || false)))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), (! (! (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || (true))))) || false)))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), (! (! (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || (true))))) || false)))))), true, true), false))))))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), _GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))), true && ((! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (! (false)) && true)))))), (! (! (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) || (true))) || false)))), true, true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), true)), (bool(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), true))) || false))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true)), (bool(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))), true))) || false))), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true)), (bool(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))), true))) || false))))))))) && true), true))), (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))) && _GLF_IDENTITY(true, (true) || false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (true))))), _GLF_IDENTITY(false, (false) || false))), bool(bvec4(bool(bvec4(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) || false))), false, false, true)))), false || (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (true))))), _GLF_IDENTITY(false, (false) || false))), bool(bvec4(bool(bvec4(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) || false))), false, false, true)))), false || (! (_GLF_DEAD(false))))))), ! (! (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (true))))), _GLF_IDENTITY(false, (false) || false))), bool(bvec4(bool(bvec4(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) || false))), false, false, true)))), false || (! (_GLF_DEAD(false)))))))))))))) && true), true))), bool(_GLF_IDENTITY(bvec2((bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), false, true, true)))))))), _GLF_IDENTITY((! (! (_GLF_DEAD(false)))) && true, ((! (! (_GLF_DEAD(false)))) && true) || false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))))) && true), true))), false), bvec2(bvec2(bvec2((bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), false, true, true)))))))), _GLF_IDENTITY((! (! (_GLF_DEAD(false)))) && true, ((! (! (_GLF_DEAD(false)))) && true) || false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))))) && true), true))), false))))))) || false) || false))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)))), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))) && true), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))) && true))), _GLF_IDENTITY(true, bool(bool(true)))))), (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))) && true))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))) && true), true))), bool(bvec2((bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))) && true), true))), false)))) || false) || false)))), ! (! (true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)), true, true)))))))), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))) && true), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(false))))), (! (! (_GLF_DEAD(false)))) && true))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), false || (! (_GLF_DEAD(false)))))))) && _GLF_IDENTITY(true, false || (true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(true, true && (true))))) && true))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))), _GLF_IDENTITY(true, bool(bool(true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))) && true))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))) && true), _GLF_IDENTITY(true, false || (true)))), false || (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))) && true))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))) && true), _GLF_IDENTITY(true, false || (true))))))), bool(bvec2((bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, ! (! (true)))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))) && true), true))), false)))) || false) || false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       continue;
      }
     return;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0))))).y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0))))).y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false, false)))))) && true)))));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), false || (_GLF_IDENTITY(true && (! (false)), ! (! (true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)) && true)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)) && true))), bool(_GLF_IDENTITY(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)) && true))), true, false), bvec3(bvec4(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)) && true))), true, false), true)))))))))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false))))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bool(_GLF_IDENTITY(false || (true), bool(bvec2(false || (true), true))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), true), false, false)))))) || _GLF_IDENTITY(false, ! (! (false)))) && (_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))) && (_GLF_IDENTITY(true, ! (! (true))))) && true)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)) || false)))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))) * (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0), _GLF_IDENTITY((1 & 1), ((1 & 1)) | ((1 & 1))) * (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1)))))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0)) - 0))))) << 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))) * (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0), _GLF_IDENTITY((1 & 1), ((1 & 1)) | ((1 & 1))) * (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1)))))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0)) - 0))))) << 0)), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))) * (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0), _GLF_IDENTITY((1 & 1), ((1 & 1)) | ((1 & 1))) * (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1)))))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0)) - 0))))) << 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))) * (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0), _GLF_IDENTITY((1 & 1), ((1 & 1)) | ((1 & 1))) * (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1)))))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0)) - 0))))) << 0)), clamp(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))) * (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0), _GLF_IDENTITY((1 & 1), ((1 & 1)) | ((1 & 1))) * (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1)))))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0)) - 0))))) << 0)), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))) * (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0), _GLF_IDENTITY((1 & 1), ((1 & 1)) | ((1 & 1))) * (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1)))))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0)) - 0))))) << 0)), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))) * (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0), _GLF_IDENTITY((1 & 1), ((1 & 1)) | ((1 & 1))) * (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), _GLF_IDENTITY(int(1), max(int(1), int(1)))))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))) | 0)) - 0))))) << 0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(1), 1 * (int(1)))) >> (_GLF_IDENTITY(0, (0) >> (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(-76592))))) >> _GLF_IDENTITY(int(0), int(0))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) | (_GLF_IDENTITY((_GLF_IDENTITY(int(1), 1 * (int(1)))) >> (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))), 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (false ? _GLF_FUZZED(-42046) : _GLF_IDENTITY(0, int(ivec3(0, 1, 0))))), _GLF_IDENTITY(0, int(ivec3(0, 1, 0)))), (max(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, 0))), (false ? _GLF_FUZZED(-42046) : _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 0), ivec3(1, 1, 1) * (_GLF_IDENTITY(ivec3(0, 1, 0), (ivec3(0, 1, 0)) / ivec3(1, 1, 1)))))))), _GLF_IDENTITY(0, int(ivec3(0, 1, 0))))) - 0))))), 0, 0))), int(0))), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(int(1), 1 * (int(1)))) >> _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), int(ivec3(0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)))))), 0, 0)))) << _GLF_IDENTITY(int(3), int(3))) ^ ((0 >> _GLF_IDENTITY(int(0), int(0))))), ((_GLF_IDENTITY(int(1), 1 * (int(1)))) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0))))), int(ivec4(_GLF_IDENTITY(int(0), int(0)), (1 | 1), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))), 1, 1, 1)), (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0))))), int(ivec4(_GLF_IDENTITY(int(0), int(0)), (1 | 1), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))), 1, 1, 1))) ^ 0)))) | ((_GLF_IDENTITY(int(1), _GLF_IDENTITY(1 * (int(1)), ~ (~ (1 * (int(1))))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))) : _GLF_FUZZED(66698)), 0 + ((true ? _GLF_IDENTITY((_GLF_IDENTITY(int(1), 1 * (int(1)))) >> _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((0 << _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(3), int(3))) ^ ((0 >> _GLF_IDENTITY(int(0), int(0))))), ((_GLF_IDENTITY(int(1), 1 * (int(1)))) >> (0 >> _GLF_IDENTITY(int(0), int(0)))) | ((_GLF_IDENTITY(int(1), 1 * (int(1)))) >> (0 >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), (false ? _GLF_FUZZED(72613) : _GLF_IDENTITY((0), ((0)) - 0))))))))) : _GLF_FUZZED(66698)))))))))), (0 << _GLF_IDENTITY(int(0), int(0))) + ((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(int(1), int(1)))), (_GLF_IDENTITY(1 & 1, (1 & 1) | 0)) * _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_IDENTITY(int(1), max(int(1), int(1))))), min((int(_GLF_IDENTITY(int(1), max(int(1), int(1))))), (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))))), int(int(_GLF_IDENTITY((int(_GLF_IDENTITY(int(1), max(int(1), int(1))))), _GLF_IDENTITY((false ? _GLF_FUZZED(-86538) : (int(_GLF_IDENTITY(int(1), max(int(1), int(1)))))), ((false ? _GLF_FUZZED(-86538) : (int(_GLF_IDENTITY(int(1), max(int(1), int(1))))))) >> (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0))), (_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0))), (_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0)))) * 1)))))), int(1)))), (1 & _GLF_IDENTITY(1, 0 + (1))) * (int(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), int(ivec2(int(1), 0)))))) << (-7589 & 0))))))))), max((int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0))), (_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0))), (_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0)))) * 1)))))), int(1)))), (1 & _GLF_IDENTITY(1, 0 + (1))) * (int(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), int(ivec2(int(1), 0)))))) << (-7589 & 0))))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0))), (_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0))), (_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0)))) * 1)))))), int(1)))), (1 & _GLF_IDENTITY(1, 0 + (1))) * (int(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), int(ivec2(int(1), 0)))))) << (-7589 & 0))))))))), ((int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0))), (_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0))), (_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), (int(1)) ^ 0)))) * 1)))))), int(1)))), (1 & _GLF_IDENTITY(1, 0 + (1))) * (int(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), int(ivec2(int(1), 0)))))) << (-7589 & 0)))))))))) << 0))) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))), ((int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), int(int(_GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), _GLF_IDENTITY((_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(53955)))), min((_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(53955)))), (_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(53955)))))) ^ 0)))))), int(1)))), (1 & _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(52152) : 1))) | (1))))) * (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), 1 * (int(1)))) + 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(1))), max(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(88930) : int(1))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(6))), (0 >> _GLF_IDENTITY(int(0), int(0))), 1)), (int(ivec4(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(88930) : int(1))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(6))), (0 >> _GLF_IDENTITY(int(0), int(0))), 1))) + (0 | 0))), int(1)))))))) << _GLF_IDENTITY(0, max(0, 0))) + 0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), 1 * (int(1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), 1 * (int(1)))), min((_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), 1 * (int(1)))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), 1 * (int(1)))), ((_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), 1 * (int(1))))) | ((_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), 1 * (int(1))))))))))) >> (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((_GLF_IDENTITY(int(1), _GLF_IDENTITY(1 * (int(1)), min(1 * (int(1)), 1 * (int(1)))))) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), clamp(0 >> _GLF_IDENTITY(int(0), int(0)), 0 >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), (0 >> _GLF_IDENTITY(int(0), int(0))) | (0 >> _GLF_IDENTITY(int(0), int(0))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(1), 1 * (int(_GLF_IDENTITY(1, ((-43437 & 0) ^ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-16184))) | 0)) ^ (_GLF_IDENTITY(1, max(1, 1)))))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))), ((_GLF_IDENTITY(int(1), 1 * (int(1)))) >> (0 >> _GLF_IDENTITY(int(0), int(0)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), ~ (~ (int(1))))), 0 | (~ (_GLF_IDENTITY(int(1), ~ (~ (int(1))))))))), 1 * (int(1)))) >> (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) / 1)), int(0))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(1), 1 * (int(_GLF_IDENTITY(1, ((-43437 & 0) ^ (0 | 0)) ^ (_GLF_IDENTITY(1, max(1, 1)))))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))), ((_GLF_IDENTITY(int(1), 1 * (int(1)))) >> (0 >> _GLF_IDENTITY(int(0), int(0)))) | ((_GLF_IDENTITY(int(1), 1 * (int(1)))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(int(1), 1 * (int(_GLF_IDENTITY(1, ((-43437 & _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-37624)))) ^ (0 | 0)) ^ (_GLF_IDENTITY(1, max(1, 1)))))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))), ((_GLF_IDENTITY(int(1), 1 * (int(1)))) >> (0 >> _GLF_IDENTITY(int(0), int(0)))) | ((_GLF_IDENTITY(int(1), 1 * (int(1)))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(1, (1) + 0))))))) : _GLF_FUZZED(66698)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        continue;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, (false) || false))), (! (false || (_GLF_IDENTITY(false, (false) || false)))) && true))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)), clamp(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)), max(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)), float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)))), float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0))))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-733.343))), 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(0.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)), clamp(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)), max(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)), float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)))), float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0))))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-733.343))), 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(0.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)), clamp(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(55.91)), bool(false)))), float(_GLF_FUZZED(-6.3)), bool(false))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.3) : 0.0)) : _GLF_FUZZED(-47.10)))), bool(true))), 1.0, 1.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)), max(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(1.6))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0)))), float(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(856.866)), float(0.0), bool(true))), 1.0, 1.0))))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-733.343))), 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(1159.0022) : _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-912.698) : 0.0)), 0.0)), 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7438.9630)), bool(false))), 0.0, 1.0, 0.0))))))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, determinant(mat2(round(length(normalize(1.0))), 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), max(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 1.0))), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))), min(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-54.90) : 0.0)))), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-649.782)), float(1.0), bool(true))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(0.1)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0, 0.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(658.631, -87.93))))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true && (true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) || (true && (true))), ! (! (_GLF_IDENTITY(true && (true), false || (true && (true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true && (true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) || (true && (true))), ! (! (_GLF_IDENTITY(true && (true), false || (true && (true))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(true && (true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) || (true && (true))), ! (! (_GLF_IDENTITY(true && (true), false || (true && (true)))))))))) || false)))) && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bvec4((_GLF_WRAPPED_IF_TRUE(true)), false, false, true)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), exp(0.0), 1.0, 1.0, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat4(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), exp(0.0), 1.0, 1.0, 0.0, 0.0)))))).x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(4.8, -6.3)) : (injectionSwitch) * mat2(1.0))), vec2(vec3((injectionSwitch) * mat2(1.0), 0.0))) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), false)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))) && true)))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)))).x)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))) >> ((32289u << 24462u) & 0u))), (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))) - 0u), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))) ^ _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), max(uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)))) | (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u), (false ? _GLF_FUZZED(uvec3(73400u, 57865u, 23620u)) : uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)))))).x))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))) ^ uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, (0u ^ 1u), 1u)), clamp(uint(uvec4(0u, 1u, (0u ^ _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(39995u) : 1u)), 0u, 1u, 1u))), (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))), 0u, (140703u & 0u))))), 1u)), uint(uvec4(0u, 1u, (0u ^ _GLF_IDENTITY(1u, min(1u, 1u))), 1u)), uint(uvec4(0u, 1u, (0u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | 0u)), 1u))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))).x))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), 0u ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, ~ (~ (0u)))))))))) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) >> 0u, (_GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), ((0u)) | 0u), (0u))) >> 0u) / 1u))) | (0u))))) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) : gl_WorkGroupSize.x)))))))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), 1u * ((~ (workgroup_base))))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(virtual_gid))))), subgroup_id))), uint(_GLF_IDENTITY(uvec3(max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))))) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))))))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))), 1u, 0u), (uvec3(max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))))) | (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (subgroup_id), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))))))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))), 1u, 0u)) << (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))))) + (0u & 196500u)) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (_GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(virtual_gid))))), subgroup_id), (clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (_GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) / 1u))))), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(virtual_gid)), max((true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (_GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) / 1u))))), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(virtual_gid)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (_GLF_IDENTITY(subgroup_id, 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) / 1u))))), ~ (subgroup_id)))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) / 1u) : _GLF_FUZZED(virtual_gid))))))), subgroup_id)) / 1u))))) + (0u & 196500u)) * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), max(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), ~ (subgroup_id)))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), clamp(((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))), 0u + (~ (((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))))), ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) / 1u) : _GLF_FUZZED(virtual_gid))))), subgroup_id))))) + (0u & 196500u)) * subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) % subgroup_size);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_IDENTITY(uint(1), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(1), (uint(1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 4, 64, 4);
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) ^ 0), 64, 0);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), max(~ (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), clamp(~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), ~ (virtual_gid), ~ (virtual_gid))))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), max(~ (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), clamp(~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), ~ (virtual_gid), ~ (virtual_gid))))))), (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), max(~ (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))), _GLF_IDENTITY(~ (virtual_gid), clamp(~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), ~ (virtual_gid), ~ (virtual_gid)))))))) << 0u)) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u))))], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   for(int _injected_loop_counter = (_GLF_IDENTITY(0, ~ (~ (0))) << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-98.38) : 1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-98.38) : 1.0, 0.0 + (false ? _GLF_FUZZED(-98.38) : 1.0))) - 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(-98.38) : 1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-98.38) : 1.0, 0.0 + (false ? _GLF_FUZZED(-98.38) : 1.0))) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.7)), bool(false))))) + 0.0))), injectionSwitch.y)), int(ivec4(int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec2(! ((false)), false)), (bool(bvec2(! ((false)), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(-98.38) : 1.0)), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, cos(sqrt(0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, sin(0.0)))))), 1, (0 & 89618), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1054) : 0)), _GLF_IDENTITY(0, (0) / 1))))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))), (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++)))) - 0))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x < injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x < injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x < injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x < injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)), true)))))))))))))))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 0, 1))) < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec3(_GLF_IDENTITY(int(7), int(7)), 0, (1 ^ 0))))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
          {
           atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), true, false)), false || (bool(bvec4(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), true, false)))))) && true), bool(bvec2(read_1 == read_2, true)))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))) ? _GLF_FUZZED(subgroup_local_id) : uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec2(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))))), bool(bvec4(bool(bvec2(read_1 == read_2, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))))), false, true, true))))))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, true)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, true)))), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec2(read_1 == read_2, true)), true && (bool(bvec2(read_1 == read_2, true))))))) | (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) + 0u)) | (read_2)), true)))))))) + 1) >> 0u), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (false ? _GLF_FUZZED(-52264) : 4)));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ! (! (((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))))) && true, ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ! (! (((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))), true && (! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ! (! (((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))))))) && true) || false)) || false)));
     if(_GLF_DEAD(false))
      break;
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) | (_GLF_IDENTITY(uint(read_1 == read_2) + 1, min(uint(read_1 == read_2) + _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) ^ 0u), _GLF_IDENTITY(0u | (uint(read_1 == read_2) + 1), (0u | (uint(read_1 == read_2) + 1)) >> 0u)))))), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 0.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, sqrt(0.0), 0.0, 0.0, abs(0.0), 0.0))) - abs(vec2(0.0, 0.0)))), (true ? injectionSwitch : _GLF_FUZZED(vec2(1789.8053, 3574.3574)))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(7.2, -9.9).x)), float(injectionSwitch.y), bool(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(7.2, -9.9).x)), float(injectionSwitch.y), bool(true))))))) || false))), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(float(injectionSwitch[1])))))) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).y)), (vec4(injectionSwitch, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), vec2(vec3(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (true ? ((injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))))), 0.0))) / vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))))), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0)))) * mat2(1.0)) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0)) / vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0))), 1.0)))), 0.0, 1.0)), max(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), exp(0.0), determinant(mat4(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, length(0.0), 1.0))) * mat2(1.0)) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)))), 0.0, 1.0)), vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)))), 0.0, 1.0))))) : _GLF_FUZZED(injectionSwitch))), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), dot(vec3(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).y))) / vec4(1.0, 1.0, 1.0, 1.0)))).x > injectionSwitch.y)) && true))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0), int(5))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (true ? _GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) : _GLF_FUZZED(94863)))) << 0) != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             return;
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), true, true))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
        }
       else
        {
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), max(0 << _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(0, min(0, 0)) << _GLF_IDENTITY(int(0), int(0)))))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1), ! (_GLF_IDENTITY(! (_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)), (! (_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1))) || false)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, false)))))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))) - sqrt(vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  return;
}
