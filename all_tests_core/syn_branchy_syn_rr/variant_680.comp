#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 uint _f0;
 bvec2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 ivec2 _f1;
 uvec3 _f2;
 uvec4 _f3;
 int _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 ivec2 _f1;
 _GLF_struct_1 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uint virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id;
 uvec4 GLF_merged3_0_2_50_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidworkgroup_base;
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 GLF_merged3_0_2_50_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidworkgroup_base.xy = GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 uvec2 GLF_merged2_0_1_16_1_1_6next_virtual_gidread_1;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y = subgroup_local_id;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.x = num_workgroup;
 GLF_merged3_0_2_50_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidworkgroup_base.xy.x = GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.z = workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged3_0_2_50_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidworkgroup_base.xy.y = GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.z;
  }
 uint workgroup_base = workgroup_size * GLF_merged3_0_2_50_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidworkgroup_base.xy.y;
 GLF_merged3_0_2_50_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidworkgroup_base.w = workgroup_base;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(uvec4(1u), ivec2(1), uvec3(1u), uvec4(1u), 1, mat3x4(1.0)), ivec2(1), _GLF_struct_1(1u, bvec2(true), uvec4(1u)), bvec2(true)), GLF_merged3_0_2_50_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidworkgroup_base.w + subgroup_id * subgroup_size + GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y);
 uint next_virtual_gid = GLF_merged3_0_2_50_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidworkgroup_base.w + subgroup_id * subgroup_size + ((GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y + 1) % subgroup_size);
 do
  {
   GLF_merged3_0_2_50_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidworkgroup_base.z = next_virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged2_0_1_16_1_1_6next_virtual_gidread_1.x = GLF_merged3_0_2_50_2_1_16_3_1_14GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idnext_virtual_gidworkgroup_base.z;
 atomicStore(buf[GLF_merged2_0_1_16_1_1_6next_virtual_gidread_1.x], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_3.virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged2_0_1_16_1_1_6next_virtual_gidread_1.y = read_1;
  }
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_3.virtual_gid], 4, 64, 0);
 if(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[GLF_merged2_0_1_16_1_1_6next_virtual_gidread_1.x], uint(GLF_merged2_0_1_16_1_1_6next_virtual_gidread_1.y == read_2) + 1, 4, 64, 4);
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
      {
       atomicStore(buf[GLF_merged2_0_1_16_1_1_6next_virtual_gidread_1.x], uint(GLF_merged2_0_1_16_1_1_6next_virtual_gidread_1.y == read_2) + 1, 4, 64, 4);
      }
    }
  }
}
