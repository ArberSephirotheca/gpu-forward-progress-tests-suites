#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.45), _GLF_FUZZED(606.322)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * ((injectionSwitch)[1]))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.45), _GLF_FUZZED(606.322)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * ((injectionSwitch)[1]))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.45), _GLF_FUZZED(606.322)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * ((injectionSwitch)[1]))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.45), _GLF_FUZZED(606.322)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * ((injectionSwitch)[1]))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.45), _GLF_FUZZED(606.322)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * ((injectionSwitch)[1]))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.45), _GLF_FUZZED(606.322)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * ((injectionSwitch)[1]))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.45), _GLF_FUZZED(606.322)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * ((injectionSwitch)[1]))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.45), _GLF_FUZZED(606.322)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * ((injectionSwitch)[1]))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) * mat2(1.0)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, true)))) || false), true)))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(41404) : 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (false ? _GLF_FUZZED((_injected_loop_counter ++)) : int(7))), int(7)))))); _injected_loop_counter --)
    {
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))) || false))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) - (0u & 96900u)))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.4)))), false || ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(85.55)), vec2(_GLF_FUZZED(9.2), (injectionSwitch)[1]), bvec2(false, true))).y : _GLF_FUZZED(6.4)))), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), clamp(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.4)))), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), clamp(vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0), vec3(injectionSwitch, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.4)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.4)))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), true)), ! (! (bool(bvec2(bool(false), true)))))))) || ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(false), true)), ! (! (bool(bvec2(bool(false), true))))), (_GLF_IDENTITY(bool(bvec2(bool(false), true)), ! (! (bool(bvec2(bool(false), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true)))))))))), (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(false), true)), ! (! (bool(bvec2(bool(false), true))))), (_GLF_IDENTITY(bool(bvec2(bool(false), true)), ! (! (bool(bvec2(bool(false), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.2)), float(injectionSwitch.y), bool(true))))))))))) || false)) || ((injectionSwitch.x > injectionSwitch.y))) && true)))))))) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) << 0u))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), clamp(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))) | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))))))) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size, (true ? (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) / ((0u | 0u) ^ 1u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.x = next_virtual_gid;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), transpose(transpose(transpose(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0)))))))))))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, sqrt(0.0), exp(0.0), 1.0, log(1.0), 0.0, cos(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), max(float(mat4x3(injectionSwitch.y, 1.0, sqrt(0.0), exp(0.0), 1.0, log(1.0), 0.0, cos(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat4x3(injectionSwitch.y, 1.0, sqrt(0.0), exp(0.0), 1.0, log(1.0), 0.0, cos(0.0), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
        }
      }
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.6, -0.7)) : injectionSwitch)).y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.x], _GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1))))), 1u * (_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1)))))))), (_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1))))))))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_id) : uint(1)))) << 0u), 0u ^ (uint(1))))), clamp((~ (_GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), (~ (_GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), (~ (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))))) >> 0u), min(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1))))), 1u * (_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1)))))))), (_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1))))))))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_id) : uint(1)))) << 0u), 0u ^ (uint(1))))), clamp((~ (_GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), (~ (_GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), (~ (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))))) >> 0u), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1))))), 1u * (_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1)))))))), (_GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1))))))))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_id) : uint(1)))) << 0u), 0u ^ (uint(1))))), clamp((~ (_GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), (~ (_GLF_IDENTITY(uint(1), 0u ^ (uint(1))))), (~ (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))))) >> 0u))))), uint(uvec4(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) | (1)))))), ~ (~ (_GLF_IDENTITY(uint(1), 0u ^ (uint(1))))))), (1u | 0u), _GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (0u) | 0u)))))), 4, 64, _GLF_IDENTITY(4, (4) - (0 ^ 0)));
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) * abs(1.0))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(79375))), ~ (~ (_GLF_IDENTITY(4, (4) + 0)))))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY((0 ^ (0 | 0)), ~ (~ (_GLF_IDENTITY((0 ^ (0 | 0)), 1 * ((0 ^ (0 | 0))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((0 ^ (0 | 0)), min((0 ^ (0 | 0)), _GLF_IDENTITY((0 ^ (0 | 0)), ((0 ^ (0 | 0))) | 0))), (_GLF_IDENTITY((0 ^ (0 | 0)), min((0 ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ (0 | 0)), ((0 ^ (0 | 0))) | 0), clamp(_GLF_IDENTITY((0 ^ (0 | 0)), ((0 ^ (0 | 0))) | 0), _GLF_IDENTITY((0 ^ (0 | 0)), ((0 ^ (0 | 0))) | 0), _GLF_IDENTITY((0 ^ (0 | 0)), ((0 ^ (0 | 0))) | 0)))))) + 0) : _GLF_FUZZED(62409))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) | (2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - 0), min(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) >> 0, clamp((int(2)) >> _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-3722))), 0)) << ivec4(0, 0, 0, 0))), (true ? int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0))) : _GLF_FUZZED(-12054))), int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), _GLF_IDENTITY((ivec4(0, 1, 1, 0)), ivec4(0, 0, 0, 0) + ((ivec4(0, 1, 1, 0)))) << ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, 0, 0))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-3722))), 0)) << ivec4(0, 0, 0, 0))), (true ? int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0))) : _GLF_FUZZED(-12054))), int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), _GLF_IDENTITY((ivec4(0, 1, 1, 0)), ivec4(0, 0, 0, 0) + ((ivec4(0, 1, 1, 0)))) << ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, 0, 0))))), (0 | 0)), max(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-3722))), 0)) << ivec4(0, 0, 0, 0))), (true ? int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0))) : _GLF_FUZZED(-12054))), int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), _GLF_IDENTITY((ivec4(0, 1, 1, 0)), ivec4(0, 0, 0, 0) + ((ivec4(0, 1, 1, 0)))) << ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, 0, 0))))), (0 | 0)), ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-3722))), 0)) << ivec4(0, 0, 0, 0))), (true ? int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0))) : _GLF_FUZZED(-12054))), int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), _GLF_IDENTITY((ivec4(0, 1, 1, 0)), ivec4(0, 0, 0, 0) + ((ivec4(0, 1, 1, 0)))) << ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, 0, 0))))), (0 | 0))))))), (int(2)) >> 0, (int(2)) >> 0)))))), int(_GLF_IDENTITY(int((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - 0), min(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) >> 0, clamp((_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, 0, 1))))) * (2))))), clamp(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, 0, 1))))) * (2))))), int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, 0, 1))))) * (2))))), int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec4(int(6), 1, 0, 1))))) * (2)))))))) >> _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (_GLF_IDENTITY(ivec4(0, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-3722))), 0), (ivec4(0, 0, 0, 0) ^ ivec4(1, 1, 1, 1)) * (ivec4(0, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-3722))), 0)))) << ivec4(0, 0, 0, 0))), (true ? int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0))) : _GLF_FUZZED(_GLF_IDENTITY(-12054, clamp(-12054, -12054, -12054))))), int(_GLF_IDENTITY(ivec4(0, 1, 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))), (ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0)))))), (int(2)) >> 0, (int(2)) >> 0))))))), max(int((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - 0), min(_GLF_IDENTITY(int(2), min(int(2), int(2))), _GLF_IDENTITY(int(2), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), ~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), int(ivec4(int(_GLF_IDENTITY(2, (2) >> 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))))) - 0)))) >> 0, clamp((int(2)) >> _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, 0)) << _GLF_IDENTITY(ivec4(0, 0, 0, 0), ~ (~ (ivec4(0, 0, 0, 0)))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (_GLF_IDENTITY(ivec4(0, 1, _GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-3722)), (0 >> _GLF_IDENTITY(int(6), int(6))) ^ ((true ? 1 : _GLF_FUZZED(-3722))))), 0), (_GLF_IDENTITY(ivec4(0, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-3722))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - (1 ^ 1))) << 0)), clamp(ivec4(0, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-3722))), 0), ivec4(0, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-3722))), 0), _GLF_IDENTITY(ivec4(0, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-3722), (_GLF_FUZZED(-3722)) | 0))), 0), (ivec4(0, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-3722))), 0)) | (ivec4(0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-3722), max(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-3722), 0 | (true ? 1 : _GLF_FUZZED(-3722))), true ? 1 : _GLF_FUZZED(-3722))))), 0)))))) ^ ivec4(0, 0, 0, 0))) << ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(true ? int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) >> 0))))) << ivec4(0, 0, 0, 0))) : _GLF_FUZZED(-12054), max(true ? int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) >> 0))))) << ivec4(0, 0, 0, 0))) : _GLF_FUZZED(-12054), true ? int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, min(0, 0))) >> 0))))) << ivec4(0, 0, 0, 0))) : _GLF_FUZZED(-12054))))), int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0))))), 1, 1, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), 0)))) << ivec4(0, 0, 0, 0)))))), (int(2)) >> 0, (int(2)) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) - 0)))) - 0)))))))), int(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (true ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-87641))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - 0), min(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, int(ivec3(2, 0, 0)))), _GLF_IDENTITY((int(2)) >> 0, clamp((int(2)) >> _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), _GLF_IDENTITY((ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) ^ ((ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0))))), max(int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), _GLF_IDENTITY((ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) ^ ((ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0))))), int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), _GLF_IDENTITY((ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) ^ ((ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (_GLF_IDENTITY(ivec4(0, 1, 1, 0), ivec4(1, 1, 1, 1) * (ivec4(0, 1, 1, 0)))) | (ivec4(0, 1, 1, 0))), (ivec4(0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))), false, true, true))) ? 1 : _GLF_FUZZED(-3722))), 0)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))))))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) - 0), 1, 1, 0), (ivec4(0, 1, 1, 0)) << _GLF_IDENTITY(ivec4(0, 0, 0, 0), clamp(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0))))), max(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) - 0), 1, 1, 0), (ivec4(0, 1, 1, 0)) << _GLF_IDENTITY(ivec4(0, 0, 0, 0), clamp(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) - 0), 1, 1, 0), (ivec4(0, 1, 1, 0)) << _GLF_IDENTITY(ivec4(0, 0, 0, 0), clamp(_GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0))))))) : _GLF_FUZZED(-12054))), int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), (ivec4(0, 1, 1, 0)) << ivec4(0, 0, 0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) * ((int(2)))) >> 0, (true ? (int(2)) >> 0 : _GLF_FUZZED(_injected_loop_counter))), (int(2)) >> 0))))))))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       for(int _injected_loop_counter = (_GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), false, false))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           break;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
                break;
               return;
              }
             return;
            }
           break;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            break;
           continue;
          }
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = (0 & 78080); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false), true, true, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))) || false)) || _GLF_IDENTITY(false, true && (false))), true, true, true))))), bool(bvec2(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false), true, true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
              return;
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         if(_GLF_DEAD(false))
          break;
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.z = read_1, (true ? _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.z = read_1, (GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.z = read_1) - 0u) : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6667.5069))), 1.0))))), max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)), (injectionSwitch) + vec2(0.0, 0.0)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(64, _GLF_IDENTITY(64, int(int(64)))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * (max(64, _GLF_IDENTITY(64, int(int(64))))))), 0);
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (((0 & _GLF_IDENTITY(29995, min(29995, 29995))) | 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(-60888))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(subgroup_local_id + _GLF_IDENTITY(1, (1) << (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), (0 << _GLF_IDENTITY(int(3), int(3))) / 1), (0 << _GLF_IDENTITY(int(3), int(3))) << 0)))))) < subgroup_size)
    {
     int i = 0;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.x], uint(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.z == read_2) + 1, 4, 64, 4);
        }
       else
        {
        }
      }
    }
   else
    {
     atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.x], uint(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.z == read_2, _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.z == _GLF_IDENTITY(read_2, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u)))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u)))), (~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u))))) | (~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u)))))), ~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.z == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u))))), true && (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.z == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u))))), bool(bvec4(GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.z == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.z == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(_GLF_IDENTITY(uint((read_2)), 0u ^ (_GLF_IDENTITY(uint((read_2)), (uint((read_2))) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u)))))), false || ((GLF_merged3_0_1_16_1_1_13_2_1_6next_virtual_gidnum_workgroupread_1.z == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), _GLF_IDENTITY((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, _GLF_IDENTITY(clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u), clamp(clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u), clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u), _GLF_IDENTITY(clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u), clamp(clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u), _GLF_IDENTITY(clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u), (clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u)) ^ 0u), clamp((_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u, (_GLF_IDENTITY(~ (read_2), max(~ _GLF_IDENTITY(_GLF_IDENTITY((read_2), uint(_GLF_IDENTITY(uint((read_2)), max(uint((read_2)), uint((read_2)))))), ((read_2)) >> 0u), ~ (read_2)))) ^ 0u))))))))))))) || false))) || _GLF_IDENTITY(false, true && (false)))) + 1, 4, 64, 4);
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true))))))), _GLF_IDENTITY(_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, true && ((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true && (! (true)), bool(bool(_GLF_IDENTITY(true && (! (true)), bool(bool(_GLF_IDENTITY(true && (! (true)), bool(bvec4(true && (! (true)), false, true, true))))))))))))))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, false, false, false))), true && ((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           continue;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     else
      {
       return;
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false)), (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false))) && true)), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))) || false), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false)), (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))) || false), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))) && true)), false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
