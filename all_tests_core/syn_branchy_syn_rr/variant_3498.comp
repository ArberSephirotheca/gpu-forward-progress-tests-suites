#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_39 {
 mat2x4 _f0;
 int _f1;
} ;

struct _GLF_struct_38 {
 ivec3 _f0;
 uint read_2;
} ;

struct _GLF_struct_37 {
 vec4 _f0;
} ;

struct _GLF_struct_40 {
 uvec2 _f0;
 _GLF_struct_37 _f1;
 vec2 _f2;
 mat4 _f3;
 _GLF_struct_38 _f4;
 _GLF_struct_39 _f5;
} ;

struct _GLF_struct_41 {
 uint _f0;
 bvec2 _f1;
 mat3 _f2;
 _GLF_struct_40 _f3;
} ;

struct _GLF_struct_35 {
 mat4x2 _f0;
} ;

struct _GLF_struct_33 {
 uvec2 _f0;
 uint _f1;
 bvec2 _f2;
 mat4x2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_34 {
 _GLF_struct_33 _f0;
 uint subgroup_id;
} ;

struct _GLF_struct_32 {
 uvec2 _f0;
} ;

struct _GLF_struct_36 {
 vec4 _f0;
 _GLF_struct_32 _f1;
 mat3x4 _f2;
 mat4x2 _f3;
 _GLF_struct_34 _f4;
 _GLF_struct_35 _f5;
} ;

struct _GLF_struct_29 {
 bvec2 _f0;
 mat2x4 _f1;
 vec3 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_28 {
 vec4 _f0;
 bool _f1;
 int i;
 mat2 _f2;
 ivec4 _f3;
 uvec4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_27 {
 mat3x4 _f0;
} ;

struct _GLF_struct_26 {
 ivec2 _f0;
 uvec4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_30 {
 _GLF_struct_26 _f0;
 bvec3 _f1;
 ivec2 _f2;
 _GLF_struct_27 _f3;
 _GLF_struct_28 _f4;
 _GLF_struct_29 _f5;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
 mat4x3 _f1;
 mat3 _f2;
 float _f3;
} ;

struct _GLF_struct_23 {
 vec4 _f0;
 mat2x3 _f1;
 bool _f2;
} ;

struct _GLF_struct_22 {
 bool _f0;
 ivec4 _f1;
 vec4 _f2;
 mat3x4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_25 {
 _GLF_struct_22 _f0;
 mat4 _f1;
 _GLF_struct_23 _f2;
 _GLF_struct_24 _f3;
} ;

struct _GLF_struct_31 {
 _GLF_struct_25 _f0;
 _GLF_struct_30 _f1;
 mat3x2 _f2;
 mat3 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_19 {
 mat3x2 _f0;
} ;

struct _GLF_struct_18 {
 bool _f0;
 uvec3 _f1;
 mat3x2 _f2;
 bool _f3;
} ;

struct _GLF_struct_17 {
 mat2x4 _f0;
 mat4x3 _f1;
 uint _f2;
 mat2x3 _f3;
 uvec4 _f4;
 uvec4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
 mat2x3 _f1;
 bvec3 _f2;
 float _f3;
 ivec2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_20 {
 float _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 mat4x3 _f4;
 _GLF_struct_19 _f5;
} ;

struct _GLF_struct_15 {
 ivec2 _f0;
} ;

struct _GLF_struct_13 {
 uint _f0;
 mat2x3 _f1;
 bvec2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 mat2 _f1;
 float _f2;
} ;

struct _GLF_struct_14 {
 uvec4 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 bvec4 _f1;
 int _f2;
 ivec2 _f3;
 ivec4 _f4;
 mat2 _f5;
 uint _f6;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 mat4x2 _f1;
 bool _f2;
 mat2x4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 uint _f1;
 mat4x2 _f2;
 ivec3 _f3;
 mat4x2 _f4;
 uint _f5;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 bvec4 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 bvec2 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
} ;

struct _GLF_struct_21 {
 _GLF_struct_9 _f0;
 ivec2 _f1;
 uint workgroup_base;
 _GLF_struct_11 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_20 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 uvec2 _f1;
 _GLF_struct_3 _f2;
 uvec3 _f3;
 uint num_workgroup;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 uint _f1;
 ivec2 _f2;
 uint subgroup_local_id;
 uvec3 _f3;
 float _f4;
 ivec4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 mat3x4 _f1;
 _GLF_struct_0 _f2;
 vec2 _f3;
 mat3x2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 mat3x4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0)) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_36 _GLF_struct_replacement_36 = _GLF_struct_36(vec4(1.0), _GLF_struct_32(uvec2(1u)), mat3x4(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat4x2(1.0), _GLF_struct_34(_GLF_struct_33(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u))), 1u, bvec2(true), mat4x2(1.0), mat4x3(1.0)), gl_SubgroupID), _GLF_struct_35(mat4x2(1.0)));
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(mat2(1.0), mat3x4(1.0), _GLF_struct_0(mat3x2(1.0), 1u, _GLF_IDENTITY(ivec2(1), (ivec2(1)) - ivec2(0, 0)), gl_SubgroupInvocationID, uvec3(1u), 1.0, ivec4(1), bvec4(true)), vec2(1.0), mat3x2(1.0), bvec4(true)), mat3x4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(uvec3(1u), uvec2(1u), _GLF_struct_3(bvec3(true)), uvec3(1u), _GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size))), 0u), (uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size))), 0u)) ^ uvec2(0u, 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_9(_GLF_struct_5(bvec2(true), bvec4(true), mat2x3(1.0)), bvec2(true), _GLF_struct_6(uvec3(1u), 1u, mat4x2(1.0), ivec3(1), mat4x2(1.0), 1u), _GLF_struct_7(ivec4(1), bvec2(true)), _GLF_struct_8(bvec3(true), mat4x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), max(_GLF_IDENTITY(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), _GLF_IDENTITY(min(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), min(_GLF_IDENTITY(min(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-371.609) : 0.0))), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), (min(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))) * sqrt(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.2))), 1.0))), _GLF_IDENTITY(min(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), max(min(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), min(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))))), vec4(1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(injectionSwitch))))).y), 0.0, 0.0)))))), true, mat2x4(1.0), mat3x4(1.0))), ivec2(1), workgroup_size * workgroup_id, _GLF_struct_11(_GLF_struct_10(ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, 0 + (1)), 0, 0, 1), (ivec4(_GLF_IDENTITY(1, 0 + (1)), 0, 0, 1)) ^ ivec4(0, 0, 0, 0))))), bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), 1, ivec2(1), ivec4(1), mat2(1.0), 1u), _GLF_IDENTITY(ivec2(1), (ivec2(1)) + ivec2(0, 0))), _GLF_struct_14(uvec4(1u), _GLF_struct_12(mat2x3(1.0), mat2(1.0), 1.0), _GLF_struct_13(1u, mat2x3(1.0), bvec2(true), bvec2(true))), _GLF_struct_15(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(1, (1) ^ 0))))), _GLF_struct_20(1.0, _GLF_struct_16(bvec4(true), mat2x3(1.0), bvec3(true), 1.0, _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1)))))) | ivec2(0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1)))))) | ivec2(0, 0)), clamp(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1)))))) | ivec2(0, 0)), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1)))))) | ivec2(0, 0)), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1)))))) | ivec2(0, 0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1)))))) | ivec2(0, 0)), clamp(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1)))))) | ivec2(0, 0)), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1)))))) | ivec2(0, 0)), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1)))))) | ivec2(0, 0)))))) >> ivec2(0, 0))))), (false ? _GLF_FUZZED(ivec2(92527, 38691)) : (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-96062, 82426)) : ivec2(1)))))) | ivec2(0, 0))))) / ivec2(1, 1)), mat3x2(1.0)), _GLF_struct_17(mat2x4(1.0), mat4x3(1.0), 1u, mat2x3(1.0), uvec4(1u), uvec4(1u), ivec3(1)), _GLF_struct_18(true, uvec3(1u), mat3x2(1.0), true), mat4x3(1.0), _GLF_struct_19(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.0)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(_GLF_IDENTITY(true, true && (true)))))))), mat4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_21.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_36._f4.subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_struct_replacement_36._f4.subgroup_id, ~ (~ (_GLF_struct_replacement_36._f4.subgroup_id))) * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_36._f4.subgroup_id, min(_GLF_IDENTITY(_GLF_struct_replacement_36._f4.subgroup_id, min(_GLF_struct_replacement_36._f4.subgroup_id, _GLF_struct_replacement_36._f4.subgroup_id)), _GLF_IDENTITY(_GLF_struct_replacement_36._f4.subgroup_id, (true ? _GLF_struct_replacement_36._f4.subgroup_id : _GLF_FUZZED(subgroup_size))))) * subgroup_size)) + _GLF_struct_replacement_2._f0._f2.subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_21.workgroup_base + _GLF_struct_replacement_36._f4.subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) + ((_GLF_struct_replacement_2._f0._f2.subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))), ! (! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))))))))))), bool(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))), ! (! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))))))))))))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_41 _GLF_struct_replacement_41 = _GLF_struct_41(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(read_1))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), bvec2(true), mat3(1.0), _GLF_struct_40(uvec2(1u), _GLF_struct_37(vec4(1.0)), vec2(1.0), mat4(1.0), _GLF_struct_38(ivec3(1), atomicLoad(buf[virtual_gid], 4, 64, 0)), _GLF_struct_39(mat2x4(1.0), 1)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(float(float(injectionSwitch.y)), float(float(injectionSwitch.y))))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))))))))), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), mix(float(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), 0.0 + (dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-88.17) : 1.0))))))) * 1.0), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(-0.7)), bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), mix(float(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(-0.7)), bool(false)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), mix(float(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(-0.7)), bool(false)))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), mix(float(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(-0.7)), bool(false))))))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), mix(float(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(-0.7)), bool(false)))))))))))) && true)), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), mix(float(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(-0.7, (false ? _GLF_FUZZED(-6.0) : -0.7)))), bool(false)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.3)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-601.718)), float(0.0), bool(true))), 1.0))))), mix(float(float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(6.3))), 0.0), vec3(1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(-0.7)), bool(false))))))) && true)))))) || (true)), true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))) || false, ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))) || false) || false)) || (true)), true, false)), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))) || false, ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))) || false) || false)) || (true)), true, false)), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), false))))) && true))) && true), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(true, true && (true)), false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, (false) || false)))) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), false))))), true), false, true)), false))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true)))))) && true) && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.y), bool(true)))) / 1.0)) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))))) || (true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(67.82) : injectionSwitch.x)))) > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || (true)), _GLF_IDENTITY(true, (true) || false), false)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, round(length(normalize(1.0))), 1.0))).y))), false))))), true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) || (true)), true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true), false, true)), false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.6))))) || (true)), true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), ! (! (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))))), true && (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), true, true)))) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (_GLF_IDENTITY(true, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) || (true))) || false), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false)))))), ((_GLF_IDENTITY(! (false), ! (! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true))) || (_GLF_IDENTITY(true, ! (! (true))))), true, false)), (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), true, false))) || false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((true), ((true)) || false)))), true, false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))), false)), false || (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))), bvec3(bvec4(bvec3(false, false, false), true))))), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))) || (true)), true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-9595.5295, -9.8)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))))).y)) || (true)), true, false)), true && (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-9595.5295, -9.8)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))))).y)) || (true)), true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-9595.5295, -9.8)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))))).y)) || (true)), true, false)), true && (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-9595.5295, -9.8)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))))).y)) || (true)), true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))), false)))))), true), false, true)), false))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-317.611)), bool(false))) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-317.611)), bool(false))) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false, false)), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-317.611)), bool(false))) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false, false)), true)), false, false, false)), (bool(bvec4(bool(bvec2(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-317.611)), bool(false))) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false, false)), true)), false, false, false))) || false))))))), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (true)) && true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(503.867)), _GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)) - 0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)))) || (true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && true)), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(503.867)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(503.867)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && true))))) && true)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(mat3x2(vec2(mat2(injectionSwitch, 0.0, 1.0)), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-1467.2517))), bool(false))), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, true))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false))))), false)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) || (true)), true, false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y), false))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(mat3x2(vec2(mat2(injectionSwitch, 0.0, 1.0)), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-1467.2517))), bool(false))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y)) || (true)), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false))))), false)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9438.2961), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-36.76)), bvec2(true, false))) : _GLF_FUZZED(((vec3(-3149.2254, -13.72, 5111.9068) / vec3(-8.4, -9.2, 4553.1734)) * mat2x3(648.791, 63.47, -6.7, 4.8, -8.7, 437.040))))).y)) || (true)), true, false)), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, length(0.0), 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(247.459)), float(float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, length(0.0), 0.0, 0.0, 1.0))), bool(true)))) < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))))), false))), true))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), vec2(1.0, 1.0) * (vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))).x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), bool(bvec3(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + 0.0))) || (_GLF_IDENTITY(true, true && (true)))), true, false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), float(_GLF_FUZZED(65.70)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (true)), true, false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, false)))))), (injectionSwitch.x < injectionSwitch.y))) || false)), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false)), false || (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))), true, false)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false)))) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), ! (! (_GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y)))))), false))), false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), false || (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false))), ! (! (! (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false))), ! (! (! (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false))), ! (! (! (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false))), ! (! (! (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, false)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false))))), true))))))), true)))))))), true), false, true)), false))))))))))))) && true), bool(bvec4(false, true, false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_struct_replacement_2._f0._f2.subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(_GLF_struct_25(_GLF_struct_22(true, ivec4(1), vec4(1.0), mat3x4(1.0), mat2(1.0)), mat4(1.0), _GLF_struct_23(vec4(1.0), mat2x3(1.0), true), _GLF_struct_24(ivec4(1), mat4x3(1.0), mat3(1.0), 1.0)), _GLF_struct_30(_GLF_struct_26(_GLF_IDENTITY(ivec2(1), max(ivec2(1), _GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))))), uvec4(1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u)), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u))))), uvec3(0u, 0u, 0u) | (uvec3(1u)))), bvec3(true), ivec2(1), _GLF_struct_27(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5515.6923) : 1.0)))))), _GLF_struct_28(vec4(1.0), true, 0, mat2(1.0), ivec4(1), uvec4(1u), mat3x2(1.0)), _GLF_struct_29(bvec2(true), mat2x4(1.0), vec3(1.0), mat2x4(1.0))), mat3x2(1.0), mat3(1.0), vec4(1.0));
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, (read_1) >> 0u) : _GLF_FUZZED(usubBorrow(subgroup_size, _GLF_IDENTITY(192945u, 0u ^ (_GLF_IDENTITY(192945u, (192945u) | 0u))), next_virtual_gid)))) == _GLF_struct_replacement_41._f3._f4.read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, (read_1) >> 0u) : _GLF_FUZZED(usubBorrow(subgroup_size, _GLF_IDENTITY(192945u, 0u ^ (_GLF_IDENTITY(192945u, (192945u) | 0u))), next_virtual_gid)))) == _GLF_IDENTITY(_GLF_struct_replacement_41._f3._f4.read_2, (_GLF_IDENTITY(_GLF_struct_replacement_41._f3._f4.read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_41._f3._f4.read_2, (_GLF_struct_replacement_41._f3._f4.read_2) << 0u)) - 0u, ((_GLF_IDENTITY(_GLF_struct_replacement_41._f3._f4.read_2, (_GLF_struct_replacement_41._f3._f4.read_2) << 0u)) - 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_41._f3._f4.read_2, (_GLF_struct_replacement_41._f3._f4.read_2) << 0u)) - 0u)))) / 1u)), (false ? _GLF_FUZZED(workgroup_id) : uint(_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, (read_1) >> 0u) : _GLF_FUZZED(usubBorrow(subgroup_size, _GLF_IDENTITY(192945u, 0u ^ (_GLF_IDENTITY(192945u, (192945u) | 0u))), next_virtual_gid)))) == _GLF_IDENTITY(_GLF_struct_replacement_41._f3._f4.read_2, (_GLF_IDENTITY(_GLF_struct_replacement_41._f3._f4.read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_41._f3._f4.read_2, (_GLF_struct_replacement_41._f3._f4.read_2) << 0u)) - 0u, ((_GLF_IDENTITY(_GLF_struct_replacement_41._f3._f4.read_2, (_GLF_struct_replacement_41._f3._f4.read_2) << 0u)) - 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_41._f3._f4.read_2, (_GLF_struct_replacement_41._f3._f4.read_2) << 0u)) - 0u)))) / 1u))))) << 0u) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_struct_replacement_41._f3._f4.read_2) + 1, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), (! (false)) && true)))))), _GLF_IDENTITY(bool(bool((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), true && (bool(bool((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && ((bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false, false, true))))), true, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
}
