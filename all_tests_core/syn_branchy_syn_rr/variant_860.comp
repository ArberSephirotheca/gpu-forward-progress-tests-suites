#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) / 1.0)), float(_GLF_FUZZED(3.9)), bool(false))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(45.82)), bool(false))) > injectionSwitch.y)) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bool(true))))))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, (3u) >> 0u)), uvec3(3u)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(98308u, 78176u, 89267u)) : _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(3u, (3u) >> 0u)), uvec3(3u))))))))) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-678.021, clamp(-678.021, _GLF_IDENTITY(-678.021, 0.0 + (-678.021)), -678.021)))), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-678.021, clamp(-678.021, _GLF_IDENTITY(-678.021, 0.0 + (-678.021)), -678.021)))), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-678.021, clamp(-678.021, _GLF_IDENTITY(-678.021, 0.0 + (-678.021)), -678.021)))), float(injectionSwitch.y), bool(true)))), (mix(float(_GLF_FUZZED(_GLF_IDENTITY(-678.021, clamp(-678.021, _GLF_IDENTITY(-678.021, 0.0 + (-678.021)), -678.021)))), float(injectionSwitch.y), bool(true))) / 1.0)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-678.021, clamp(-678.021, _GLF_IDENTITY(-678.021, 0.0 + (-678.021)), -678.021)))), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED(_GLF_IDENTITY(-678.021, clamp(-678.021, _GLF_IDENTITY(-678.021, 0.0 + (-678.021)), -678.021)))), float(injectionSwitch.y), bool(true))) / 1.0)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(packUnorm2x16(_GLF_IDENTITY(vec2(2.4, -9.1), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(2.4, -9.1), _GLF_IDENTITY((_GLF_IDENTITY(vec2(2.4, -9.1), clamp(vec2(2.4, -9.1), vec2(2.4, -9.1), vec2(2.4, -9.1)))) / vec2(1.0, 1.0), sqrt(sqrt(vec2(1.0, 1.0))) * ((_GLF_IDENTITY(vec2(2.4, -9.1), clamp(vec2(2.4, -9.1), vec2(2.4, -9.1), vec2(2.4, -9.1)))) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-81.13)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))), 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), float(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0), vec4(0.0, 0.0, 0.0, 1.0))) / 1.0)), exp(0.0), 1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)), 0.0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(2.4, -9.1), (_GLF_IDENTITY(vec2(2.4, -9.1), clamp(vec2(2.4, -9.1), vec2(2.4, -9.1), vec2(2.4, -9.1)))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-93.96)), vec2((_GLF_IDENTITY(vec2(2.4, -9.1), (_GLF_IDENTITY(vec2(2.4, -9.1), _GLF_IDENTITY(clamp(vec2(2.4, -9.1), vec2(2.4, -9.1), vec2(_GLF_IDENTITY(2.4, min(_GLF_IDENTITY(2.4, float(mat3x4(2.4, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0), 0.0, 1.0))), _GLF_IDENTITY(2.4, max(2.4, 2.4)))), -9.1)), _GLF_IDENTITY(mat2(1.0) * (clamp(vec2(2.4, -9.1), vec2(2.4, -9.1), vec2(_GLF_IDENTITY(2.4, min(_GLF_IDENTITY(2.4, float(mat3x4(2.4, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0), 0.0, 1.0))), _GLF_IDENTITY(2.4, max(2.4, 2.4)))), -9.1))), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(mat2(1.0) * (clamp(vec2(2.4, -9.1), vec2(2.4, -9.1), vec2(_GLF_IDENTITY(2.4, min(_GLF_IDENTITY(2.4, float(mat3x4(2.4, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0), 0.0, 1.0))), _GLF_IDENTITY(2.4, max(2.4, 2.4)))), -9.1))), vec2(vec2(mat2(1.0) * (clamp(vec2(2.4, -9.1), vec2(2.4, -9.1), vec2(_GLF_IDENTITY(2.4, min(_GLF_IDENTITY(2.4, float(mat3x4(2.4, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, sqrt(1.0), sqrt(0.0), 0.0, 1.0))), _GLF_IDENTITY(2.4, max(2.4, 2.4)))), -9.1))))))))))) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(vec2(2.4, -9.1), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(2.4, -9.1), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-6.4, mix(float(-6.4), float(_GLF_FUZZED(-985.314)), bool(false))), -8.6)) : vec2(2.4, -9.1))), clamp(vec2(2.4, -9.1), vec2(2.4, _GLF_IDENTITY(-9.1, (false ? _GLF_FUZZED(-0.8) : _GLF_IDENTITY(-9.1, max(_GLF_IDENTITY(_GLF_IDENTITY(-9.1, max(-9.1, -9.1)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0), vec4(cos(0.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0), vec4(cos(0.0), 0.0, 1.0, 0.0))) + (_GLF_IDENTITY(-9.1, max(-9.1, -9.1)))), -9.1))))), vec2(2.4, -9.1)))) / vec2(1.0, 1.0)))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(2.4, -9.1), (_GLF_IDENTITY(vec2(2.4, -9.1), clamp(_GLF_IDENTITY(vec2(2.4, -9.1), clamp(_GLF_IDENTITY(vec2(2.4, -9.1), clamp(vec2(2.4, -9.1), vec2(2.4, -9.1), vec2(2.4, -9.1))), vec2(2.4, -9.1), vec2(2.4, -9.1))), vec2(2.4, -9.1), vec2(2.4, -9.1)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(2.4, -9.1), (_GLF_IDENTITY(vec2(2.4, -9.1), clamp(vec2(2.4, -9.1), vec2(2.4, -9.1), _GLF_IDENTITY(vec2(_GLF_IDENTITY(2.4, 1.0 * (2.4)), -9.1), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(2.4, 1.0 * (2.4)), -9.1), mat2(1.0) * (vec2(_GLF_IDENTITY(2.4, 1.0 * (2.4)), -9.1)))) - abs(vec2(0.0, 0.0)))))) / vec2(1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 0.0, 1.0)))), sqrt(1.0), 0.0))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(packUnorm2x16(_GLF_IDENTITY(vec2(2.4, _GLF_IDENTITY(-9.1, _GLF_IDENTITY(max(-9.1, -9.1), length(vec3(0.0, 0.0, 0.0)) + (max(-9.1, -9.1))))), vec2(_GLF_IDENTITY(mat3(vec2(2.4, _GLF_IDENTITY(_GLF_IDENTITY(-9.1, _GLF_IDENTITY(min(-9.1, -9.1), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(min(-9.1, -9.1), mix(float(min(-9.1, -9.1)), float(_GLF_FUZZED(-5857.9853)), bool(false))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), determinant(mat3(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0))), mat3x2(mat4x3(mat3x2(_GLF_IDENTITY(min(-9.1, -9.1), mix(float(min(-9.1, -9.1)), float(_GLF_FUZZED(-5857.9853)), bool(false))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), determinant(mat3(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0))))))))), (false ? _GLF_FUZZED((sign(-7312.5386) / -34.87)) : _GLF_IDENTITY(_GLF_IDENTITY(-9.1, (true ? -9.1 : _GLF_FUZZED(-900.515))), (-9.1) + 0.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0), sqrt(0.0), sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7601.0621)), _GLF_IDENTITY(bool(false), (bool(false)) || false)))), (mat3(vec2(2.4, -9.1), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-87.06)), float(1.0), bool(true)))) * round(length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7601.0621)), bool(false))))) / mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - 0.0), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(571.099)), bool(false))))))), 1.0)))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(packUnorm2x16(_GLF_IDENTITY(vec2(2.4, -9.1), vec2(mat3(vec2(2.4, -9.1), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), sqrt(1.0), 0.0)))), min(packUnorm2x16(_GLF_IDENTITY(vec2(2.4, -9.1), vec2(mat3(vec2(2.4, -9.1), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), sqrt(1.0), 0.0)))), packUnorm2x16(_GLF_IDENTITY(vec2(2.4, -9.1), vec2(mat3(vec2(2.4, -9.1), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (sqrt(0.0)) - 0.0), sqrt(1.0), 0.0))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))) || false))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(packUnorm2x16(_GLF_IDENTITY(vec2(2.4, -9.1), vec2(_GLF_IDENTITY(mat3(vec2(2.4, _GLF_IDENTITY(-9.1, (_GLF_IDENTITY(-9.1, mix(float(_GLF_FUZZED(5.6)), float(-9.1), bool(true)))) * 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, sqrt(0.0), sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7601.0621)), bool(false)))), _GLF_IDENTITY((mat3(vec2(2.4, -9.1), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, sqrt(0.0), sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))) - log(cos(0.0))), mix(float(0.0), float(_GLF_FUZZED(-7601.0621)), bool(false))))), ((mat3(vec2(2.4, _GLF_IDENTITY(-9.1, clamp(-9.1, -9.1, _GLF_IDENTITY(-9.1, clamp(-9.1, -9.1, -9.1))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), sqrt(1.0), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), mix(float(float(0.0)), float(_GLF_FUZZED(8.0)), bool(false))), float(_GLF_FUZZED(-7601.0621)), _GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(packUnorm2x16(_GLF_IDENTITY(vec2(2.4, -9.1), vec2(mat3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(2.4, clamp(_GLF_IDENTITY(2.4, mix(float(2.4), float(_GLF_FUZZED(8.8)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))))), _GLF_IDENTITY(2.4, clamp(2.4, 2.4, 2.4)), 2.4)), -9.1), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(2.4, (2.4) / 1.0), clamp(_GLF_IDENTITY(2.4, mix(float(2.4), float(_GLF_FUZZED(8.8)), _GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))))), _GLF_IDENTITY(2.4, clamp(2.4, 2.4, 2.4)), 2.4)), -9.1), mix(vec2(_GLF_FUZZED(-70.71), _GLF_FUZZED(986.798)), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(2.4, mix(float(_GLF_FUZZED(float(7895))), float(2.4), bool(true))), clamp(_GLF_IDENTITY(2.4, mix(float(2.4), float(_GLF_FUZZED(8.8)), _GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))))), _GLF_IDENTITY(2.4, clamp(2.4, 2.4, 2.4)), 2.4)), -9.1))[0], (vec2(_GLF_IDENTITY(2.4, clamp(_GLF_IDENTITY(2.4, mix(float(2.4), float(_GLF_FUZZED(8.8)), _GLF_IDENTITY(bool(false), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)) || (bool(false))))), _GLF_IDENTITY(2.4, clamp(2.4, 2.4, 2.4)), 2.4)), -9.1))[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(7.1, -1.1)))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, sqrt(0.0), sqrt(1.0), 0.0))))), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(bitfieldReverse(uvec3(160697u, 147536u, 197272u)).t))))) | (_GLF_FUZZED(packUnorm2x16(_GLF_IDENTITY(vec2(2.4, -9.1), vec2(mat3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(2.4, clamp(_GLF_IDENTITY(2.4, mix(float(2.4), float(_GLF_FUZZED(8.8)), _GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))))), _GLF_IDENTITY(2.4, clamp(2.4, 2.4, 2.4)), 2.4)), -9.1), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(2.4, clamp(_GLF_IDENTITY(2.4, mix(float(2.4), float(_GLF_FUZZED(8.8)), _GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(bool(bvec4((bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec4((bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true))))))), _GLF_IDENTITY(2.4, clamp(2.4, 2.4, 2.4)), 2.4)), -9.1), mix(vec2(_GLF_FUZZED(-70.71), _GLF_FUZZED(986.798)), vec2((vec2(_GLF_IDENTITY(2.4, clamp(_GLF_IDENTITY(2.4, mix(float(2.4), float(_GLF_FUZZED(8.8)), _GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))))), _GLF_IDENTITY(2.4, clamp(2.4, 2.4, 2.4)), 2.4)), _GLF_IDENTITY(-9.1, (-9.1) * _GLF_ONE(1.0, injectionSwitch.y))))[0], (vec2(_GLF_IDENTITY(2.4, clamp(_GLF_IDENTITY(2.4, _GLF_IDENTITY(mix(float(2.4), float(_GLF_FUZZED(8.8)), _GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), clamp(mix(float(2.4), float(_GLF_FUZZED(8.8)), _GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), mix(float(2.4), float(_GLF_FUZZED(8.8)), _GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), mix(float(2.4), float(_GLF_FUZZED(8.8)), _GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))))))), _GLF_IDENTITY(2.4, clamp(2.4, 2.4, 2.4)), 2.4)), -9.1))[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(7.1, -1.1)))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, sqrt(0.0), sqrt(1.0), 0.0))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(_GLF_IDENTITY(packUnorm2x16(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(2.4, (2.4) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2.4, clamp(2.4, 2.4, _GLF_IDENTITY(2.4, 1.0 * (2.4)))), (_GLF_IDENTITY(2.4, clamp(2.4, 2.4, _GLF_IDENTITY(2.4, 1.0 * (2.4))))) * 1.0) : _GLF_FUZZED(-1.3))), -9.1), (true ? _GLF_IDENTITY(vec2(2.4, -9.1), mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.2)), bool(false)))) * (vec2(2.4, -9.1))) : _GLF_FUZZED(atan(injectionSwitch, mix(vec2(-88.99, _GLF_IDENTITY(1580.6129, mix(float(_GLF_IDENTITY(1580.6129, mix(float(1580.6129), float(_GLF_FUZZED(4.3)), bool(false)))), float(_GLF_FUZZED(vec2(-5.0, 932.594).t)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), injectionSwitch, _GLF_IDENTITY(785.634, (false ? _GLF_FUZZED(-4.3) : 785.634))))))), vec2(_GLF_IDENTITY(mat3(vec2(2.4, _GLF_IDENTITY(-9.1, clamp(_GLF_IDENTITY(-9.1, min(-9.1, -9.1)), _GLF_IDENTITY(-9.1, mix(float(_GLF_IDENTITY(-9.1, clamp(_GLF_IDENTITY(-9.1, (true ? _GLF_IDENTITY(-9.1, clamp(-9.1, -9.1, -9.1)) : _GLF_FUZZED(-601.702))), -9.1, -9.1))), float(_GLF_FUZZED((-571.913))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)))) && true), true))))), _GLF_IDENTITY(-9.1, (-9.1) / 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0))))), 1.0, 1.0, 1.0, sqrt(0.0), sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-7601.0621)), bool(false)))), (mat3(vec2(2.4, -9.1), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-1.1) : (1.0))), (1.0))) / _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-16.36) : 1.0)), injectionSwitch.y)), 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, length(vec2(0.0, 0.0)), cos(0.0))))), sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(418.823)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0)))) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))))[0], _GLF_FUZZED(2.5)), vec2(_GLF_IDENTITY(_GLF_FUZZED(13.54), mix(float(_GLF_FUZZED(2.3)), float(_GLF_FUZZED(13.54)), bool(true))), (_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(38.44), _GLF_IDENTITY((vec2(0.0, 1.0))[1], max((vec2(0.0, 1.0))[1], (vec2(0.0, 1.0))[1]))), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(2778.3620)), bvec2(true, false))))[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-7601.0621)), float(mat2(float(_GLF_FUZZED(-7601.0621)), 0.0, 1.0, 1.0))), bool(false))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (true ? packUnorm2x16(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(2.4, (2.4) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2.4, clamp(2.4, 2.4, _GLF_IDENTITY(2.4, 1.0 * (2.4)))), (_GLF_IDENTITY(2.4, clamp(2.4, 2.4, _GLF_IDENTITY(2.4, 1.0 * (2.4))))) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7438.1675)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-828.093)), bool(false)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(-1.3))), -9.1), (true ? _GLF_IDENTITY(vec2(2.4, -9.1), mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.2)), bool(false)))) * (vec2(2.4, -9.1))) : _GLF_FUZZED(atan(injectionSwitch, mix(vec2(-88.99, _GLF_IDENTITY(1580.6129, mix(float(_GLF_IDENTITY(1580.6129, mix(float(1580.6129), float(_GLF_FUZZED(4.3)), bool(false)))), float(_GLF_FUZZED(vec2(-5.0, 932.594).t)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), injectionSwitch, _GLF_IDENTITY(785.634, (false ? _GLF_FUZZED(-4.3) : 785.634))))))), vec2(_GLF_IDENTITY(mat3(vec2(2.4, _GLF_IDENTITY(-9.1, clamp(_GLF_IDENTITY(-9.1, min(-9.1, -9.1)), _GLF_IDENTITY(-9.1, mix(float(_GLF_IDENTITY(-9.1, clamp(_GLF_IDENTITY(-9.1, (true ? _GLF_IDENTITY(-9.1, clamp(-9.1, -9.1, -9.1)) : _GLF_FUZZED(-601.702))), _GLF_IDENTITY(-9.1, (-9.1) - 0.0), -9.1))), float(_GLF_FUZZED((-571.913))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) - log(1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5083.8907))), 1.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))))), max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))))))) > injectionSwitch.y))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)))) && true), true))))), _GLF_IDENTITY(-9.1, (-9.1) / 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0))))), 1.0, 1.0, 1.0, sqrt(0.0), sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-7601.0621)), bool(false)))), (mat3(vec2(2.4, -9.1), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-1.1) : (1.0))), (1.0))) / _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) : _GLF_FUZZED(-5.5))), (false ? _GLF_FUZZED(-16.36) : 1.0)), injectionSwitch.y)), 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, length(vec2(0.0, 0.0)), cos(0.0))))), sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(float(1.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat3x2(float(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(float(_GLF_IDENTITY(mat3x2(float(1.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat3x2(float(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_IDENTITY(mat3x2(float(1.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat3x2(float(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_IDENTITY(mat3x2(float(1.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat3x2(float(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))))), float(_GLF_FUZZED(418.823)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0)))) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(vec2(0.0, 1.0), vec2(1.0, 1.0) * (vec2(0.0, 1.0))))[0], _GLF_FUZZED(2.5)), vec2(_GLF_IDENTITY(_GLF_FUZZED(13.54), mix(float(_GLF_FUZZED(2.3)), float(_GLF_FUZZED(13.54)), bool(true))), (_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(38.44), _GLF_IDENTITY((vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.6) : 0.0)), 1.0))[1], max((vec2(0.0, 1.0))[1], _GLF_IDENTITY((vec2(0.0, 1.0)), clamp((vec2(0.0, 1.0)), (vec2(0.0, 1.0)), (vec2(0.0, 1.0))))[1]))), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(2778.3620)), bvec2(true, false))))[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))), mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-7601.0621)), float(mat2(float(_GLF_FUZZED(-7601.0621)), 0.0, 1.0, 1.0))), bool(false))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(178516u))))))) / 1u))) : _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, (((1u ^ 0u) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u))), 1u, _GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) + _GLF_IDENTITY(0u, max(0u, 0u))))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, 1u * (_GLF_IDENTITY(4u, uint(uvec3(4u, 1u, 1u)))))) * 1u)))) * (1u))))), (workgroup_size * workgroup_id) / 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)), _GLF_IDENTITY((subgroup_id * subgroup_size), max(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u), (subgroup_id * subgroup_size))) << (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(workgroup_size))) & 197435u)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uvec2((subgroup_local_id + 1) % subgroup_size, 1u)), (uint(uvec2((subgroup_local_id + 1) % subgroup_size, 1u))) - 0u)), 1u * (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(uint(uvec2((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size, 1u)), (uint(uvec2((subgroup_local_id + 1) % subgroup_size, 1u))) - 0u)))), (1u ^ 1u) ^ ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && _GLF_IDENTITY(true, (true) || false)))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), 0u + (_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bool(true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), true && ((! (false)))) && true)))) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (false)))))) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)), bool(bool(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (false)))))) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false))))))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (false) || false)) && true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ((! (_GLF_IDENTITY(false, (false) || false)))) || _GLF_IDENTITY(false, false || (false)))), ! (! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ((! (_GLF_IDENTITY(false, (false) || false)))) || false))))))))))) || false, ((_GLF_IDENTITY(false, (false) || false)) || false) || false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3((false) || false, _GLF_IDENTITY(true, false || (true)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, true)))), false || (! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, true)))))))) || false, _GLF_IDENTITY(true, false || (true)), true), true))))))) || false)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(0, ~ (~ (0))) ^ (64)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), min(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), (false ? _GLF_FUZZED(-66724) : _GLF_IDENTITY(64, 0 ^ (64)))), _GLF_IDENTITY(64, 0 ^ (64)), _GLF_IDENTITY(64, 0 ^ (64)))), _GLF_IDENTITY(64, 0 ^ (64)))), (_GLF_IDENTITY(64, 0 ^ (64))) ^ 0), _GLF_IDENTITY(64, 0 ^ (64)))), 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) >> 0u), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << 0u)) * 1u) / 1u))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) | 0u)), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), _GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), max(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))))) | 0u))) << 0u))))) + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) >> 0u), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << 0u)) * 1u) / 1u))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) | 0u)), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), _GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), max(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))))) | 0u))) << 0u))))) + 1 < subgroup_size), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) >> 0u), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << 0u)) * 1u) / 1u))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) | 0u)), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), _GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), max(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))))) | 0u))) << 0u))))) + 1 < subgroup_size))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) >> 0u), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << 0u)) * 1u) / 1u))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) | 0u)), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), _GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), max(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))))) | 0u))) << 0u))))) + 1 < subgroup_size), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) >> 0u), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << 0u)) * 1u) / 1u))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) | 0u)), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), _GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), max(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))))) | 0u))) << 0u))))) + 1 < subgroup_size)))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) >> 0u), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << 0u)) * 1u) / 1u))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) | 0u)), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), _GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), max(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))))) | 0u))) << 0u))))) + 1 < subgroup_size), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) >> 0u), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << 0u)) * 1u) / 1u))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) | 0u)), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), _GLF_IDENTITY(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), max(clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)))), clamp((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))))) | 0u))) << 0u))))) + 1 < subgroup_size))))))) && true)))))
  {
   int i = _GLF_IDENTITY(0, (0) << 0);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uint(read_1), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (uint(read_1))))) == read_2) + 1, 0u ^ (uint(_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, 0u + (read_1)) : _GLF_FUZZED(subgroup_local_id))) == read_2) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(609.379, -7137.0783)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false) && true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((read_1 == read_2) && _GLF_IDENTITY(true, (true) || false), ! (! ((read_1 == read_2) && true)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))) == read_2) && _GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(min(read_1, read_1), (min(read_1, read_1)) - 0u)) == read_2) && true, false || ((_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) && true)))))), ((_GLF_IDENTITY(_GLF_IDENTITY((read_1 == read_2) && _GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! ((read_1 == read_2) && _GLF_IDENTITY(true, (true) || false)), bool(bool(! ((read_1 == read_2) && _GLF_IDENTITY(true, (true) || false))))))), ! (! ((_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2)))) && true))))) || false)), false || ((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))) == read_2) && _GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(min(read_1, read_1), (min(read_1, read_1)) - 0u)) == read_2) && true, false || ((_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) && true)))))), ((_GLF_IDENTITY(_GLF_IDENTITY((read_1 == read_2) && _GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! ((read_1 == read_2) && _GLF_IDENTITY(true, (true) || false)), bool(bool(! ((read_1 == read_2) && _GLF_IDENTITY(true, (true) || false))))))), ! (! ((_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2)))) && true))))) || false)))) || false), false || (_GLF_IDENTITY((_GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_2), clamp(uint(read_2), uint(read_2), uint(read_2))), max(_GLF_IDENTITY(uint(read_2), clamp(uint(read_2), uint(read_2), uint(read_2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_2), clamp(uint(read_2), uint(read_2), uint(read_2))), ~ (~ (_GLF_IDENTITY(uint(read_2), clamp(uint(read_2), uint(read_2), uint(read_2))))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_2), _GLF_IDENTITY(clamp(uint(read_2), uint(read_2), uint(read_2)), (clamp(uint(read_2), uint(read_2), uint(read_2))) | (clamp(uint(read_2), uint(read_2), uint(read_2)))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_2), max(uint(read_2), uint(read_2))), clamp(uint(read_2), uint(read_2), uint(read_2)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_2), clamp(uint(read_2), uint(read_2), uint(read_2)))), (uint(_GLF_IDENTITY(uint(read_2), clamp(uint(read_2), uint(read_2), uint(read_2))))) | (uint(_GLF_IDENTITY(uint(read_2), clamp(uint(read_2), uint(read_2), uint(read_2)))))), uint(_GLF_IDENTITY(uint(read_2), clamp(uint(read_2), uint(read_2), uint(read_2)))))), uint(_GLF_IDENTITY(uint(read_2), clamp(uint(read_2), uint(read_2), uint(read_2)))))))) && _GLF_IDENTITY(true, (true) || false), ! (! ((read_1 == read_2) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))) == read_2) && _GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) | 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) | 0u)), (uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) | 0u))) | (uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) | 0u))))) + 0u)), min(read_1, read_1)) == read_2) && true, ! (! ((_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) && true))), false || ((_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) && true)))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))) == read_2) && _GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) && true, ((_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) && true) || false), ! (! ((_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) && true))), false || ((_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) && true))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2) && _GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((read_1 == read_2) && _GLF_IDENTITY(true, (true) || false), ((read_1 == read_2) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec2(_GLF_IDENTITY((true) || false, ((true) || false) || false), false))))) && true)), bool(bool(! ((read_1 == read_2) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false))))))), ! (! ((_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) && true))))) || false)) || false))) || false))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(acos(6886.5544)) : injectionSwitch.x))), float(_GLF_FUZZED(float(169020u))), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7531.4371)), bool(false))) < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7531.4371)), bool(false))) < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7531.4371)), bool(false))) < injectionSwitch.y))))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7531.4371)), bool(false))) < injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
