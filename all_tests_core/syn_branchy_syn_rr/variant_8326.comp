#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-688.284), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.1)), bvec2(true, false))).y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(-9.0)), bool(false))), exp(0.0))), 1.0, 1.0)))) + 0.0), 1.0), min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, clamp(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-56.96) : 0.0)), (false ? _GLF_FUZZED(-859.809) : _GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-486.773))) - 0.0)), (1.0) - 0.0, (1.0) - 0.0))), 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))), min(_GLF_IDENTITY(_GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))), max(_GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))), _GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))))), _GLF_IDENTITY(_GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))), (_GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058)))) - vec4(0.0, 0.0, 0.0, 0.0)))) : vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 1.0, 1.0))), vec4(injectionSwitch.y, 0.0, 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8914.4669)), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(true))), 0.0, 0.0)), 1.0, 1.0), min(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(injectionSwitch.y, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), min(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(injectionSwitch.y, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), min(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(injectionSwitch.y, 0.0, 1.0, 1.0))))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 1.0, exp(0.0), exp(0.0), 1.0, 1.0)))), mix(float((_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 1.0, exp(0.0), exp(0.0), 1.0, 1.0))))), float(_GLF_FUZZED(-17.08)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + 0.0), 1.0), min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, clamp(_GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(-859.809) : (1.0) - 0.0)), (1.0) - 0.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0))), 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * _GLF_IDENTITY(vec2(5.8, 4939.6058), clamp(vec2(5.8, 4939.6058), vec2(5.8, 4939.6058), _GLF_IDENTITY(vec2(5.8, 4939.6058), max(vec2(5.8, 4939.6058), vec2(5.8, 4939.6058))))))) : vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 1.0)), _GLF_IDENTITY(min(min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))) : vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))) : vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 1.0, 1.0))), min(min(min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))) : vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))) : vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 1.0, 1.0))), _GLF_IDENTITY(min(min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))) : vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))) : vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 1.0, 1.0))), _GLF_IDENTITY(vec4(mat3x4(min(min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))) : vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))) : vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), (vec4(mat3x4(min(min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))) : vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 1.0, 1.0)), min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat2x4(56.93, -67.71, -5.1, 9.9, 85.46, -2047.4814, 6.2, 525.418) * vec2(5.8, 4939.6058))) : vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0))))))), vec4(injectionSwitch.y, 0.0, 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), min(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0), 1.0 * (_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0), clamp(min(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0), min(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0), mix(float(_GLF_FUZZED(-1776.2594)), float(min(_GLF_IDENTITY(0.0, (0.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0)), bool(true)))))))), 1.0, 1.0), vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 1.0, 1.0)))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) / 1.0), 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), min(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(injectionSwitch.y, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), vec4(mat2x4(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), 0.0, 1.0, tan(0.0), 0.0))), min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), min(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat3x2(vec4(1.0, 1.0, 1.0, 1.0), sqrt(0.0), 1.0)))) + vec4(0.0, 0.0, 0.0, 0.0)) * (vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(injectionSwitch.y, 0.0, 1.0, 1.0), vec4(injectionSwitch.y, 0.0, 1.0, 1.0))))), vec4(injectionSwitch.y, 0.0, 1.0, 1.0)))))))) / 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))) && true)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) * cos(vec2(0.0, 0.0))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) * cos(0.0)) - 0.0)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY(! (((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), false)))))))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.21, -2.9)) : injectionSwitch)).y))))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.3, 25.15))))) - vec2(0.0, 0.0)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))).x, max(_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x)), gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, false, true))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-65.35))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y : _GLF_FUZZED(asinh(491.761))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))), (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true))))) && true)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(atomicExchange(subgroup_size, num_workgroup)) : subgroup_id))) | (subgroup_id)) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 0u))), subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((subgroup_id >> workgroup_id)))))) * subgroup_size)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 0u))), subgroup_id * subgroup_size, subgroup_id * subgroup_size))), max(~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u, 0u, 0u))), subgroup_id * subgroup_size, subgroup_id * subgroup_size))), ~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 0u))), subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))) | (~ (~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 0u, 0u, 0u))), subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true)), _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false) || _GLF_IDENTITY(false, bool(bvec2(false, true)))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 1u, (0u | uint(_GLF_ONE(1.0, injectionSwitch.y))))), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 1u, (0u | uint(_GLF_ONE(1.0, injectionSwitch.y)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 1u)), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, _GLF_IDENTITY(1u, (1u) >> 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u), uvec3(0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))))), 0u)), clamp(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, _GLF_IDENTITY(144214u, (144214u) - 0u), 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u | 0u)), 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : _GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(uvec3(120767u, 146584u, 144392u), subgroup_id)) : uvec3(subgroup_size, 0u, 1u))))), 0u))))), (_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(48435u, 144214u, 104315u)), uvec3(0u, 0u, 0u) ^ (_GLF_FUZZED(uvec3(48435u, 144214u, 104315u)))) : uvec3(subgroup_size, 0u, 1u), uvec3(0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))))), 0u)), clamp(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(48435u, (48435u) - 0u), 144214u, 104315u)) : uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) | (subgroup_size)), subgroup_size)), 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, _GLF_IDENTITY(1u, 0u ^ (1u))), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : _GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(uvec3(120767u, 146584u, 144392u), subgroup_id)) : uvec3(subgroup_size, 0u, 1u))))), 0u)))))) ^ uvec3(0u, 0u, 0u))))), max(_GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 1u)), _GLF_IDENTITY(0u ^ (uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(48435u, 144214u, 104315u)), (false ? _GLF_FUZZED((uvec3(108985u, 84170u, 73282u) << uvec3(160794u, 144120u, 35358u))) : _GLF_FUZZED(uvec3(48435u, 144214u, _GLF_IDENTITY(104315u, (104315u) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))) : uvec3(subgroup_size, 0u, 1u))), 0u)), clamp(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), _GLF_IDENTITY(0u, 0u ^ (0u)))), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u))))))))), _GLF_IDENTITY(0u, (0u) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(uint(0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uint(uint(0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) ^ 0u)))) | (0u ^ (uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), clamp(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u + (1u)), 1u))), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u), clamp(false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u)) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x), _GLF_ZERO(0.0, injectionSwitch.x))), false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)), 1u))), 0u)))))))))), _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 1u)), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (uvec3(subgroup_size, 0u, 1u)) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), clamp(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (uvec3(subgroup_size, 0u, 1u)) - uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true)), false, true))))))) ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u)) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u)) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u)) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))), (false ? _GLF_FUZZED(uvec3(73476u, 181071u, 135177u)) : (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u)) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))))), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u)) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))))))))))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u), ~ (~ (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u)))))), _GLF_IDENTITY(0u, (0u) / 1u))))))))))))), (false ? _GLF_FUZZED(num_workgroup) : ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) * 1u), 1u, (0u | uint(_GLF_ONE(1.0, injectionSwitch.y))))), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 1u, (0u | uint(_GLF_ONE(1.0, injectionSwitch.y)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 1u)), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u), uvec3(0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))))), 0u)), clamp(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : _GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(uvec3(120767u, 146584u, 144392u), subgroup_id)) : uvec3(subgroup_size, 0u, 1u))))), 0u))))), (_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(48435u, 144214u, 104315u), max(uvec3(48435u, 144214u, 104315u), uvec3(48435u, 144214u, 104315u)))) : uvec3(subgroup_size, 0u, 1u), uvec3(0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))))), 0u)), _GLF_IDENTITY(clamp(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : _GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(uvec3(120767u, 146584u, 144392u), subgroup_id)) : uvec3(subgroup_size, 0u, 1u))))), 0u))), (clamp(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : _GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(min(uvec3(120767u, 146584u, 144392u), subgroup_id)), min(_GLF_FUZZED(min(uvec3(120767u, 146584u, 144392u), subgroup_id)), _GLF_FUZZED(min(uvec3(120767u, 146584u, 144392u), subgroup_id)))) : uvec3(subgroup_size, 0u, 1u))))), 0u)))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), max(uvec3(5u), uvec3(5u))))))))) ^ uvec3(0u, 0u, 0u))))), max(_GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))) ^ (uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(48435u, 144214u, 104315u)), (false ? _GLF_FUZZED((uvec3(108985u, 84170u, 73282u) << uvec3(160794u, 144120u, 35358u))) : _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)))) : uvec3(subgroup_size, 0u, 1u))), 0u)), clamp(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u), ~ (~ (uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u))))) >> uvec4(0u, 0u, 0u, 0u))))), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(num_workgroup))))), 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (uint(uint(_GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (uint(uint(_GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) | (0u ^ (uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), clamp(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), (~ (uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u))) << uvec4(0u, 0u, 0u, 0u))))), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(uvec3(48435u, 144214u, _GLF_IDENTITY(104315u, clamp(104315u, 104315u, 104315u)))) : uvec3(subgroup_size, 0u, 1u), clamp(false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u), _GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : _GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), ~ (~ (uvec3(subgroup_size, 0u, 1u))))) | (uvec3(subgroup_size, 0u, 1u))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u)) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)))))))))), _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 1u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)) ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(min(workgroup_base, subgroup_id)))), 0u, 1u)) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), max(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), max(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), _GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))))), _GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))))))), 0u)), clamp(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (uvec3(subgroup_size, 0u, 1u)) << uvec3(0u, 0u, 0u)), (uvec3(subgroup_size, 0u, 1u)) - uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u), (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u)) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u), ~ (~ (false ? _GLF_FUZZED(uvec3(48435u, 144214u, 104315u)) : uvec3(subgroup_size, 0u, 1u)))))), _GLF_IDENTITY(0u, (0u) / 1u)))))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, (false) || false)), true, true)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.1) : 1.0)))), 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(85.86)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-49.41)), bool(false)))), bool(true))), 1.0, 1.0)))) > injectionSwitch.y))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false))))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))) || false)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))) || false)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y)))) || false) || false), false))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false))))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))) || false)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))) || false)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y)))) || false) || false), false))))), false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false))))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))) || false)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))) || false)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y)))) || false) || false), false))))), false, true, true)), (bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false))))), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))) || false)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true)), (bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true, false, true))) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))) || false)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 0.0), clamp(vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0), vec3(injectionSwitch.x, 1.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))) > injectionSwitch.y)))) || false) || false), false))))), false, true, true))) && true), false, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, (true ? (injectionSwitch.x) - 0.0 : _GLF_FUZZED(1360.0621)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, false, true)), false), bvec2(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, false, true)), false), false)))), (bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, false, true)), false), bvec2(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, false, true)), false), false))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | (64)), 64, 64)), _GLF_IDENTITY((64), min(_GLF_IDENTITY((64), ((64)) + 0), _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ~ (~ ((64))))) >> 0))) | (64)), 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, (64) | (64)))), 64)), 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), false, false))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, sqrt(0.0), 1.0, 1.0, sqrt(0.0), 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0)))))), mat4x2(mat4(mat4x2(injectionSwitch.x, 0.0, sqrt(0.0), 1.0, 1.0, sqrt(0.0), 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), clamp(clamp(1, 1, 1), clamp(1, 1, 1), _GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), int(ivec4(clamp(1, 1, 1), 1, 0, 1)))) << 0)))), (true ? 1 : _GLF_FUZZED(-90071)))) < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-68.01)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0)))), bool(true))) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, sin(0.0), 1.0, tan(0.0), 0.0, abs(1.0))), _GLF_IDENTITY(float(mat2(float(mat3x4(injectionSwitch.x, log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, sin(0.0), 1.0, tan(0.0), 0.0, abs(1.0))), 1.0, 1.0, 1.0)), max(float(mat2(float(mat3x4(injectionSwitch.x, log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, sin(0.0), 1.0, tan(0.0), 0.0, abs(1.0))), 1.0, 1.0, 1.0)), float(mat2(float(mat3x4(injectionSwitch.x, log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, sin(0.0), 1.0, tan(0.0), 0.0, abs(1.0))), 1.0, 1.0, 1.0)))))), 0.0, abs(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.6)), float(1.0), bool(true))), 1.0, 0.0, sqrt(0.0)))) < injectionSwitch.y))))), false)), ! (! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) || false)), ! (! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))))) || false), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(82.19)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.1), clamp(_GLF_IDENTITY(_GLF_FUZZED(-5.1), float(vec3(_GLF_FUZZED(-5.1), 0.0, abs(0.0)))), _GLF_IDENTITY(_GLF_FUZZED(-5.1), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-5.1), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2(637.796, 225.312, 72.01, 0.9)) : mat2(_GLF_FUZZED(-5.1), 1.0, 1.0, 1.0))))), _GLF_FUZZED(-5.1))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), false))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))) || false)), true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2298.3364) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), clamp(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch)))).y)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec2(bvec3(bvec2(false, false), false)))), true))))), bvec2(bvec3(bvec2(false, false), false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))))), false, true), bvec3(bvec3(bvec3(false, false, true))))), true))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), vec2(1.0, 1.0) * (vec2(injectionSwitch))), (_GLF_IDENTITY(vec2(injectionSwitch), vec2(1.0, 1.0) * (vec2(injectionSwitch)))) / vec2(1.0, 1.0))), vec2(vec3(vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(1.0, 1.0) * (vec2(injectionSwitch)))), 1.0)))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (((! (false)))), (! (((! (false))))) || false))))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((- -95.49)) : injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, min(read_2, read_2))))) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2)), true && (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2), min(clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2), clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2), min(clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2), clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2)))), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2), min(clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2), clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2))))) && true)), (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2), min(clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2), clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2)))), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), 1u * (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))))))), read_2), min(_GLF_IDENTITY(clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2), uint(uint(clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2)))), clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)), (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u))) / 1u)) | (_GLF_IDENTITY(read_2, (read_2) ^ (0u ^ 0u)))), read_2))))) && true))) || false)))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), 0 ^ (_GLF_IDENTITY((1) | (1), max((1) | (1), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(i) : 1))), ((1) | (1)) / 1))))))))), max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 | (1)), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.2) : injectionSwitch.y))) - 0.0))))))) << 0), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 ^ (_GLF_IDENTITY(1, 0 | (1)))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.2) : injectionSwitch.y)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.2) : injectionSwitch.y)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.9)), bool(false))), tan(0.0), 0.0)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.2) : injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.2) : injectionSwitch.y)))) + 0.0)) - 0.0) - 0.0))))))) << 0)))))), 4, _GLF_IDENTITY(64, max(64, 64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(int(4)))), _GLF_IDENTITY(1, (1) - 0) * (_GLF_IDENTITY((4), ((4)) + 0))) + 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(trunc(-0.3)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! ((injectionSwitch.x > injectionSwitch.y))), true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec4(true, false, false, false)), true), bvec2(bvec4(bvec2(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false))))) ? _GLF_FUZZED(-2.6) : injectionSwitch.x)) < injectionSwitch.y)), false))), bool(bool(false))))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(88.89)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec4(true, false, false, false)), true), bvec2(bvec4(bvec2(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.6) : injectionSwitch.x), float(mat2x4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.6) : injectionSwitch.x), exp(0.0), 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0)))) < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8680.3618))))), false))), bool(bool(false))))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))), false)))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec4(true, false, false, false)), true), bvec2(bvec4(bvec2(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.6) : injectionSwitch.x)) < injectionSwitch.y)), false))), bool(bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(-446.647, 24.63, 6.1).p)), float(injectionSwitch.y), bool(true))))) || (_GLF_IDENTITY(true, (true) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.1) : injectionSwitch.y)))))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec4(true, false, false, false)), true), bvec2(bvec4(bvec2(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.6) : injectionSwitch.x)) < injectionSwitch.y)), false))), bool(bool(false))))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true), true)))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec4(true, false, false, false)), true), bvec2(bvec4(bvec2(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.6) : injectionSwitch.x)) < injectionSwitch.y)), false))), bool(bool(false))))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true), true)))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec4(true, false, false, false)), true), bvec2(bvec4(bvec2(bool(bvec4(true, false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.6) : injectionSwitch.x)) < injectionSwitch.y)), false))), bool(bool(false))))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true), true))))))))))))), true, true))), true)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec4(true, false, false, false)), true), bvec2(bvec4(bvec2(bool(bvec4(true, false, false, false)), true), true, true)))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0), 0.0)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, tan(0.0), 1.0, 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-767.497), mix(float(_GLF_FUZZED(-767.497)), float(_GLF_FUZZED(502.403)), bool(false)))), float(injectionSwitch.y), bool(true)))) - length(vec4(0.0, 0.0, 0.0, 0.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
}
