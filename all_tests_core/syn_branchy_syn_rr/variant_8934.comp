#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), int(2)))); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0)))[1])))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       continue;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0), (false ? _GLF_FUZZED(mix(vec2(-331.446, -60.69), injectionSwitch, bvec2(false, true))) : _GLF_IDENTITY((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0), mat2(1.0) * ((injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0)))))), 0.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), min((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), vec2(mat2((injectionSwitch) * vec2(1.0, 1.0), 1.0, 1.0))))), (injectionSwitch) * vec2(1.0, 1.0)))), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? injectionSwitch : _GLF_FUZZED(vec2(1.6, 8845.4383)))))), (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-5170.1602, 2.5)))), 0.0, 0.0), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6312.4025), min(_GLF_FUZZED(-6312.4025), _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), (true ? _GLF_FUZZED(-6312.4025) : _GLF_FUZZED(3213.4154))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5.9), mix(float(_GLF_FUZZED(vec4(6.1, 671.623, -492.902, -6248.1761).w)), float(_GLF_IDENTITY(_GLF_FUZZED(-5.9), min(_GLF_IDENTITY(_GLF_FUZZED(-5.9), max(_GLF_FUZZED(-5.9), _GLF_FUZZED(-5.9))), _GLF_FUZZED(-5.9)))), bool(true)))), float(_GLF_IDENTITY(_GLF_FUZZED(-6312.4025), clamp(_GLF_FUZZED(-6312.4025), _GLF_FUZZED(-6312.4025), _GLF_FUZZED(-6312.4025)))), bool(true))))), 0.0), _GLF_IDENTITY(vec4(mat4(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6312.4025))), 0.0), cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(2655.7705, 5612.3041, 1.3, -67.29)) : vec4(mat4(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6312.4025))), 0.0), cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6))))), max(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6312.4025))), 0.0)) / _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(vec3(-0.6, 2065.2169, -2.0).b), (vec4(1.0, 1.0, 1.0, 1.0))[1], _GLF_FUZZED((-4135.0375 - 0.9)), _GLF_FUZZED(vec4(42.12, 8709.6866, 9.6, -8.9).b)), vec4((vec4(1.0, 1.0, 1.0, 1.0))[0], _GLF_FUZZED(-4463.0924), (vec4(1.0, 1.0, 1.0, 1.0))[2], (vec4(1.0, 1.0, 1.0, 1.0))[3]), bvec4(true, false, true, true)))) : _GLF_IDENTITY(_GLF_FUZZED(vec4(-6.3, -678.165, _GLF_IDENTITY(-2406.5335, min(-2406.5335, -2406.5335)), -8.6)), mix(vec4((_GLF_FUZZED(_GLF_IDENTITY(vec4(-6.3, -678.165, -2406.5335, -8.6), (false ? _GLF_FUZZED(vec4(259.615, -833.796, 7.8, 3.2)) : vec4(-6.3, -678.165, -2406.5335, -8.6)))))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) | (_GLF_IDENTITY(0, (0) << 0)))], _GLF_FUZZED(10.16), _GLF_FUZZED(8.9), _GLF_FUZZED(0.9)), vec4(_GLF_FUZZED(-1.7), (_GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6)))[1], (_GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6)))[2], (_GLF_FUZZED(vec4(-6.3, _GLF_IDENTITY(-678.165, mix(float(_GLF_FUZZED((3.4 / -2.7))), float(-678.165), bool(true))), -2406.5335, -8.6)))[3]), bvec4(false, true, true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6312.4025))), mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6312.4025)))), bool(true))), 0.0)) / vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(190.168))), 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(_GLF_IDENTITY(-6.3, (_GLF_IDENTITY(-6.3, float(mat3x2(-6.3, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) / 1.0), -678.165, -2406.5335, -8.6))))), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6312.4025))), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6312.4025))), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))) + vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6)), max(_GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6)), _GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6))))))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), 0.0, 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), clamp(_GLF_FUZZED(-6312.4025), _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), (_GLF_IDENTITY(_GLF_FUZZED(-6312.4025), max(_GLF_FUZZED(-6312.4025), _GLF_FUZZED(-6312.4025)))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FUZZED(-6312.4025))))), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6))), (false ? _GLF_FUZZED(vec4(-25.72, -13.38, -71.34, 96.22)) : (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), clamp(_GLF_FUZZED(-6312.4025), _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), (_GLF_IDENTITY(_GLF_FUZZED(-6312.4025), max(_GLF_FUZZED(-6312.4025), _GLF_FUZZED(-6312.4025)))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FUZZED(-6312.4025))))), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6))))))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6312.4025))), mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-6312.4025)), (true ? _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-6312.4025)), float(mat3x2((true ? 0.0 : _GLF_FUZZED(-6312.4025)), 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(-39.21))))), bool(_GLF_IDENTITY(true, (true) && true)))), 0.0)) / vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(190.168))), 1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-6.3, (_GLF_IDENTITY(-6.3, float(mat3x2(-6.3, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) / 1.0), -678.165, -2406.5335, -8.6), vec4(mat2(vec4(_GLF_IDENTITY(-6.3, (_GLF_IDENTITY(-6.3, float(mat3x2(-6.3, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) / 1.0), -678.165, -2406.5335, -8.6)))))))), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, abs(0.0), 0.0, 0.0)), (float(mat3x2(0.0, determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, abs(0.0), 0.0, 0.0))) / 1.0)), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6312.4025))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-660.680))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-214.499)), float(0.0), bool(true))))))) / vec4(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6312.4025))), 0.0)) / vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / abs(1.0))))) + _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))) - vec4(0.0, 0.0, 0.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6)), max(_GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6)), _GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6))))))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), 0.0, 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6312.4025), float(_GLF_IDENTITY(vec2(_GLF_FUZZED(-6312.4025), 0.0), (true ? vec2(_GLF_FUZZED(-6312.4025), 0.0) : _GLF_FUZZED(injectionSwitch))))), clamp(_GLF_FUZZED(-6312.4025), _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), (_GLF_IDENTITY(_GLF_FUZZED(-6312.4025), max(_GLF_FUZZED(-6312.4025), _GLF_FUZZED(-6312.4025)))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FUZZED(-6312.4025))))), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6))), (false ? _GLF_FUZZED(vec4(-25.72, -13.38, -71.34, 96.22)) : (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), clamp(_GLF_FUZZED(-6312.4025), _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), (_GLF_IDENTITY(_GLF_FUZZED(-6312.4025), max(_GLF_FUZZED(-6312.4025), _GLF_FUZZED(-6312.4025)))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FUZZED(-6312.4025))), min(true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), clamp(_GLF_FUZZED(-6312.4025), _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), (_GLF_IDENTITY(_GLF_FUZZED(-6312.4025), max(_GLF_FUZZED(-6312.4025), _GLF_FUZZED(-6312.4025)))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FUZZED(-6312.4025))), _GLF_IDENTITY(true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), clamp(_GLF_FUZZED(-6312.4025), _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), (_GLF_IDENTITY(_GLF_FUZZED(-6312.4025), max(_GLF_FUZZED(-6312.4025), _GLF_FUZZED(-6312.4025)))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FUZZED(-6312.4025))), (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), clamp(_GLF_FUZZED(-6312.4025), _GLF_IDENTITY(_GLF_FUZZED(-6312.4025), (_GLF_IDENTITY(_GLF_FUZZED(-6312.4025), max(_GLF_FUZZED(-6312.4025), _GLF_FUZZED(-6312.4025)))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FUZZED(-6312.4025)))) / 1.0))))), 0.0)) / vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-648.342)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(-6.3, -678.165, -2406.5335, -8.6)))))))))) + sqrt(vec2(0.0, 0.0))))))) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
              barrier();
             break;
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x))), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))))) > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cos(7.3)))), injectionSwitch.x)) > injectionSwitch.y))))
      break;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7215.6287)), bool(false))) : _GLF_FUZZED(1.3)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), min(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))) - vec2(0.0, 0.0)), injectionSwitch))) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (false ? _GLF_FUZZED(injectionSwitch) : max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0)))))) - vec2(0.0, 0.0)), injectionSwitch))) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), ~ (~ (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) - 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size))) | (workgroup_size)), min(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size))) | (workgroup_size)), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size, workgroup_size))) | (workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_id))) + subgroup_local_id, uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), subgroup_id)) * subgroup_size + subgroup_local_id, 0u, 1u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec4(_GLF_IDENTITY(workgroup_base, (0u | 0u) + (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, 0u, 1u, 1u))), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec4(_GLF_IDENTITY(workgroup_base, (0u | 0u) + (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, 0u, 1u, 1u))) : _GLF_FUZZED(uvec4(93754u, 146065u, 78282u, 196201u)[3]))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), 1u * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), uint(uvec4(_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), max(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) * (1u ^ 0u))), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u, 1u)))))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + subgroup_local_id, _GLF_IDENTITY(uint(uvec4(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(bitfieldReverse((num_workgroup | workgroup_id))) : 0u)))))), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u ^ (1u)))))), 1u)) : _GLF_FUZZED(subgroup_local_id)), 0u ^ ((true ? _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u ^ (1u)))))), 1u)) : _GLF_FUZZED(subgroup_local_id))))))), ~ (~ (uint(uvec4(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(bitfieldReverse((num_workgroup | workgroup_id))) : 0u)))))), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((true ? _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u ^ (1u)))))), 1u)) : _GLF_FUZZED(subgroup_local_id)), 0u ^ ((true ? _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u ^ (1u)))))), 1u)) : _GLF_FUZZED(subgroup_local_id)))))))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))), (true ? (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) : _GLF_FUZZED(subgroup_id))) >> 0u)))), 0u, 1u, 1u), min(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))), (true ? (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) : _GLF_FUZZED(subgroup_id))) >> 0u)))), 0u, 1u, 1u), uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))), (true ? (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) : _GLF_FUZZED(subgroup_id))) >> 0u)))), 0u, 1u, 1u))), (uvec4(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), 0u, 1u, 1u)) / (uvec4(0u, 0u, 0u, 0u) ^ _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), (uvec4(1u, 1u, 1u, 1u)) * uvec4(1u, _GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u)))))))), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) + subgroup_local_id, uint(uvec4(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) / 1u)), 0u ^ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))))) - 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u)) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)) << 0u)) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) << _GLF_IDENTITY(0u, 0u + (0u)))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) << 0u)) % subgroup_size, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) << 0u)) % subgroup_size, clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) ^ 0u))) << 0u)) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) << 0u)) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) << 0u)) % subgroup_size)))))) << 0u))) / 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec3((1), (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), min(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)))) ^ 1), 1), (ivec3((1), (1 ^ 1), 1)) * ivec3(1, 1, 1)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(73800) : 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) / 1) << 0)), max((_GLF_IDENTITY(64, (64) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) << 0)), ((_GLF_IDENTITY(64, (64) << 0))) | 0))) + 0), int(ivec3(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (64) << 0)), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-82318) : 64)), min(64, 64)), (64) << 0)), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (64) << 0)))) + 0), 1, 1)))) | _GLF_IDENTITY((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64))), (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0)))), int(int((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64))), (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0)))))))), (false ? _GLF_FUZZED(21383) : (_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64))), (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0)))), int(int((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64))), (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0)))))))))) ^ 0, (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), int(ivec4(~ (64), 1, 1, 1))))))))), 64))), (int(int(max(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (false ? _GLF_FUZZED(-83558) : _GLF_IDENTITY(64, max(64, 64))))) >> 0), 64)))) + 0)))), int(int((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), 0 ^ (max(_GLF_IDENTITY(64, max(64, 64)), 64))), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64))), (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + _GLF_IDENTITY(0, (0) / 1))))))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(21383) : (_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64))), (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0)))), int(int((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64))), (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0)))))))))) ^ 0) * 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(73800) : 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) / 1) << 0)), max((_GLF_IDENTITY(64, (64) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) << 0)), ((_GLF_IDENTITY(64, (64) << 0))) | 0))) + 0), int(ivec3(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, ~ (~ (64))), 0, (0 | 0))))) << 0)), min((_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (64) << 0)), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (64) << 0)))) + 0), 1, 1)))) | _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64))), (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0)))), int(int((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64))), (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0)))))))), (false ? _GLF_FUZZED(21383) : (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, max(64, 64))), 0 | (~ (_GLF_IDENTITY(64, max(64, 64))))))), 64))), _GLF_IDENTITY((int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0, min((int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0, (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0)))))), max((_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, max(64, 64))), 0 | (~ (_GLF_IDENTITY(64, max(64, 64))))))), 64))), _GLF_IDENTITY((int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0, min((int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0, (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0)))))), (_GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, max(64, 64))), 0 | (~ (_GLF_IDENTITY(64, max(64, 64))))))), 64))), _GLF_IDENTITY((int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0, min((int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0, (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0)))))))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64))), (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0)), (_GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64))), (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0))) ^ 0)))), (int((_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64))), (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0)), (_GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, 64)), 64), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64))), (int(int(max(_GLF_IDENTITY(64, max(64, 64)), 64)))) + 0))) ^ 0))))) >> 0)))))) ^ 0)))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false) ? _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) * 1u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), 1u, 1u)))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (injectionSwitch.x < injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-14208))), _GLF_IDENTITY(64, _GLF_IDENTITY((64), 0 ^ (_GLF_IDENTITY((64), ((64)) / 1))) << 0), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), mix(vec2((mat2(1.0) * ((injectionSwitch)))[0], _GLF_FUZZED(47.94)), vec2(_GLF_FUZZED(5.0), (mat2(1.0) * ((injectionSwitch)))[1]), bvec2(false, true))), mat2(1.0) * ((injectionSwitch))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false)) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)), (38504u & 0u) ^ (0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))))))) + 1, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) * 1))), (1) ^ 0), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), false))), true && (_GLF_IDENTITY((true), bool(bvec2((true), false))))))) && _GLF_IDENTITY(true, (true) || false)) ? subgroup_local_id + 1 : _GLF_FUZZED(read_1))) : _GLF_FUZZED(read_2)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) * 1))), (1) ^ 0), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), false))), true && (_GLF_IDENTITY((true), bool(bvec2((true), false))))))) && _GLF_IDENTITY(true, (true) || false)) ? subgroup_local_id + 1 : _GLF_FUZZED(read_1))) : _GLF_FUZZED(read_2)), ((_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) * 1))), (1) ^ 0), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), false))), true && (_GLF_IDENTITY((true), bool(bvec2((true), false))))))) && _GLF_IDENTITY(true, (true) || false)) ? subgroup_local_id + 1 : _GLF_FUZZED(read_1))) : _GLF_FUZZED(read_2))) ^ 0u), 1u))))) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((! (injectionSwitch.x > injectionSwitch.y))), ! (! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED((- 4581.8078)), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED((- 4581.8078)), clamp(_GLF_IDENTITY(_GLF_FUZZED((- 4581.8078)), clamp(_GLF_FUZZED((- 4581.8078)), _GLF_FUZZED((- 4581.8078)), _GLF_FUZZED((- 4581.8078)))), _GLF_FUZZED((- 4581.8078)), _GLF_FUZZED((- 4581.8078))))))), bool(false)))) / round(length(normalize(vec2(1.0, 1.0)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(-57406))), vec2(_GLF_FUZZED(6.7), (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)))))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 1.0)), (vec2(mat2x4(injectionSwitch, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 1.0))) - vec2(0.0, 0.0))).x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false, bool(bool((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), _GLF_IDENTITY(true, true && (true)) && (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))])))).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false, bool(bool((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) || false)))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))))) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (! (! ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false)) || false) && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))) && true)))))))))), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ~ (~ (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), min((read_1), (read_1)))) << 0u)))) | 0u))) == read_2) + 1, 4, 64, 4);
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant(mat2(-684.680, 3.3, 88.57, -3053.9672))) : injectionSwitch.x)) > injectionSwitch.y))))) && true))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (bool((false)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, mix(float(_GLF_FUZZED((11.06 * _GLF_IDENTITY(-1374.8359, clamp(-1374.8359, _GLF_IDENTITY(-1374.8359, clamp(-1374.8359, -1374.8359, -1374.8359)), -1374.8359))))), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch - injectionSwitch)) : injectionSwitch)).x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true))))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), false, false, true)), true && (bool(bvec4(_GLF_DEAD(false), false, false, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}
