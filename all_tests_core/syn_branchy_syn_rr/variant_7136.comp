#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 uvec3 _f0;
 ivec2 _f1;
 vec2 _f2;
 ivec2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 vec2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_9 {
 int _f0;
 bool _f1;
 bool _f2;
 mat3x4 _f3;
 uvec3 _f4;
 bvec4 _f5;
 uint _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 int _f1;
 mat2 _f2;
 uint read_2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
 ivec4 _f5;
 _GLF_struct_12 _f6;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 uvec3 _f1;
 ivec3 _f2;
 uvec2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_6 {
 float _f0;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 uvec3 _f1;
 int _f2;
 mat4 _f3;
 bool _f4;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 uvec3 _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_2 {
 int _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_3 {
 float _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_8 _f2;
 vec3 _f3;
 _GLF_struct_13 _f4;
} ;

struct _GLF_struct_0 {
 uint subgroup_local_id;
 mat2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.x = subgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), true)), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x < injectionSwitch.y), true)), true, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))) | 1)); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, false))));
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupInvocationID, mat2(1.0));
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u);
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ _GLF_IDENTITY((int(7)), ((int(7))) << 0))), max(_GLF_IDENTITY(int(7), ~ (~ _GLF_IDENTITY((int(7)), ((int(7))) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ _GLF_IDENTITY((int(7)), ((int(7))) << 0))), (_GLF_IDENTITY(int(7), ~ (~ _GLF_IDENTITY((int(7)), ((int(7))) << 0)))) << 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec2(_GLF_IDENTITY(int(7), int(7)), (1 & 1))))), int(_GLF_IDENTITY(ivec2(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ _GLF_IDENTITY((int(_GLF_IDENTITY(7, (7) / (0 | 1)))), _GLF_IDENTITY(((int(7))), (_GLF_IDENTITY(((int(7))), min(((int(7))), _GLF_IDENTITY(((int(7))), clamp(((int(7))), ((int(7))), ((int(7)))))))) | 0) << 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec2(_GLF_IDENTITY(int(7), int(7)), (1 & 1))))), 0), ~ (~ (ivec2(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ _GLF_IDENTITY((int(7)), ((int(7))) << 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec2(_GLF_IDENTITY(int(7), int(7)), (1 & 1))))), 0))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(96062)))), int(7))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, clamp(7, 7, 7)))))))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = (61348 & (_GLF_IDENTITY(87699 & 0, min(_GLF_IDENTITY(87699 & _GLF_IDENTITY(0, (0) << 0), int(_GLF_IDENTITY(int(87699 & 0), 0 ^ (int(87699 & 0))))), _GLF_IDENTITY(87699 & 0, clamp(87699 & 0, 87699 & 0, 87699 & 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), max((1) | (1), (1) | (1)))), 1)), 1))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ _GLF_IDENTITY((_injected_loop_counter), _GLF_IDENTITY(((_injected_loop_counter)), ~ (~ (((_injected_loop_counter))))) - 0))) != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.z = workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.z = workgroup_id, (false ? _GLF_FUZZED(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id[2]) : GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.z = workgroup_id)), ~ (~ (GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.z = workgroup_id)))) + 0u);
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))), false, true, false)))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (int(false) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
                    barrier();
                   barrier();
                  }
                }
               barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y)), true, true)))))), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.0), _GLF_FUZZED(-674.372)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true, true)), bool(bool(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (! (bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))))))) || false)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_IDENTITY(true, ! (! (true))), true)), bool(bool(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, true)), bool(bool(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(4.6, -5265.9868)) : injectionSwitch), min((false ? _GLF_FUZZED(vec2(4.6, -5265.9868)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(4.6, -5265.9868)) : injectionSwitch)))))).y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.z, (true ? _GLF_IDENTITY(workgroup_size * GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.z, min(workgroup_size * GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.z, workgroup_size * GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.z)) : _GLF_FUZZED(subgroup_size)));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.x * subgroup_size, clamp(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.x * subgroup_size, GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.x * subgroup_size, GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.x * subgroup_size)) + _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) >> (0u | 0u)), _GLF_struct_replacement_0.subgroup_local_id));
 _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y = _GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | (3u))))) + (virtual_gid)))), ~ (~ (GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y = _GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, 0u | (3u)))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(3u), uint(3u))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(3u), uint(3u))), max((_GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(3u), uint(3u))), ((_GLF_IDENTITY(uint(3u), uint(3u)))) / 1u)))) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), ((_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(3u, 0u + (3u))))), _GLF_IDENTITY(3u, ~ (~ (3u))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(3u), uint(3u))), 0u | ((_GLF_IDENTITY(uint(3u), uint(3u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(3u), uint(3u))), ((_GLF_IDENTITY(uint(3u), uint(3u)))) * 1u))))) + (virtual_gid)))))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, min(1u, 1u)))) ^ 1u) | (workgroup_base)), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 1u)))) << 0u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 1u)))) << 0u)) - _GLF_IDENTITY(0u, (0u) >> 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 1u)))) << 0u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 1u)))) << 0u)) - _GLF_IDENTITY(0u, (0u) >> 0u))) >> 0u))) + GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.x * subgroup_size + ((_GLF_struct_replacement_0.subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false)))), false)))))))) || false), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false))))))), _GLF_IDENTITY(true, false || (true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), _GLF_IDENTITY(true, ! (! (true))), false, false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))))), false, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false)), ! (! (((false))))), bool(bvec4(! ((false)), true, false, false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), true)))))))))))), false, false)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec4(! ((false)), true, false, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(! ((false)), true, false, false)), bool(bool(bool(bvec4(! ((false)), true, false, false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(! ((false)), true, false, false)), bool(bool(bool(bvec4(! ((false)), true, false, false))))), false, true))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, false, false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))), true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))), true, false, false))), (_GLF_IDENTITY(! (bool(bvec4(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))), true, false, false))), false || (! (bool(bvec4(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))), true, false, false)))))) || false))))))))), false, false)))), false)))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), true, false)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), true, false))) && true)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))) || false)), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) >> 0)) / 1)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) ^ (0 | 0)))), 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, (GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id) | uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))).y], 0u | _GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | (_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | 0u))), (_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | (_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | 0u)))) >> 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | (_GLF_IDENTITY((buf[_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, (GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id) - uvec3(0u, 0u, 0u)).y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | (_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | 0u))))) | (uint(_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | (_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | 0u))))), ((uint(_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | (_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | 0u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id)).y])) | (_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((_GLF_IDENTITY(buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y], (buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]) / 1u))) | 0u)))), (uint(_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id)).y])) | (_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((_GLF_IDENTITY(buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y], (buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]) / 1u))) | 0u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) * 1u))) | 0u)), 0u | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, min(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id)).y])) | (_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | (_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | 0u)))), (uint(_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | (_GLF_IDENTITY((buf[_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, uvec3(uvec4(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, 1u)))), min(~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, uvec3(uvec4(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, 1u)))), ~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, uvec3(uvec4(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, 1u)))))))).y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | 0u))))) | (uint(_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | (_GLF_IDENTITY((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y]), ((buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y])) | 0u))))))) | 0u)))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_1(uvec2(1u), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), transpose(transpose(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0)))))), _GLF_struct_3(1.0, _GLF_struct_2(1, mat4x2(1.0))), _GLF_struct_8(mat3x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(2.7)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(2.7)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(2.7)), bool(false))))), 1.0))), _GLF_struct_4(ivec2(1), uvec3(1u), 1, mat4(1.0), _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true && ((_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (true && ((_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, true))))), _GLF_struct_5(mat4x2(1.0), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))), uvec3(1u), _GLF_struct_6(1.0), _GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), clamp(_GLF_IDENTITY(ivec2(1), (ivec2(_GLF_IDENTITY(1, max(1, 1)))) * (_GLF_IDENTITY(ivec2(1, 1) & ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1) & ivec2(1, 1), min(ivec2(1, 1) & ivec2(1, 1), ivec2(1, 1) & ivec2(1, 1)))) | ivec2(0, 0)))), ivec2(1), _GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))))))), ~ (~ (_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(42035) : 1)), 1))), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(35233, (35233) | (35233)) & 0)))), max(int(int(_GLF_IDENTITY(1, (1) >> (35233 & 0)))), int(int(_GLF_IDENTITY(1, (1) >> (_GLF_IDENTITY(35233 & 0, min(35233 & 0, _GLF_IDENTITY(35233 & 0, (35233 & 0) ^ 0)))))))))))))))), _GLF_IDENTITY(uvec3(1u), uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u) | (uvec3(1u))), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) ^ 0)), uvec2(1u), uvec2(1u))), vec3(1.0), _GLF_struct_13(_GLF_struct_9(1, _GLF_IDENTITY(true, ! (! (true))), true, mat3x4(1.0), uvec3(1u), bvec4(true), 1u), 1, mat2(1.0), atomicLoad(buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y], 4, 64, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0))))), _GLF_struct_10(bvec2(true), vec2(1.0), uvec3(1u)), _GLF_struct_11(bvec4(true)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(_GLF_IDENTITY(1, 0 + (1))))), (_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(_GLF_IDENTITY(1, 0 + (1)))))) / ivec4(1, 1, 1, 1)), _GLF_struct_12(uvec3(1u), ivec2(1), vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0)))), ivec2(1), mat3x2(1.0))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
  {
   if(_GLF_struct_replacement_0.subgroup_local_id + 1 < subgroup_size)
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
     int i = 0;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))) && true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, (_GLF_struct_replacement_14._f4.read_2) | (_GLF_struct_replacement_14._f4.read_2)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, min(_GLF_struct_replacement_14._f4.read_2, _GLF_struct_replacement_14._f4.read_2)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u)))), uint(7u))))), min(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, min(_GLF_struct_replacement_14._f4.read_2, _GLF_struct_replacement_14._f4.read_2)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) : _GLF_FUZZED(subgroup_size))), 1u, (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, min(_GLF_struct_replacement_14._f4.read_2, _GLF_struct_replacement_14._f4.read_2)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u) : _GLF_FUZZED(subgroup_size))), 1u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, min(_GLF_struct_replacement_14._f4.read_2, _GLF_struct_replacement_14._f4.read_2)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)), 1u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, min(_GLF_struct_replacement_14._f4.read_2, _GLF_struct_replacement_14._f4.read_2)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))))) + 1, 4, 64, 4);
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, false || (read_1 == _GLF_struct_replacement_14._f4.read_2)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, tan(0.0)))).y)), true)))), false || ((_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, false || (read_1 == _GLF_struct_replacement_14._f4.read_2)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, tan(0.0)))).y)), true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, (_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_IDENTITY(bool(bool(read_1 == _GLF_struct_replacement_14._f4.read_2)), bool(bvec2(bool(bool(read_1 == _GLF_struct_replacement_14._f4.read_2)), false))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(459.068), _GLF_FUZZED(-60.44)), vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], ((injectionSwitch) / vec2(1.0, 1.0))[1]), bvec2(true, true))), (injectionSwitch) / vec2(1.0, 1.0)))), 0.0, tan(0.0)), (mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), max(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(459.068), _GLF_FUZZED(-60.44)), vec2(((injectionSwitch) / vec2(1.0, 1.0))[0], ((injectionSwitch) / vec2(1.0, 1.0))[1]), bvec2(true, true))), (injectionSwitch) / vec2(1.0, 1.0)))), 0.0, tan(0.0))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y)), true))))), false || ((! (_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, tan(0.0)))).y)), true))))))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, tan(0.0)))).y)), true))))), false || ((! (_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), 0.0, tan(0.0)))).y)), _GLF_IDENTITY(true, true && (true))))))))), true, true, true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 == _GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, (_GLF_struct_replacement_14._f4.read_2) / 1u), false), bvec2(bvec4(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false), false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))), clamp(_GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))), _GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))), _GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))), clamp(_GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))), _GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))), _GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))), clamp(_GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))), _GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))), _GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))))))), true, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))), clamp(_GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))), _GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))), _GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))))))), true, false)), false)), false)))))))))))))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, ! (! (read_1 == _GLF_struct_replacement_14._f4.read_2))), false))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, (_GLF_struct_replacement_14._f4.read_2) | 0u), false))), bool(bvec4(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), true, true, false)))), ((_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bool(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), false, false)))))), true, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, (_GLF_struct_replacement_14._f4.read_2) | 0u), false))), bool(bvec4(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), true, true, false)))), ((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, ! (! (read_1 == _GLF_struct_replacement_14._f4.read_2))), false))), bool(bool(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), false, false)))))), true, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, ! (! (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(read_1, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u)) == _GLF_struct_replacement_14._f4.read_2))), false))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, (read_1 == _GLF_struct_replacement_14._f4.read_2) || _GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))), false))), _GLF_IDENTITY(true, false || (true)), true, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, (_GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, (_GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, (_GLF_struct_replacement_14._f4.read_2) * 1u)) / 1u)) | 0u), false))), bool(bvec4(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), true, true, false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), ! (! ((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)))))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec3(_GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), false || ((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), false, false)))), ! (! (bool(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec3(_GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), false || ((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), false, false))))))))), true, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, ! _GLF_IDENTITY((! (read_1 == _GLF_struct_replacement_14._f4.read_2)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (read_1 == _GLF_struct_replacement_14._f4.read_2)), ! (! ((! (read_1 == _GLF_struct_replacement_14._f4.read_2)))))), false || (bool(_GLF_IDENTITY((! (read_1 == _GLF_struct_replacement_14._f4.read_2)), ! (! ((! (read_1 == _GLF_struct_replacement_14._f4.read_2))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (read_1 == _GLF_struct_replacement_14._f4.read_2)), ! (! ((! (read_1 == _GLF_struct_replacement_14._f4.read_2)))))), false || (bool(_GLF_IDENTITY((! (read_1 == _GLF_struct_replacement_14._f4.read_2)), ! (! ((! (read_1 == _GLF_struct_replacement_14._f4.read_2)))))))))) && true))), false))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))), true, true, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, (_GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, max(_GLF_struct_replacement_14._f4.read_2, _GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, (_GLF_struct_replacement_14._f4.read_2) >> 0u)))) | 0u), false))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), true && (! _GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), ! (_GLF_IDENTITY(! ((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)))), bool(bool(_GLF_IDENTITY(! ((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)))), ! (! (! ((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)))))))))))))), true, true, false)))), ((_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), (_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), ! (! (! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_IDENTITY(false, true && (false))))))))) && true), ! (! (_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec2(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), false)))))), bool(bool(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), false, false)))))), true, true, false))))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))) && true)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec2(! (! (_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 0u, 1u)))) - 0u)) << 0u), max(read_1, read_1))))) == _GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, (_GLF_struct_replacement_14._f4.read_2) / 1u), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, (read_1) | (read_1))))))) == _GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, (_GLF_struct_replacement_14._f4.read_2) / 1u), false), false))), bvec2(bvec4(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(length(vec4(-862.595, 3.0, 25.44, -3.4))))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))))))))))) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(length(vec4(-862.595, 3.0, _GLF_IDENTITY(25.44, clamp(_GLF_IDENTITY(25.44, float(vec4(_GLF_IDENTITY(25.44, (25.44) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), 25.44, _GLF_IDENTITY(25.44, (false ? _GLF_FUZZED(-7818.3184) : _GLF_IDENTITY(25.44, max(_GLF_IDENTITY(25.44, (25.44) - 0.0), _GLF_IDENTITY(25.44, float(mat3(25.44, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))))), -3.4)))))) / 1.0))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, ! (! (read_1 == _GLF_struct_replacement_14._f4.read_2))), false))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))), true, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, ! (! (read_1 == _GLF_struct_replacement_14._f4.read_2))), false))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))), true, true, false))), ! (! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, ! (! (read_1 == _GLF_struct_replacement_14._f4.read_2))), false))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))), true, true, false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, ! (! (read_1 == _GLF_struct_replacement_14._f4.read_2))), false))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))), true, true, false))), true && (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, ! (! (read_1 == _GLF_struct_replacement_14._f4.read_2))), false))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false))), false))), true, true, false)))))) || false, false || ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, ! (! (read_1 == _GLF_struct_replacement_14._f4.read_2))), false))), _GLF_IDENTITY(bool(bvec3((bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, ! (! (read_1 == _GLF_struct_replacement_14._f4.read_2))), false))), false, false)), ! (! (bool(bvec3((bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, ! (! (read_1 == _GLF_struct_replacement_14._f4.read_2))), false))), false, false)))))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0))), false))), false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), true, false))), true && (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, ! (! (read_1 == _GLF_struct_replacement_14._f4.read_2))), false))), bool(bvec4(! (bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_struct_replacement_14._f4.read_2, bool(bvec3(read_1 == _GLF_struct_replacement_14._f4.read_2, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false))), false))), true, true, false)))))) || _GLF_IDENTITY(false, (false) && true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_IDENTITY(_GLF_struct_replacement_14._f4.read_2, (_GLF_struct_replacement_14._f4.read_2) | 0u), false))), bool(bvec4(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), true, true, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)), bvec2(bvec4(bvec2(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)), false, false)))))))))), bool(bvec4(! _GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), false || ((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))))), false, false, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), ! (! (_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), (! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)))) || false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(_GLF_IDENTITY(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! _GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec2((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))) && true))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), bvec3(bvec4(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))), false))), true))))))), true && (bool(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(_GLF_IDENTITY(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! _GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec2((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))) && true))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), bvec3(bvec4(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))), false))), true))))))))))), true, _GLF_IDENTITY(true, (true) || false), false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)), bvec2(bvec4(bvec2(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)), false, false)))))))))), bool(bvec4(! _GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), false || ((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))))), false, false, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), ! (! (_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), (! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)))) || false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(_GLF_IDENTITY(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! _GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec2((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))) && true))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), bvec3(bvec4(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))), false))), true))))))), true && (bool(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(_GLF_IDENTITY(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! _GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec2((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))) && true))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), bvec3(bvec4(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))), false))), true))))))))))), true, _GLF_IDENTITY(true, (true) || false), false)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)), bvec2(bvec4(bvec2(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)), false, false)))))))))), bool(bvec4(! _GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), false || ((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))))), false, false, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), ! (! (_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), (! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false)))) || false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(_GLF_IDENTITY(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! _GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec2((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))) && true))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), bvec3(bvec4(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))), false))), true))))))), true && (bool(_GLF_IDENTITY(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(_GLF_IDENTITY(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! _GLF_IDENTITY((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), bool(bvec2((bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))) && true))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), bvec3(bvec4(bvec3(bvec3(! (bool(bvec2(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)), true))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(! (bool(bvec2(read_1 == _GLF_struct_replacement_14._f4.read_2, false))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false))), false))), true))))))))))), true, _GLF_IDENTITY(true, (true) || false), false)))), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, false), true, false)))))))))))))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.4)), bool(false))), round(length(normalize(1.0))), 1.0, 1.0)))))) + 1, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) ^ 0), 1, 0, 0)))) | 0), 4)), 64, 4);
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 & -79775); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
}
