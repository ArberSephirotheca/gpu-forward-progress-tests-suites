#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base;
 uvec3 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)) && true))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uvec4 GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), false), bvec2(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-5.1)))))), false, false, true)), false), false)))))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) / uvec2(1u, 1u))) | (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, uvec2(0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))), max(_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))))), _GLF_IDENTITY((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))), (_GLF_IDENTITY((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))), max((GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))), (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)))))))) / uvec2(1u, 1u))))), (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) / uvec2(1u, 1u))) | (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) << uvec2(0u, 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))))), (true ? (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))))) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id))), (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))))))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x))))))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) / uvec2(1u, 1u))) | (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, uvec2(0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)))))), (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))), ((false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)))) | ((false ? _GLF_FUZZED(96419u) : _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))))))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))) * uvec2(1u, 1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.1)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec4(bool(bvec2(true, false)), false, true, true))))), (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false)))))
      {
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))), true), false, true)))))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))) || false)))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))) && true));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(512.151), _GLF_FUZZED(-2.7)), bvec2(false, false))) : _GLF_FUZZED(injectionSwitch))).y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0)))), float(_GLF_FUZZED(-5948.8484)), bool(false))), tan(0.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(5.4, -4839.9513, -158.634, -1615.9464).w) : 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.0) : 0.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.0)), bool(false))), 0.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x)), 0.0, 0.0, 1.0, 1.0, exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), 1.0, 0.0)), mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(exp(0.0))), (false ? _GLF_FUZZED(mat4x3(mat2x4(-0.5, 5.0, -4.8, -1782.5835, 366.340, 5057.4503, 9047.8850, -1.3))) : mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(exp(0.0)))))), vec2(mat3(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(exp(0.0))), (false ? _GLF_FUZZED(mat4x3(mat2x4(-0.5, 5.0, -4.8, -1782.5835, 366.340, 5057.4503, 9047.8850, -1.3))) : mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(exp(0.0)))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))).x)), 0.0, 0.0, 1.0, 1.0, exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), 1.0, 0.0)), mix(float(_GLF_FUZZED(202.255)), _GLF_IDENTITY(float(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), mix(vec2(_GLF_FUZZED(-96.13), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))[0], _GLF_FUZZED(9.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0))), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.1)), float(0.0), bool(true))), injectionSwitch.x)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x)))))), 0.0, 0.0, 1.0, 1.0, exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), 1.0, 0.0))), (float(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), mix(vec2(_GLF_FUZZED(-96.13), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))[0], _GLF_FUZZED(9.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0))), 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.1)), float(0.0), bool(true))), injectionSwitch.x)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).x)))))), 0.0, 0.0, 1.0, 1.0, exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), 1.0, 0.0)))) * cos(0.0)), bool(true)))), bool(true)))) < injectionSwitch.y))))
    {
     return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(247.772, -53.59)) : injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(70.83))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, true, false, true))))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(7), int(7)), 0, 0, 1)), (int(ivec4(_GLF_IDENTITY(int(7), int(7)), 0, 0, 1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), 0 + (_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(-2215) : _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(_injected_loop_counter))))))), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(7), int(7))))) | _GLF_IDENTITY((int(0)), _GLF_IDENTITY((_GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0)), 0 ^ (_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0)))))), ((int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) >> (0 | 0))))) / _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) | 0)))))), min((_GLF_IDENTITY((int(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0)))), ((int(_GLF_IDENTITY(0, (0) >> (0 | 0))))) / _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) | 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) | 0), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) | 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) | 0)))))))))), _GLF_IDENTITY((_GLF_IDENTITY((int(_GLF_IDENTITY(0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.7)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x)) ^ (0)))), ((int(_GLF_IDENTITY(0, _GLF_IDENTITY((0) >> (0 | 0), int(ivec4((0) >> (0 | 0), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 0))))))) / _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, ~ (~ (1)))), (~ (_GLF_IDENTITY(1, ~ (~ (1))))) + 0))), 1, 0)))) | 0)))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY((int(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0)))), ((int(_GLF_IDENTITY(0, (0) >> (0 | 0))))) / _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) | 0)))))))), clamp(~ (~ ((_GLF_IDENTITY((int(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0)))), ((int(_GLF_IDENTITY(0, (0) >> (0 | 0))))) / _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) | 0)))))))), ~ (~ ((_GLF_IDENTITY((int(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0)))), ((int(_GLF_IDENTITY(0, (0) >> (0 | 0))))) / _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) | 0)))))))), ~ (~ ((_GLF_IDENTITY((int(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0)))), ((int(_GLF_IDENTITY(0, (0) >> (0 | 0))))) / _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))) | 0))))))))))))) ^ (0 & 99841))))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
        continue;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), (true ? _GLF_IDENTITY(~ (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size), ~ (~ (~ (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id))))), (true ? _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy = _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, ~ (~ (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))))), ((~ (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, ~ (~ (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))))) ^ uvec2(0u, 0u))), uvec2(1u, 1u) * (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)) : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, clamp(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, ~ (~ (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))), _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, uvec2(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size[0], GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size[1])), GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))))), (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy = _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, ~ (~ (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))))), (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy = _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, ~ (~ (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))))))) << uvec2(0u, 0u)), uvec2(1u, 1u) * (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)) : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, clamp(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, uvec2(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size[0], GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size[1])), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, ~ (~ (GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size))), uvec2(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size[0], GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size[1])))), GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size)))))) >> (uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-531.080)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-531.080)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) < injectionSwitch.y), true, true, true)), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-531.080)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) < injectionSwitch.y), true, true, true))) || false)), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && true)), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && true)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && true)), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && true)))))), true))))))))
          break;
         continue;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     do
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 & _GLF_IDENTITY(87371, (false ? _GLF_FUZZED(_GLF_IDENTITY((-36697 * _injected_loop_counter), (true ? (-36697 * _injected_loop_counter) : _GLF_FUZZED(-97706)))) : 87371))), ((0 & _GLF_IDENTITY(87371, (false ? _GLF_FUZZED((-36697 * _injected_loop_counter)) : _GLF_IDENTITY(87371, (_GLF_IDENTITY(87371, ~ (~ (87371)))) >> 0))))) ^ 0)); _injected_loop_counter --)
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.w = subgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false)), ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false)), ! (! (false)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false)), ! (! (false)))), false, false, true)))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-958.448), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(float(-82687)), _GLF_FUZZED(-4.7)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), (injectionSwitch)))[0], _GLF_FUZZED(-4670.9923)), bvec2(true, false))).y)))))))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(39.66) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.92)), bool(false))))), injectionSwitch.y)))), true))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(1015.5785)), float((injectionSwitch)[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(7.7)), vec2(_GLF_FUZZED((true ? 1678.8924 : -2319.1975)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)), true)), (mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], _GLF_FUZZED(7.7)), vec2(_GLF_FUZZED((_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 1678.8924 : -2319.1975)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) * mat2(1.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(1.0)))), (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
          break;
        }
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.y = subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, false, true))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(-709.598, (-709.598) - 0.0), -4.4, -5.5, -2.8).xw) : injectionSwitch)).y)))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), int(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 | (6))), int(6)), 1)))), true && (_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, (0 >> _GLF_IDENTITY(int(3), int(3))), 0))) != ((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.7, 782.014)))))).y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(injectionSwitch)) : injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-28.22)), ((true ? injectionSwitch.y : _GLF_FUZZED(-28.22))) + abs(0.0))))))))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))) >> _GLF_IDENTITY(int(6), int(6))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(-709.598, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))) * (-709.598)), -4.4, -5.5, -2.8).xw) : injectionSwitch)).y)))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), int(ivec2(_GLF_IDENTITY(int(6), int(6)), 1)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))))) && (_injected_loop_counter != ((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.7, 782.014)))))).y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(injectionSwitch)) : injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-28.22)), ((true ? injectionSwitch.y : _GLF_FUZZED(-28.22))) + abs(0.0))))))))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (int(6)))), 0 | (int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.7, 782.014)))))).y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(injectionSwitch)) : injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-28.22)), ((true ? injectionSwitch.y : _GLF_FUZZED(-28.22))) + abs(0.0))))))))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))))) >> _GLF_IDENTITY(int(6), int(6))))), (_GLF_IDENTITY(_injected_loop_counter != ((int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(-709.598, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))) * (-709.598)), -4.4, -5.5, -2.8).xw) : injectionSwitch)).y)))), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(-709.598, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))) * (-709.598)), -4.4, -5.5, -2.8).xw) : injectionSwitch)).y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec4(_GLF_IDENTITY(-709.598, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))) * (-709.598)), -4.4, -5.5, -2.8).xw) : injectionSwitch)).y)))))))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), int(ivec2(_GLF_IDENTITY(int(6), int(6)), 1)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))), true, true, true)))))) && (_injected_loop_counter != ((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.7, 782.014)))))).y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(injectionSwitch)) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(injectionSwitch)) : injectionSwitch))) - vec2(0.0, 0.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-28.22)), ((true ? injectionSwitch.y : _GLF_FUZZED(-28.22))) + abs(0.0))))))))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (int(6)))), 0 | (int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.7, 19.25)) : injectionSwitch)) : _GLF_FUZZED(vec2(-6.7, 782.014)))))).y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(tanh(injectionSwitch), (tanh(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))))) + tan(vec2(0.0, 0.0)))) : injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-28.22)), ((true ? injectionSwitch.y : _GLF_FUZZED(-28.22))) + abs(0.0))))))))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 | (int(6))), max(_GLF_IDENTITY(int(6), 0 | (int(6))), _GLF_IDENTITY(int(6), 0 | (int(6))))))))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec3(6, 1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                continue;
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 continue;
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_IDENTITY(false, ! (! (false)))), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))) || false)))))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
        {
         GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.z = num_workgroup;
         if(_GLF_DEAD(false))
          continue;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), false || (! (_GLF_WRAPPED_LOOP(false)))))));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))) : _GLF_FUZZED(5241.8107)), clamp((true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))) : _GLF_FUZZED(5241.8107)), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))) : _GLF_FUZZED(5241.8107)), ((true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))) : _GLF_FUZZED(5241.8107))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false))) : _GLF_FUZZED(5241.8107)))))) - 0.0)))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), (bool(bvec4(_GLF_DEAD(false), true, false, false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, bool(bvec2(false, false))))))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(143.603) : injectionSwitch.y)), 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(143.603) : injectionSwitch.y)), 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(143.603) : injectionSwitch.y)), 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(143.603) : injectionSwitch.y)), 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + 0.0)))))))))
  return;
 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z = workgroup_size;
 GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy.y = GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(84157u, 42045u, 36008u)) : _GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | ((0u))), ((0u)) - 0u) * 1u), (0u) | 0u) | (gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false), bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), false))))), bool(bvec2(bool(bvec3(false, true, false)), true))))))
      {
       do
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      continue;
     GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.y = workgroup_id;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, min(_GLF_IDENTITY(8, ~ (~ (8))), 8))), _GLF_IDENTITY(int(8), (int(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), int(ivec3(8, 0, 1))), min(8, 8)), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | (1))), min(ivec3(_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), 0 | (min(_GLF_IDENTITY(8, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 8 : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter : _GLF_FUZZED((~ -73497))))))), 8)))), 0, 1), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(8, int(_GLF_ONE(1.0, injectionSwitch.y)) * (8)), min(8, 8)), (_GLF_IDENTITY(8, _GLF_IDENTITY(min(8, 8), _GLF_IDENTITY((min(8, 8)) | 0, 0 ^ ((min(8, 8)) | 0))))) >> 0), 0, 1))))))) / 1)))); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY(clamp((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, (0 >> _GLF_IDENTITY(int(6), int(6)))), ivec4(0, 0, 0, 0) | (ivec4(1, 0, 0, (0 >> _GLF_IDENTITY(int(6), int(6))))))))), int(1))), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (int(1))), int(1))), (false ? _GLF_FUZZED(37854) : (1 << _GLF_IDENTITY(int(1), int(1))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0))) >> _GLF_IDENTITY(int(3), int(3))))), int(1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(1, 1)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 1, 1, ((0 << _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(4), int(4))))))))) | 0)), max(clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1)))) - 0)) | ((1 << _GLF_IDENTITY(int(1), int(1))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0) << _GLF_IDENTITY(int(1), int(1))), (false ? _GLF_IDENTITY(_GLF_FUZZED(37854), (_GLF_IDENTITY(_GLF_FUZZED(37854), 0 | (_GLF_IDENTITY(_GLF_FUZZED(37854), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(37854)), 0 ^ (~ (_GLF_FUZZED(37854))))))))) | (_GLF_IDENTITY(_GLF_FUZZED(37854), (_GLF_FUZZED(37854)) | (_GLF_FUZZED(37854))))) : (1 << _GLF_IDENTITY(int(1), int(1))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))) + 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), clamp(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))) >> 0)), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) | 0)), _GLF_IDENTITY(clamp((1 << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), (false ? _GLF_FUZZED(37854) : (1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (0 & 46288) | (int(1))))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) | 0)), int(ivec4(clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), ((1 << _GLF_IDENTITY(int(1), int(1)))) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), (false ? _GLF_FUZZED(37854) : (1 << _GLF_IDENTITY(int(1), int(1))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY(((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) | 0, (_GLF_IDENTITY(((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) | 0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) | 0, (_GLF_IDENTITY(((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) | 0, (false ? _GLF_FUZZED(_injected_loop_counter) : ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) | 0))) | (((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) | 0)), ~ (~ (((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) | 0)))))) | (((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(1), int(1)))) | 0)))), 0, 1, 1)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 1 * (1))), 0 | (int(1))), _GLF_IDENTITY(int(1), min(int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(7)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - int(_GLF_ZERO(0.0, injectionSwitch.x))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     continue;
                    }
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                    {
                     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) * 1)); _injected_loop_counter ++)
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(7.6)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(log2(9892.3575)))), mix(float(_GLF_FUZZED(-9684.7075)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(log2(9892.3575))))), bool(true)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! ((injectionSwitch.x > injectionSwitch.y))), true, false, false))))))) || false))))
                        return;
                      }
                     GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy.y = GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.y;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), true && (bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), false)), false)))))), true))))))
                    continue;
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & int(_GLF_ONE(1.0, injectionSwitch.y)))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & int(_GLF_ONE(1.0, injectionSwitch.y)))), false, true, true))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
   return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), 0.0 + (float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x))))) : _GLF_FUZZED(-4.2))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)))), 0.0 + (float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(roundEven(frexp(-8200.5552, _injected_loop_counter))))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(270.126, 8.2)) : injectionSwitch)).x)), injectionSwitch.x))))) : _GLF_FUZZED(-4.2))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? cos(0.0) : _GLF_FUZZED(35.02)))), transpose(transpose(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) / cos(0.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), 0.0 + (float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x))))) : _GLF_FUZZED(-4.2))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1249.5284) : 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0, 1.0, cos(0.0)), mat3x4(mat4(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), 0.0 + (float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x))))), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), 0.0 + (float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), 0.0 + (float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x))))), mix(float(_GLF_FUZZED(-61.72)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), 0.0 + (float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)))))), bool(true))))) : _GLF_FUZZED(_GLF_IDENTITY(-4.2, clamp(-4.2, -4.2, -4.2))))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0)))))))))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      continue;
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        return;
       do
        {
         GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy.x = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy, (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy, ~ (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy)))) | (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy)), (false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy) | uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), min(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u)), uvec2(0u, 0u))), _GLF_IDENTITY((uvec2(0u, 0u)) | uvec2(0u, 0u), ((uvec2(0u, 0u)) | uvec2(0u, 0u)) >> uvec2(0u, 0u))) + (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy, (true ? GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy, (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy, uvec2(0u, 0u) | (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy))) | (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy)), ~ (_GLF_IDENTITY(~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy), uvec2(0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy), (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy)) | (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(192375u, 131019u)) : _GLF_IDENTITY(~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy), (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy)) | (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy), (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) | uvec4(0u, 0u, 0u, 0u)).xy, (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) | uvec4(0u, 0u, 0u, 0u)).xy) | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) | uvec4(0u, 0u, 0u, 0u)).xy))))), max(_GLF_IDENTITY(~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy), (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy)) | (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy))), _GLF_IDENTITY(~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy), (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy)) | (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy), (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy)) | (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy))), (_GLF_IDENTITY(~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy), (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy)) | (~ (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy)))) << uvec2(0u, 0u)))))))), GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy)))))).y;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, cos(0.0), tan(0.0)))).x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      break;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    continue;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      continue;
     for(int _injected_loop_counter = (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(10838) : 0)) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))) + (injectionSwitch.y))) + 0.0), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.2), _GLF_FUZZED(-4.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
        break;
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true)), true && (bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true))))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
            return;
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy) | (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy))) / _GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | uvec2(0u, 0u))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy)), min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy)), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) : GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy))))) | (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy)), (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy) | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id) | uvec4(0u, 0u, 0u, 0u)).xy))) / uvec2(1u, _GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (_GLF_IDENTITY(1u, (1u) * 1u))))).x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy) | (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy))) / uvec2(1u, 1u)), uvec2(0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy) | (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy) | (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy))), ((_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy) | (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy)))) ^ uvec2(0u, 0u)), (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy) | (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy))), (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy) | (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy))))) / uvec2(1u, 1u)))).x));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false)))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.w = workgroup_base;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), _GLF_IDENTITY(clamp(int(7), int(7), int(7)), (false ? _GLF_FUZZED(95745) : clamp(int(7), int(7), int(7))))), int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), int(7), int(7)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), int(7), int(7)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), int(7), int(7)))), min(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), int(7), int(7)))), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), int(7), int(7)))))), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), int(7), int(7)))), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), int(7), int(7)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))))))))))) && true)))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(false || (false || (false)), false || (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false)))))) || (false)))))) || false)), ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))))))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
                  break;
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x2(injectionSwitch[0], _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0))), injectionSwitch[1])).y))));
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        continue;
      }
     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy.x = GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.w;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (false) || false), false)))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, _GLF_IDENTITY(min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2), (min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2)) | (_GLF_IDENTITY(min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2), min(min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2), _GLF_IDENTITY(min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2), min(min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2), min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2)))))))))).xy.x + _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id, max(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id) | (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id)))).w * GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.y + subgroup_local_id, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2), min(_GLF_IDENTITY(min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2), (min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2)) | (min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2))), min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2))), (_GLF_IDENTITY(min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2), uvec4(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(bitfieldReverse(131772u)) : _GLF_IDENTITY(0u, (0u) / 1u))), 0u) ^ (min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2)))) << uvec4(0u, 0u, 0u, 0u)), (min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2)) | (min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2)))).xy.x + _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id, max(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id) | (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id)), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id) | (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id)))))) | (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id)))).w * GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.y + subgroup_local_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2.0)))))))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 do
  {
   GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.z = virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x = GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.z;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) - uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, 0u)).xy, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy) >> _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) + (0u & 138170u)) ^ (0u)), 0u), (_GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(min(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, virtual_gid)) : _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u))))))) | (uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))) | 0u)), uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY((uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u))) - uvec2(0u, 0u), (_GLF_IDENTITY((uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u))) - uvec2(0u, 0u), max((uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u))) - uvec2(0u, 0u), (uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u))) - uvec2(0u, 0u)))) | ((uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u))) - uvec2(0u, 0u))))))))))) * uvec2(1u, 1u))).x, (false ? _GLF_FUZZED(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.t) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, uvec4(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[0], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[1], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[2], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[3])), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, uvec4(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[0], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[1], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[2], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[3])), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, uvec4(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[0], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[1], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[2], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[3]))))) | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, uvec4(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[0], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[1], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[2], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[3])))), _GLF_IDENTITY((GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2), ((GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2)) ^ uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)).xy, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.xy) >> _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) * uvec2(1u, 1u))).x)) + GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.w * GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.y + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) * _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, max(1u, 1u))) - _GLF_IDENTITY(0u, (0u) * 1u))) + 1) % GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.y);
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 ^ (1))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++), 0 + ((_injected_loop_counter ++))) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ _GLF_IDENTITY((_injected_loop_counter ++), (false ? _GLF_FUZZED(-70595) : (_injected_loop_counter ++)))))) | ((_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) >> 0), 0, 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) + 0)), int(4))) | 0)), _GLF_IDENTITY((_injected_loop_counter ++), 0 + ((_injected_loop_counter ++))) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (0) ^ 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++), _GLF_IDENTITY(0 + ((_injected_loop_counter ++)), 0 + (0 + ((_injected_loop_counter ++))))) - 0), 0 ^ (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter ++), 0 + ((_injected_loop_counter ++))), (_GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter ++), 0 + ((_injected_loop_counter ++))), (_GLF_IDENTITY((_injected_loop_counter ++), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << 0) + ((_injected_loop_counter ++)))) - (-91059 & 0))) >> 0) - 0)))) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), min((next_virtual_gid) | (next_virtual_gid), (next_virtual_gid) | (next_virtual_gid))))) / 1u)], _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), 4, 4)), min(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max((4) / 1, (4) / 1)))) << 0), 4, 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max((4) / 1, (4) / 1)))) << 0), 4, 4), min(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max((4) / 1, (4) / 1)))) << 0), 4, 4), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max((4) / 1, (4) / 1)))) << 0), 4, 4)))) * 1)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ~ (~ ((4) / 1))))) << 0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, clamp(1, 1, 1)))) - 0)) << 0, 0 | ((_GLF_IDENTITY(4, (4) / 1)) << 0)), (_GLF_IDENTITY(4, (4) / 1)) << 0, (_GLF_IDENTITY(4, (4) / 1)) << 0))), 4, 4)))));
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8106.7823) : injectionSwitch.y)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-999.576) : injectionSwitch.y))))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(false, true && (false)) || (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(false, true && (false)) || (! (false))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(false, true && (false)) || (! (false)))))), true)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bool((_GLF_IDENTITY(! (false), false || (! (false)))))))) && _GLF_IDENTITY(true, ! (! (true)))) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bool((_GLF_IDENTITY(! (false), false || (! (false)))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true)))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(((_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(! (false), false || (! (false)))))), bool(bool((_GLF_IDENTITY(! (false), false || (! (false)))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)) && true, bool(bvec2(((false)) && true, true))), false || (_GLF_IDENTITY(((false)) && true, bool(_GLF_IDENTITY(bvec2(((false)) && true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(((false)) && true, true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(((false)) && true, true), false, false)), false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (false) && true))))), true, true, false)), ! (! (bool(bvec4((_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (false) && true))))), true, true, false)))))) || false)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))) || false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), true)))) && true)) || false)))) || false)) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), true)))) && true)) || false)))) || false)) && true))), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (false)))) || false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), true)))) && true)) || false)), ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), true)))) && true)) || false))) && true))) || false)) && true))), false, false, false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, true), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))))), bool(bvec2(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true))))))), false, false, true))))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), true && (_GLF_IDENTITY(bool(bvec2((false), true)), (bool(bvec2((false), true))) && true))))) && _GLF_IDENTITY(true, true && (true)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) && _GLF_IDENTITY(true, true && (true)))))) || false)))) || false)) && true))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (false)), true && (bool(! (false)))), ! (_GLF_IDENTITY(! (bool(! (false))), bool(bvec4(! (bool(! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) || false)), bvec3(bvec4(bvec3((false), false, _GLF_IDENTITY(true, false || (true))), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), false || ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), _GLF_IDENTITY(true, (true) || false))))) && _GLF_IDENTITY(true, (true) || false))) || false)), false || ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), bool(bool(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))))))), (! _GLF_IDENTITY((false), ((false)) && true)) && true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), bool(bool(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))))))), (! _GLF_IDENTITY((false), ((false)) && true)) && true))))))), bool(bvec3((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), bool(bool(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))))))), (! _GLF_IDENTITY((false), ((false)) && true)) && true))))))), true, true)))) || false))), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), _GLF_IDENTITY(true, (true) || false))))) && true)) || false)))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), ! (! (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))))))) && true))))))))))), true))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) || false))))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-42.38), clamp(_GLF_FUZZED(-42.38), _GLF_FUZZED(-42.38), _GLF_IDENTITY(_GLF_FUZZED(-42.38), (_GLF_FUZZED(-42.38)) - 0.0))))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-42.38))) < injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-42.38))) < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
              return;
             break;
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-22.56, float(mat3(_GLF_IDENTITY(-22.56, 0.0 + (-22.56)), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0)))) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), min(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0)))))))
                  continue;
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3792.0931) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.4)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3792.0931) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.4)))))))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3792.0931) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.4))))))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      return;
                     return;
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), float(mat4x3(clamp(0.0, 0.0, 0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 1.0)))), 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(abs(1.0), 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_1 = atomicLoad(buf[GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x], _GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), (_GLF_IDENTITY(int(4), 1 * (int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), (false ? _GLF_FUZZED(2230) : int(int(4))))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) ^ 0)) ^ 0)))), 64, 0);
 for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   do
    {
     GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.x = _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY((read_1), uint(uint((read_1)))) / 1u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))), uint(uint((read_1)))) / 1u))))) >> 0u);
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, max(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size)).x) | _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x), ((GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x)) / (1u | 0u)), ((GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x)) | ((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, (true ? _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(13260u, 751u, 196326u)))).x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size) * uvec3(1u, 1u, 1u)).x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size) * uvec3(1u, 1u, 1u)).x) / 1u))), max(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u))), _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, min(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size))) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x))), uint(uvec4(~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x), (true ? (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, min(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size))) ^ uvec3(0u, 0u, 0u)).x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id[0]))))), 0u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, min(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size))) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x))), uint(uvec4(~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x), (true ? (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, min(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size))) ^ uvec3(0u, 0u, 0u)).x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id[0]))))), 0u, 0u, 1u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, min(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size))) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x))), uint(uvec4(~ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x), (true ? (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, min(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size, GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size))) ^ uvec3(0u, 0u, 0u)).x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id[0]))))), 0u, 0u, 1u)))) / 1u)) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, 0u | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x), ((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, 0u | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x), ((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x) / 1u)))) | (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x)) ^ 0u))) >> 0u))))))], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.w = read_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2.w = read_2) << 0u);
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.z = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, uvec4(0u, 0u, 0u, 0u) | (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2)), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) | uvec4(0u, 0u, 0u, 0u)))).w, ~ (~ (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.z = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, uvec4(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[0], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[1], GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[2], _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[_GLF_IDENTITY(3, int(ivec3(3, 0, 0)))], uint(uvec4(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2[3], _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(read_1))), 0u, 1u))))), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) | uvec4(0u, 0u, 0u, 0u)))), (false ? _GLF_FUZZED(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) | uvec4(0u, 0u, 0u, 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) | uvec4(0u, 0u, 0u, 0u)))), uvec4(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))), 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) | uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u)))))), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) * uvec4(1u, 1u, 1u, 1u)), GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2)), GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2)), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) | uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, _GLF_IDENTITY(min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), min(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY(min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) | uvec4(0u, 0u, 0u, 0u))), (min(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2, (GLF_merged3_0_2_51_2_1_13_3_1_6GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread_2) | uvec4(0u, 0u, 0u, 0u)))) | uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u))))))).w)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) ? _GLF_FUZZED((true ? 601.052 : -5.1)) : injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(5914.1861, -1.6, 24.82, -7436.5237, 37.95, -429.128, 7716.3401, -6.9)) : _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED((true ? 601.052 : -5.1)) : injectionSwitch.x)))) < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) ? _GLF_FUZZED((true ? 601.052 : -5.1)) : injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(5914.1861, -1.6, 24.82, -7436.5237, 37.95, -429.128, 7716.3401, -6.9)) : _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED((true ? 601.052 : -5.1)) : injectionSwitch.x)))) < injectionSwitch.y, false))))), _GLF_IDENTITY(! (! (bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) ? _GLF_FUZZED((true ? 601.052 : -5.1)) : injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(5914.1861, -1.6, 24.82, -7436.5237, 37.95, -429.128, 7716.3401, -6.9)) : _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED((true ? 601.052 : -5.1)) : injectionSwitch.x)))) < injectionSwitch.y)))), ! (! (! (! (bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))))) ? _GLF_FUZZED((true ? 601.052 : -5.1)) : injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(5914.1861, -1.6, 24.82, _GLF_IDENTITY(-7436.5237, max(_GLF_IDENTITY(-7436.5237, (_GLF_IDENTITY(-7436.5237, (true ? -7436.5237 : _GLF_FUZZED(-53.50)))) / round(length(normalize(vec2(1.0, 1.0))))), -7436.5237)), 37.95, -429.128, 7716.3401, -6.9)) : _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), max((injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0)))).y)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED((true ? 601.052 : -5.1)) : injectionSwitch.x)))) < injectionSwitch.y)))))))))))))
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.3, -88.55)))).x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED((85.13)), _GLF_FUZZED(967.335)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(25977, clamp(25977, 25977, 25977))) : 1)) < GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.y, (_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.y, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.y), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))) + 1 < GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.y), false, true)))))) && true))
  {
   int i = 0;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], float(mat4(injectionSwitch[1], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(vec2(572.455, 246.305), injectionSwitch)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(vec2(572.455, 246.305), injectionSwitch)) : injectionSwitch.y))))))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(vec2(572.455, 246.305), injectionSwitch)) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, sqrt(1.0), 0.0, 0.0, 1.0, abs(1.0), _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(vec2(572.455, 246.305), injectionSwitch)) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, sqrt(1.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.9))), 0.0)), 0.0, 1.0, abs(1.0), _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0)))))) || false)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(vec2(572.455, 246.305), injectionSwitch)) : injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(vec2(572.455, 246.305), injectionSwitch)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(vec2(572.455, 246.305), injectionSwitch)) : injectionSwitch.y)))))))))))) && true); _injected_loop_counter ++)
      {
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.x == GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.z, ! (! (GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.x == _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id, uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).z)))) + 1, _GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(64, (64) / 1), 4);
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (false) || false), false)))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), (! (bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), (! (bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), (! (bool(_GLF_IDENTITY(false, ! (! (false)))))) || false), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), (! (bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)) || false))))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((true ? cos(6.9) : -9270.2054)) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.0))))))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))), ! (! (false)))))) || false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bool(! _GLF_IDENTITY((! (false)), ((! (false))) && true)))))))))))) || false)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                 return;
                }
              }
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), true, true)), false))))))))
          return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       atomicStore(buf[next_virtual_gid], uint(GLF_merged4_0_1_6_1_1_13_2_1_11_3_1_14read_1subgroup_sizevirtual_gidworkgroup_base.x == GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.z) + 1, 4, 64, 4);
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false)))), (_GLF_IDENTITY(! (false), true && (! (false)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true))), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true)) && true))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), true && (! (false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))))), true, false)))))))), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, (false) || false))))) && true)) && true))))))))) && true)))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(835.544) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true)))))))
                return;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
              {
              }
             else
              {
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   do
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, exp(0.0), determinant(mat2(1.0, 0.0, cos(0.0), 1.0)), 0.0, 0.0))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(vec2(92.87, 4122.1696).g)), bool(false))) > injectionSwitch.y)))) && true)))))
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(false))
                        continue;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> (0 | 0)))
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.3) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     for(int _injected_loop_counter = (0 & (-94902 ^ 92823)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-50687) : _injected_loop_counter)) < _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(57152, (_GLF_IDENTITY(_GLF_IDENTITY(57152, int(ivec2(57152, 1))), (false ? _GLF_FUZZED(3369) : 57152))) - _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 ^ (0))))))))); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
    }
   return;
  }
}
