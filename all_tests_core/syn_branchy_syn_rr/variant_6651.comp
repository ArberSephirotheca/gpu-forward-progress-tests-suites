#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 93:
     case 27:
     case 55:
     case 61:
     int i = 0;
     case 37:
     do
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 50:
         case 72:
         case 86:
         case 18:
         case 56:
         atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
         break;
         case 41:
         if((bitfieldExtract(uvec2(113403u, 18501u), 18194, i) != uvec2(158429u, 170720u)))
          {
           if(false)
            {
            }
           float _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
           {
           }
           do
            {
             determinant(mat2(-14.90, -136.111, -7847.4574, 5485.5587));
             (atan(vec4(-86.81, -2.2, -2983.8647, 2809.0441), vec4(2509.6485, 8.3, -66.04, 97.30)) * mat3x4(6922.6012, 202.091, -60.85, 4019.4284, -28.45, -59.88, 32.21, 72.00, -602.647, 70.30, 9.2, 72.40));
             ivec4(-31356, 47304, -23296, 12064);
             mat2x3(-64.89, 8.0, -4.7, 11.32, -9.3, 789.452);
             mat4x3(0.2, -87.14, 4429.7663, 45.18, -6356.6186, -333.192, -3.4, 9.8, 558.026, 5.9, 5.6, -90.98);
             bvec2(true, false);
             bvec3 _GLF_SWITCH_0_3v[12];
             (mat2x3(4.4, 3098.6842, 5523.5415, 1891.9113, -4266.9565, -8.3) * mat4x2(-712.427, -6016.3477, -8.3, -99.77, 7.5, -63.89, 5376.8555, 65.87));
            }
           while(false);
          }
         else
          {
           for(uvec4 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[3], _GLF_SWITCH_0_6v; false; mat4(852.441, 2.6, -0.1, 2.0, -7.0, -9741.2689, 909.183, 1299.0879, -3633.4396, 629.913, -8.5, -53.81, -9160.3584, -4.8, 4887.1071, 3.7))
            {
             bvec4 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
             bvec2 _GLF_SWITCH_0_10v;
             mat3(-9.2, 99.77, -8253.2995, -96.55, 2.4, 5732.8849, -4.0, 399.621, -5786.5598);
             ivec3 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
             ;
            }
           do
            {
             ivec2(-75474, -31908);
             atan(vec4(524.150, -3.4, 8.8, 828.854), vec4(41.48, 436.566, 8.6, -8.2));
            }
           while((mat3x4(9641.6636, -7.4, 116.924, -64.11, 245.352, -996.965, -7368.1678, -9.6, -8.9, -9.6, 796.292, -5.4) == mat3x4(-14.77, 9292.8137, 964.786, -9.6, 93.44, 0.0, -594.291, -6015.7352, -2431.5359, 96.99, 95.82, -74.82)));
           if(((workgroup_id & read_2) > virtual_gid))
            {
             mat3x2(599.673, -5.3, 1.5, -8.5, -7.6, 58.76);
             bvec2 _GLF_SWITCH_0_14v[62], _GLF_SWITCH_0_15v[67];
             ;
            }
           bool _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v[19], _GLF_SWITCH_0_18v;
           (7167.7976 - mat4(97.72, 5.7, -7.1, -46.02, 3.9, -1.8, 4943.9139, 28.47, 9.6, 902.099, -4033.3651, -8.2, 3.7, 6977.3489, -3935.2163, -8.5));
          }
         default:
         1;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
     break;
     case 35:
     (mat3x4(mat2(-605.340, -9.2, 3.6, -36.90)) / 9505.5140);
     default:
     1;
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
  }
}
