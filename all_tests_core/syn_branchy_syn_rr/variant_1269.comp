#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(0 + (0), ~ (~ (0 + (0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)), true, false)))))))
      return;
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
              {
              }
             else
              {
               return;
              }
            }
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            continue;
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u)))), gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), gl_WorkGroupSize.x))) << 0u)) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)), float(_GLF_FUZZED(-8329.8078)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (! (! (false)))))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(tan(vec2(0.0, 0.0)), vec2(0.0, 0.0) + (tan(vec2(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atanh(injectionSwitch)))), injectionSwitch)).y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(atanh(injectionSwitch)), max(_GLF_FUZZED(atanh(injectionSwitch)), _GLF_FUZZED(atanh(injectionSwitch)))))), injectionSwitch)).y))) || false) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY(true ? (workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / 1u), (true ? (workgroup_base) : _GLF_FUZZED(workgroup_base)) | 0u)))) + _GLF_IDENTITY(0u, (0u) | 0u))), ~ (_GLF_IDENTITY(~ ((~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(workgroup_base)))) + 0u))), (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(workgroup_base)))) + 0u), (~ _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) / 1u)) | 0u)))) + 0u)) << 0u)))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))))))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x2((injectionSwitch)[0], _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.0) : 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(66.31)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), bool(true))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_FUZZED(2.2)), bvec2(true, false))).x < injectionSwitch.y, true, true)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y)), true, true))) && true)))) ? _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u)))), uint(uvec3((~ (subgroup_id)), 0u, 1u)))) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) * 1u))))) * subgroup_size : _GLF_FUZZED(workgroup_base)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) ^ 0u), 0u | (_GLF_FUZZED(workgroup_base))), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))), min(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base)))))) | (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))))), 1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) - 0u)), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) / 1u)) * subgroup_size, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) / 1u)) * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) / 1u)) * subgroup_size))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))) : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))).y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), 0u | (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))), max(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), uint(_GLF_IDENTITY(uvec2(~ (subgroup_id), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), max(_GLF_IDENTITY(uvec2(~ (subgroup_id), 0u), _GLF_IDENTITY((uvec2(~ (subgroup_id), 0u)) / uvec2(1u, 1u), (true ? (uvec2(_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uvec4(~ (subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(~ (subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) + 0u)), 0u)) / _GLF_IDENTITY(uvec2(1u, 1u), clamp(uvec2(1u, 1u), uvec2(1u, 1u), uvec2(1u, 1u))) : _GLF_FUZZED(uvec2(57280u, 89314u))))), uvec2(~ (subgroup_id), 0u))))))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size)) : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), 0u | (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), 0u | (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), 0u | (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base)))) << 0u)) / 1u)) * 1u))), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u)))) >> 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_id))), (~ (~ (~ (subgroup_id)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(workgroup_base))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) ^ 0u) : _GLF_FUZZED(115375u))), ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base)), max(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(workgroup_base))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) ^ 0u) : _GLF_FUZZED(115375u))), ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base)), ~ (~ (max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(workgroup_base))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) ^ 0u) : _GLF_FUZZED(115375u))), ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base))))), max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(workgroup_base))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) ^ 0u) : _GLF_FUZZED(115375u))), ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(workgroup_base))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.8)), vec2(_GLF_FUZZED((true ? 1512.3626 : 8436.1564)), (injectionSwitch)[1]), bvec2(false, true))).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) ^ 0u) : _GLF_FUZZED(115375u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), (~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) / 1u)) * subgroup_size : _GLF_FUZZED(workgroup_base)), max(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), (injectionSwitch.x < injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(workgroup_base))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) ^ _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) : _GLF_FUZZED(115375u))), ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base)), ~ (~ (max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) || false)), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) || false)), false, false))))))))) ? _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))))) * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(workgroup_base))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) ^ 0u) : _GLF_FUZZED(115375u), ~ (~ (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) ^ 0u) : _GLF_FUZZED(115375u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) ^ 0u)))))) * subgroup_size : _GLF_FUZZED(workgroup_base))))), max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, false, true, false)), false, true), bvec3(bvec4(bvec3(bool(bvec4(false, false, true, false)), false, true), false)))), false || (bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, false, true, false)), false, true), bvec3(bvec4(bvec3(bool(bvec4(false, false, true, false)), false, true), false)))))))), false)))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(workgroup_base))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) ^ 0u) : _GLF_FUZZED(115375u))), ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base))))) * 1u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base)))) ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u)))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base)), clamp(_GLF_IDENTITY(max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base)), (max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base)), ~ (~ (max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))))), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))))), uint(uvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 0u))))), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 1u, 0u, 0u)), (uint(uvec4(subgroup_id, 1u, 0u, 0u))) | 0u))))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))), uint(_GLF_IDENTITY(1u, 1u * (1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uint(1u))), 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(1u, uint(uint(1u))), 0u, 1u, 1u)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uint(1u))), 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(1u, uint(uint(1u))), 0u, 1u, 1u))))), uint(uvec3(~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uint(1u))), 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(1u, uint(uint(1u))), 0u, 1u, 1u))))), 0u, 1u))))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(~ (~ (subgroup_id)), ~ (~ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_id)), 0u ^ (_GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) | 0u))), (_GLF_IDENTITY(~ (~ (subgroup_id)), 0u ^ (_GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) | 0u)))) >> 0u)) * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u ^ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))) - 0u) * subgroup_size : _GLF_FUZZED(workgroup_base))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(roundEven(injectionSwitch)) : injectionSwitch)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, true && (true))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), max(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7562.5133)), bool(false))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))) : _GLF_FUZZED((workgroup_base >> workgroup_id)), ~ (~ (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))) : _GLF_FUZZED((workgroup_base >> workgroup_id))))))))) * subgroup_size : _GLF_FUZZED(workgroup_base))), 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), (uvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(roundEven(injectionSwitch)) : injectionSwitch)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) ? _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (_GLF_IDENTITY((~ (subgroup_id)), ~ (~ ((~ (subgroup_id)))))) >> (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, true && (true))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (112748u & 0u) ^ (subgroup_id)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) ? _GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id))) : _GLF_FUZZED((workgroup_base >> workgroup_id)))))) * subgroup_size : _GLF_FUZZED(workgroup_base))), 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u)) >> uvec4(0u, 0u, 0u, 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) >> 0u) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base)), max(max(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base)), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8175.6434)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), ! (! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base))))), uint(uvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id)))))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))))), ! (! (! (_GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))))))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u))), 1u, (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u)), ~ (~ ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)), (uint(uvec4(_GLF_IDENTITY(uint(1u), uint(1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u))) >> 0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u)))) | (_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u))), uint(1u))) ^ (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))))) | (uint(1u))), uint(1u)))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(1u, (1u) | 0u)) | ((195057u & 0u) ^ 0u)))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(1u, (1u) | 0u))))), uint(uint(_GLF_IDENTITY(1u, (1u) | 0u))))))))))) - _GLF_IDENTITY(0u, 0u | (0u))), 0u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) >> 0u) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && true)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 1u, 1u)), uint(uvec2(uint(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 1u, 1u)), 1u)))) : _GLF_FUZZED(workgroup_base)))), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 1u, 1u)), uint(uvec2(uint(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 1u, 1u)), 1u)))) : _GLF_FUZZED(workgroup_base)))), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base))))) << 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(137308u) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 1u, 1u)), uint(uvec2(uint(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 1u, 1u)), 1u)))) : _GLF_FUZZED(workgroup_base)))), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base))))) << 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 1u, 1u)), uint(uvec2(uint(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 1u, 1u)), 1u)))) : _GLF_FUZZED(workgroup_base)))), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base))))) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 1u, 1u)), uint(uvec2(uint(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 1u, 1u)), 1u)))) : _GLF_FUZZED(workgroup_base)))), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base))))) << 0u)) << 0u))))), min((_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) - 0.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) - 0.0)), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) - 0.0))))))))) ? _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), 0u | ((~ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x, mix(float(_GLF_FUZZED(-1.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0))), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4984.9054) : injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(0u | (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))), max(0u | (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))), 0u | (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))))))) | (~ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) : _GLF_FUZZED(subgroup_id))), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || false)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 1u, _GLF_IDENTITY(1u, uint(uint(1u))))), uint(uvec2(uint(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 1u, 1u)), 1u)))) : _GLF_FUZZED(workgroup_base)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base)))) ^ 0u))) << _GLF_IDENTITY(0u, (0u) | (0u))))), min((_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) - 0.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), mix(float(_GLF_FUZZED((692.413))), float(float(float(injectionSwitch.y))), bool(true))))) - 0.0)), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) - 0.0))))))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4984.9054) : injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (_GLF_IDENTITY(~ (subgroup_id), 0u | _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))), ((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))) | ((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))))), 0u, 1u), max(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))), ((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))) | ((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))))), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))), ((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))) | ((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))))), 0u, 1u), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))), ((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))) | ((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))))), 0u, 1u)) | (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))), ((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id))))) | ((_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))))), 0u, 1u))))))))) | (~ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec2(_GLF_FUZZED(workgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_FUZZED(workgroup_base))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id)), ~ (_GLF_IDENTITY(~ (subgroup_id), ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (~ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(workgroup_base))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), true, false, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), true, false, false))))) && true))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base)))), max((_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), true, false, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), true, false, false))))) && true))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), true, false, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))), true, false, false))))) && true))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base)))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | (_GLF_IDENTITY(max(subgroup_size, subgroup_size), max(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size)))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u, 1u))))), 1u, 1u, 1u)), uint(uvec2(uint(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 1u, 1u)), 1u)))) : _GLF_FUZZED(workgroup_base)))), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base))))) << 0u))), min((_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) - 0.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9684.7049))), float(float(injectionSwitch.y)))) - 0.0)), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) - 0.0))))))))) ? _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (_GLF_IDENTITY(~ (subgroup_id), (false ? _GLF_FUZZED(162445u) : ~ (subgroup_id)))) | (~ (subgroup_id))))) * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(139719u)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4984.9054) : injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (_GLF_IDENTITY(~ (subgroup_id), 0u | (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))))) | (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (~ (subgroup_id))))))) * subgroup_size : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), true && (bool(bvec2(! (true), true))))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), true && (bool(bvec2(! (true), true))))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base), (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), true)), true && (bool(bvec2(! (true), true))))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))), ~ (~ (subgroup_id))) * subgroup_size : _GLF_FUZZED(workgroup_base)) * 1u)) - 0u), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), (~ (subgroup_id)), (~ (subgroup_id))))) - 0u)) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), min((subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u))))) * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (0u | 0u) | (workgroup_base)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), false, false, false))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) ? _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id)))))), max(_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id)))))), (true ? _GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id)))))) : _GLF_FUZZED(num_workgroup)))) + 0u)))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), max((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))), ((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) | 0u), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) + ((1u ^ 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))))), (~ (subgroup_id))))))))), uint(uvec2(~ (_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))))), 1u)))))) * subgroup_size : _GLF_FUZZED(workgroup_base), 1u * (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), false, false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), false, false, false))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), false, false, false)))))))) || false), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), max((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), max((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) * 1u)))), max((subgroup_id), (subgroup_id))))))) * 1u), ((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) | 0u), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), min((~ (subgroup_id)), (~ (subgroup_id)))), (~ (subgroup_id))))))))), uint(uvec2(~ (_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))))), 1u)))))) * subgroup_size : _GLF_FUZZED(workgroup_base), min(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), false, false, false))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), max((~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))), max((subgroup_id), (subgroup_id)))), (~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))), ((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) | 0u), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))))))), uint(uvec2(~ (_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))))), 1u)))))) * subgroup_size : _GLF_FUZZED(workgroup_base), min(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), false, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uint(-213.568)) : (subgroup_id)))), max((~ _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_id)))), (~ (subgroup_id))))))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), max((subgroup_id), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 1u, 0u))))))))), max((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))), (~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) << 0u)), (~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))), _GLF_IDENTITY(((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))), 0u ^ (((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))))) | 0u), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))) ^ 0u))))))))), uint(uvec2(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), (_GLF_IDENTITY((~ (subgroup_id)), uint(uvec3((~ (subgroup_id)), 0u, 1u)))) | ((~ (subgroup_id)))), (~ (subgroup_id))))))), 1u)))))) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), false, false, false))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_id)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), max((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))), ((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) | 0u), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))))))), uint(uvec2(~ (_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))))), 1u))))), (0u | 0u) | (~ _GLF_IDENTITY((~ (subgroup_id)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), max((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))), ((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) | 0u), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))))))), uint(uvec2(~ (_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))))), 1u)))))))) * subgroup_size : _GLF_FUZZED(workgroup_base))), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false, false))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (subgroup_id)), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), max((~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))), ~ (~ (~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))))) | 0u), 0u | (_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u))))))))), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), (_GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) | ((~ (subgroup_id))))) / 1u), (~ (subgroup_id)))), _GLF_IDENTITY(0u, min(0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))), ((_GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id)))))) ^ 0u))), 1u)))))) * subgroup_size : _GLF_FUZZED(workgroup_base))))), max(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) << 0u) * subgroup_size : _GLF_FUZZED(workgroup_base), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0)))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))).y)) ? _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), min((~ (subgroup_id)), (~ (subgroup_id))))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)))), injectionSwitch)).y)) ? subgroup_size : _GLF_FUZZED(virtual_gid), 0u ^ (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)))), injectionSwitch)).y)) ? subgroup_size : _GLF_FUZZED(virtual_gid), clamp(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)))), injectionSwitch)).y)) ? subgroup_size : _GLF_FUZZED(virtual_gid), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)))), injectionSwitch)).y)) ? subgroup_size : _GLF_FUZZED(virtual_gid), clamp(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)))), injectionSwitch)).y)) ? subgroup_size : _GLF_FUZZED(virtual_gid), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)))), injectionSwitch)).y)) ? subgroup_size : _GLF_FUZZED(virtual_gid), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)))), injectionSwitch)).y)) ? subgroup_size : _GLF_FUZZED(virtual_gid))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2034.1014)), vec2(_GLF_FUZZED(636.607), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)))), injectionSwitch)).y)) ? subgroup_size : _GLF_FUZZED(virtual_gid))))))), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)) | (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(virtual_gid)))) * 1u))), _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) ? subgroup_size : _GLF_FUZZED(virtual_gid))))) : _GLF_FUZZED(workgroup_base))))))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u) % subgroup_size, uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ _GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) % subgroup_size))));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), true)))), false || (bool(_GLF_IDENTITY(bool(true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(bool(true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), true))))))), false || (bool(_GLF_IDENTITY(bool(true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) || false))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)))));
 do
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != _GLF_IDENTITY(1, 0 | (1))) && true)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
          }
         else
          {
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       if(subgroup_local_id + 1 < subgroup_size)
        {
         int i = 0;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, _GLF_IDENTITY(true, false || (true)), true)), ! (! (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, true, true)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (true ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(workgroup_base))), _GLF_FUZZED(subgroup_local_id))) : read_2))))) + 1, 4, 64, 4);
              }
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0))) >> _GLF_IDENTITY(int(1), int(1))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
          return;
         do
          {
           atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) | 0u), 4, _GLF_IDENTITY(64, 1 * (64)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (4) | 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY((4) | 0, 0 + ((4) | 0))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)) + 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)) + 0, (false ? _GLF_FUZZED(44637) : (_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))))) + 0))) + 0)))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          return;
         do
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), sqrt(sqrt(0.0)), 0.0)))))))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-404.650)), float(injectionSwitch.x), bool(true)))) / 1.0) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), false, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), false, _GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-404.650)), float(injectionSwitch.x), bool(true)))) / 1.0) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), false, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), false, _GLF_IDENTITY(true, false || (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, true, true)))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-366.315) : injectionSwitch.x)), exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-366.315) : injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-366.315) : injectionSwitch.x)), exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-366.315) : injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-366.315) : injectionSwitch.x)), exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-366.315) : injectionSwitch.x)))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-366.315) : injectionSwitch.x)), exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-366.315) : injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-366.315) : injectionSwitch.x)), exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-366.315) : injectionSwitch.x)))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), false, true, false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0), 1.0, sqrt(1.0), 1.0, 0.0, log(1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))))))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) || false, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false) || false, (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, sin(0.0), abs(1.0), round(length(normalize(vec2(1.0, 1.0))))))).y) || false) || false) && true), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false) || false, bool(bool(((injectionSwitch.x > injectionSwitch.y) || false) || false)))))))) || false)))))))), _GLF_IDENTITY(false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-366.315) : injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (_GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec3(bool(bvec2(true, false)), true, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false) || false, bool(bool(((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false))) || false)))))))) || false))))))))), ! (! (false || ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-366.315) : injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (_GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec3(bool(bvec2(true, false)), true, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false) || false, bool(bool(((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false))) || false)))))))) || false))))))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-366.315) : injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (_GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec3(bool(bvec2(true, false)), true, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false) || false, bool(bool(((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false))) || false)))))))) || false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-93.22) : injectionSwitch.y)), 1.0, 0.0, 1.0, 1.0, 1.0)))))))
      return;
    }
  }
}
