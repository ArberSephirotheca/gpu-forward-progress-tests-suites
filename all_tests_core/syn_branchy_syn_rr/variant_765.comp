#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))))).x, _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u + (_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u))), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))))) * (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x), max(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), clamp(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(5u))), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) * (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x))));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)))))) ^ 0u) * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)))))) ^ 0u) * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))), 1u, 1u))) + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u), uint(5u)))))), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), (subgroup_size), (subgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u))), 1u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), (uint(5u)) - 0u), uint(5u)), min(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), (uint(5u)) - 0u), uint(5u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), (uint(5u)) - 0u), uint(5u))) - 0u), 0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), (uint(5u)) - 0u), uint(5u)))))))), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u), (subgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), (uint(5u)) - 0u), uint(5u)))))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u)))), clamp(_GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))), (subgroup_size), (subgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(max(uint(5u), uint(5u)), (max(uint(5u), uint(5u))) / 1u)), (uint(5u)) - 0u), uint(5u)))))))) : _GLF_FUZZED(workgroup_size))) + subgroup_local_id : _GLF_FUZZED(workgroup_base)));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, ~ (~ (0))))) - int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.6) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid))) | (next_virtual_gid))], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 4, 64, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), 0)));
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))))), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(subgroup_size, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))))))))))
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1))))) == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(read_1, (read_1) >> 0u) : _GLF_FUZZED(workgroup_base), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(read_1, (read_1) >> 0u) : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(uint(uvec4(~ (true ? _GLF_IDENTITY(read_1, (read_1) >> 0u) : _GLF_FUZZED(workgroup_base)), 1u, 1u, 1u)), (false ? _GLF_FUZZED(13150u) : uint(uvec4(~ (true ? _GLF_IDENTITY(read_1, (read_1) >> 0u) : _GLF_FUZZED(workgroup_base)), 1u, 1u, 1u))))))))) == read_2), uint(read_1 == read_2)), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u, (0u) | 0u) | (read_1)) == read_2)), clamp(_GLF_IDENTITY(uint(read_1 == read_2), ~ _GLF_IDENTITY((~ (uint(read_1 == read_2))), (_GLF_IDENTITY((~ (uint(read_1 == read_2))), 0u ^ ((~ (uint(read_1 == read_2)))))) >> 0u)), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), (true ? _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), (true ? uint(read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))) : _GLF_FUZZED(next_virtual_gid))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | 0u)))), uint(read_1 == read_2))))))) + 1, _GLF_IDENTITY(min(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2), _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) ^ 0u)), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), _GLF_IDENTITY(clamp(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))), 1u * (clamp(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), uint(read_1 == read_2), uint(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1, (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ! (! (_GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))))))))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) / 1u)), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true, true), bvec3(bvec4(bvec3(read_1 == read_2, true, true), true))))))), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ! (_GLF_IDENTITY(! ((read_1 == read_2)), (! ((read_1 == read_2))) || false)))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1) + 0u)), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec2(read_1, 0u), (uvec2(read_1, 0u)) / uvec2(1u, 1u)))), read_1, read_1)) == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, (read_1) + 0u) == read_2)), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(_GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), uint(read_1 == read_2))), _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1), min((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1))), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1))) + 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1), min((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1))), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1))) + 0u), (~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))), max(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(read_1, ~ (~ (read_1))))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), 1u * (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(_GLF_IDENTITY(uint(read_1 == read_2), ~ (_GLF_IDENTITY(~ (uint(read_1 == read_2)), min(~ (uint(read_1 == read_2)), ~ (uint(read_1 == read_2)))))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (read_1))) | (read_1))))))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1), min((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), uint(read_1 == read_2), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))), ~ (~ (_GLF_IDENTITY(read_1, ~ (~ (read_1)))))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), true && (bool(read_1 == read_2)))))))), bool(bvec4(bool(read_1 == read_2), false, true, true)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))), bool(bvec4(bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))), max(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))), _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))))), 0u | (_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, true)))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1))), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u))), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) >> 0u)) | 0u))), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1))) + 0u)) + 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ~ (~ ((read_1)))) + 0u) == read_2)), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))), uint(read_1 == read_2)), clamp(clamp(uint(read_1 == read_2), uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) << 0u)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2))))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), uint(uvec3(uint(read_1 == read_2), 1u, 0u)))), clamp(clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) * 1u) == read_2, ! (! (read_1 == read_2)))) && true)), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 1u))) == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, _GLF_IDENTITY(true, ! (! (true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true)))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))))))))))), bool(bool(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))))))))))))))), false || ((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(_GLF_IDENTITY(bool(read_1 == read_2), true && (bool(read_1 == read_2))), false, true, true)))))))))))))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))))))))))), bool(bool(! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))))))))))))))), false || ((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(_GLF_IDENTITY(bool(read_1 == read_2), true && (bool(read_1 == read_2))), false, true, true))))))))))))))))) && true)))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), uint(uvec3(uint(read_1 == read_2), 1u, 0u)))), clamp(clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) && true)), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == _GLF_IDENTITY(read_2, ~ _GLF_IDENTITY((~ (read_2)), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * ((~ (read_2)))))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 1u))))), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) | 0u)))), false, true, true)))))))))))), false || ((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))))))))))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1), ~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), uint(uvec2(0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)), 1u)))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), uint(uvec3(uint(read_1 == read_2), 1u, 0u)))), clamp(clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), (_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)))))) && true), (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) && true)), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, min(read_2, read_2)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), false || ((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), false || ((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), false || ((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), false || ((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2, ! (! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2)))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, _GLF_IDENTITY(true, true && (true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, _GLF_IDENTITY(true, true && (true)))))), (bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, (read_1) >> 0u))) == read_2), false, true, _GLF_IDENTITY(true, true && (true))))))) && true))))), true && (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, _GLF_IDENTITY(true, true && (true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, _GLF_IDENTITY(true, true && (true)))))), (bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, _GLF_IDENTITY(true, true && (true))))))) && true))))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1), min((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2)))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2)))))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2)))))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2)))))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2)))))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2)))))))))))))), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), (true ? _GLF_IDENTITY(read_2, 0u | (read_2)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), 0u + (_GLF_IDENTITY(read_2, 0u | (read_2))))))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2)))))))) ^ 0u) + _GLF_IDENTITY(1, (1) / 1)), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u + (read_1), (0u + (read_1)) + 0u)) == read_2)), clamp(_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), ((0u ^ 1u) | 1u)))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))), _GLF_IDENTITY(true, (true) || false)), true), bvec3(bvec4(bvec3(bvec2((! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))), _GLF_IDENTITY(true, (true) || false)), true), true)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))), _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))), _GLF_IDENTITY(true, (true) || false)), true), bvec3(bvec4(bvec3(bvec2((! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2), (bool(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (read_1) * 1u)))) / 1u) == read_2)) || false)) && true), bool(bvec4(bool(read_1 == read_2), false, true, true))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))), _GLF_IDENTITY(true, (true) || false)), true), true)))))), false, true, false)))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1))), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) | (read_1)), read_1, read_1)) == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), min((read_2), (read_2))) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), bool(bvec4(bool(read_1 == read_2), false, true, true)))))))))))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1))) + 0u)) - 0u)), (true ? min(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, false || (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, min(read_2, read_2)), read_2))))))))), clamp(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(read_1 == read_2, false)), (bool(bvec2(read_1 == read_2, false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(read_1 == read_2, false)), (bool(bvec2(read_1 == read_2, false))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(read_1 == read_2, false)), (bool(bvec2(read_1 == read_2, false))) || false), false || (_GLF_IDENTITY(bool(bvec2(read_1 == read_2, false)), (bool(bvec2(read_1 == read_2, false))) || false))), false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(read_1 == read_2, false)), (bool(bvec2(read_1 == read_2, false))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(read_1 == read_2, false)), (bool(bvec2(read_1 == read_2, false))) || false), false || (_GLF_IDENTITY(bool(bvec2(read_1 == read_2, false)), (bool(bvec2(read_1 == read_2, false))) || false))), false)))))))))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (1u | 1u) * (read_1)) == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u) == read_2, (_GLF_IDENTITY(read_1, (read_1) << 0u) == read_2) && true)), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), min(_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1))), ~ (read_1))))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)))), ~ (~ (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))) : _GLF_FUZZED(173809u)))))) + 1) + 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2), uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), 1u * (uint(read_1 == read_2)))), 0u | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec4(uint(read_1 == read_2), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), uint(_GLF_IDENTITY(uvec3(uint(read_1 == read_2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec3(uint(read_1 == read_2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec3(0u, 0u, 0u)))), uint(read_1 == read_2), uint(read_1 == read_2)), _GLF_IDENTITY(clamp(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))), (false ? _GLF_FUZZED(21769u) : clamp(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2), _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) ^ 0u), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))))) + 1, (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))) && true)), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(~ (~ (read_1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(~ (~ (read_1)), 0u ^ (~ (~ (read_1))))))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))), (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(~ (~ (read_1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(~ (~ (read_1)), 0u ^ (~ (~ (read_1))))))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))) >> 0u)), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (read_1 == read_2)))), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), (uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), min(_GLF_IDENTITY(read_2, 0u | (read_2)), _GLF_IDENTITY(read_2, 0u | (read_2))))))))) ^ 0u), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))))))))))))) + 1) + 0u), 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> 0u), uint(read_1 == read_2), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))))))) + 1, (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1) + 0u), 1u), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(read_1, (read_1) >> 0u))) == read_2), uint(read_1 == read_2)), 0u | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 == read_2), ~ (_GLF_IDENTITY(~ (uint(read_1 == read_2)), min(_GLF_IDENTITY(~ (uint(read_1 == read_2)), 0u ^ (~ (uint(read_1 == read_2)))), ~ (uint(read_1 == read_2)))))), uint(read_1 == _GLF_IDENTITY(read_2, (0u ^ 0u) | (_GLF_IDENTITY(read_2, (read_2) - 0u)))), uint(read_1 == read_2)), clamp(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (1u ^ 1u)) == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | (1u ^ 1u)) == read_2, false, true, false)))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uint(read_2)), (uint(uint(read_2))) - 0u))), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(0u | (read_2), 0u ^ (0u | (read_2))))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)))))), (_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bvec2(bool(read_1 == read_2), true), bvec2(bvec2(bvec2(bool(read_1 == read_2), true))))))))), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), _GLF_IDENTITY(0u, (0u) - 0u) | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2)), clamp(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_2, (read_2) << (0u & 196566u)), 0u), (uvec2(_GLF_IDENTITY(read_2, (read_2) << (0u & 196566u)), 0u)) | uvec2(0u, 0u)))), false || (read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_2, (read_2) << _GLF_IDENTITY((0u & 196566u), ~ (~ ((0u & 196566u))))), 0u), (uvec2(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u | (read_2))) << (0u & 196566u)), 0u)) | uvec2(0u, 0u))))))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))) / 1u)) / 1u)) + 1) + 0u), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec3(uint(read_1 == read_2), 0u, 1u)), uint(uvec2(uint(uvec3(uint(read_1 == read_2), 0u, 1u)), (0u | 0u)))))), clamp(uint(read_1 == read_2), uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), clamp(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) + 0u), uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(23751u) : uint(read_1 == read_2))))), uint(read_1 == read_2))))))))) + 1, (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) + 0u)) >> 0u), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, (read_2) << 0u))), _GLF_IDENTITY(0u, 0u ^ (0u)) | (read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1) + 0u), 1u)))))))) : _GLF_FUZZED(19249u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) ^ 0u)) - 0u), uint(read_1 == read_2), uint(read_1 == read_2)), 0u | (_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) || false)), bool(bvec4(! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) || false)), false, true, false)))))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) ^ 0u)) - 0u), uint(read_1 == read_2), uint(read_1 == read_2)), 0u | (_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) || false)), bool(bvec4(! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) || false)), false, true, false)))))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 == read_2), uint(uint(uint(read_1 == read_2)))), uint(read_1 == read_2), uint(read_1 == read_2)), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1, 1u * (read_1)) == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), true, false))))), clamp(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, true)))), uint(read_1 == read_2))))))) + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))), bool(bool(_GLF_IDENTITY(read_1, ~ _GLF_IDENTITY((~ (read_1)), (_GLF_IDENTITY((~ (read_1)), (_GLF_IDENTITY((~ (read_1)), 0u + ((~ (read_1))))) / 1u)) * 1u)) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u)))))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), uint(uvec4(_GLF_IDENTITY(read_2, 0u | (read_2)), 0u, 0u, 0u))))))), uint(read_1 == read_2)), clamp(uint(read_1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) >> 0u), read_2))), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, (read_1) * 1u) == read_2)), clamp(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) | (read_2))), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1) + 0u)), min(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), uint(read_1 == read_2), uint(read_1 == read_2)), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))), uint(read_1 == read_2)), clamp(_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2)), _GLF_IDENTITY((clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))) ^ 0u, clamp((clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))) ^ 0u, (clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))) ^ 0u, (clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))) ^ 0u))), clamp(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) - 0u)), 0u ^ (uint(read_1 == _GLF_IDENTITY(read_2, (read_2) - 0u)))), uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) - 0u), (read_2) | 0u)))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), min(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), _GLF_IDENTITY((clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))), uint(uvec3((clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u))), ~ (~ (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), min(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false))), (clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)))) - 0u)))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2)), clamp(clamp(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), uint(read_1 == read_2)), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, uint(uint(read_1))) == read_2))))))) + 1, (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) ^ 0u))))), 0u | (_GLF_IDENTITY(clamp(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) << 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(read_1 == read_2), uint(read_1 == read_2)), clamp(clamp(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), max(_GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), max(_GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), _GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(read_2, ~ (~ (read_2)))))))))) | 0u), ! (! (read_1 == read_2)))), uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), (read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))) || false)), uint(read_1 == read_2)), _GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), (clamp(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), uint(read_1 == read_2))) ^ 0u), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))))) + 1) + 0u))))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) << 0))), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), false || ((read_1 == read_2))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))) || false)) && true)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))) || false)) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))) || false)) && true))), true && (! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))) || false)) && true)))))), (bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))) || false)) && true))), true && (! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))) || false)) && true))))))) || false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), (bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), true, false, false)))))), true && (bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), true, false, false)))))))))) && true))) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uint(read_1))) == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), ! (! (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))) || false)) && true)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))) && true))))))))) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, _GLF_IDENTITY(true, ! (! (true))))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, true)))))))) || (read_1 == read_2)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), ! (! (bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, false, true, true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, _GLF_IDENTITY(true, ! (! (true))))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, true)))))))) || (read_1 == read_2)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))), ! (! (bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(clamp(sign(-41225), 25528, -38306))))) / 1)) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, (1) / 1)) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, (1) / 1)) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, (1) / 1)) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) - 0, ~ (~ ((_GLF_IDENTITY(1, (1) / 1)) - 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, (1) / 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, (1) / 1)) - 0)) ^ (1 ^ 1))) + 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1)) - 0)), 0 | _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0))), ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0)))) | ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)), (1) / 1)) - 0)))))), int(int(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0))))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(clamp(sign(-41225), 25528, -38306))))) / 1)) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, (1) / 1)) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, (1) / 1)) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, (1) / 1)) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) - 0, ~ (~ ((_GLF_IDENTITY(1, (1) / 1)) - 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, (1) / 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, (1) / 1)) - 0)) ^ (1 ^ 1))) + 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1)) - 0)), 0 | _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0))), ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0)))) | ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)), (1) / 1)) - 0)))))), int(int(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0))))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0)), (true ? clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(clamp(sign(-41225), 25528, -38306))))) / 1)) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, (1) / 1)) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, (1) / 1)) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, min((1) / 1, (1) / 1)))) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) - 0, ~ (~ ((_GLF_IDENTITY(1, (1) / 1)) - 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) / 1)))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(1, (1) / 1)) - 0)) ^ (_GLF_IDENTITY(1, (1) | (1)) ^ 1))) + 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1)) - 0)), 0 | _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0))), (0 | 0) ^ ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0))))), ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0)))) | ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)), (1) / 1)) - 0)))))), int(int(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0))))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) - 0)) : _GLF_FUZZED(46477)))) / 1)), 4, 64, _GLF_IDENTITY(4, (4) >> 0));
  }
}
