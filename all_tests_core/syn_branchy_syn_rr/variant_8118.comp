#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-21081)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true), true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0), mat3(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0), mat3(mat4x3(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0))))))))))) || false))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, true)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, true)))), false)))) && true), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))));
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))))))))) || _GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (! (bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))), ! (! (false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false)))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), ! (! (bool(bvec2((false), true)))))))), ! (! (false)))), false, false, false)), true, false)))), false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))), false, false, false)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), ! (! (false)))), false, false, false)), true, false)))), false, _GLF_IDENTITY(true, ! (! (true)))), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false || (bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u)), (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u))) | (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), clamp((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u)), (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u))) | (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u)), (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u))) | (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u)), (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u))) | (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u)), (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u))) | (uvec4(_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))), 1u, 1u, (95605u & 0u))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)))) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, ((subgroup_size) >> 0u) << (0u ^ 0u)))) | ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), (true ? ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) | ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) + 0u), (subgroup_size) >> 0u)) : _GLF_FUZZED(subgroup_local_id)))))))))))), ((_GLF_IDENTITY(1u, max(1u, 1u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY((6u) | (6u), (90166u & 0u) | (_GLF_IDENTITY((6u) | (6u), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ ((6u) | _GLF_IDENTITY((6u), ((6u)) ^ 0u))))))), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u)))) - 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) * (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1))) % subgroup_size)) | _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) ^ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), ((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1))), 0u ^ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1))), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1)))))))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1))), 0u ^ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1))), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1)))))))) % subgroup_size)) - 0u)) | _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u))), ((((subgroup_local_id + 1) % subgroup_size))) ^ (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))) | 0u))));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9454.3252) : injectionSwitch.x))), bool(true))) > injectionSwitch.y))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) && true); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), 0 | (~ (_injected_loop_counter ++))))), ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), _GLF_IDENTITY((~ _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) ^ 0)), (_GLF_IDENTITY((~ (_injected_loop_counter ++)), 0 ^ (_GLF_IDENTITY((~ _GLF_IDENTITY((_injected_loop_counter ++), 1 * ((_injected_loop_counter ++)))), ((~ (_injected_loop_counter ++))) | 0)))) ^ 0) << 0))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter ++, 0 + (_GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++))))), (~ (_injected_loop_counter ++)) << 0)))), ((_GLF_IDENTITY(_injected_loop_counter ++, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_injected_loop_counter ++), (~ (_injected_loop_counter ++)) << 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (_injected_loop_counter ++), (~ (_injected_loop_counter ++)) << 0))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(~ (_injected_loop_counter ++), (~ (_injected_loop_counter ++)) << 0)))), ~ (~ (~ (~ ((_GLF_IDENTITY(~ (_injected_loop_counter ++), (~ (_injected_loop_counter ++)) << 0)))))))))))))) - 0))) : _GLF_FUZZED(62145))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), clamp(~ _GLF_IDENTITY((buf[virtual_gid]), max((buf[virtual_gid]), _GLF_IDENTITY((buf[virtual_gid]), clamp(_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | 0u), (buf[virtual_gid]), (buf[virtual_gid]))))), _GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) - 0u), ~ (buf[virtual_gid]))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) | (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))) + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     int i = _GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), ((0)) << 0)))) / 1) - 0);
     do
      {
       do
        {
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) | (read_2)))), 1u * (_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) | (read_2)))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, min(read_2, read_2)))), 0u ^ (_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_2) | (read_2), (true ? _GLF_IDENTITY((read_2) | (read_2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((read_2) | (read_2))) : _GLF_FUZZED(read_2))), (_GLF_IDENTITY((read_2) | (read_2), min(_GLF_IDENTITY((read_2) | (read_2), min((read_2) | (read_2), (_GLF_IDENTITY(read_2, min(read_2, read_2))) | (read_2))), (read_2) | (read_2)))) ^ 0u))))) ^ 0u), ! (! (read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) | (read_2)))), min(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) | (read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) | (read_2)))), min(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) | (read_2)))), _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) | (read_2))))))) | 0u), _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) | (read_2)))))), 1u * (_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) | (read_2)))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (_GLF_IDENTITY(read_2, min(read_2, read_2))), 0u | ((read_2) | (_GLF_IDENTITY(read_2, min(read_2, read_2)))))), 0u ^ (_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_2) | (read_2), (true ? _GLF_IDENTITY((read_2) | _GLF_IDENTITY((read_2), ((read_2)) << 0u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) | ((read_2) | (_GLF_IDENTITY(read_2, (read_2) * 1u)))) : _GLF_FUZZED(_GLF_IDENTITY(read_2, uint(uint(read_2)))))), (_GLF_IDENTITY((read_2) | (read_2), min(_GLF_IDENTITY((read_2) | (read_2), min((read_2) | (read_2), (_GLF_IDENTITY(read_2, min(read_2, read_2))) | (read_2))), (read_2) | (read_2)))) ^ 0u))))) ^ 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, min(read_1, read_1)))) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | 0u)) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))), true && (read_1 == read_2))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, true))))), ((uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, true)))))) - 0u) ^ 0u), (uint(read_1 == read_2)) - 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 == read_2), bool(_GLF_IDENTITY(bool(! (read_1 == read_2)), bool(_GLF_IDENTITY(bool(bool(! (read_1 == read_2))), ! (! (bool(bool(! (read_1 == read_2)))))))))), true && (_GLF_IDENTITY(! (read_1 == read_2), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (read_1 == read_2)), (bool(! (read_1 == read_2))) && true), bool(_GLF_IDENTITY(bool(bool(! (read_1 == read_2))), ! (! (bool(bool(_GLF_IDENTITY(! (read_1 == read_2), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec4(! (read_1 == read_2), true, true, true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), bool(bvec4(! (read_1 == read_2), true, true, true)))), bool(bool(bool(_GLF_IDENTITY(! (read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), bool(bvec4(! (read_1 == read_2), true, true, true))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) >> 0u))) == read_2), bool(bvec4(! (read_1 == read_2), true, true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) >> 0u))) == read_2), bool(bvec4(! (read_1 == read_2), true, true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) >> 0u))) == read_2), bool(bvec4(! (read_1 == read_2), true, true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), ~ (~ (~ (read_2))))))), bool(bvec4(! (read_1 == read_2), true, true, true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), bool(bvec4(! (read_1 == read_2), true, true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 == read_2, false), bvec2(bvec3(bvec2(read_1 == read_2, false), true)))))), bool(bvec4(! (read_1 == read_2), true, true, true)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false))))))) && true)))))))))))))))), (bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(read_2, 1u, 1u, 0u), clamp(_GLF_IDENTITY(uvec4(read_2, 1u, 1u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(read_2, 1u, 1u, 0u))), uvec4(read_2, 1u, 1u, 0u), uvec4(read_2, 1u, 1u, 0u))), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u), 1u, 1u, 0u), clamp(_GLF_IDENTITY(uvec4(read_2, 1u, 1u, 0u), uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u, 1u) * (uvec4(read_2, 1u, 1u, 0u))), uvec4(read_2, 1u, 1u, 0u), uvec4(read_2, 1u, 1u, 0u))), _GLF_IDENTITY(uvec4(read_2, 1u, 1u, 0u), clamp(_GLF_IDENTITY(uvec4(read_2, 1u, 1u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(read_2, 1u, 1u, 0u))), uvec4(read_2, 1u, 1u, 0u), _GLF_IDENTITY(uvec4(read_2, 1u, 1u, 0u), (uvec4(read_2, 1u, 1u, 0u)) | (_GLF_IDENTITY(uvec4(read_2, 1u, 1u, 0u), (uvec4(read_2, 1u, 1u, 0u)) << uvec4(0u, 0u, 0u, 0u)))))))))), ! (! (read_1 == read_2))))) || false)))), _GLF_IDENTITY((uint(read_1 == read_2)) - 0u, _GLF_IDENTITY(~ (~ ((uint(read_1 == read_2)) - 0u)), clamp(_GLF_IDENTITY(~ (~ ((uint(read_1 == read_2)) - 0u)), uint(uvec4(~ (~ ((uint(read_1 == read_2)) - 0u)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ ((uint(read_1 == read_2)) - 0u)), ~ (~ ((uint(read_1 == read_2)) - 0u))))))), max(uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), 1u * (uint(read_1 == read_2)))) | 0u)) ^ 0u), (uint(read_1 == read_2)) - 0u))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), true && (read_1 == read_2)))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)), max(_GLF_IDENTITY(read_1, (read_1) | (read_1)), _GLF_IDENTITY(read_1, (read_1) | (read_1)))) == read_2, _GLF_IDENTITY(false || (read_1 == read_2), ! (_GLF_IDENTITY(! (false || (read_1 == read_2)), bool(bvec3(! (false || (read_1 == read_2)), true, true)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))))))))))), (uint(read_1 == read_2)) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))), clamp((_GLF_IDENTITY(read_1, (read_1) | (read_1))), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) / 1u)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))), uint(uvec3((_GLF_IDENTITY(read_1, (read_1) | (read_1))), (1u & 1u), 0u))))) | _GLF_IDENTITY(0u, (0u) - 0u))), ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 1u * (_GLF_IDENTITY(read_1, 0u | (read_1))))) | (read_1))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (read_1))), (1u & 1u), 0u), clamp(uvec3((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (read_1))), (1u & 1u), 0u), uvec3((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (read_1))), (1u & 1u), 0u), uvec3((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (read_1))), (1u & 1u), 0u))))))) | _GLF_IDENTITY(0u, (0u) - 0u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))), uint(uvec3((_GLF_IDENTITY(read_1, (read_1) | (read_1))), (1u & 1u), 0u))))) | _GLF_IDENTITY(0u, (0u) - 0u)), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))), uint(uvec3((_GLF_IDENTITY(read_1, (read_1) | (read_1))), (1u & 1u), 0u))))) | _GLF_IDENTITY(0u, (0u) - 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))), uint(uvec3((_GLF_IDENTITY(read_1, (read_1) | (read_1))), (1u & 1u), 0u))))) | _GLF_IDENTITY(0u, (0u) - 0u)), clamp(_GLF_IDENTITY(~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))), uint(uvec3((_GLF_IDENTITY(read_1, (read_1) | (read_1))), (1u & 1u), 0u))))) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))), uint(uvec3((_GLF_IDENTITY(read_1, (read_1) | (read_1))), (1u & 1u), 0u))))) | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))), uint(uvec3((_GLF_IDENTITY(read_1, (read_1) | (read_1))), (1u & 1u), 0u))))) | _GLF_IDENTITY(0u, (0u) - 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))), (~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1))))) - 0u))), max(_GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), 0u | ((read_1))) | (read_1))), ~ (~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1)))))), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (read_1))), ~ (~ ((_GLF_IDENTITY(read_1, (read_1) | (read_1))))))))))) == read_2)) - 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u), (uint(read_1 == read_2)) - 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u), max(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u), _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u)))) << 0u)))))))) - 0u)) + 1, 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), true && (bool(bool(false)))))), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), true && (bool(bool(false)))))), true, true)))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), true && (bool(bool(false)))))), true, true))))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), true && (bool(bool(false)))))), true, true)))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))))), true))), true, true))))))) || false))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), true && (bool(bool(false)))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), true && (bool(bool(false)))))), true, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), true && (bool(bool(false)))))), true, true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), true && (bool(bool(false)))))), true, true))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), true && (bool(bool(false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), true && (bool(bool(false))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), true && (bool(bool(false))))), false))))))), true, true)))))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false))))), true && (bool(bool(false)))))), true, true))))))), true && ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false))))), true && (bool(bool(false)))))), true, true))))))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && _GLF_IDENTITY((bool(bool(false))), true && (_GLF_IDENTITY((bool(bool(false))), true && ((bool(bool(false)))))))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), true && (bool(bool(false)))))), true, true)))))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true))) && true)), true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true))) && true)), true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true))) && true)), true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true))) && true)), true, _GLF_IDENTITY(true, false || (true)))))), true)))))))))))), ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true))) && true)), true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true))) && true)), true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true))) && true)), true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(false)))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))) && (bool(bool(false)))))))), true))) && true)), true, _GLF_IDENTITY(true, false || (true)))))), true))))))))))))) || false) || false)))))))))));
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2)), false || (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))) + 1, 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))) && true)))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), bool(bool(bool(bvec4(bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (false) || false)))), true && (bool(bool((_GLF_IDENTITY(false, (false) || false))))))) && true))))) && true)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
}
