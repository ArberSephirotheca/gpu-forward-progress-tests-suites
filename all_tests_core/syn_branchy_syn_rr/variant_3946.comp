#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged3_0_2_58_2_1_13_3_1_17GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnum_workgroupsubgroup_local_id;
 uvec4 GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 else
  {
  }
 uvec2 GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id;
 GLF_merged3_0_2_58_2_1_13_3_1_17GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnum_workgroupsubgroup_local_id.xy = GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       break;
       case 94:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         mat2x4(mat3x2(531.719, 9.7, -4.2, -779.927, -900.213, -736.600));
        }
       else
        {
        }
       case 86:
       for(bvec4 _GLF_SWITCH_5_0v[41]; true; mat4x2(-2211.5243, -2.6, -5.3, -3036.7021, -7.6, 8.6, 5.4, 6920.2960))
        {
         bvec4(false, true, true, false);
         ivec4 _GLF_SWITCH_5_1v[87];
         bvec2 _GLF_SWITCH_5_2v;
         if(true)
          {
           do
            {
             vec4(-6822.9631, 4.0, -4205.1107, -9157.8085);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           while((18065 == 54772))
            {
            }
           while((uvec4(189277u, 53145u, 148588u, 170470u) == GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid))
            {
             mat2 _GLF_SWITCH_5_3v;
             GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id;
             vec2 _GLF_SWITCH_5_4v[54], _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v;
             mat4x2(-7405.4705, 54.37, 537.389, 381.449, 0.8, -758.839, -1.6, -8990.4889);
             mat3x2 _GLF_SWITCH_5_7v, _GLF_SWITCH_5_8v;
             (336.596 - _GLF_SWITCH_5_3v);
             ;
            }
           for(mat4x2 _GLF_SWITCH_5_9v, _GLF_SWITCH_5_10v; any(bvec2(true, false)); true)
            {
             vec3 _GLF_SWITCH_5_11v[59], _GLF_SWITCH_5_12v, _GLF_SWITCH_5_13v;
             (uvec3(73264u, 179713u, 2187u).rgrb + packSnorm2x16(vec2(-2.1, -0.6)));
             92080;
             ivec4 _GLF_SWITCH_5_14v[12], _GLF_SWITCH_5_15v;
             ;
             injectionSwitch;
             lessThan(injectionSwitch, injectionSwitch);
             float _GLF_SWITCH_5_16v;
            }
           ceil(vec3(228.013, -2.2, -78.75));
           mat3 _GLF_SWITCH_5_17v;
          }
         else
          {
           for(           any(bvec3(true, false, true));
 (true != false); mat4x2(2.5, -720.615, -7724.5174, -6.0, -7352.6963, 409.342, 9.4, -2.9))
            {
             lessThan(injectionSwitch, vec2(-971.468, -29.69));
             ;
             ;
             -2070;
             mat4x2 _GLF_SWITCH_5_18v, _GLF_SWITCH_5_19v;
            }
           uint _GLF_SWITCH_5_20v;
           uvec3(4493u, 66725u, 127914u);
           int _GLF_SWITCH_5_21v[64];
           {
            int _GLF_SWITCH_5_22v, _GLF_SWITCH_5_23v, _GLF_SWITCH_5_24v[87];
           }
           ivec2(-96489, 16550);
           min(-52787, 29909);
           ((-44523 > -10770) ? bvec2(false, false) : greaterThanEqual(ivec2(35969, 2941), ivec2(31874, -35016)));
          }
         for(vec3 _GLF_SWITCH_5_25v, _GLF_SWITCH_5_26v[97]; (outerProduct(vec2(-7173.0294, -44.04), vec4(7614.8684, -6936.8315, -8878.6657, -0.1)) != mat4x2(-7848.8800, -151.821, 9.7, -71.68, 855.874, -63.24, -2787.1885, 6113.0578)); true)
          {
           for(int _GLF_SWITCH_5_27v, _GLF_SWITCH_5_28v[18]; true; mat3x2(5962.9420, -325.364, 1.8, 145.304, 33.71, -1.1))
            {
             uvec3 _GLF_SWITCH_5_29v[96], _GLF_SWITCH_5_30v, _GLF_SWITCH_5_31v;
             sinh(_GLF_SWITCH_5_25v);
             203.418;
             mix(GLF_merged3_0_2_58_2_1_13_3_1_17GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnum_workgroupsubgroup_local_id, GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid, notEqual((140901u * uvec4(26285u, 187593u, 119433u, 186231u)), GLF_merged3_0_2_58_2_1_13_3_1_17GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnum_workgroupsubgroup_local_id));
            }
           for(           ((ivec4(-92511, -38303, 20819, -22718) << -19930) ^ ivec4(42037, -71633, 5073, -53998));
 any(bvec4(true, false, false, true)); (mat3x4(-82.29, -3.4, -4.2, -19.72, 8226.6508, -152.890, 5.6, 638.969, 6.1, -872.204, -66.26, -7.1) == mat3x4(-2691.7434, -3.0, 35.24, 56.49, -6650.9556, 70.52, 0.7, -66.00, 3610.1840, -80.87, 646.686, -62.48)))
            {
            }
           int _GLF_SWITCH_5_32v;
           ivec2 _GLF_SWITCH_5_33v, _GLF_SWITCH_5_34v, _GLF_SWITCH_5_35v;
           mat2x3 _GLF_SWITCH_5_36v, _GLF_SWITCH_5_37v[19];
           ivec4 _GLF_SWITCH_5_38v;
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) + 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) + 0)))); _injected_loop_counter --)
          {
           3146.7840;
          }
        }
       default:
       1;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.xy = GLF_merged3_0_2_58_2_1_13_3_1_17GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnum_workgroupsubgroup_local_id.xy;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.z = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_2_58_2_1_13_3_1_17GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnum_workgroupsubgroup_local_id.w = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 10:
       greaterThanEqual(uvec3(67412u, 141237u, 42765u), uvec3(113182u, 189163u, 108208u));
       case 0:
       case 9:
       case 28:
       case 91:
       case 44:
       case 36:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       break;
       case 76:
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         mat2(6769.3303, -8.0, 71.07, 7.2);
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       case 3:
       bool _GLF_SWITCH_2_0v;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       default:
       1;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.xy.y = GLF_merged3_0_2_58_2_1_13_3_1_17GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnum_workgroupsubgroup_local_id.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     switch(_GLF_SWITCH(0))
      {
       case 30:
       mat2x4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
       case 77:
       ((GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id --) * GLF_merged3_0_2_58_2_1_13_3_1_17GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnum_workgroupsubgroup_local_id.zy);
       case 0:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       case 29:
       case 43:
       case 47:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       case 25:
       case 38:
       if(_GLF_DEAD(false))
        return;
       case 55:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       case 85:
       if(_GLF_DEAD(false))
        barrier();
       case 61:
       barrier();
       break;
       default:
       1;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_2_58_2_1_13_3_1_17GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnum_workgroupsubgroup_local_id.z = num_workgroup;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.z + GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.xy.y;
 GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 do
  {
   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(6), int(6)))))
    {
     case 0:
     case 27:
     case 25:
     case 71:
     case 21:
     case 41:
     case 66:
     case 96:
     case 89:
     case 64:
     if(_GLF_DEAD(false))
      barrier();
     break;
     case 98:
     ivec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
     default:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       1;
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.z + ((GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.xy.y + 1) % GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.z);
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 & -65460); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 | (int(7))))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.xy.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 atomicStore(buf[GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.xy.x], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
      {
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 uint read_2 = atomicLoad(buf[GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.xy.y + 1 < GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.z)
  {
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), int(3)))))
    {
     case 22:
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(false);
     case 0:
     case 95:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     switch(_GLF_SWITCH((-562 & 0)))
      {
       case 86:
       {
        switch(_GLF_SWITCH(0))
         {
          case 88:
          -8.8;
          case 0:
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            else
             {
              switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
               {
                case 0:
                case 82:
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    barrier();
                   }
                 }
                break;
                case 5:
                radians(vec2(-6.0, 1.5));
                default:
                1;
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
               barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            do
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
            switch(_GLF_SWITCH(0))
             {
              case 74:
              if(_GLF_DEAD(false))
               barrier();
              vec2(5705.7649, 4.2);
              case 47:
              if(_GLF_DEAD(false))
               barrier();
              uvec4 _GLF_SWITCH_4_0v[51], _GLF_SWITCH_4_1v;
              case 0:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              case 58:
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              case 39:
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              case 37:
              case 34:
              case 12:
              while(false)
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                 barrier();
                bvec4 _GLF_SWITCH_0_0v[61], _GLF_SWITCH_0_1v[23];
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                vec4(-966.652, 4.8, 2353.6850, 2564.0800);
               }
              break;
              case 67:
              mat3 _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v[94], _GLF_SWITCH_4_4v[1];
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              default:
              1;
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          (mat2x4(-7.0, -51.19, -7.6, -9.4, 50.56, -2531.8359, 8.8, -2.8) - 61.73);
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
           }
          else
           {
            switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
             {
              case 96:
              mat3x2 _GLF_SWITCH_5_0v;
              case 37:
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
               {
                (uvec2(197998u, 23686u) | workgroup_base);
               }
              case 0:
              case 84:
              case 92:
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              case 63:
              sin(vec3(-7586.3947, 7189.4110, -9781.3809));
              break;
              default:
              1;
             }
           }
          case 23:
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           barrier();
          bvec4(bool(212.274), bvec2(false, true), (mat4(0.8, -6.1, 62.17, 975.161, 9983.6913, -8.5, 6.2, -7.4, 6.2, -32.09, -2.2, 212.083, 1.7, 428.120, 57.06, -6.3) != inverse(mat4(53.41, 766.707, -181.873, -6.6, -5964.0325, -9.1, 5.0, 179.978, 69.03, 64.42, -840.800, 4.2, -33.92, -86.87, -3.9, 2.0))));
          ivec3(13955, 95247, -92603);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          matrixCompMult(mat3x4(-23.38, -0.0, 6629.1268, -389.615, -4835.2224, -4.9, -962.081, -7.4, 515.058, -1.6, -2.5, 349.972), mat3x4(7478.5894, 9.8, -486.860, -6921.9808, -5.5, 13.13, 7.1, 0.5, 408.427, 57.19, 2.6, 6388.6448));
          if(_GLF_DEAD(false))
           barrier();
          case 4:
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          ((ivec2(-78656, -64928) / ivec2(86624, -42385)) ^ ivec4(-9143, 19746, 51199, -11809)[3]);
          case 98:
          if(_GLF_DEAD(false))
           return;
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          else
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
               barrier();
              barrier();
             }
            barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          case 52:
          ;
          float _GLF_SWITCH_0_2v;
          if(_GLF_DEAD(false))
           {
            switch(_GLF_SWITCH(0))
             {
              case 21:
              mat2x4 _GLF_SWITCH_5_0v;
              case 0:
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
               barrier();
              case 18:
              case 77:
              barrier();
              break;
              default:
              1;
             }
           }
          break;
          case 64:
          uint _GLF_SWITCH_3_0v[51], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
          if(_GLF_DEAD(false))
           barrier();
          case 29:
          uint _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v[33], _GLF_SWITCH_3_5v[76];
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          default:
          1;
         }
       }
       case 39:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         switch(_GLF_SWITCH((0 ^ 0)))
          {
           case 0:
           case 21:
           case 61:
           case 97:
           case 8:
           if(_GLF_DEAD(false))
            barrier();
           break;
           case 87:
           vec4 _GLF_SWITCH_5_0v[19], _GLF_SWITCH_5_1v;
           case 53:
           determinant(mat3(5.2, -106.042, -6836.7425, -36.17, -0.0, 7004.9411, 5630.9784, -44.01, -3.7));
           default:
           1;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(0))
          {
           case 42:
           uint(78070);
           case 73:
           ;
           case 0:
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           break;
           case 61:
           mat3 _GLF_SWITCH_5_0v[79], _GLF_SWITCH_5_1v;
           case 22:
           true;
           default:
           1;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       int(false);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH(0))
          {
           case 74:
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH((0 | 0)))
              {
               case 91:
               vec3(-15.92, 123.549, -5.9);
               case 0:
               case 50:
               case 86:
               case 73:
               if(_GLF_DEAD(false))
                barrier();
               case 27:
               barrier();
               break;
               case 48:
               bvec3 _GLF_SWITCH_5_0v[2], _GLF_SWITCH_5_1v[2], _GLF_SWITCH_5_2v;
               default:
               1;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           vec2 _GLF_SWITCH_2_0v;
           if(_GLF_DEAD(false))
            barrier();
           case 33:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           float _GLF_SWITCH_2_1v[4], _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
           case 0:
           case 71:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           case 83:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              return;
            }
           vec2 _GLF_SWITCH_2_4v;
           default:
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           1;
          }
        }
       case 0:
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       case 15:
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       int i = 0;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(5), int(5)))))
          {
           case 0:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           break;
           default:
           1;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.xy.x], uint(read_1 == read_2) + 1, 4, 64, 4);
        }
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       case 9:
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(mat4x2 _GLF_SWITCH_0_3v; (vec3(70.00, 2.6, -1.5) == vec3(4176.8129, -67.24, -512.127)); (mat3(-4.7, -0.8, -8.8, -6.2, 8.9, 99.23, -6.7, 38.03, -1.2) * mat2x3(-87.75, -31.25, -7.8, 0.8, 7649.1541, 800.811)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           mat3x2 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[70], _GLF_SWITCH_0_6v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                {
                 return;
                }
              }
             barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 switch(_GLF_SWITCH(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1)))) >> 0)))
                  {
                   case 14:
                   if(_GLF_DEAD(false))
                    barrier();
                   bvec3(false, false, false).rgb;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   case 92:
                   mat4x2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   case 0:
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   case 69:
                   case 96:
                   case 59:
                   case 26:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    barrier();
                   case 87:
                   case 19:
                   case 68:
                   case 31:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   break;
                   case 15:
                   if(_GLF_DEAD(false))
                    barrier();
                   bool _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v[93];
                   case 89:
                   fma(vec4(-4547.7982, -8.3, -174.461, 608.018), unpackUnorm4x8(read_1), vec4(-0.7, -32.82, -8.8, 859.596));
                   default:
                   do
                    {
                     1;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
              }
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             while(true)
              {
               if(_GLF_DEAD(false))
                barrier();
               for(               vec3(-30.48, -7.3, 3.4);
 false; vec2(4.1, -7091.4709))
                {
                 (-546.341 == -8.2);
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   ivec2(89036, -86977);
                  }
                 else
                  {
                  }
                 unpackSnorm4x8(GLF_merged3_0_2_58_2_1_13_3_1_17GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idnum_workgroupsubgroup_local_id.w);
                 ;
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     barrier();
                    }
                   (mat3(-5.8, 58.17, 8.5, 62.25, 612.046, 6510.1211, -7.0, 81.74, -9.9) + step(1.0, -3.1));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                 bvec4 _GLF_SWITCH_0_7v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 0:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         break;
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
                            {
                             barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       break;
                       case 86:
                       ((- mat3x4(-97.72, -621.894, -6.7, -11.63, -5736.6709, -966.947, -4719.6295, 56.86, 84.62, -2604.1368, -231.754, 3552.6077)) , (_GLF_SWITCH_0_6v / (_GLF_SWITCH_0_6v - _GLF_SWITCH_0_4v)));
                       if(_GLF_DEAD(false))
                        barrier();
                       case 40:
                       mat3 _GLF_SWITCH_3_0v;
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       default:
                       1;
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     do
                      {
                       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                        {
                         case 0:
                         if(_GLF_DEAD(false))
                          barrier();
                         case 55:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         case 7:
                         case 84:
                         case 93:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         case 98:
                         case 70:
                         case 77:
                         case 62:
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         case 31:
                         if(_GLF_DEAD(false))
                          continue;
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         break;
                         default:
                         1;
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
                  {
                  }
                 else
                  {
                   ;
                  }
                 mat3x4(7.9, -7.0, 4.3, -2.1, -8188.0558, 353.431, 975.781, 9.5, -7.4, 299.391, 67.91, 15.67);
                 if(_GLF_DEAD(false))
                  barrier();
                 ;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   return;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               injectionSwitch;
               if(_GLF_DEAD(false))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 34:
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                    barrier();
                   do
                    {
                     ;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                   case 0:
                   case 16:
                   case 17:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(4), int(4))) & -34002)))
                        {
                         case 60:
                         ;
                         case 0:
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         case 58:
                         barrier();
                         break;
                         default:
                         1;
                        }
                      }
                    }
                   else
                    {
                    }
                   case 21:
                   do
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                   default:
                   1;
                  }
                }
              }
            }
           for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(true)
              {
               if(_GLF_DEAD(false))
                barrier();
               for(               vec2(9300.5333, -7358.3437);
 false; (read_1 * workgroup_base))
                {
                 read_2;
                 greaterThanEqual(vec4(7.8, 421.119, -3.2, 8231.0137), vec3(440.419, 7.8, 2.9).grrb);
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   barrier();
                  }
                 degrees(cos(vec4(-1.1, 2.6, -4089.0657, -555.176)));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       barrier();
                      }
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 vec3 _GLF_SWITCH_0_8v[16], _GLF_SWITCH_0_9v[4], _GLF_SWITCH_0_10v;
                 bvec4(true, true, false, false);
                 mat2x3 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
                 bvec3 _GLF_SWITCH_0_14v[75];
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               bvec4(false, false, true, true);
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
                    barrier();
                  }
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               int _GLF_SWITCH_0_15v[10], _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
               bvec2(true, false);
               mat3x2 _GLF_SWITCH_0_18v;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           while((-1995.9446 >= -3182.4290))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               (-9211.1847 + mat4x3(-63.56, 68.50, 950.051, -2.8, -9.6, 4.5, 5.3, -4087.7143, -238.178, 3.4, -459.364, 886.273));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             vec4(3.6, -31.90, 938.097, -2.5);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             {
              if(_GLF_DEAD(false))
               continue;
              bvec4(false, true, true, true);
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                 {
                  case 60:
                  29.07;
                  case 0:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  barrier();
                  break;
                  case 1:
                  uvec2 _GLF_SWITCH_5_0v;
                  case 49:
                  mat4x3 _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v;
                  default:
                  1;
                 }
               }
              ivec2 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
              read_2;
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
               {
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    barrier();
                   }
                 }
                if(_GLF_DEAD(false))
                 barrier();
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
               continue;
              float _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 return;
                do
                 {
                  barrier();
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
             }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             if(true)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   mat2x3(-5220.9287, -2.7, 9893.4683, 6.2, 7.3, -815.259);
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             ;
             while(false)
              {
               (549.749 + mat3x4(4.2, -1.1, -8.2, -12.01, 0.2, 2.1, -13.49, -8.5, 1149.2824, 29.55, -9390.0860, -2546.4934));
               if(_GLF_DEAD(false))
                barrier();
               mat3x2 _GLF_SWITCH_0_23v[52], _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v[83];
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     switch(_GLF_SWITCH(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(i)))))
                      {
                       case 59:
                       ;
                       case 25:
                       mat2x4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
                       case 0:
                       case 85:
                       case 48:
                       case 11:
                       if(_GLF_DEAD(false))
                        barrier();
                       case 41:
                       case 71:
                       case 28:
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                       case 35:
                       case 91:
                       if(_GLF_DEAD(false))
                        barrier();
                       break;
                       case 81:
                       mat3x2 _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v;
                       default:
                       1;
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     return;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               ivec3 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v;
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               injectionSwitch;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               vec4 _GLF_SWITCH_0_28v[1];
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               (~ ivec4(-26876, -51021, 84503, -29851));
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat2x4(-17.77, 1332.6772, 79.81, -2.3, -2.3, 84.91, -129.265, -0.3)[0];
             mat3x4(-4.5, 1077.6032, -13.11, 5.5, 89.66, 23.80, -4719.2267, -92.00, -8.2, 971.959, 88.75, 4.1);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 38:
                 mat2x3(4.2, 87.68, -5404.8921, 7.0, -295.182, 9.6);
                 case 0:
                 case 48:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 45:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 case 70:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   switch(_GLF_SWITCH((-41331 & 0)))
                    {
                     case 0:
                     case 59:
                     case 15:
                     case 86:
                     case 65:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     break;
                     if(_GLF_DEAD(false))
                      barrier();
                     case 17:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      barrier();
                     mat2(72.00, 8.0, 4.3, -4.0);
                     default:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       1;
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                    continue;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 51:
                     if(_GLF_DEAD(false))
                      barrier();
                     ivec4(-39603, 32632, -13990, 11465);
                     case 0:
                     case 99:
                     case 7:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       continue;
                      }
                     case 36:
                     case 48:
                     case 90:
                     case 91:
                     barrier();
                     if(_GLF_DEAD(false))
                      {
                       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4)))))
                        {
                         case 28:
                         -1.0;
                         case 0:
                         case 22:
                         case 88:
                         case 43:
                         case 1:
                         case 68:
                         case 35:
                         case 41:
                         case 50:
                         case 10:
                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                          {
                           barrier();
                          }
                         break;
                         case 90:
                         (num_workgroup % num_workgroup);
                         default:
                         1;
                        }
                      }
                     break;
                     case 16:
                     ;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     default:
                     1;
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 break;
                 default:
                 1;
                }
              }
            }
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             for(mat4x2 _GLF_SWITCH_0_29v[68], _GLF_SWITCH_0_30v; (ivec4(96220, 93795, 31326, 44265) != ivec4(-95541, 20527, 83108, -23364)); bvec4(bvec2(true, true), bvec2(true, false)))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               mix(i, i, true);
               while((_GLF_SWITCH_0_3v == mat4x2(mat3(2.9, 5394.9809, -6.4, -605.008, -8.8, -85.13, -62.45, -92.80, 592.432))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 (ivec4(55636, -74525, -71789, 17778) - ivec4(-53129, -57135, 75873, 60800));
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 39:
                     ((mat3x2(-501.935, -2.6, -6872.2021, -324.235, 6.8, 59.86) != _GLF_SWITCH_0_6v) ? bvec4(true, true, false, false) : bvec4(true, true, true, true));
                     case 52:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     bvec4(false, true, false, false);
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     case 0:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     case 28:
                     case 40:
                     case 49:
                     case 11:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 88:
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     break;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                      return;
                     case 84:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     mat4(9051.7214, 8929.8025, -90.47, -3.0, -5.3, 5386.8962, -397.092, -8.8, 5195.0658, -805.185, -964.981, 6352.1016, -9999.1113, 99.87, -852.295, -2.4);
                     if(_GLF_DEAD(false))
                      continue;
                     default:
                     1;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               {
                if(_GLF_DEAD(false))
                 break;
                transpose(mat3x4(mat4x3(6.2, -675.279, -929.416, -76.34, -37.64, -10.24, -3.0, -253.689, 59.78, 160.938, 310.226, 464.206)));
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                   {
                   }
                  else
                   {
                    barrier();
                   }
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                   }
                  if(_GLF_DEAD(false))
                   continue;
                 }
                if(_GLF_DEAD(false))
                 barrier();
                ;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                mat2(-52.45, 3.5, 0.8, 6.9);
                ivec4 _GLF_SWITCH_0_31v[43];
               }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                  {
                   case 0:
                   case 35:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 27:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 48:
                   case 61:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 79:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                    barrier();
                   case 12:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 2:
                   case 16:
                   case 99:
                   barrier();
                   break;
                   case 33:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   mat4(-950.815, 4868.1557, -7188.4025, 5.9, 6854.7688, -814.557, -11.71, 89.31, -236.074, -456.752, 5.7, -9.1, 229.400, 6.7, -2.7, -29.78);
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   case 24:
                   equal(vec3(55.33, -5963.1070, -3053.2282), vec3(-46.65, -8.6, 53.40));
                   default:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     return;
                    }
                   1;
                  }
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                continue;
               mat4 _GLF_SWITCH_0_32v[27], _GLF_SWITCH_0_33v[3];
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 bvec3 _GLF_SWITCH_0_34v, _GLF_SWITCH_0_35v[10];
                }
               while(_GLF_WRAPPED_LOOP(false));
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
                 barrier();
                ;
                vec4 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v;
                for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 continue;
                ;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 barrier();
                363.793;
                if(_GLF_DEAD(false))
                 {
                  do
                   {
                    barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    barrier();
                   }
                 }
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                  GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.xy;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      barrier();
                     }
                    else
                     {
                     }
                   }
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                do
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      barrier();
                     }
                    do
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        barrier();
                       }
                      barrier();
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         break;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        continue;
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                 }
                while(_GLF_WRAPPED_LOOP(false));
                mat4x2 _GLF_SWITCH_0_38v;
                uvec4(29870u, 128170u, 3691u, 49668u);
                ivec4 _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 vec3(-344.894, -4.0, -9.1);
                }
               (true ? mat4x3(-8.4, -4.6, -17.63, -1574.8366, -5148.0143, 6.2, 225.963, -2883.4610, -14.86, -38.99, -7558.5162, 92.17) : mat4x3(-16.88, 148.050, -13.55, -57.09, 5.2, 3029.4835, 206.364, -58.25, -34.86, 5.4, -1.6, -168.403));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               mat2x4 _GLF_SWITCH_0_42v;
              }
            }
           -5.5;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 98:
       do
        {
         switch(_GLF_SWITCH((0 & 41100)))
          {
           case 49:
           mat4x3 _GLF_SWITCH_5_0v[32], _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
           case 48:
           subgroup_id;
           case 0:
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            bool _GLF_SWITCH_0_43v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                barrier();
               }
              else
               {
               }
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                continue;
               }
              barrier();
             }
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (37967 & 0)); _injected_loop_counter --)
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            sqrt(vec4(3.5, -90.83, 8.0, -1.4).gr);
           }
           do
            {
             switch(_GLF_SWITCH(0))
              {
               case 91:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                }
               else
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   transpose(mat4x3(5.9, 11.51, 1385.2706, -7844.4342, 0.3, 9.6, -34.12, -9.6, 542.160, 60.23, 7246.7217, -691.482));
                   break;
                   default:
                   1;
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               case 89:
               vec4 _GLF_SWITCH_2_0v[64], _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
               if(_GLF_DEAD(false))
                barrier();
               case 0:
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               case 51:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               case 3:
               mat3x2(5989.0524, 8677.4063, -6.7, -157.931, -4.6, -267.480);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                barrier();
               break;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 19:
               mat4((mat2x3(19.54, -787.226, 6.5, -5051.4035, -3.8, 3643.1552) + floor(-2.4)));
               default:
               1;
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           mat3x2(-5.7, -7.0, -0.9, 3915.0473, 6993.9260, 7.7);
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           for(uvec2 _GLF_SWITCH_0_44v[14], _GLF_SWITCH_0_45v; ((ivec2(-73905, -54638) * ivec2(-31863, -70301)) != ivec2(44543, 53486)); injectionSwitch)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if((mat2x4(-1.7, -10.87, 7.2, -6.2, -4.1, 6873.5372, 36.99, 7.8) == mat2x4(-7.6, -8870.2545, 660.498, -655.954, -8.3, 4055.8226, 3524.5804, 4.4)))
                {
                 (floatBitsToUint(vec3(82.22, 7.3, -399.186)) % (uvec3(138190u, 139044u, 100767u) / (GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.w)));
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 int _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
                 mat4x2(6.1, 0.4, -46.43, 9.1, -6.7, -952.717, 97.33, -2.9);
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   ;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                        {
                         case 0:
                         case 67:
                         case 46:
                         case 60:
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                          barrier();
                         case 80:
                         barrier();
                         break;
                         case 24:
                         ;
                         default:
                         1;
                        }
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), ! (! (bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))))))
                            {
                             return;
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   min(uvec3(44884u, 58214u, 60397u), uvec3(50206u, 168244u, 61646u));
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      return;
                     barrier();
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 mat3x2(7527.8905, 7.6, -812.838, 8.7, 9.1, 6.3);
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 (~ GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.xy);
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     barrier();
                    }
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec2(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))), 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      barrier();
                     barrier();
                    }
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             while((uvec3(55537u, 83150u, 115504u) == (uvec3(70269u, 171308u, 50125u) - uvec3(83174u, 71214u, 170358u))))
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 43:
                 vec3(0.0, 7140.7753, -1.8);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                 case 0:
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     barrier();
                    }
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 case 40:
                 if(_GLF_DEAD(false))
                  return;
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 case 81:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 case 89:
                 case 73:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 ;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 78:
                 if(_GLF_DEAD(false))
                  barrier();
                 ;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 default:
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 1;
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     switch(_GLF_SWITCH((0 | 0)))
                      {
                       case 89:
                       uvec2(39929u, 56950u);
                       case 0:
                       barrier();
                       break;
                       case 19:
                       bvec3 _GLF_SWITCH_5_0v;
                       default:
                       do
                        {
                         1;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           case 85:
           mat4x3 _GLF_SWITCH_0_48v;
           mat2x3 _GLF_SWITCH_0_49v[88];
           case 80:
           if(_GLF_DEAD(false))
            barrier();
           break;
           default:
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       default:
       1;
      }
     if(_GLF_DEAD(false))
      barrier();
     case 84:
     case 72:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       switch(_GLF_SWITCH(0))
        {
         case 75:
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           {
            bvec4 _GLF_SWITCH_2_0v[74], _GLF_SWITCH_2_1v[14], _GLF_SWITCH_2_2v;
            uvec2(27367u, 198072u);
            if(_GLF_DEAD(false))
             {
              do
               {
                barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
           }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           mat4x2(6872.8380, -4.2, 79.26, -1169.6230, -55.72, -3.1, 1353.4664, -79.34);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           {
            uvec3(80198u, 48847u, 28764u);
            float _GLF_SWITCH_2_3v;
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                barrier();
               }
             }
            else
             {
             }
            uvec3 _GLF_SWITCH_2_4v;
           }
          }
         case 2:
         (+ mat4x3(-4150.3937, 9.3, 805.479, 39.60, 7130.2543, 1.2, 8.2, -31.79, -5.1, 783.618, 9432.0509, -99.39));
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 66:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         case 44:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 9:
         barrier();
         case 38:
         case 57:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               switch(_GLF_SWITCH(((0 ^ 1) ^ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))
                {
                 case 9:
                 (((4.8 / mat4(3438.1217, 345.011, 4316.8452, -1.0, -0.9, -6.4, 38.35, -86.37, -24.26, -8.8, -90.49, -83.68, -29.72, 58.48, -9609.3172, -7.4)) - -649.894) - mat4(-1.8, 763.153, -6.6, 67.72, -5647.1999, -8591.6424, -20.85, 6148.1351, 3.1, 9762.4008, -98.83, 2.5, -0.3, 517.201, -1.8, -6.2));
                 case 59:
                 ivec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                 case 0:
                 case 14:
                 case 42:
                 case 61:
                 case 98:
                 case 94:
                 barrier();
                 break;
                 case 93:
                 mat3x4(5061.6658, -510.340, -821.378, -122.611, -22.32, 1.1, 6.6, -1.5, -2.4, -8434.6326, -7.2, 1.4);
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         break;
         case 14:
         (uvec3(55750u, 95986u, 179064u) != uvec3(65150u, 158525u, 189456u));
         if(_GLF_DEAD(false))
          barrier();
         default:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         1;
        }
      }
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 2:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     {
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       {
        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
         {
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
       }
      for(      (mat3(308.456, -9858.8320, -4.0, -3.9, 3.9, 6.8, 9010.2748, 708.928, -6.8) - mat3(vec3(85.02, 8.8, 7.8), vec3(-8.2, -8.0, 5.7), vec3(-27.43, 7113.3575, -14.37)));
 true; (ivec2(51948, -53344) * (~ -1417)))
       {
        if(_GLF_DEAD(false))
         barrier();
        do
         {
          if(_GLF_DEAD(false))
           barrier();
         }
        while(_GLF_WRAPPED_LOOP(false));
        ceil(determinant(mat4(-139.108, -7651.8478, -93.77, 734.441, 4.0, -420.374, -9.8, 274.851, -5.4, 112.966, 8.8, 32.64, 2339.7274, 2423.2985, -166.090, -2.4)));
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           {
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
             {
              return;
             }
           }
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            barrier();
           }
         }
        uvec2 _GLF_SWITCH_3_0v[74], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[85];
       }
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       barrier();
      mat3x2 _GLF_SWITCH_3_3v;
      while((ivec2(41122, 33964) == ivec2(31983, 47858)))
       {
        transpose(_GLF_SWITCH_3_3v);
        mat2x4(mat4(0.4, -941.680, 757.724, -14.76, -166.424, 9.3, 6.1, -932.149, -157.400, -1.3, -2.9, -2377.1129, 343.936, 7194.9952, 6.4, -6.7));
        bvec4 _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v[79], _GLF_SWITCH_3_6v;
       }
      if(_GLF_DEAD(false))
       barrier();
      do
       {
        for(        14665;
 true; (vec3(70.89, -876.740, -6.7) , (+ mat3x4(mat4x2(8.0, -3.7, 660.049, -6.9, 8930.5948, -6.5, -294.177, -7.3)))))
         {
          if(_GLF_DEAD(false))
           barrier();
          for(ivec3 _GLF_SWITCH_3_7v, _GLF_SWITCH_3_8v, _GLF_SWITCH_3_9v; (true == (vec3(-164.410, 5260.0096, 53.29) != vec3(-2.3, 7776.0935, 21.20))); (+ mat3x2(mat3(-707.954, -9711.2931, -4.8, -0.6, -28.03, -6.2, -848.120, 6377.5256, 8.1))))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             continue;
            ;
           }
          if(any(bvec4(true, false, true, false).tst))
           {
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
               {
                sign(acos(vec4(33.40, 1.5, 5.1, 1.9)));
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 barrier();
               }
             }
            else
             {
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             continue;
            GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id;
            uvec2 _GLF_SWITCH_3_10v;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            bvec4(true, true, true, true);
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            int _GLF_SWITCH_3_11v, _GLF_SWITCH_3_12v;
           }
          else
           {
            notEqual(injectionSwitch, injectionSwitch);
            if(_GLF_DEAD(false))
             barrier();
            mat2x4 _GLF_SWITCH_3_13v;
            if(_GLF_DEAD(false))
             barrier();
            mat4x3(-6.5, -893.919, 530.617, -93.49, 2761.9433, -47.20, 7431.6831, -937.500, -8047.1363, -36.76, -3012.7012, -536.376);
            ;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            ivec4(26233, -23685, -47034, -10644);
           }
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            for(bvec2 _GLF_SWITCH_3_14v, _GLF_SWITCH_3_15v[43], _GLF_SWITCH_3_16v; true; -5.1)
             {
              do
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id;
              if(_GLF_DEAD(false))
               barrier();
              mat3x2 _GLF_SWITCH_3_17v, _GLF_SWITCH_3_18v, _GLF_SWITCH_3_19v;
              mat3x4(-9.4, -38.79, 0.1, 41.16, -870.554, 33.46, -3.3, -1303.7045, -4.9, 1.3, -852.617, -60.22);
              for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              mat4x3(585.180, -2091.0426, 3.7, 481.862, 2.6, 481.526, -88.70, 75.54, -6.8, -87.01, 483.276, 1464.4170);
              bool _GLF_SWITCH_3_20v, _GLF_SWITCH_3_21v, _GLF_SWITCH_3_22v;
              for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              mat4 _GLF_SWITCH_3_23v, _GLF_SWITCH_3_24v[24], _GLF_SWITCH_3_25v[99];
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                continue;
               }
              (26.65 - (_GLF_SWITCH_3_19v / (_GLF_SWITCH_3_3v ++)));
              mat2 _GLF_SWITCH_3_26v, _GLF_SWITCH_3_27v[29], _GLF_SWITCH_3_28v;
             }
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            barrier();
           }
          mat4x3(mat2(-5.2, 3.6, -7.2, -0.1));
          do
           {
            for(mat4 _GLF_SWITCH_3_29v; true; mat2x4(-6212.5577, 901.742, -951.877, 266.348, -1.6, 7.6, -597.593, 58.72))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              mat4(6890.9543, -4.2, 388.594, -6120.8102, -6.2, -7.0, -8.3, -234.010, -7.0, -5.6, -456.377, 15.50, 8776.0849, 9.2, -26.01, 23.28);
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
             }
           }
          while(_GLF_WRAPPED_LOOP(false));
          while(all(bvec4(true, false, false, false)))
           {
            float _GLF_SWITCH_3_30v[41], _GLF_SWITCH_3_31v;
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if((true == (mat4x2(-8686.8661, -9183.3020, -4209.7601, 4259.2184, 1120.6276, 289.540, 130.414, 553.672) == mat4x2(2.7, -2091.5196, -41.36, -6.6, -429.073, -20.82, -8718.3394, -288.940))))
           {
            vec2 _GLF_SWITCH_3_32v, _GLF_SWITCH_3_33v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            else
             {
              ivec4(-69036, 91925, 3863, -16202);
             }
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
            notEqual(uvec3(161841u, 14287u, 36562u), uvec3(1349u, 158391u, 10061u));
            bvec4 _GLF_SWITCH_3_34v;
            mat3x4 _GLF_SWITCH_3_35v[7], _GLF_SWITCH_3_36v, _GLF_SWITCH_3_37v;
            ;
            if(_GLF_DEAD(false))
             {
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                barrier();
               }
              else
               {
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            mat2x4(-6447.7536, -58.00, 8.2, -86.74, 8.6, 8.1, -2202.3156, 1.0);
            ;
           }
          if((uintBitsToFloat((subgroup_size)) != 66.16))
           {
            mat2x4(mat3x4(-3.9, 8857.3374, 18.43, 9.0, 9.3, -2279.8842, 1.3, -8.7, 4.1, 6168.3885, -1.3, -45.36));
            if(_GLF_DEAD(false))
             barrier();
            sinh(2.1);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              do
               {
                barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            mat2x4(6.2, -214.120, 4.9, -9522.4681, -0.2, -578.156, 8.2, 1557.6872);
            if(_GLF_DEAD(false))
             barrier();
            ;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
           }
         }
       }
      while(_GLF_WRAPPED_LOOP(false));
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       barrier();
      mat3 _GLF_SWITCH_3_38v, _GLF_SWITCH_3_39v[64];
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(false))
         barrier();
        barrier();
       }
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       barrier();
     }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(23768) : int(_GLF_ZERO(0.0, injectionSwitch.x))))))
    {
     case 0:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 61:
     case 99:
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     case 56:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5)))))); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) & 13549)))
        {
         case 0:
         case 13:
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         case 66:
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
         case 84:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         case 27:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         case 41:
         case 1:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(5), int(5)))))
            {
             case 88:
             bvec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
             case 0:
             case 93:
             case 23:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
              }
             else
              {
              }
             break;
             if(_GLF_DEAD(false))
              barrier();
             default:
             1;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         case 82:
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          return;
         atomicStore(buf[GLF_merged3_0_2_58_2_1_13_3_1_11GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_idsubgroup_sizevirtual_gid.xy.x], uint(read_1 == read_2) + 1, 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
         case 51:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         case 38:
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         case 16:
         mat4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          barrier();
         default:
         do
          {
           for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 24:
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 mat4x2(466.169, -887.701, 7189.9985, 60.21, -89.88, 9.3, 91.12, 1.4);
                }
               case 95:
               ((_GLF_SWITCH_1_1v) * mat3x4(-8.3, 3.3, -9097.1868, -5.9, -3158.9762, 8.7, -198.251, -4731.1836, -1720.3433, -2.6, -4.4, 6.2));
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 0:
               case 47:
               if(_GLF_DEAD(false))
                barrier();
               case 89:
               case 19:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                break;
               case 96:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 1;
                }
               else
                {
                }
               for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(findLSB(90722)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               break;
               case 12:
               mat2x3(339.784, -6.1, 5.5, 358.987, 9191.0130, 806.988);
               default:
               1;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             switch(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(3), int(3)))))
              {
               case 0:
               case 48:
               case 54:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               case 66:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               case 38:
               barrier();
               break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                 barrier();
                }
               default:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               1;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     break;
     default:
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       1;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
        }
      }
     barrier();
    }
   return;
  }
}
