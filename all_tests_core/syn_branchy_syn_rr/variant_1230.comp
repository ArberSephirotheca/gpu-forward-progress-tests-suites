#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))) * (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) / uvec3(1u, 1u, 1u))))).x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (0u & 120439u)), gl_WorkGroupSize[2])).x)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))) && true), ! (! (! ((false) && true)))))))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))))), true))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)), true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)), true))))))), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false), false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), false)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), false)), false))), false)))), true)), false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true), false, _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))), false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false)))))), true, true, true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))))), true))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), false))), true)), true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), true)), true))))))), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false), false))))), true)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), false)), true))))))), false)), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), false)), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), false)), false))), false))))))), true)), false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)))), true)), false))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true), false, _GLF_IDENTITY(false, bool(bvec2(false, false)))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))), false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sign(injectionSwitch)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sign(injectionSwitch))))) * mat2(1.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sign(injectionSwitch))))) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sign(injectionSwitch))))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(66.68), _GLF_FUZZED(-9.1)), bvec2(false, false)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)))) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), (min(subgroup_local_id + 1, subgroup_local_id + 1)) << 0u))) % subgroup_size)) / 1u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || _GLF_IDENTITY((! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false))))))), false))))), ! (! ((! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-7489.3411, 985.145)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-773.585) : injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-773.585) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), mix(float(_GLF_FUZZED(-39.22)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-773.585) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-773.585) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-773.585) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-773.585) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))))), bool(true))) > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)], 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), int(ivec2(~ (64), 0))))), 64)), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) - 0u)) | (buf[virtual_gid])), 4, 64, 0);
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u | (5u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : uint(5u))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))), 0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), min((uint(3u)), (uint(3u)))) ^ 0u))), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : uint(5u))), 0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)))), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(uvec4(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : uint(5u))), 0u), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 1u, 1u, 0u))))), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : uint(5u))), 0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)))))))), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : uint(5u))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))), 0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), min((uint(3u)), (uint(3u)))) ^ 0u))), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : uint(5u))), 0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)))), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(uvec4(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : uint(5u))), 0u), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 1u, 1u, 0u))))), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : uint(5u))), 0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)))))))), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : uint(5u))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))))), 0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)), min((uint(3u)), (uint(3u)))) ^ 0u))), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : uint(5u))), 0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)))), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(uvec4(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : uint(5u))), 0u), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 1u, 1u, 0u))))), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_size) : uint(5u))), 0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)))))))))), 0u, 0u, 1u)))), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))), uint(5u))), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u)))))))) | 0u)) / 1u)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid), 0u ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid), ((false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid)) | 0u)))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) : _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), min((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) : _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) : _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid), 0u ^ ((false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid)))) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), max(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) : _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(113181u)))), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u))), uint(0u)))))))) : _GLF_FUZZED(subgroup_size), 1u * (true ? _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid, min(false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid, false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid))) | (149169u & (0u | 0u)))), 0u ^ ((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid, min(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid, (false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid) | (false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid)), false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid)))))) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) : _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u))), uint(0u)))))))) : _GLF_FUZZED(subgroup_size)))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u), max(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u)) | (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u))))), _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u), (false ? _GLF_FUZZED(atomicMax(next_virtual_gid, virtual_gid)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u), 0u + (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u))))) + 1) | (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec4(~ (0u), 0u, 1u, 1u)))))) + 1)), uint(_GLF_IDENTITY(uvec2(uint(read_1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))) | (1u)))))) / 1u)), uvec2(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(read_1 == read_2), ~ (_GLF_IDENTITY(~ (uint(read_1 == read_2)), 0u + (~ (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) ^ _GLF_IDENTITY(0u, (0u) | (0u)))))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) / (0 ^ 1)), _GLF_IDENTITY(1u, (1u) | (1u))), uvec2(uvec3(uvec2(uint(read_1 == read_2) + 1, _GLF_IDENTITY(1u, (1u) | (1u))), 1u))), 0u))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(8.2)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, read_1)))), clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u), read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u + (read_2))) - 0u)), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, read_1)))), clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u), read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u + (read_2))) - 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, read_1)))), clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u), read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u + (read_2))) - 0u)))), uint(uvec2(uint(read_1 == read_2), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(87.53), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(87.53), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(87.53), max(_GLF_FUZZED(87.53), _GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_FUZZED(87.53)) * 1.0)) / 1.0))), float(mat4x2(_GLF_FUZZED(_GLF_IDENTITY(87.53, (87.53) * _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), round(length(normalize(1.0))), round(length(normalize(1.0))))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(600.351)), bool(false)))))), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), uint(read_1 == read_2)), (clamp(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, read_1)))), clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u), read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u + (read_2))) - 0u)), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, read_1)))), clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u), read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u + (read_2))) - 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, read_1)))), clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u), read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u + (read_2))) - 0u)))), uint(uvec2(uint(read_1 == read_2), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(87.53), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(87.53), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(87.53), max(_GLF_FUZZED(87.53), _GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_FUZZED(87.53)) * 1.0)) / 1.0))), float(mat4x2(_GLF_FUZZED(_GLF_IDENTITY(87.53, (87.53) * _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), round(length(normalize(1.0))), round(length(normalize(1.0))))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(600.351)), bool(false)))))), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), uint(read_1 == read_2))) << 0u), (clamp(uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(atomicOr(workgroup_size, subgroup_local_id)) : read_1)) == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (read_1) + 0u))))), clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : read_1)), read_1)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), max(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), uint(uvec2(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) : _GLF_FUZZED(workgroup_base))))))), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) / 1u)), read_1)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(0u + (read_2), max(_GLF_IDENTITY(0u + (read_2), 0u + (0u + (read_2))), _GLF_IDENTITY(0u + (read_2), (0u + (read_2)) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u + (read_2), max(_GLF_IDENTITY(0u + (read_2), 0u + (0u + (read_2))), _GLF_IDENTITY(0u + (read_2), (0u + (read_2)) * 1u))), (true ? _GLF_IDENTITY(0u + (read_2), max(_GLF_IDENTITY(0u + (read_2), 0u + (0u + (read_2))), _GLF_IDENTITY(0u + (read_2), (0u + (read_2)) * 1u))) : _GLF_FUZZED(subgroup_id)))) ^ 0u))), 0u ^ ((_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u + (read_2), max(_GLF_IDENTITY(0u + (read_2), 0u + (_GLF_IDENTITY(0u + (read_2), (0u + (read_2)) * ((0u ^ 1u) & 1u)))), _GLF_IDENTITY(0u + (read_2), (0u + (read_2)) * 1u))))))) - 0u)), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, read_1))), 0u ^ ((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, read_1)))))), clamp(_GLF_IDENTITY(read_1, ~ (~ _GLF_IDENTITY((read_1), (false ? _GLF_FUZZED(workgroup_size) : (read_1))))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, uint(uint(read_1))), read_1, read_1))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, uint(uint(read_1))), read_1, read_1))))) >> 0u), read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u + (read_2))) - 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, read_1)))), clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))), _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))), 1u)))) >> 0u), read_1)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, 0u + (read_2))), max((_GLF_IDENTITY(read_2, 0u + (read_2))), (_GLF_IDENTITY(read_2, 0u + (read_2))))) - 0u), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, read_1)))), clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u), read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u + (_GLF_IDENTITY(read_2, (read_2) | 0u)))) - 0u), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, read_1)))), clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u), read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u + (read_2))) - 0u), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, read_1)))), clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u), read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u + (read_2))) - 0u), true), false))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(read_1, min(read_1, read_1)))), clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), max(_GLF_IDENTITY(~ (read_1), ~ (~ (~ (read_1)))), ~ (read_1))))), clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u), read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u + (read_2))) - 0u), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) : _GLF_IDENTITY(read_1, min(read_1, read_1)))), clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (read_1) + 0u)))) >> 0u), read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, (0u) ^ 0u) + (_GLF_IDENTITY(read_2, (read_2) << 0u)))) - 0u), true)))))) || false))))), uint(uvec2(uint(read_1 == read_2), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(87.53), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(87.53), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(87.53), max(_GLF_FUZZED(87.53), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_FUZZED(87.53)) * 1.0)) / 1.0), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_FUZZED(87.53)) * 1.0)) / 1.0), max(_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_FUZZED(87.53)) * 1.0)) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_FUZZED(87.53)) * 1.0)) / 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(mat4x2(_GLF_FUZZED(_GLF_IDENTITY(87.53, (87.53) * _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, (1.0) / 1.0)))), clamp(round(length(normalize(1.0))), round(length(_GLF_IDENTITY(normalize(1.0), _GLF_IDENTITY((normalize(1.0)), _GLF_IDENTITY(float(mat3x2((normalize(1.0)), 1.0, 1.0, 0.0, 1.0, 0.0)), max(float(mat3x2((normalize(1.0)), 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2((normalize(1.0)), 1.0, 1.0, 0.0, 1.0, 0.0))))) - 0.0))), round(length(normalize(1.0))))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(600.351)), bool(false)))))), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(87.53), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(87.53), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(87.53), mix(float(_GLF_IDENTITY(_GLF_FUZZED(87.53), float(mat2x3(_GLF_FUZZED(87.53), 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(855.639)), bool(false))), max(_GLF_FUZZED(87.53), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_FUZZED(87.53)) * 1.0)) / 1.0), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_FUZZED(87.53)) * 1.0)) / 1.0), max(_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_FUZZED(87.53)) * 1.0)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_FUZZED(87.53)) * 1.0)) / 1.0), min(_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_FUZZED(87.53)) * 1.0)) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_IDENTITY(_GLF_FUZZED(87.53), (_GLF_FUZZED(87.53)) * 1.0)) / 1.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(mat4x2(_GLF_FUZZED(_GLF_IDENTITY(87.53, (87.53) * _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, (1.0) / 1.0)))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, (1.0) + 0.0)))), round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY((normalize(1.0)) - 0.0, mix(float((normalize(1.0)) - 0.0), float(_GLF_FUZZED(8.7)), bool(false)))))), round(length(normalize(1.0))))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(600.351)), bool(false)))))), _GLF_IDENTITY(float(injectionSwitch.x), min(_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) << (0u | 0u))))), uint(read_1 == read_2))) + 0u)) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
