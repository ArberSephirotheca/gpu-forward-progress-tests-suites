#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6812.0886) : injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(normalize(injectionSwitch)))).y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, false)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true, false, false))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(69.17)), bool(false))) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(339.568) : injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(339.568) : injectionSwitch.y))), float(_GLF_FUZZED(-4.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       for(int _injected_loop_counter = (0 | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           do
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          break;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - 0.0), (injectionSwitch.y), (injectionSwitch.y))))))))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
    {
     return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-0.9, -739.061, -1.3, 9188.3139, -484.713, -4.5, -1.9, -2.7) * vec4(9.7, 76.16, 651.301, -82.00))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.3, -3510.9245)) : injectionSwitch)))).x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) || false), true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - log(1.0)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(960.300), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false))), _GLF_FUZZED(4.7)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)))))) < injectionSwitch.y)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(960.300), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false))), _GLF_FUZZED(4.7)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)))))) < injectionSwitch.y)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))).y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(960.300), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch)))[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false))), _GLF_FUZZED(_GLF_IDENTITY(4.7, _GLF_IDENTITY(float(mat4x2(4.7, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0 + (float(mat4x2(4.7, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0))))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)))))) < injectionSwitch.y))), bool(bvec4(true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)))))) < injectionSwitch.y))), true, false, false)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))).y) && true)))), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(float(mat2(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0)), mix(float(_GLF_IDENTITY(float(mat2(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0)), max(float(mat2(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0)), float(mat2(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0))))), float(_GLF_FUZZED(-1349.1259)), bool(false))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(960.300), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false)), min(_GLF_IDENTITY(mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false)), (false ? _GLF_FUZZED(8.8) : mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false)))), mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false))))), _GLF_FUZZED(_GLF_IDENTITY(4.7, min(4.7, _GLF_IDENTITY(4.7, min(4.7, 4.7)))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))))).x, 1.0, _GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)), 1.0)))))) < injectionSwitch.y)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))).y)) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - log(1.0)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(960.300), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false))), _GLF_FUZZED(4.7)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)))))) < injectionSwitch.y)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(960.300), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false))), _GLF_FUZZED(4.7)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)))))) < injectionSwitch.y)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))).y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(960.300), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch)))[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false))), _GLF_FUZZED(_GLF_IDENTITY(4.7, _GLF_IDENTITY(float(mat4x2(4.7, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0 + (float(mat4x2(4.7, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0))))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)))))) < injectionSwitch.y))), bool(bvec4(true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)))))) < injectionSwitch.y))), true, false, false)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))).y) && true)))), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(float(mat2(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0)), mix(float(_GLF_IDENTITY(float(mat2(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0)), max(float(mat2(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0)), float(mat2(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0))))), float(_GLF_FUZZED(-1349.1259)), bool(false))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(960.300), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false)), min(_GLF_IDENTITY(mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false)), (false ? _GLF_FUZZED(8.8) : mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false)))), mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false))))), _GLF_FUZZED(_GLF_IDENTITY(4.7, min(4.7, _GLF_IDENTITY(4.7, min(4.7, 4.7)))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))))).x, 1.0, _GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)), 1.0)))))) < injectionSwitch.y)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))).y)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - log(1.0)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(960.300), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false))), _GLF_FUZZED(4.7)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)))))) < injectionSwitch.y)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(960.300), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false))), _GLF_FUZZED(4.7)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)))))) < injectionSwitch.y)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))).y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(960.300), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch)))[0], mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false))), _GLF_FUZZED(_GLF_IDENTITY(4.7, _GLF_IDENTITY(float(mat4x2(4.7, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0 + (float(mat4x2(4.7, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0))))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)))))) < injectionSwitch.y))), bool(bvec4(true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)))))) < injectionSwitch.y))), true, false, false)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))).y) && true)))), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(float(mat2(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0)), mix(float(_GLF_IDENTITY(float(mat2(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0)), max(float(mat2(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0)), float(mat2(mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0))))), float(_GLF_FUZZED(-1349.1259)), bool(false))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(960.300), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false)), min(_GLF_IDENTITY(mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false)), (false ? _GLF_FUZZED(8.8) : mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false)))), mix(_GLF_IDENTITY(float((injectionSwitch)[0]), max(float((injectionSwitch)[0]), _GLF_IDENTITY(float((injectionSwitch)[0]), (float((injectionSwitch)[0])) - 0.0))), float(_GLF_FUZZED(-4837.1599)), bool(false))))), _GLF_FUZZED(_GLF_IDENTITY(4.7, min(4.7, _GLF_IDENTITY(4.7, min(4.7, 4.7)))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(float(float(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))))).x, 1.0, _GLF_IDENTITY(1.0, sqrt(1.0) * (1.0)), 1.0)))))) < injectionSwitch.y)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))).y)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))))
          {
           do
            {
             return;
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     return;
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) | 0)))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(ivec2(1, 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
      }
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, (0u) >> 0u))) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))), clamp(_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-330.408))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (4) - (int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(0.0, exp(0.0), 1.0, 1.0))), injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))), 0 ^ (_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7))))))), (int(_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) >> 0), int(7)))))) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0 * (0.0), mix(float(_GLF_IDENTITY(1.0 * (0.0), float(mat3x4(1.0 * (0.0), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(49.04)), bool(false)))), injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) - _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(int(7), int(7))), min((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), min(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0 | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2((injectionSwitch) * mat2(1.0), 0.0, 0.0, 0.0, 1.0)))) / vec2(1.0, 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2((injectionSwitch) * mat2(1.0), 0.0, 0.0, 0.0, 1.0)))) / vec2(1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2((injectionSwitch) * mat2(1.0), 0.0, 0.0, 0.0, 1.0)))) / vec2(1.0, 1.0))).x)))))))) >> _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(int(7), int(7))), min((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(int(7), int(7))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(int(7), int(7))))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))))))), max((int(_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) - 0), int(7)))))), (int(_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))))))) - 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(21029) : (4))), 1)), max(int(ivec2(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(21029) : (4))), 1)), int(ivec2(_GLF_IDENTITY((4), (false ? _GLF_FUZZED(21029) : (4))), 1))))) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) >> 0)), int(7)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) + _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 1, 0)), (int(ivec4(0, 0, 1, 0))) | (int(ivec4(0, 0, 1, 0)))))), (4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7))))), _GLF_IDENTITY((int(_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))))) - 0, (false ? _GLF_FUZZED(51572) : (int(_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))))) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7))))), (int(_GLF_IDENTITY(4, (4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(int(_GLF_IDENTITY(int(7), int(7)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(int(7), int(7))))))))))) - 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-20735) : _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) - _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7))), ~ (~ ((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))))))), (int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), 1 * (int(7))), int(7))), ((4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), 1 * (int(7))), int(7)))) - 0)))) - 0))) : _GLF_FUZZED(-67491)))))) << (0 >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (4)), (4) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))))))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           return;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) - 0)), min(~ _GLF_IDENTITY((_GLF_IDENTITY(64, (64) - 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, (64) - 0))), max(~ ((_GLF_IDENTITY(64, (64) - 0))), ~ ((_GLF_IDENTITY(64, (64) - 0))))))), ~ (_GLF_IDENTITY(64, (64) - 0)))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) - 0)), min(~ (_GLF_IDENTITY(64, (64) - 0)), ~ (_GLF_IDENTITY(64, (64) - 0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) - 0)), min(~ _GLF_IDENTITY((_GLF_IDENTITY(64, (64) - 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, (64) - 0))), max(~ ((_GLF_IDENTITY(64, (64) - 0))), ~ ((_GLF_IDENTITY(64, (64) - 0))))))), ~ (_GLF_IDENTITY(64, (64) - 0)))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) - 0)), min(~ (_GLF_IDENTITY(64, (64) - 0)), ~ (_GLF_IDENTITY(64, (64) - 0)))))))), (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) - 0)), min(~ _GLF_IDENTITY((_GLF_IDENTITY(64, (64) - 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, (64) - 0))), max(~ ((_GLF_IDENTITY(64, (64) - 0))), ~ ((_GLF_IDENTITY(64, (64) - 0))))))), ~ (_GLF_IDENTITY(64, (64) - 0)))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) - 0)), min(~ (_GLF_IDENTITY(64, (64) - 0)), ~ (_GLF_IDENTITY(64, (64) - 0))))))))) >> 0)) + 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-26505))));
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))), _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))), max(min(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))), _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))), _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))), max(min(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))), _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))), min(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))), _GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))))))))) | (_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | 0u) | (virtual_gid))))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 & (81550 | -20215)), _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != (_GLF_IDENTITY(0 & (81550 | -20215), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, ~ (~ (0)))) | 0) & (81550 | _GLF_IDENTITY(-20215, (-20215) / 1)), _GLF_IDENTITY((0 & (81550 | _GLF_IDENTITY(-20215, clamp(_GLF_IDENTITY(-20215, _GLF_IDENTITY((-20215) | (-20215), ((-20215) | (-20215)) | ((-20215) | (-20215)))), -20215, -20215)))), ((0 & (81550 | _GLF_IDENTITY(-20215, clamp(_GLF_IDENTITY(-20215, _GLF_IDENTITY((-20215) | (-20215), ((-20215) | (-20215)) | ((-20215) | (-20215)))), -20215, -20215))))) ^ 0) + 0)) * _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) << 0)) | ((1))) | (1)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != (0 & (81550 | -20215)), (_injected_loop_counter != (_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) ^ 0))) & (81550 | -20215))) || false), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != (0 & (81550 | -20215)), (_injected_loop_counter != (_GLF_IDENTITY(0, 0 + (0)) & (81550 | -20215))) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != (0 & (81550 | -20215)), (_injected_loop_counter != (_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) ^ 0))) & (81550 | -20215))) || false), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != (0 & (81550 | -20215)), (_injected_loop_counter != (_GLF_IDENTITY(0, 0 + (0)) & (81550 | -20215))) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != (0 & (81550 | -20215)), (_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) ^ 0))) & (81550 | -20215), clamp(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) ^ 0))) & (81550 | -20215), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) ^ 0))) & (81550 | -20215), min(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) ^ 0))) & (81550 | -20215), _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) ^ 0))) & (81550 | -20215))), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) ^ 0))) & (81550 | -20215), max(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) ^ 0))) & (81550 | -20215), _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) ^ 0))) & (81550 | -20215))))))) || false), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != (0 & (81550 | -20215)), (_injected_loop_counter != (_GLF_IDENTITY(0, 0 + (0)) & (81550 | -20215))) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))))))))))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm4x8(vec4(747.773, -9.9, 2.2, -743.058))) : subgroup_local_id, (false ? _GLF_FUZZED(packSnorm4x8(vec4(747.773, -9.9, 2.2, -743.058))) : subgroup_local_id) | (_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm4x8(vec4(747.773, -9.9, 2.2, -743.058))) : subgroup_local_id, (false ? _GLF_FUZZED(packSnorm4x8(vec4(747.773, -9.9, 2.2, -743.058))) : subgroup_local_id) >> 0u))))) + 1 < subgroup_size)
    {
     int i = 0;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), bool(bvec3(! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))), false, true))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(packUnorm2x16(injectionSwitch))))], _GLF_IDENTITY(uint(read_1 == read_2), 0u ^ (uint(read_1 == read_2))) + 1, 4, 64, 4);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), (bool(bool(! (injectionSwitch.x > injectionSwitch.y)))) || false)))) || false)))))))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))), ! (! ((! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))))))))) || false) && true)))));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       break;
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED(subgroup_local_id))) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), clamp((read_2), _GLF_IDENTITY((read_2), 1u * ((read_2))), (read_2)))) ^ 0u) >> (1u ^ 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), clamp((read_2), _GLF_IDENTITY((read_2), 1u * ((read_2))), (read_2)))) ^ 0u) >> (1u ^ 1u)), (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), clamp((read_2), _GLF_IDENTITY((read_2), 1u * ((read_2))), (read_2)))) ^ 0u) >> (1u ^ 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), clamp((read_2), _GLF_IDENTITY((read_2), 1u * ((read_2))), (read_2)))) ^ 0u) >> (1u ^ 1u)), (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), clamp((read_2), _GLF_IDENTITY((read_2), 1u * ((read_2))), (read_2)))) ^ 0u) >> (1u ^ 1u))) - 0u))), _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), clamp((read_2), _GLF_IDENTITY((read_2), 1u * ((read_2))), (read_2)))) ^ 0u) >> (1u ^ 1u))))) + 1, 4, 64, 4);
    }
   if(_GLF_DEAD(false))
    break;
  }
}
