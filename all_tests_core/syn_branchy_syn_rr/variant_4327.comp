#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 mat2x3 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
} ;

struct _GLF_struct_3 {
 bvec2 _f0;
 bvec3 _f1;
 bvec2 _f2;
 mat3x2 _f3;
 mat3x2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 float _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 ivec2 _f1;
 int i;
 _GLF_struct_6 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 uint next_virtual_gid;
 _GLF_struct_1 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-99.73)), bool(false)))) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), true)), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true)))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), false || ((injectionSwitch.x > injectionSwitch.y))), true))))))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y = _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4288.2417)), bool(false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-226.266) : injectionSwitch[0])), injectionSwitch[1])).y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true) && true, ! (! ((true) && true)))), ! (! (! (_GLF_IDENTITY((true) && true, ! (! ((true) && true)))))))))))) ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(-350.377, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))) ? -350.377 : _GLF_FUZZED(-132.359)))))) : _GLF_FUZZED(82.40))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(-350.377), 1.0 * (_GLF_FUZZED(-350.377))))) : _GLF_FUZZED(82.40))))))), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(176.269, -40.94)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40))))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), mix(float(_GLF_FUZZED(1833.7256)), float(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0))), bool(true)))) / 1.0), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40))))))), true, false), bvec3(bvec4(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40))))))), true, false), true))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40))))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40))))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-6598.1673, 278.524)))).y, 1.0, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40)))))))))) && true), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_IDENTITY(_GLF_FUZZED(ldexp(-245.790, -85448)), clamp(_GLF_FUZZED(ldexp(-245.790, -85448)), _GLF_FUZZED(ldexp(-245.790, -85448)), _GLF_FUZZED(ldexp(-245.790, -85448)))))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40))))))), true, false), bvec3(bvec4(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(1.0), bool(true)))) - 0.0) : _GLF_FUZZED(6.2))), _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40))))))), true, false), true))), true))))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40)))), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40))))))) / 1.0)))), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), (_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), float(mat4x3(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)))) * 1.0), 0.0)), _GLF_IDENTITY((true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377)), ((true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(82.40))))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40))))))), true, false), bvec3(bvec4(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), _GLF_IDENTITY(0.0, (0.0) / 1.0))), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40))))))), true, false), true))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40))))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(585.552, -74.86)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 0.0))))))) : _GLF_FUZZED(-350.377))) : _GLF_FUZZED(82.40))))))), true, false), bvec3(bvec4(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))), max(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))))) : _GLF_FUZZED(82.40)), mix(float(_GLF_FUZZED(-4393.8165)), float((true ? _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))), max(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(ldexp(-245.790, -85448)))), 0.0)), (true ? float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-350.377))))) : _GLF_FUZZED(82.40))), bool(true)))))))), true, false), true))), true))))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), true && (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))), ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = workgroup_size)), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = workgroup_size))) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! ((_GLF_IDENTITY(! (false), (! (false)) || false))))), true, false)))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), true, _GLF_IDENTITY(true, false || (true)), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (bool(bool(! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) && true)))), bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true && _GLF_IDENTITY((false), true && ((false))))), ! (! _GLF_IDENTITY((true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true && _GLF_IDENTITY((false), true && ((false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true && _GLF_IDENTITY((false), true && ((false)))))), ! (! ((true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true && _GLF_IDENTITY((false), true && ((false)))))))))), true && (! (_GLF_IDENTITY((true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true && _GLF_IDENTITY((false), true && ((false)))))), ! (! ((true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true && _GLF_IDENTITY((false), true && ((false))))))))))))))))), bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))) || false, ((! (_GLF_IDENTITY(false, ! (! (false))))) || false) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size)), ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size))).w * GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z;
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, (false) && true), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y + GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y + _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id, (true ? GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id : _GLF_FUZZED(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), true), false))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z = virtual_gid, ~ (~ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z = virtual_gid)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y + GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y + ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y), _GLF_struct_1(_GLF_struct_0(mat3x2(1.0), bvec3(true))));
 atomicStore(buf[_GLF_struct_replacement_2.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z], clamp(buf[_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z, max(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z, 0u ^ (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z)), GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z))))], buf[GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z], _GLF_IDENTITY(buf[GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z], ~ (_GLF_IDENTITY(~ (buf[GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z]), max(~ (buf[GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z]), ~ (buf[GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z]))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), 0 | (4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z], _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), ((4)) ^ (1 ^ 1))), (4) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), float(mat4(float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1 < GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y, true && (GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1 < GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true)))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true)))), true)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(54.26), _GLF_FUZZED(-29.95)), bvec2(false, false))).y)))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) + 0), 0)), _GLF_IDENTITY(0, (0) | (0))))], injectionSwitch[1])))[1])), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1])), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(vec4(-0.3, 9.9, -8.1, 4239.6102))) : 0.0)), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), 0.0, 1.0))))))), vec2(_GLF_FUZZED((1.1 + 673.096)), _GLF_FUZZED(-86.70)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(75.25)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)), false))).x, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1])), mix(float(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), float(_GLF_FUZZED(-23.24)), bool(false))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0)))))))[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(17168)))])), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(76.42))) + 0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(vec4(-0.3, 9.9, -8.1, 4239.6102))) : 0.0)), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), 0.0, 1.0))))))), vec2(_GLF_FUZZED(_GLF_IDENTITY((1.1 + 673.096), (true ? (1.1 + 673.096) : _GLF_FUZZED(-369.889)))), _GLF_FUZZED(-86.70)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(75.25)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)), false))).x : _GLF_FUZZED(-368.737))) > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(54.26), _GLF_FUZZED(-29.95)), bvec2(false, false))).y)))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) + 0), 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) | (0))))], injectionSwitch[1])))[1])), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1])), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))) ? _GLF_FUZZED(length(vec4(-0.3, 9.9, -8.1, 4239.6102))) : 0.0)), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (false ? _GLF_FUZZED(((-11.78) + 2139.8371)) : _GLF_IDENTITY(0.0, (0.0) / 1.0)))) - 0.0), 0.0, 1.0))))))), vec2(_GLF_FUZZED((1.1 + 673.096)), _GLF_FUZZED(-86.70)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(75.25)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)), false))).x, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1])), mix(float(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), float(_GLF_FUZZED(-23.24)), bool(false))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, sqrt(0.0), 0.0, 0.0, 0.0)))))))[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(17168)))])), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(76.42))) + 0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(vec4(-0.3, 9.9, -8.1, 4239.6102))) : 0.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) / 1.0)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_IDENTITY(float((_GLF_IDENTITY(0.0, (0.0) / 1.0))), min(float((_GLF_IDENTITY(0.0, (0.0) / 1.0))), float((_GLF_IDENTITY(0.0, (0.0) / 1.0))))))) : _GLF_FUZZED(6992.7652))) - 0.0), 0.0, 1.0))))))), vec2(_GLF_FUZZED(_GLF_IDENTITY((1.1 + 673.096), (true ? (1.1 + 673.096) : _GLF_FUZZED(-369.889)))), _GLF_FUZZED(-86.70)), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(75.25)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)), false))).x : _GLF_FUZZED(-368.737))) > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))) - mat2(0.0, 0.0, 0.0, 0.0), mat2(1.0) * (_GLF_IDENTITY((mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))) - mat2(0.0, 0.0, 0.0, 0.0), ((mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))) - mat2(0.0, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), (true ? vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3((injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(length(vec3(0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(mat3(60.54, 8.3, -3257.1904, -7.2, 28.16, -64.67, 355.089, -135.683, 236.047)) : mat3((injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(length(vec3(0.0, 0.0, 0.0))))))))[0], _GLF_FUZZED(441.323)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).x)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(441.323)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).x)), transpose(transpose(mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(441.323)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).x)))))), mat2(mat3x4(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(441.323)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).x)), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(441.323)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).x))), transpose(transpose(transpose(mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(441.323)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).x)))))))), transpose(transpose(mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(441.323)), vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), bvec2(false, true))))).x))))))))))), (mat2(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))) - mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))).y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(mat2x3(1.0), ivec2(1), 0, _GLF_struct_6(_GLF_struct_3(bvec2(_GLF_IDENTITY(true, false || (true))), bvec3(true), bvec2(_GLF_IDENTITY(true, (true) && true)), mat3x2(1.0), mat3x2(1.0), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), 1.0, _GLF_struct_4(bvec2(true)), _GLF_struct_5(mat2x3(1.0), vec2(1.0))), mat3(1.0));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), false)))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_2.next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u + (read_1), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))) | 0u) + (_GLF_IDENTITY(0u, (0u) >> 0u) + (read_1)))) == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, log(1.0), 0.0)), clamp(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, log(1.0), 0.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, log(1.0), 0.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, log(1.0), 0.0))))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7646.5378)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, sqrt(cos(0.0)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), clamp(float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, sqrt(cos(0.0)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, sqrt(cos(0.0)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, sqrt(cos(0.0)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))))), true && (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))) && true)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_2.next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (read_1 == read_2)), true && (_GLF_IDENTITY(! (! (read_1 == read_2)), (! (! (read_1 == read_2))) && true)))), true, true, true)))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(95.61), _GLF_FUZZED(-1.0)), bvec2(false, false))).y)), true, false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((159.954 * -909.905))), float(injectionSwitch.y), bool(true)))) * 1.0)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, exp(log(1.0)), 0.0, _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 0.0, tan(0.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(exp(0.0), 0.0, 0.0, tan(0.0)), vec4(1.0, 0.0, 0.0, 0.0))), determinant(mat3(0.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true), bvec2(bvec3(bvec2(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true), false)))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true), bvec2(bvec3(bvec2(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), true), false)))))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
