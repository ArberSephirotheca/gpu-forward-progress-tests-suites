#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, mix(float(_GLF_FUZZED((vec4(5.9, 8.6, _GLF_IDENTITY(11.04, min(11.04, 11.04)), 498.305) * mat2x4(-8490.1829, 853.424, 96.83, 7.4, -6745.2505, 709.253, 2.9, -792.906)).s)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), min(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(vec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (vec2(vec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * mat2(1.0))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x))), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), true, true))))), ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))))), bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), true, true))))), ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))))))))))), false, _GLF_IDENTITY(true, ! (! (true))), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false))))))), (! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))))) && true)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))), false || (_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))), ((bool(bvec2(_GLF_DEAD(false), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0), (mat2x4(injectionSwitch.x, 0.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0)) - mat2x4(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ((false)) && true)) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, (false) || false), true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))).x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) ? _GLF_FUZZED(144475u) : ~ (subgroup_id * subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (false ? _GLF_FUZZED(144475u) : ~ (subgroup_id * subgroup_size))))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (~ (uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), ~ (~ (uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(144475u, 0u + (_GLF_IDENTITY(144475u, max(144475u, 144475u))))) : ~ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)) * subgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (false ? _GLF_FUZZED(144475u) : ~ (subgroup_id * subgroup_size)))))))) - 0u) + subgroup_local_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-1606.4357)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + _GLF_IDENTITY((_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), (vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))))), 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(false)), (false ? _GLF_FUZZED(-23.87) : mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), abs(1.0)))) / vec2(1.0, 1.0))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), (vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))))), 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(false)), (false ? _GLF_FUZZED(-23.87) : mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), abs(1.0)))) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), (vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))))), 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(false)), (false ? _GLF_FUZZED(-23.87) : mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), abs(1.0)))) / vec2(1.0, 1.0))).y)))), min((_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), (vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))))), 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(false)), (false ? _GLF_FUZZED(-23.87) : mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), abs(1.0)))) / vec2(1.0, 1.0))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), (vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))))), 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(false)), (false ? _GLF_FUZZED(-23.87) : mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), abs(1.0)))) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), (vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))))), 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(false)), (false ? _GLF_FUZZED(-23.87) : mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), abs(1.0)))) / vec2(1.0, 1.0))).y)))), (_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), (vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))))), 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(false)), (false ? _GLF_FUZZED(-23.87) : mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), abs(1.0)))) / vec2(1.0, 1.0))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), (vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))))), 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(false)), (false ? _GLF_FUZZED(-23.87) : mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), abs(1.0)))) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), (vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))))), 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(false)), (false ? _GLF_FUZZED(-23.87) : mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), abs(1.0)))) / vec2(1.0, 1.0))).y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), (_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(false)))), abs(1.0))), (true ? vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(false)))), abs(1.0))) : _GLF_FUZZED(vec2(35.95, 50.20).gr)))) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))).y))), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.0)), float(0.0), bool(true))))) + (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-952.377)), bool(false))), 0.0, 0.0)), injectionSwitch.x), abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(660.500)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.8)), bool(false))), abs(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), _GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), abs(1.0)))) / vec2(1.0, 1.0))).y)))) - 0.0)) / 1.0, (false ? _GLF_FUZZED(-2254.5342) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0))), (_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), 1.0, abs(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((-722.170 + -334.396))), bool(false)))), abs(1.0))), (true ? vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78))))), float(_GLF_FUZZED((_GLF_IDENTITY(-722.170 + -334.396, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4931.0335) : -722.170 + -334.396))))), bool(false)))), abs(1.0))) : _GLF_FUZZED(vec2(35.95, 50.20).gr)))) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))).y))), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.0)), float(0.0), bool(true))))) + (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-952.377)), bool(false))), 0.0, 0.0)), injectionSwitch.x), abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(660.500)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (vec2(mat4x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.8)), bool(false))), abs(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78)))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(faceforward(-29.39, -647.222, 15.78)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(_GLF_IDENTITY((-722.170 + -334.396), _GLF_IDENTITY(float(mat2x3((-722.170 + -334.396), 0.0, 1.0, 0.0, cos(0.0), 1.0)), float(mat4x2(float(mat2x3((-722.170 + -334.396), 0.0, 1.0, 0.0, cos(0.0), 1.0)), 0.0, sqrt(1.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), bool(bool(bool(false))))))), abs(1.0)))) / vec2(1.0, 1.0))).y)))) - 0.0)) / 1.0))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     continue;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || false)) && true)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / sqrt(vec2(1.0, 1.0))), 1.0, exp(_GLF_IDENTITY(sqrt(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? sqrt(0.0) : _GLF_FUZZED(-8.4)))), log(_GLF_IDENTITY(1.0, (1.0) - log(1.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(8.4)), float(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2061.7634)))))))), bool(true)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), float(mat2x3((0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)))), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.5, 9.2))))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.1)), float(1.0), bool(true))), 1.0)), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0)), min(float(mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0)), float(mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0))))), 0.0)), 0.0)) * mat2(1.0)))), 0.0, 0.0, sqrt(1.0), 1.0), (false ? _GLF_FUZZED(mat2x3(3.6, _GLF_IDENTITY(5.8, min(5.8, 5.8)), -7.6, -1.3, 13.36, 71.60)) : mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) * mat2(1.0)))), 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.9), (_GLF_FUZZED(6.9)) - 0.0)), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(1.0)))), 0.0, _GLF_IDENTITY(0.0, (0.0) * abs(1.0)), sqrt(1.0), 1.0), (false ? _GLF_FUZZED(mat2x3(3.6, _GLF_IDENTITY(5.8, (5.8) - sqrt(0.0)), -7.6, -1.3, 13.36, 71.60)) : mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, exp(0.0), 1.0, 1.0), (vec4(1.0, exp(0.0), 1.0, 1.0)) * mat4(1.0))), clamp(float(_GLF_IDENTITY(vec4(1.0, exp(0.0), 1.0, 1.0), (vec4(1.0, exp(0.0), 1.0, 1.0)) * mat4(1.0))), float(_GLF_IDENTITY(vec4(1.0, exp(0.0), 1.0, 1.0), (vec4(1.0, exp(0.0), 1.0, 1.0)) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, exp(0.0), 1.0, 1.0), (vec4(1.0, exp(0.0), 1.0, 1.0)) * mat4(1.0))), max(float(_GLF_IDENTITY(vec4(1.0, exp(0.0), 1.0, 1.0), (vec4(1.0, exp(0.0), 1.0, 1.0)) * mat4(1.0))), float(_GLF_IDENTITY(vec4(1.0, exp(0.0), 1.0, 1.0), (vec4(1.0, exp(0.0), 1.0, 1.0)) * mat4(1.0)))))))), 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), 1.0))) - 0.0))))))), 0.0, 0.0, sqrt(1.0), 1.0))))).x), bool(true))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / sqrt(vec2(1.0, 1.0))), 1.0, exp(sqrt(0.0)), log(_GLF_IDENTITY(1.0, (1.0) - log(1.0))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(8.4)), float(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2061.7634)))))))), bool(true)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.5, 9.2))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(1.0)))), 0.0, 0.0, sqrt(1.0), 1.0), (false ? _GLF_FUZZED(mat2x3(3.6, _GLF_IDENTITY(5.8, min(5.8, 5.8)), -7.6, -1.3, 13.36, 71.60)) : mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(1.0)))), 0.0, 0.0, sqrt(1.0), 1.0))))).x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.9), (_GLF_FUZZED(6.9)) - 0.0)), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(1.0)))), 0.0, _GLF_IDENTITY(0.0, (0.0) * abs(1.0)), sqrt(1.0), 1.0), (false ? _GLF_FUZZED(mat2x3(3.6, _GLF_IDENTITY(5.8, (5.8) - sqrt(0.0)), -7.6, -1.3, 13.36, 71.60)) : mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0))))))), 0.0, 0.0, sqrt(1.0), 1.0))))).x), bool(true))) > injectionSwitch.y), true))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / sqrt(vec2(1.0, 1.0))), 1.0, exp(_GLF_IDENTITY(sqrt(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? sqrt(0.0) : _GLF_FUZZED(-8.4)))), log(_GLF_IDENTITY(1.0, (1.0) - log(1.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(8.4)), float(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2061.7634)))))))), bool(true)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), float(mat2x3((0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)))), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.5, 9.2))))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.1)), float(1.0), bool(true))), 1.0)), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0)), min(float(mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0)), float(mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0))))), 0.0)), 0.0)) * mat2(1.0)))), 0.0, 0.0, sqrt(1.0), 1.0), (false ? _GLF_FUZZED(mat2x3(3.6, _GLF_IDENTITY(5.8, min(5.8, 5.8)), -7.6, -1.3, 13.36, 71.60)) : mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) * mat2(1.0)))), 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))).x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.9), (_GLF_FUZZED(6.9)) - 0.0)), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(1.0)))), 0.0, _GLF_IDENTITY(0.0, (0.0) * abs(1.0)), sqrt(1.0), 1.0), (false ? _GLF_FUZZED(mat2x3(3.6, _GLF_IDENTITY(5.8, (5.8) - sqrt(0.0)), -7.6, -1.3, 13.36, 71.60)) : mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, exp(0.0), 1.0, 1.0), (vec4(1.0, exp(0.0), 1.0, 1.0)) * mat4(1.0))), clamp(float(_GLF_IDENTITY(vec4(1.0, exp(0.0), 1.0, 1.0), (vec4(1.0, exp(0.0), 1.0, 1.0)) * mat4(1.0))), float(_GLF_IDENTITY(vec4(1.0, exp(0.0), 1.0, 1.0), (vec4(1.0, exp(0.0), 1.0, 1.0)) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, exp(0.0), 1.0, 1.0), (vec4(1.0, exp(0.0), 1.0, 1.0)) * mat4(1.0))), max(float(_GLF_IDENTITY(vec4(1.0, exp(0.0), 1.0, 1.0), (vec4(1.0, exp(0.0), 1.0, 1.0)) * mat4(1.0))), float(_GLF_IDENTITY(vec4(1.0, exp(0.0), 1.0, 1.0), (vec4(1.0, exp(0.0), 1.0, 1.0)) * mat4(1.0)))))))), 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), 1.0))) - 0.0))))))), 0.0, 0.0, sqrt(1.0), 1.0))))).x), bool(true))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / sqrt(vec2(1.0, 1.0))), 1.0, exp(sqrt(0.0)), log(_GLF_IDENTITY(1.0, (1.0) - log(1.0))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(8.4)), float(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2061.7634)))))))), bool(true)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.5, 9.2))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(1.0)))), 0.0, 0.0, sqrt(1.0), 1.0), (false ? _GLF_FUZZED(mat2x3(3.6, _GLF_IDENTITY(5.8, min(5.8, 5.8)), -7.6, -1.3, 13.36, 71.60)) : mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(1.0)))), 0.0, 0.0, sqrt(1.0), 1.0))))).x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.9), (_GLF_FUZZED(6.9)) - 0.0)), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(1.0)))), 0.0, _GLF_IDENTITY(0.0, (0.0) * abs(1.0)), sqrt(1.0), 1.0), (false ? _GLF_FUZZED(mat2x3(3.6, _GLF_IDENTITY(5.8, (5.8) - sqrt(0.0)), -7.6, -1.3, 13.36, 71.60)) : mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0))))))), 0.0, 0.0, sqrt(1.0), 1.0))))).x), bool(true))) > injectionSwitch.y), true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ((! (false))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))))).y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) >> 0), 64)), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, true)))))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), float(mat4(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), sin(0.0))))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   int i = _GLF_IDENTITY(0, 1 * (0));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), (_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), true, false)))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), 0u ^ (~ _GLF_IDENTITY((read_1), max(_GLF_IDENTITY((read_1), uint(uvec2((read_1), 1u))), (read_1))))))), _GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (read_1) | 0u)))), _GLF_IDENTITY(read_1, 0u | (read_1)))) == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false, true)), false || (bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false, true))))), true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)), false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)), false, true, false))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), 0u ^ (~ (read_1))))), _GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (read_1) | 0u)))), _GLF_IDENTITY(read_1, 0u | (read_1)))) == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, 0u | (read_1)))) == read_2, bool(bvec2(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), 0u ^ (~ (read_1))))), _GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (read_1) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)), (_GLF_IDENTITY(read_1, 0u | (read_1))) - 0u))) == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2))), bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_2, max(read_2, read_2))), min(uint(_GLF_IDENTITY(read_2, max(read_2, read_2))), uint(_GLF_IDENTITY(read_2, max(read_2, read_2))))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, true, true)), (bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, true, true))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((true ? -6.5 : -48.13))), vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1]), bvec2(false, true))).y))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), 0u ^ (~ _GLF_IDENTITY((read_1), max(_GLF_IDENTITY((read_1), uint(uvec2((read_1), 1u))), (read_1))))))), _GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (read_1) | 0u)))), _GLF_IDENTITY(read_1, 0u | (read_1)))) == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false, true)), false || (bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false, true))))), true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)), false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)), false, true, false))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), 0u ^ (~ (read_1))))), _GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (read_1) | 0u)))), _GLF_IDENTITY(read_1, 0u | (read_1)))) == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, 0u | (read_1)))) == read_2, bool(bvec2(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), 0u ^ (~ (read_1))))), _GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (read_1) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)), (_GLF_IDENTITY(read_1, 0u | (read_1))) - 0u))) == read_2, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2))), bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_2, max(read_2, read_2))), min(uint(_GLF_IDENTITY(read_2, max(read_2, read_2))), uint(_GLF_IDENTITY(read_2, max(read_2, read_2))))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, true, true)), (bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, true, true))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((true ? -6.5 : -48.13))), vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1]), bvec2(false, true))).y)))))))))))), ! (! (bool(bvec3(read_1 == read_2, _GLF_IDENTITY(false, (false) && true), true))))))) + 1, 4, 64, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, max(4, 4)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))) || false) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec4(_GLF_IDENTITY((4), ~ (~ ((4)))), (_GLF_IDENTITY(1 & ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 0 + _GLF_IDENTITY((1 & ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5))))) >> _GLF_IDENTITY(int(5), int(5)))), ((1 & ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5))))) >> _GLF_IDENTITY(int(5), int(5))))) / 1))), 1, 1))) ^ 0)) | 0), (true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY((4), int(ivec4(_GLF_IDENTITY((4), ~ (~ ((4)))), (1 & ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) ^ 0)), int(_GLF_IDENTITY(5, 0 | _GLF_IDENTITY((5), (_GLF_IDENTITY((5), (false ? _GLF_FUZZED(-77475) : _GLF_IDENTITY((5), clamp((5), (5), (5)))))) - 0))))) >> _GLF_IDENTITY(int(5), int(5)))), 1, 1))) ^ 0)) | 0) : _GLF_FUZZED(86011))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
