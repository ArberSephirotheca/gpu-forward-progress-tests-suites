#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y) - 0.0)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1681.9059) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x;
 uint workgroup_base = GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.w * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), clamp(float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)))))), clamp(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), clamp(float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)))))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), clamp(float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)))))), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), clamp(float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)))))), min(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), clamp(float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)))))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), clamp(float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0)), float(mat2(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0))))))))))))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))), float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), bool(bvec3(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), bool(bvec2(! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), true))), false, false))))))) || false), true, true, _GLF_IDENTITY(true, ! (! (true)))))))), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(intBitsToFloat(ivec4(-99030, _GLF_IDENTITY(-68706, (-68706) * int(_GLF_ONE(1.0, injectionSwitch.y))), -69574, -49128).sp)))).y)), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z = workgroup_base, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z = workgroup_base) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))), false, true, false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), false))))))))))), false, true, false))))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, (0.0) / 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0))))))) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(899.673) : (injectionSwitch.x))) - 0.0), injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, -4648.7776)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, -4648.7776)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, -4648.7776)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, -4648.7776)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, -4648.7776)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((0.9)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(576.344)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED((-3.3 + -8696.7786))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)))), injectionSwitch, injectionSwitch)).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, -4648.7776)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(34.82, -4648.7776), mix(vec2(_GLF_FUZZED(749.041), (vec2(34.82, -4648.7776))[1]), vec2(_GLF_IDENTITY((vec2(34.82, -4648.7776))[0], ((vec2(34.82, -4648.7776))[0]) + 0.0), _GLF_FUZZED(33.88)), bvec2(true, false)))) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)))), true, true, true)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, _GLF_IDENTITY(-4648.7776, (false ? _GLF_FUZZED(5348.6572) : _GLF_IDENTITY(-4648.7776, mix(float(_GLF_FUZZED(3.4)), float(-4648.7776), bool(true))))))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, _GLF_IDENTITY(-4648.7776, (false ? _GLF_FUZZED(5348.6572) : _GLF_IDENTITY(-4648.7776, mix(float(_GLF_FUZZED(3.4)), float(-4648.7776), bool(true))))))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, _GLF_IDENTITY(-4648.7776, (false ? _GLF_FUZZED(5348.6572) : _GLF_IDENTITY(-4648.7776, mix(float(_GLF_FUZZED(3.4)), float(-4648.7776), bool(true))))))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y))))))))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, _GLF_IDENTITY(-4648.7776, clamp(-4648.7776, -4648.7776, -4648.7776)))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)))), true, true, true)))))), bool(bvec2((! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, _GLF_IDENTITY(-4648.7776, (false ? _GLF_FUZZED(5348.6572) : _GLF_IDENTITY(-4648.7776, mix(float(_GLF_FUZZED(3.4)), float(-4648.7776), bool(true))))))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, _GLF_IDENTITY(-4648.7776, (false ? _GLF_FUZZED(5348.6572) : _GLF_IDENTITY(-4648.7776, mix(float(_GLF_FUZZED(3.4)), float(-4648.7776), bool(true))))))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, _GLF_IDENTITY(-4648.7776, (false ? _GLF_FUZZED(5348.6572) : _GLF_IDENTITY(-4648.7776, mix(float(_GLF_FUZZED(3.4)), float(-4648.7776), bool(true))))))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y))))))))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.82, _GLF_IDENTITY(-4648.7776, clamp(-4648.7776, -4648.7776, -4648.7776)))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y)))), true, true, true)))))), true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint virtual_gid = GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size, uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.8)), bool(false))))), _GLF_IDENTITY(0u, (0u) << 0u), 1u), max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u) + GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u) + GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))) % subgroup_size), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u) + GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u))) + GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u))) + GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z) - 0u))) + GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))))), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size)))))) >> 0u))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size) : _GLF_FUZZED((num_workgroup / subgroup_size))));
 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.x = next_virtual_gid;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.x], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), virtual_gid, virtual_gid), 0u | (clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size[0]) : 0u))), virtual_gid, virtual_gid))))], 4, 64, _GLF_IDENTITY(0, (0) << 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), min(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))) << 0u))), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), max(_GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), max(max(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], buf[virtual_gid]), max(buf[virtual_gid], buf[virtual_gid]))), max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))), max(_GLF_IDENTITY(max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) - 0u)), max(_GLF_IDENTITY(max(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))], clamp(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))], (buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))]) | (buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))])), buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))])), buf[virtual_gid]), max(max(buf[virtual_gid], buf[virtual_gid]), max(buf[virtual_gid], buf[virtual_gid]))), max(buf[virtual_gid], buf[virtual_gid]))), _GLF_IDENTITY(_GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), max(_GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), max(max(buf[virtual_gid], buf[virtual_gid]), max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))))), max(buf[virtual_gid], buf[virtual_gid]))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), max(_GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), max(max(buf[virtual_gid], buf[virtual_gid]), max(buf[virtual_gid], buf[virtual_gid]))), max(buf[virtual_gid], buf[virtual_gid]))), (_GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), max(_GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), max(max(buf[virtual_gid], buf[virtual_gid]), max(buf[virtual_gid], buf[virtual_gid]))), max(buf[virtual_gid], buf[virtual_gid])))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), max(_GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), max(max(buf[virtual_gid], buf[virtual_gid]), max(buf[virtual_gid], buf[virtual_gid]))), max(buf[virtual_gid], buf[virtual_gid]))), (_GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), max(_GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), max(max(buf[virtual_gid], buf[virtual_gid]), max(buf[virtual_gid], buf[virtual_gid]))), max(buf[virtual_gid], buf[virtual_gid])))) / 1u)) | 0u)) / 1u)))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), ((false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(unpackHalf2x16(subgroup_id)), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(unpackHalf2x16(subgroup_id))) * mat2(1.0), vec2(vec3((true ? injectionSwitch : _GLF_FUZZED(unpackHalf2x16(subgroup_id))) * mat2(1.0), 0.0)))))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(unpackHalf2x16(subgroup_id)), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(unpackHalf2x16(subgroup_id))) * mat2(1.0), vec2(vec3((true ? injectionSwitch : _GLF_FUZZED(unpackHalf2x16(subgroup_id))) * mat2(1.0), 0.0)))))))).y) && true))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) * mat2(1.0))))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0))), dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0)))), mix(float(_GLF_FUZZED(float(81017))), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0))), dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0)))), min(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0))), dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0))), dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), tan(0.0), abs(abs(1.0))))), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), mix(vec2((vec2(0.0, 0.0) + (injectionSwitch))[0], _GLF_FUZZED((4693.2517 * -2.0))), vec2(_GLF_FUZZED(-2930.2660), (vec2(0.0, 0.0) + (injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0))), dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0)))), mix(float(_GLF_FUZZED(float(81017))), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0))), dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0)))), min(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0))), dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0))), dot(vec2(1.0, 1.0), vec2(abs(0.0), log(1.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), tan(0.0), abs(abs(1.0))))), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), mix(vec2((vec2(0.0, 0.0) + (injectionSwitch))[0], _GLF_FUZZED((4693.2517 * -2.0))), vec2(_GLF_FUZZED(-2930.2660), (vec2(0.0, 0.0) + (injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))).y)), true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0, sin(0.0))))) - 0.0)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))), _GLF_IDENTITY(true, ! (! (true))), true, false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))), _GLF_IDENTITY(true, ! (! (true))), true, false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || false))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), false || (bool(bvec4(false, true, false, false)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size, _GLF_IDENTITY(~ (~ (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size)), max(_GLF_IDENTITY(~ (~ (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size)), clamp(~ (~ (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size)), ~ (~ (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size)), ~ (~ (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size)))), ~ (~ (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size))))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size, uvec4(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size[1], clamp(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size[1], GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size[1], GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size[1])), GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size[2], GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size[3])))).x], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2), clamp(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (read_1) | (read_1)) == read_2), 0u))), uint(read_1 == read_2), uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))) + _GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) >> 0), 4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x < injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-902.535), _GLF_FUZZED(10.96)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x4((injectionSwitch)[0], 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(-569.422, 8870.1618)))).y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), ((injectionSwitch.x > injectionSwitch.y)) || false))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), ((injectionSwitch.x > injectionSwitch.y)) || false))), true))), true && (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), ((injectionSwitch.x > injectionSwitch.y)) || false))), true))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size))), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) + 0)], GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size[1], GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size[_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) ^ 0), 2))], GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size[3])), (true ? GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size : _GLF_FUZZED(uvec4(122040u, 69790u, 190815u, 152840u)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.x, max(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.x, GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.x)), clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size), (true ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size) : _GLF_FUZZED((uvec4(159012u, 69745u, 8288u, 115793u) / num_workgroup)))) : GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size)).x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size, max(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size)).x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.x, 0u | (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.x)))), GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.x, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.x) >> 0u)))], _GLF_IDENTITY(uint(read_1 == read_2), 0u ^ (uint(read_1 == read_2))) + _GLF_IDENTITY(1, max(1, 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), false)))))))))
  barrier();
}
