#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, false || (true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), clamp(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), max(vec2(injectionSwitch.x, 0.0), vec2(injectionSwitch.x, 0.0))), vec2(injectionSwitch.x, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), min(vec2(injectionSwitch.x, 0.0), vec2(injectionSwitch.x, 0.0))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || false)), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || false)), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || _GLF_IDENTITY(false, true && (false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), bool(bool(false))), false)), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), true, true))))) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))), (bool(bvec3(false, true, false))) && true)), true), bvec3(bvec4(bvec3(false, false, true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-93.71), _GLF_FUZZED(-7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9755.9470), _GLF_FUZZED(3.9)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(vec2(1512.3721, 2.5)))).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) * mat2(1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) * mat2(1.0), vec2(mat3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) * mat2(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(vec2(-9.7, 437.413))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true, true))) && true), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true, true))) && true)), true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)))))))) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)))))))) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(0.5)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y) / _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)))))))) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)))))))) && true))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uint(next_virtual_gid)), 0u ^ (uint(uint(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))) | 0u))))))) << 0u)], _GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), min(_GLF_IDENTITY(~ (uint(1)), (~ (uint(1))) * 1u), ~ (uint(1)))))), _GLF_IDENTITY(4, (4) | (4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.1) : injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u | (2u))), 0u | (uint(2u))), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) | (virtual_gid)), _GLF_IDENTITY((virtual_gid) ^ _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(clamp((virtual_gid) ^ _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | 0u) ^ _GLF_IDENTITY(0u, ~ (~ (0u))), ((virtual_gid) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u), (virtual_gid) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp((virtual_gid) ^ _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | 0u) ^ _GLF_IDENTITY(0u, ~ (~ (0u))), ((virtual_gid) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u), (virtual_gid) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))) : _GLF_FUZZED(workgroup_id)))))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! _GLF_IDENTITY((! (bool(bvec3(false, true, true)))), bool(bvec4((! (bool(bvec3(false, true, true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), ((! (false))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))) + 0.0))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.5))) + (injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (float(float(injectionSwitch.y))) + 0.0)))), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (1.0) - abs(0.0)), 1.0, cos(0.0), 0.0, 1.0, determinant(mat3(log(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.y)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)) * (read_2), (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)) * (read_2), (_GLF_IDENTITY(_GLF_IDENTITY(1u * (read_2), clamp(1u * (read_2), 1u * (read_2), _GLF_IDENTITY(1u * (read_2), 0u ^ (_GLF_IDENTITY(1u * (read_2), max(1u * (read_2), 1u * (read_2))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(1u * (read_2), clamp(1u * (read_2), 1u * (read_2), _GLF_IDENTITY(1u * (read_2), 0u ^ (_GLF_IDENTITY(1u * (read_2), max(1u * (read_2), 1u * (read_2))))))), 0u + (_GLF_IDENTITY(1u * (read_2), clamp(1u * (read_2), 1u * (read_2), _GLF_IDENTITY(1u * (read_2), 0u ^ (_GLF_IDENTITY(1u * (read_2), _GLF_IDENTITY(max(1u * (read_2), 1u * (read_2)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(max(1u * (read_2), 1u * (read_2)), 1u * (max(1u * (read_2), 1u * (read_2)))), 1u), _GLF_IDENTITY(uvec2(uvec4(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(max(1u * (read_2), 1u * (read_2)), 1u * (max(1u * (read_2), 1u * (read_2)))), 1u), min(uvec2(_GLF_IDENTITY(max(1u * (read_2), 1u * (read_2)), 1u * (max(1u * (read_2), 1u * (read_2)))), 1u), uvec2(_GLF_IDENTITY(max(1u * (read_2), 1u * (read_2)), 1u * (max(1u * (read_2), 1u * (read_2)))), 1u))), 0u, 1u)), uvec2(uvec2(uvec2(uvec4(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(max(1u * (read_2), 1u * (read_2)), 1u * (max(1u * (read_2), 1u * (read_2)))), 1u), min(uvec2(_GLF_IDENTITY(max(1u * (read_2), 1u * (read_2)), 1u * (max(1u * (read_2), 1u * (read_2)))), 1u), uvec2(_GLF_IDENTITY(max(1u * (read_2), 1u * (read_2)), 1u * (max(1u * (read_2), 1u * (read_2)))), 1u))), 0u, 1u)))))))))))))))))) + 0u)) / 1u))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((vec3(319.494, 5.0, -7.6) * vec3(-1.5, 20.15, -4.2)).y)), float(injectionSwitch.y), bool(true))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec3(next_virtual_gid, 0u, 1u), (uvec3(next_virtual_gid, 0u, 1u)) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))], uint(_GLF_IDENTITY(read_1, 1u * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) - 0u)) << 0u)) >> 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) - 0u)) << 0u)) >> 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(155019u) : read_1)), read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(155019u) : read_1)), read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(155019u) : read_1)), read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (read_1) - 0u))), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) - 0u)) << 0u)) >> 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u, ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u) - 0u), 1u, 1u)), max(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u, ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u) - 0u), 1u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u, ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u) - 0u), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u, ((_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u) - 0u), 1u, 1u))) | 0u)))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u))))) ^ 0u)) ^ 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, read_1), clamp(clamp(read_1, read_1, read_1), clamp(read_1, read_1, read_1), clamp(read_1, read_1, read_1)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 0u))), clamp(read_1, read_1, read_1))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, read_1), clamp(clamp(read_1, read_1, read_1), clamp(read_1, read_1, read_1), clamp(read_1, read_1, read_1)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 0u))), clamp(read_1, read_1, read_1))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, read_1), clamp(clamp(read_1, read_1, read_1), clamp(read_1, read_1, read_1), clamp(read_1, read_1, read_1)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 0u))), clamp(read_1, read_1, read_1))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)), clamp(read_1, read_1, read_1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), clamp(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) * 1u)) << 0u))), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u), (0u ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)))))) >> 0u) ^ 0u))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, (read_1) - 0u), read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (read_1))) << 0u)) | (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(read_1, 0u, 1u), (uvec3(read_1, 0u, 1u)) << uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(read_1, 0u, 1u), (uvec3(read_1, 0u, 1u)) << uvec3(0u, 0u, 0u)))) - 0u)))), read_1, read_1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u), clamp(read_1, read_1, read_1)))), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, read_1), 0u + (clamp(read_1, read_1, read_1))))) << 0u)) >> 0u)) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.4) : 0.0)))), injectionSwitch.x), mix(float(_GLF_FUZZED(-3958.0975)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), bool(true))), _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0)), min(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-3958.0975)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-3958.0975)), mix(float(float(_GLF_FUZZED(-3958.0975))), float(_GLF_FUZZED((true ? 13.69 : 646.861))), bool(false))), float(_GLF_FUZZED(-3958.0975)), float(_GLF_FUZZED(-3958.0975)))), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 0.0, 1.0)), (true ? float(vec3(1.0, 0.0, 1.0)) : _GLF_FUZZED(-4.6)))))) * (_GLF_ZERO(0.0, injectionSwitch.x)))), bool(true))), _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0)), (float(vec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-3958.0975)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), bool(true))), _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0))) * 1.0), float(vec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-3958.0975)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), bool(true))), _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), 0.0)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), min(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, read_1), ~ (~ (_GLF_IDENTITY(clamp(read_1, read_1, read_1), (clamp(read_1, read_1, read_1)) << 0u)))))), uint(uvec4(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), 0u, 0u, 1u)))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, _GLF_IDENTITY(clamp(read_1, read_1, read_1), ~ (~ (_GLF_IDENTITY(clamp(read_1, read_1, read_1), (clamp(read_1, read_1, read_1)) << 0u)))))), uint(uvec4(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), 0u, 0u, 1u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), uint(uvec2((read_1), 0u))) + 0u), _GLF_IDENTITY(clamp(read_1, read_1, read_1), min(_GLF_IDENTITY(clamp(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)), read_1), (clamp(read_1, read_1, read_1)) | (clamp(read_1, read_1, read_1))), clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, 0u ^ (read_1))))) | (_GLF_IDENTITY(read_1, (read_1) << 0u))), read_1, read_1))))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, 0u | (read_1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), min(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), uint(uvec4(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), 0u, 0u, 1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) + 0u), _GLF_IDENTITY(clamp(read_1, read_1, read_1), min(_GLF_IDENTITY(clamp(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, (read_1) | (read_1)))), read_1), _GLF_IDENTITY((clamp(read_1, read_1, read_1)) | (clamp(read_1, read_1, _GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED(workgroup_base)))))))), ((clamp(read_1, read_1, read_1)) | (clamp(read_1, read_1, _GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED(workgroup_base))))))))) | ((clamp(read_1, read_1, read_1)) | (clamp(read_1, read_1, _GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED(workgroup_base))))))))))), clamp(read_1, read_1, read_1))))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), max(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))) << 0u)) >> 0u)) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), _GLF_IDENTITY(clamp(read_1, read_1, read_1), (clamp(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(read_1, 0u | (read_1)))), read_1, read_1)) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(read_1, _GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, ~ (~ (read_1))), read_1)), read_1))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) == read_2) + 1, _GLF_IDENTITY(4, max(4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
