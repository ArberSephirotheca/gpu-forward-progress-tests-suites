#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y))), _GLF_IDENTITY(float(float(clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y))))), (float(float(clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.y)))))) * 1.0)))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0))))))
  return;
 uint subgroup_size = _GLF_IDENTITY(16, clamp(16, 16, 16));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(subgroup_id) : gl_NumWorkGroups.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) << uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) : _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(subgroup_id) : gl_NumWorkGroups.x)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, true && (false))), true, true, _GLF_IDENTITY(false, false || (false))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! ((! (! (! (false))))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))), ! (! ((! (! (! (false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true))))), (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), true)))))) || false)), ! (! (! (! (false)))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), true && (! (true && (false)))))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / abs(vec2(1.0, 1.0))))).y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(false)))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(false)))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), true))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(false)))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false)))), true))))), false, false, false)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) >> 0u)) ^ 0u) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY((gl_WorkGroupSize[1]), uint(uvec2((gl_WorkGroupSize[1]), 1u))) + 0u), gl_WorkGroupSize[2])).x) / 1u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 1u * (_GLF_FUZZED(subgroup_size)))))), 0u | (~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) ^ 0u)) >> 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u)))))).x)) ^ ((0u & 7312u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))) / 1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u)))))).x)) ^ ((0u & 7312u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))) / 1u, (_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u)))))).x)) ^ ((0u & 7312u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))) / 1u) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u)))))).x)) ^ ((0u & 7312u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))) / 1u)), (1u | 0u))), clamp(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u)))))).x)) ^ ((0u & 7312u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))) / 1u, (_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u)))))).x)) ^ ((0u & 7312u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))) / 1u) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u)))))).x)) ^ ((0u & 7312u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))) / 1u)), (1u | 0u))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u)))))).x)) ^ ((0u & 7312u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))) / 1u, (_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u)))))).x)) ^ ((0u & 7312u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))) / 1u) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u)))))).x)) ^ ((0u & 7312u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))) / 1u)), (1u | 0u))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u)))))).x)) ^ ((0u & 7312u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))) / 1u, (_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u)))))).x)) ^ ((0u & 7312u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))) / 1u) | (_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), _GLF_IDENTITY(uvec3(6u), max(uvec3(6u), uvec3(6u)))))).x)) ^ ((0u & 7312u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)))) / 1u)), (1u | 0u)))))) : _GLF_FUZZED(subgroup_size)))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), 0u | _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, sqrt(abs(0.0)), abs(1.0)), (_GLF_IDENTITY(vec4(0.0, 1.0, sqrt(abs(0.0)), abs(1.0)), (vec4(0.0, 1.0, sqrt(abs(0.0)), abs(1.0))) * mat4(1.0))) - tan(vec4(0.0, 0.0, 0.0, 0.0))))), injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))), ((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, sqrt(abs(0.0)), abs(1.0)), (_GLF_IDENTITY(vec4(0.0, 1.0, sqrt(abs(0.0)), abs(1.0)), (vec4(0.0, 1.0, sqrt(abs(0.0)), abs(1.0))) * mat4(1.0))) - tan(vec4(0.0, 0.0, 0.0, 0.0))))), injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size)))))) | ((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, sqrt(abs(0.0)), abs(1.0)), (_GLF_IDENTITY(vec4(0.0, 1.0, sqrt(abs(0.0)), abs(1.0)), (vec4(0.0, 1.0, sqrt(abs(0.0)), abs(1.0))) * mat4(1.0))) - tan(vec4(0.0, 0.0, 0.0, 0.0))))), injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (1u ^ 1u) | (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))), max((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)))).x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (_GLF_IDENTITY(true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(uint(uvec3(true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec3(true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u))))))))) * 1u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))), clamp(_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), min(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (~ (~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))))))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) | (_GLF_FUZZED(subgroup_size)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), (~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))))) | (~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))))))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), 0u | _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)))) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))), max((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), min(_GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), (gl_WorkGroupSize.x), (gl_WorkGroupSize.x))), (gl_WorkGroupSize.x))) | 0u)) << 0u)) / 1u, (_GLF_IDENTITY(true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))) / 1u : _GLF_FUZZED(subgroup_size), max(true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))) / 1u : _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))) / 1u : _GLF_FUZZED(subgroup_size), (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))) / 1u : _GLF_FUZZED(subgroup_size)) + 0u))))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size)))))))) * 1u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) >> 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, (_GLF_IDENTITY(true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size), (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, max(1u, 1u)), (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))) * 1u)))))))))))), max((_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), 0u | _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << _GLF_IDENTITY(0u, 1u * (0u)))) / 1u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u) / 1u : _GLF_FUZZED(subgroup_size))))), max((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY(0u, max(0u, 0u)))) << 0u)) / 1u, (_GLF_IDENTITY(true, true && (true)) ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << (0u | 0u)))) / 1u : _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 1u, 1u)), clamp(uint(uvec3(gl_WorkGroupSize.x, 1u, 1u)), uint(uvec3(gl_WorkGroupSize.x, 1u, 1u)), uint(uvec3(gl_WorkGroupSize.x, 1u, 1u)))))) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)))) / _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(subgroup_size)))))))) * 1u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), min(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) : _GLF_FUZZED(169710u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec2(gl_WorkGroupSize.x, 1u)))) ^ 0u)) / 1u : _GLF_FUZZED(subgroup_size)))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))).x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(0u | _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))), max((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size)))))))) * 1u), (0u | _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED((uvec3(150240u, 29774u, 185451u) ^ uvec3(87615u, 37854u, 195362u))) : _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))).x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, _GLF_IDENTITY((true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size)), (_GLF_IDENTITY((true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size)), 0u ^ ((true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))) | (_GLF_IDENTITY((true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size)), max(_GLF_IDENTITY((true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size)), ((true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))) << 0u), (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))))))), max((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u, _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u, 1u, 0u, 0u)), (uint(uvec4((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u, 1u, 0u, 0u))) / 1u))) ^ 0u))) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size)))))))) * 1u)) - 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), gl_WorkGroupSize.x))) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))))))), 0u | (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))))))))))))))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), 0u | _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))), max((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) / 1u : _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size)))))))) * 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))))))))))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))))))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))))))))))))) >> 0u)), max((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (_GLF_IDENTITY(true, true && (true)) ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), max((_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (_GLF_IDENTITY(true, true && (true)) ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (_GLF_IDENTITY(true, true && (true)) ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))))), 0u | _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | 0u) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec3(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))))) / 1u : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(max((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size)))))), (max((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, (gl_WorkGroupSize.x) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec4(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u, 1u))))) / 1u : _GLF_FUZZED(subgroup_size))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)))) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u : _GLF_FUZZED(subgroup_size))))))) / 1u))) * 1u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 1u, 0u, 0u), max(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 1u, 0u, 0u), (uvec4((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 1u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 1u, 0u, 0u))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, (_GLF_IDENTITY(true ? (gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, (1u) + 0u) : _GLF_FUZZED(subgroup_size), (true ? (gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, (1u) + 0u) : _GLF_FUZZED(subgroup_size)) * 1u)))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x) : _GLF_FUZZED(atomicMax(num_workgroup, subgroup_id)))) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(107186u) : 1u)), (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_FUZZED(subgroup_size)))))))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (_GLF_IDENTITY(true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size), 0u ^ (_GLF_IDENTITY(true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size), ~ (~ (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))))))) ^ 0u)))), 0u | _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) / 1u : _GLF_FUZZED(subgroup_size)))), ((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) / 1u : _GLF_FUZZED(subgroup_size))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) / 1u : _GLF_FUZZED(subgroup_size))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))).x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))).x))) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u))) / 1u : _GLF_FUZZED(subgroup_size))))), max((~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u, clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)))) / 1u, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), _GLF_IDENTITY((gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY((gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ ((gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u, 1u))))))) / 1u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) << 0u))))), (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u))) / 1u : _GLF_FUZZED(subgroup_size)))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u))) / 1u : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u))) / 1u : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) << 0u)) / 1u, (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((gl_WorkGroupSize.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u))) / 1u : _GLF_FUZZED(subgroup_size)))))))))) * 1u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(0u, uint(uint(0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))) ^ 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size))))))), 0u | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), clamp(~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, (true ? (gl_WorkGroupSize.x) / 1u : _GLF_FUZZED(subgroup_size)))))))))))))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))))) / _GLF_IDENTITY(1u, (1u) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))) >> uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x) / 1u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) << (0u ^ 0u))) / 1u) / 1u))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) / 1u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))) | 0u)))), min(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) / 1u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))) | 0u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) / 1u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))) | 0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)), (uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u))) ^ 0u)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_WorkGroupSize[1]), clamp(uint(gl_WorkGroupSize[1]), uint(gl_WorkGroupSize[1]), _GLF_IDENTITY(uint(gl_WorkGroupSize[1]), (uint(gl_WorkGroupSize[1])) | (uint(gl_WorkGroupSize[1])))))), clamp(uint(uint(gl_WorkGroupSize[1])), uint(uint(gl_WorkGroupSize[1])), uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(1, 0 | (1))]))))), gl_WorkGroupSize[2]))) >> uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, (1) >> 0)], gl_WorkGroupSize[2])).x) / 1u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) / 1u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), max(~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))))).x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u))) >> 0u) / 1u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))) | 0u)))))), (0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) / 1u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), max(~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))))).x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u))) >> 0u) / 1u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))) | 0u))))))) | (0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) / 1u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), max(~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))))).x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u))) >> 0u) / 1u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))) | 0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize.x : _GLF_FUZZED((subgroup_id | num_workgroup))))) / 1u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u)))))))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize.x : _GLF_FUZZED((subgroup_id | num_workgroup))))) / 1u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u)))))))) ^ 0u)))) | 0u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))).x) / 1u), (0u ^ 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 1u)), uint(uvec2(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 1u)), 0u)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u)), ~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u))))))) / 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (0u ^ 0u) + (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(122158u, 57387u, 42907u)))).x) * 1u)))) + 0u)) / 1u))))) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))))) / _GLF_IDENTITY(1u, (1u) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))) >> uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x) / 1u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) << (0u ^ 0u))) / 1u) / 1u))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) / 1u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))) | 0u)))), min(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) / 1u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))) | 0u)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) / 1u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))) | 0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)), (uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u))) ^ 0u)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_WorkGroupSize[1]), clamp(uint(gl_WorkGroupSize[1]), uint(gl_WorkGroupSize[1]), _GLF_IDENTITY(uint(gl_WorkGroupSize[1]), (uint(gl_WorkGroupSize[1])) | (uint(gl_WorkGroupSize[1])))))), clamp(uint(uint(gl_WorkGroupSize[1])), uint(uint(gl_WorkGroupSize[1])), uint(uint(gl_WorkGroupSize[_GLF_IDENTITY(1, 0 | (1))]))))), gl_WorkGroupSize[2]))) >> uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, (1) >> 0)], gl_WorkGroupSize[2])).x) / 1u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) / 1u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), max(~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))))).x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u))) >> 0u) / 1u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))) | 0u)))))), (0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) / 1u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), max(~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))))).x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u))) >> 0u) / 1u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))) | 0u))))))) | (0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x))) / 1u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), max(~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))))).x, (gl_WorkGroupSize.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u))) >> 0u) / 1u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))) | 0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize.x : _GLF_FUZZED((subgroup_id | num_workgroup))))) / 1u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u)))))))) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize.x : _GLF_FUZZED((subgroup_id | num_workgroup))))) / 1u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x) / 1u)))))))) ^ 0u)))) | 0u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u))) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u)))).x) / 1u), (0u ^ 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 1u)), uint(uvec2(uint(uvec4(gl_WorkGroupSize.x, 1u, 1u, 1u)), 0u)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u)), ~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u))))))) / 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u), (0u ^ 0u) + (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(122158u, 57387u, 42907u)))).x) * 1u)))) + 0u)) / 1u))))) * 1u))) >> 0u)) << (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(41625u) : uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u)))) | (_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) | (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))), clamp(uint(_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(329.669), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(16.03)), bvec2(true, false))).y)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 0.0))))).y)), _GLF_IDENTITY(0u, min(0u, 0u)))))) | (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), uint(_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))))) | (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), max(_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), _GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))) | (uvec4(1u, 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)), 0u)))), (uint(_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), max(_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), _GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))) | (uvec4(1u, 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)), 0u))))) | (uint(_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), max(_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), _GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))) | (uvec4(1u, 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)), 0u))))))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ (1u)) - 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2((~ (1u)) - 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) | 0u))), clamp(uint(uvec2(_GLF_IDENTITY((~ (1u)), 1u * ((~ (1u)))) - 0u, 1u)), uint(uvec2((~ (_GLF_IDENTITY(1u, ~ (~ (1u))))) - 0u, 1u)), uint(uvec2((~ (1u)) - 0u, 1u)))), max(_GLF_IDENTITY(uint(uvec2((~ (1u)) - 0u, 1u)), clamp(uint(uvec2(_GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(1u * ((~ (1u))), uint(uint(1u * ((~ (1u))))))) - 0u, 1u)), uint(uvec2((~ (_GLF_IDENTITY(1u, ~ (~ (1u))))) - 0u, 1u)), uint(_GLF_IDENTITY(uvec2((~ (1u)) - 0u, 1u), uvec2(0u, 0u) ^ (uvec2((~ (1u)) - 0u, 1u)))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((~ (1u)) - 0u, ((~ (1u)) - 0u) << 0u), 1u)), clamp(uint(uvec2(_GLF_IDENTITY((~ (1u)), 1u * ((~ (1u)))) - 0u, 1u)), uint(uvec2((~ (_GLF_IDENTITY(1u, ~ (~ (1u))))) - 0u, 1u)), uint(uvec2((~ (1u)) - 0u, 1u))))))))))))), uint(1u))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), false, true, true)))))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED((28.34 + -950.485))), float(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(7.9)), float((injectionSwitch)[0]), bool(true)))), bool(true))), (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-69.39)), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0)))), bool(true))), 1.0))))[1]), vec2(_GLF_FUZZED((1.8 - -44.49)), _GLF_FUZZED(1.4)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), ! (! (! (false))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), true, false))), false || (_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (false) || false)))) && true), true, false))), false || (_GLF_IDENTITY(false, (false) || false))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(uint(uint(workgroup_size * workgroup_id)), clamp(uint(_GLF_IDENTITY(uint(workgroup_size * workgroup_id), (uint(workgroup_size * workgroup_id)) - 0u)), uint(uint(workgroup_size * workgroup_id)), uint(uint(workgroup_size * workgroup_id)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u ^ (_GLF_IDENTITY(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), ~ (~ (min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u);
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u));
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-61.71), _GLF_FUZZED(397.781)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (false ? _GLF_FUZZED(28.90) : _GLF_IDENTITY(0.0 + (injectionSwitch.x), max(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x)))))), mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(workgroup_size)) : injectionSwitch.x))), clamp((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(workgroup_size)) : injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(workgroup_size)) : injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(workgroup_size)) : injectionSwitch.x)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))) : injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(workgroup_size)) : injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(float(workgroup_size)) : injectionSwitch.x))))))), float(_GLF_FUZZED(_GLF_IDENTITY(6.1, (true ? 6.1 : _GLF_FUZZED(-3147.1069))))), bool(false))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), mix(float((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), float(_GLF_FUZZED(-40.68)), bool(false)))), 0.0, 1.0)))), bool(true))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-690.669) : injectionSwitch.y), max((false ? _GLF_FUZZED(-690.669) : injectionSwitch.y), _GLF_IDENTITY((false ? _GLF_FUZZED(-690.669) : injectionSwitch.y), max((false ? _GLF_FUZZED(-690.669) : injectionSwitch.y), (false ? _GLF_FUZZED(-690.669) : injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) * sqrt(vec2(1.0, 1.0)))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, abs(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0))))))) || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, true))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false, false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (true ? injectionSwitch.x : _GLF_FUZZED(length(2.4)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY((bool(bvec2(false, false))) || false, bool(bvec3(_GLF_IDENTITY((bool(bvec2(false, false))) || false, ! (! ((bool(bvec2(false, false))) || false))), true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, cos(0.0), 0.0))), injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(length(2.4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8845.1764) : _GLF_FUZZED(length(2.4)))), clamp(true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(length(2.4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8845.1764) : _GLF_FUZZED(length(2.4)))), true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(length(2.4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8845.1764) : _GLF_FUZZED(length(2.4)))), true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(length(2.4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8845.1764) : _GLF_FUZZED(length(2.4))))))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(length(2.4))), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED((vec2(89.50, 2958.3794)))))).x : _GLF_FUZZED(length(2.4))), _GLF_IDENTITY(min((true ? injectionSwitch.x : _GLF_FUZZED(length(2.4))), (true ? injectionSwitch.x : _GLF_FUZZED(length(2.4)))), (min((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(length(2.4)), clamp(_GLF_FUZZED(length(2.4)), _GLF_FUZZED(length(2.4)), _GLF_FUZZED(length(2.4))))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(length(2.4)), mix(float(_GLF_FUZZED(-7.3)), float(_GLF_FUZZED(length(2.4))), bool(true)))))) / 1.0)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(length(2.4), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(length(2.4), (length(2.4)) + 0.0), 0.0, 1.0, 0.0)), float(mat3(float(mat2(_GLF_IDENTITY(length(2.4), (length(2.4)) + 0.0), 0.0, 1.0, 0.0)), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)))))), (true ? injectionSwitch.x : _GLF_FUZZED(length(2.4)))))) + abs(0.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(65.06)), vec2(_GLF_FUZZED((+ 0.3)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), clamp(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) * mat2(1.0))))))).x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(length(2.4)), _GLF_IDENTITY((_GLF_FUZZED(length(2.4))) - 0.0, clamp(_GLF_IDENTITY((_GLF_FUZZED(length(2.4))) - 0.0, min(_GLF_IDENTITY((_GLF_FUZZED(length(2.4))) - 0.0, 1.0 * ((_GLF_FUZZED(length(2.4))) - 0.0)), (_GLF_FUZZED(length(2.4))) - 0.0)), (_GLF_FUZZED(length(2.4))) - 0.0, _GLF_IDENTITY((_GLF_FUZZED(length(2.4))) - 0.0, min((_GLF_FUZZED(length(2.4))) - 0.0, (_GLF_FUZZED(length(2.4))) - 0.0))))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false)) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY(2, (2) | 0)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(0u, 0u | (0u)) | _GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY(min(uint(2), uint(2)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(min(uint(2), uint(2)), (true ? min(uint(2), uint(2)) : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(min(uint(2), uint(2)), (true ? min(uint(2), uint(2)) : _GLF_FUZZED(virtual_gid)))) | 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, 0 ^ (2))), (uint(2)) >> 0u), _GLF_IDENTITY(min(uint(2), uint(2)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(min(uint(2), uint(2)), (true ? min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, ~ (~ (2)))), (uint(2)) - 0u), uint(2)) : _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) - 0u))))))), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(min(uint(2), uint(2)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(min(uint(2), uint(2)), (true ? min(uint(2), uint(2)) : _GLF_FUZZED(virtual_gid))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(2), _GLF_IDENTITY(min(uint(2), uint(2)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(min(uint(2), _GLF_IDENTITY(uint(2), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(2) : _GLF_FUZZED(workgroup_id)))), max(min(uint(2), _GLF_IDENTITY(uint(2), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(2) : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(min(uint(2), _GLF_IDENTITY(uint(2), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(2) : _GLF_FUZZED(workgroup_id)))), (min(uint(2), _GLF_IDENTITY(uint(2), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(2) : _GLF_FUZZED(workgroup_id))))) - 0u))), (true ? min(uint(2), uint(2)) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)))))))), min((_GLF_IDENTITY(uint(2), _GLF_IDENTITY(min(uint(2), uint(2)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-0.0, min(-0.0, -0.0))) : 1.0)), injectionSwitch.y)) * (_GLF_IDENTITY(min(uint(2), uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), ~ (~ (ivec2(2, 0)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), ~ (~ (ivec2(2, 0)))))), (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), ~ (~ (ivec2(2, 0))))))) >> 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), ~ (~ (ivec2(2, 0)))))), (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), ~ (~ (ivec2(2, 0))))))) >> 0))) >> 0)))) << 0))), (true ? min(uint(2), uint(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, 0 ^ (2)))))) : _GLF_FUZZED(virtual_gid))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), _GLF_IDENTITY(min(uint(2), uint(2)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(min(uint(2), uint(2)), (true ? min(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) | 0u)) : _GLF_FUZZED(virtual_gid)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(5), int(5)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(4, (4) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0)))), 64, _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(0)) << 0))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(0)) << 0)))), (int(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(0)) << 0))))) << 0))));
}
