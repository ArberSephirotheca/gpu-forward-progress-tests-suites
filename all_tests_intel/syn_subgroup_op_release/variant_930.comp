#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 float _f0;
 uint subgroup_local_id;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 bvec2 _f1;
 bvec2 _f2;
 vec4 _f3;
 bvec2 _f4;
 ivec4 _f5;
 uint _f6;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 mat4x2 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 mat4 _f1;
 uint _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 uvec3 _f2;
 _GLF_struct_6 _f3;
 mat4x3 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 bvec2 _f1;
 vec3 _f2;
 ivec4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 mat2x4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_3 {
 uint subgroup_size;
 int _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 mat4x3 _f1;
 mat2 _f2;
 uvec2 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 uint next_virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(-4.6)), bvec2(false, false))))), (injectionSwitch) * vec2(1.0, 1.0)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec3(bool(bvec3(_GLF_DEAD(false), true, false)), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bvec3(false || (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), true, true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_3(gl_SubgroupSize, 1, _GLF_struct_1(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.3) : 1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), ivec3(1), mat3x4(1.0), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2637.9860)), bool(false))), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * mat3(1.0)))))), ivec2(1)), _GLF_struct_2(ivec3(1), bvec2(true), vec3(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-3.9, (false ? _GLF_FUZZED(397.711) : -3.9)))))), ivec4(1), bvec4(true))), mat4x3(1.0), _GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), uvec2(_GLF_IDENTITY(1u, 1u * (1u))), _GLF_struct_7(_GLF_struct_4(vec2(1.0), mat4(1.0), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | 0u)), _GLF_struct_5(mat2x3(1.0), mat4x2(1.0), bvec3(true)), uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | (1u))))), _GLF_IDENTITY(1u, (1u) << 0u)))), _GLF_struct_6(mat3x2(1.0), bvec2(true), bvec2(true), vec4(1.0), bvec2(true), ivec4(1), 1u), mat4x3(1.0), vec3(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(1.0, gl_SubgroupInvocationID);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(vec3(min(injectionSwitch, injectionSwitch), 1.0)), min(vec2(vec3(min(injectionSwitch, injectionSwitch), 1.0)), vec2(vec3(min(injectionSwitch, injectionSwitch), 1.0)))))), injectionSwitch)).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-36583, 95632))))), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-885.312) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(45.51)), float(injectionSwitch.y), bool(true)))), clamp((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-36583, 95632))))), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-885.312) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(45.51)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-36583, 95632))))), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-885.312) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(45.51)), float(injectionSwitch.y), bool(true)))), mix(float((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-36583, 95632))))), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-885.312) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(45.51)), float(injectionSwitch.y), bool(true))))), float(_GLF_FUZZED(12.40)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-36583, 95632))))), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-885.312) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(45.51)), float(injectionSwitch.y), bool(true)))), min((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-36583, 95632))))), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-885.312) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(45.51)), float(injectionSwitch.y), bool(true)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-36583, 95632))))), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-885.312) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(45.51)), float(injectionSwitch.y), bool(true)))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-82.97, min(_GLF_IDENTITY(-82.97, (true ? -82.97 : _GLF_FUZZED(-2.3))), -82.97))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-549.149)), bool(false))), 1.0)))), 0.0), (mat4x2(injectionSwitch, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)) * mat4(1.0))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-144.678)), _GLF_IDENTITY(bool(false), false || (bool(false)))))) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, 1.0)))), 0.0), (mat4x2(injectionSwitch, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.7)), bool(false))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)) * mat4(1.0))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)), (false ? _GLF_FUZZED(-20.97) : determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), 0.0)))), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), (mat4x2(injectionSwitch, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)) * mat4(1.0))), min(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)), (false ? _GLF_FUZZED(-20.97) : determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), 0.0)))), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), (mat4x2(injectionSwitch, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)) * mat4(1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)), (false ? _GLF_FUZZED(-20.97) : determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), 0.0)))), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), (mat4x2(injectionSwitch, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)) * mat4(1.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)), (false ? _GLF_FUZZED(-20.97) : determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), 0.0)))), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), (mat4x2(injectionSwitch, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)) * mat4(1.0))))))))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, determinant(mat2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0)), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), (mat4x2(injectionSwitch, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(transpose(mat2(-1207.9582, -9.4, -9748.3399, -51.48))) : mat2(0.0, 0.0, 1.0, 0.0)))), min(determinant(mat2(0.0, 0.0, 1.0, 0.0)), determinant(mat2(0.0, 0.0, 1.0, 0.0)))), 0.0, 0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) - cross(vec3(-8.6, -55.66, -2.7), vec3(-8.6, -55.66, -2.7))), 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) - cross(vec3(-8.6, -55.66, -2.7), vec3(-8.6, -55.66, -2.7))), 0.0, 1.0, 0.0, 0.0, 0.0))))))))), 0.0)) * mat4(1.0)))))).x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-885.312, (true ? -885.312 : _GLF_FUZZED(fma(cosh(-7.3), -2864.7435, 2125.8715)))), (-885.312) - 0.0)), min(_GLF_FUZZED(-885.312), _GLF_FUZZED(-885.312))) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(45.51)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-9.2, 52.33)) : injectionSwitch, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-9.2, 52.33)) : injectionSwitch, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-9.2, 52.33)) : injectionSwitch, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-9.2, 52.33)) : injectionSwitch)))).y), float(vec3(float(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-9.2, 52.33)) : injectionSwitch)).y), 0.0, 1.0))), bool(true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), true, true)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false) || false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((false) || false, false, true)), bvec3(bvec4(bvec3(bvec3((false) || false, false, true)), true)))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3((false) || false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((false) || false, false, true)), bvec3(bvec4(bvec3(bvec3((false) || false, false, true)), true)))))), true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))), ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) / (1u | 0u), (_GLF_IDENTITY((workgroup_id) / (1u | 0u), _GLF_IDENTITY(uint(uvec2((workgroup_id) / (1u | 0u), 0u)), uint(uvec3(_GLF_IDENTITY(uint(uvec2((workgroup_id) / (1u | 0u), 0u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec2((workgroup_id) / (1u | 0u), 0u)))), 1u, 0u))))) | ((workgroup_id) / (1u | 0u)))), (_GLF_IDENTITY(false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : _GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))) * workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u), _GLF_IDENTITY((false ? _GLF_FUZZED((true ? _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_size, (_GLF_struct_replacement_8._f0.subgroup_size) | (_GLF_struct_replacement_8._f0.subgroup_size)) : workgroup_id)) : workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), workgroup_size)) * workgroup_id), 0u | (_GLF_IDENTITY((false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : workgroup_size * workgroup_id), ((false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : workgroup_size * workgroup_id)) >> 0u)))) - 0u) | (false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), (_GLF_IDENTITY(false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : workgroup_size * workgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : workgroup_size * workgroup_id, min(false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : workgroup_size * workgroup_id, _GLF_IDENTITY(false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : workgroup_size * workgroup_id, 1u * _GLF_IDENTITY((false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : workgroup_size * workgroup_id), max((false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : workgroup_size * workgroup_id), (false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : workgroup_size * workgroup_id))))))) | (false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : workgroup_size * workgroup_id))) >> 0u), false ? _GLF_FUZZED((true ? _GLF_struct_replacement_8._f0.subgroup_size : workgroup_id)) : workgroup_size * workgroup_id, false ? _GLF_FUZZED((true ? _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_size, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_size, (_GLF_struct_replacement_8._f0.subgroup_size) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) / 1.0)))))) : workgroup_id)) : workgroup_size * workgroup_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_8._f0.subgroup_size), (true ? (_GLF_struct_replacement_8._f0.subgroup_size) : _GLF_FUZZED(workgroup_base))) ^ 0u) + _GLF_struct_replacement_9.subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(uvec2(1u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_size, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_struct_replacement_8._f0.subgroup_size : _GLF_FUZZED(169849u))), min(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_size, (true ? _GLF_struct_replacement_8._f0.subgroup_size : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, (subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size) >> 0u), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, (subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size) >> 0u), workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, (subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size) >> 0u), workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, (subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size) >> 0u))), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : (workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size)))))))), clamp((workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, (subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size) >> 0u), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, clamp(workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size))), (false ? _GLF_FUZZED(virtual_gid) : (workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size)))))))), uint(uvec4((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, (subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size) >> 0u), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, clamp(workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size))), (false ? _GLF_FUZZED(virtual_gid) : (workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size)))))))), 0u, 1u, 1u))), (workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, (subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size) >> _GLF_IDENTITY(0u, (0u) * 1u)), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : (workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size)))))))), (workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, (subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size) >> 0u), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), false))))) ? _GLF_FUZZED(virtual_gid) : (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, _GLF_IDENTITY(max(subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size), (max(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size)), subgroup_id * _GLF_struct_replacement_8._f0.subgroup_size)) | 0u)), 0u ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_size, (false ? _GLF_FUZZED(133344u) : _GLF_struct_replacement_8._f0.subgroup_size)))))) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_struct_replacement_9.subgroup_local_id) + 0u), 0u ^ (_GLF_struct_replacement_9.subgroup_local_id)), _GLF_struct_replacement_9.subgroup_local_id, _GLF_struct_replacement_9.subgroup_local_id)) + 1), uint(uvec4((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, 0u ^ (_GLF_struct_replacement_9.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_struct_replacement_9.subgroup_local_id) << ((0u & 127085u) | 0u)), _GLF_struct_replacement_9.subgroup_local_id)) + 1), 1u, 0u, 0u))) % _GLF_struct_replacement_8._f0.subgroup_size), (63622u & 0u) | (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_struct_replacement_9.subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_struct_replacement_9.subgroup_local_id, _GLF_struct_replacement_9.subgroup_local_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, 0u | (_GLF_struct_replacement_9.subgroup_local_id))) | (_GLF_struct_replacement_9.subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, 0u ^ (_GLF_struct_replacement_9.subgroup_local_id)), _GLF_struct_replacement_9.subgroup_local_id, _GLF_struct_replacement_9.subgroup_local_id)), max(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, 0u ^ (_GLF_struct_replacement_9.subgroup_local_id)), _GLF_struct_replacement_9.subgroup_local_id, _GLF_struct_replacement_9.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) ^ (_GLF_struct_replacement_9.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, clamp(_GLF_struct_replacement_9.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, min(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, ~ (~ (_GLF_struct_replacement_9.subgroup_local_id))), _GLF_struct_replacement_9.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (true ? _GLF_struct_replacement_9.subgroup_local_id : _GLF_FUZZED(bitfieldInsert(workgroup_base, workgroup_id, -40630, -48743)))))), _GLF_struct_replacement_9.subgroup_local_id)))), _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_struct_replacement_9.subgroup_local_id), _GLF_IDENTITY(uint(uvec3((_GLF_struct_replacement_9.subgroup_local_id), 0u, 0u)), (uint(uvec3((_GLF_struct_replacement_9.subgroup_local_id), 0u, 0u))) >> 0u))), _GLF_struct_replacement_9.subgroup_local_id, _GLF_struct_replacement_9.subgroup_local_id)))) + 1) % _GLF_struct_replacement_8._f0.subgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, true && (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
  barrier();
 if(_GLF_struct_replacement_9.subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_size, 0u | (_GLF_struct_replacement_8._f0.subgroup_size)))
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_0.next_virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_0.next_virtual_gid), (~ _GLF_IDENTITY((_GLF_struct_replacement_0.next_virtual_gid), min((_GLF_struct_replacement_0.next_virtual_gid), (_GLF_struct_replacement_0.next_virtual_gid)))) ^ 0u)))], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, true))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[_GLF_struct_replacement_0.next_virtual_gid], uint(2), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-1568))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), true, false, _GLF_IDENTITY(false, (false) || false)))) || false))) && _GLF_IDENTITY(true, true && (true))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))), _GLF_IDENTITY(false, (false) && true), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) || false), true, false, false))) && true), true, false, _GLF_IDENTITY(false, (false) || false)))) || false))) && _GLF_IDENTITY(true, true && (true))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))), _GLF_IDENTITY(false, (false) && true), true))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), true, false, _GLF_IDENTITY(false, (false) || false)))) || false))) && _GLF_IDENTITY(true, true && (true))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))), _GLF_IDENTITY(false, (false) && true), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) || false), true, false, false))) && true), true, false, _GLF_IDENTITY(false, (false) || false)))) || false))) && _GLF_IDENTITY(true, true && (true))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))), _GLF_IDENTITY(false, (false) && true), true))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), true, false, _GLF_IDENTITY(false, (false) || false)))) || false))) && _GLF_IDENTITY(true, true && (true))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))), _GLF_IDENTITY(false, (false) && true), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) || false), true, false, false))) && true), true, false, _GLF_IDENTITY(false, (false) || false)))) || false))) && _GLF_IDENTITY(true, true && (true))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))), _GLF_IDENTITY(false, (false) && true), true))))))))), true, true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY((! (! (_GLF_DEAD(false)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))))), ! (! (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))), false, true))) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), true, false)))) && (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
