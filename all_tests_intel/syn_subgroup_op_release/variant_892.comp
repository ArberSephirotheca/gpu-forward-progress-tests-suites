#version 460
struct _GLF_struct_20 {
 vec3 _f0;
 bool _f1;
 mat3x2 _f2;
 mat3x2 _f3;
 uvec3 _f4;
 mat2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_19 {
 uvec3 _f0;
 int _f1;
 mat2 _f2;
 mat3x2 _f3;
 ivec2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_21 {
 _GLF_struct_19 _f0;
 _GLF_struct_20 _f1;
} ;

struct _GLF_struct_17 {
 mat4x3 _f0;
 uint num_workgroup;
 bool _f1;
 mat3x2 _f2;
 mat4x3 _f3;
 mat2x3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_18 {
 mat4x3 _f0;
 _GLF_struct_17 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_18 _f0;
 mat2 _f1;
 _GLF_struct_21 _f2;
 mat3x2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_14 {
 mat2x4 _f0;
 mat2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_15 {
 bool _f0;
 int _f1;
 mat4x2 _f2;
 _GLF_struct_13 _f3;
 float _f4;
 uint subgroup_local_id;
 _GLF_struct_14 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_16 {
 uvec2 _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 mat3x2 _f1;
 uint _f2;
 vec2 _f3;
 ivec3 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 mat4x2 _f2;
 uint _f3;
 uvec2 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 uvec3 _f1;
 float _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 mat3x4 _f1;
 int _f2;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 bvec4 _f1;
 uint _f2;
 mat3x2 _f3;
 mat4x2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_3 {
 bool _f0;
 uint _f1;
 bvec4 _f2;
 ivec3 _f3;
 float _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 uint _f1;
 ivec2 _f2;
 mat2x4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_7 {
 uint subgroup_size;
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 uvec4 _f3;
 uvec2 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 vec4 _f1;
 vec3 _f2;
 vec4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_12 {
 _GLF_struct_1 _f0;
 vec2 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_11 _f3;
 uvec4 _f4;
 bvec3 _f5;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_1(_GLF_struct_0(vec2(1.0), vec4(1.0), vec3(1.0), vec4(1.0), mat2(1.0))), vec2(1.0), _GLF_struct_7(16, _GLF_struct_2(vec4(1.0), 1u, ivec2(1), mat2x4(1.0), uvec2(1u)), _GLF_struct_3(true, 1u, bvec4(true), ivec3(1), 1.0, uvec4(1u)), _GLF_struct_4(mat2x4(1.0), bvec4(true), 1u, mat3x2(1.0), mat4x2(1.0), ivec3(1)), uvec4(1u), uvec2(1u), _GLF_struct_5(ivec4(1), mat3x4(1.0), 1), _GLF_struct_6(uvec3(1u), uvec3(1u), 1.0, uvec3(1u))), _GLF_struct_11(_GLF_struct_8(vec2(1.0)), _GLF_struct_9(bvec3(true), mat3x4(1.0), mat2x3(1.0)), mat4x2(1.0), 1u, uvec2(1u), _GLF_struct_10(ivec4(1), mat3x2(1.0), 1u, vec2(1.0), ivec3(1), ivec4(1))), uvec4(1u), bvec3(true));
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(uvec2(1u), _GLF_struct_15(true, 1, mat4x2(1.0), _GLF_struct_13(mat2x3(1.0), mat3x4(1.0)), 1.0, gl_SubgroupInvocationID, _GLF_struct_14(mat2x4(1.0), mat2(1.0), mat2x4(1.0)), mat2x3(1.0)));
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_18(mat4x3(1.0), _GLF_struct_17(mat4x3(1.0), gl_NumWorkGroups.x, true, mat3x2(1.0), mat4x3(1.0), mat2x3(1.0), mat4(1.0))), mat2(1.0), _GLF_struct_21(_GLF_struct_19(uvec3(1u), 1, mat2(1.0), mat3x2(1.0), ivec2(1), bvec3(true)), _GLF_struct_20(vec3(1.0), true, mat3x2(1.0), mat3x2(1.0), uvec3(1u), mat2(1.0), uvec2(1u))), mat3x2(1.0), ivec4(1));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_12._f2.subgroup_size + _GLF_struct_replacement_16._f1.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_12._f2.subgroup_size + ((_GLF_struct_replacement_16._f1.subgroup_local_id + 1) % _GLF_struct_replacement_12._f2.subgroup_size);
 buf[virtual_gid] = 1;
 if(_GLF_struct_replacement_16._f1.subgroup_local_id + 1 < _GLF_struct_replacement_12._f2.subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(true);
  }
}
