#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) && true)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, sqrt(1.0), 1.0, 1.0, 0.0))) < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : _GLF_FUZZED(injectionSwitch))))) : _GLF_FUZZED(vec2(-9.2, 1.3)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(96.52), _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-287.878)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(vec3(injectionSwitch, 0.0)))) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch)).y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.9)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 uint subgroup_size = _GLF_IDENTITY(16, (16) << 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))).y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)))))), false))))), true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))))) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - 0.0)) - log(1.0)))) || false, false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, _GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(exp(5.9)) : injectionSwitch.y)))) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) || false)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-29.48), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-274.714)), bvec2(true, false))).x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (bool(_GLF_IDENTITY(false, true && (false))))))))), true))))))))))), false, false))))), _GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), mix(vec2(_GLF_FUZZED(21.06), ((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1]), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0], mix(float(_GLF_FUZZED(2979.2748)), float(((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0]), bool(true))), _GLF_FUZZED(5.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), injectionSwitch)).x > injectionSwitch.y))))), false || (_GLF_IDENTITY((true && (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y)))))))))))), ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))))))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (((injectionSwitch.x > injectionSwitch.y))), false, true))))) || false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)))) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, bool(bool(false))), false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))))))))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false))))))))))))) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (false)))), true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, false))))), _GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))))))) || false)))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))))) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))))) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).x > injectionSwitch.y))))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.8), _GLF_FUZZED((-1.9 / -1.8))), bvec2(false, false))).y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)) || false), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))) / 1.0))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (! (((injectionSwitch.x > injectionSwitch.y)) || false))), false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))))), _GLF_IDENTITY(true && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), true && _GLF_IDENTITY((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))), false || (_GLF_IDENTITY((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y)))))))))))), ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))))))), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))))))))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false)))))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), injectionSwitch)).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), injectionSwitch)).x > injectionSwitch.y))) && true) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true && (false)))), true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, false))))), _GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))))))) || false)))), _GLF_IDENTITY(true, false || (true)), false, false)), true && (bool(bvec4(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))))) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))))), _GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))), false || (_GLF_IDENTITY((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y)))))))))))), ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))))))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, false))))), _GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))))))) || false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))))) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))))), _GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))), false || (_GLF_IDENTITY((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y)))))))))))), ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))))))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, false))))), _GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))))))) || false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))))) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true))))))))))), false, false))))), _GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))), false || (_GLF_IDENTITY((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y)))))))))))), ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))))))), bool(bvec3(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) || false, false, _GLF_IDENTITY(false, true && (false)))), true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false, false))))), _GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))))))) || false))))))), false, false))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true)), true && (bool(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), true))))), false || (true)), false, false))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(gl_NumWorkGroups.x, 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), clamp(uvec4(gl_NumWorkGroups, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), uvec4(gl_NumWorkGroups, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), uvec4(gl_NumWorkGroups, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))), (uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), clamp(uvec4(gl_NumWorkGroups, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), uvec4(gl_NumWorkGroups, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), uvec4(gl_NumWorkGroups, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))) ^ uvec3(0u, 0u, 0u))).x, ~ (~ (gl_NumWorkGroups.x)))))), 1u, 1u, 1u)) / uvec4(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))), (true ? _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))) : _GLF_FUZZED(199105u)))) + 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) | 0u), 1u))), uint(_GLF_IDENTITY(uint(uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), max(min(gl_NumWorkGroups, gl_NumWorkGroups), min(gl_NumWorkGroups, gl_NumWorkGroups))), 1u)), (false ? _GLF_FUZZED(uvec3(106871u, 147715u, 80489u)) : uvec3(uvec4(_GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), max(min(gl_NumWorkGroups, gl_NumWorkGroups), min(gl_NumWorkGroups, gl_NumWorkGroups))), 1u)))))).x, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, 1u))), 0u ^ (uint(uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY(1u, 0u | (1u)), 1u, 1u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, _GLF_IDENTITY(0, max(0, 0)) ^ (1))], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, _GLF_IDENTITY(0, max(0, 0)) ^ (_GLF_IDENTITY(1, ~ (~ (1)))))], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(0, max(0, 0)) ^ (1))], gl_WorkGroupSize[2])) / uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) >> (8192 & 0))], _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))), 1u, 1u))[1], gl_WorkGroupSize[2]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((+ uvec3(48933u, 20196u, 17968u))) : uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) >> (8192 & 0))], _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))), 1u, 1u))[1], gl_WorkGroupSize[2]))), uvec3(uvec4(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) ^ uvec3(0u, 0u, 0u)))[1], gl_WorkGroupSize[2]), 0u)))) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))))))))) << uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7297.1386)), float(injectionSwitch.y), bool(true))))))))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, true), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, true), true, true))), true, true))), _GLF_IDENTITY(true, bool(bool(true))))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, true), true, true))), true)))))))))), _GLF_IDENTITY(true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))), true && (true && _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))), false || (! ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false)), (mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-3.2)), min(float(_GLF_FUZZED(-3.2)), float(_GLF_FUZZED(-3.2)))), bool(false))) * 1.0)), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-3.2), mix(float(_GLF_FUZZED((-92.15 * 3610.9738))), float(_GLF_FUZZED(-3.2)), bool(true)))), bool(false)))), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.3), _GLF_FUZZED(45.27)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true)))) - 0.0)))) * 1.0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-3.2), mix(float(_GLF_FUZZED((-92.15 * 3610.9738))), float(_GLF_FUZZED(-3.2)), bool(true)))), bool(false)))), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.3), _GLF_FUZZED(45.27)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true)))) - 0.0)))) * 1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-3.2), mix(float(_GLF_FUZZED((-92.15 * 3610.9738))), float(_GLF_FUZZED(-3.2)), bool(true)))), bool(false)))), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.3), _GLF_FUZZED(45.27)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true)))) - 0.0)))) * 1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-3.2), mix(float(_GLF_FUZZED((-92.15 * 3610.9738))), float(_GLF_FUZZED(-3.2)), bool(true)))), bool(false)))), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.3), _GLF_FUZZED(45.27)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true)))) - 0.0)))) * 1.0)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, true), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, true), true, true))), true, true))), _GLF_IDENTITY(true, bool(bool(true))))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, true), true, true))), true)))))))))), _GLF_IDENTITY(true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))), true && (true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, 0.0 + (0.0))), bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(86.61)), float(injectionSwitch.y), bool(true)))), bool(true))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-3.2), mix(float(_GLF_FUZZED((-92.15 * 3610.9738))), float(_GLF_FUZZED(-3.2)), bool(true)))), bool(false)))), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-3.2, (-3.2) / abs(cos(0.0))))), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.3), _GLF_FUZZED(45.27)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false))), mix(float(_GLF_FUZZED(5456.2345)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false)))), bool(true)))) - 0.0)))) * 1.0)))), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((false), true && ((false))) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.3, -6611.4940)) : injectionSwitch)).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))).y))), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bool((false))))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bool((false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bool((false)))))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bool((false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, _GLF_IDENTITY(0u, (0u) ^ 0u)), (uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 1u, 0u)) - uvec3(0u, 0u, 0u)))))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % subgroup_size);
 _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) | 0u)) + (0u >> _GLF_IDENTITY(uint(3u), uint(3u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false, false), false))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))) | (_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), next_virtual_gid)))), (next_virtual_gid) * 1u), next_virtual_gid, next_virtual_gid))))], uint(_GLF_IDENTITY(2, min(2, 2))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), clamp(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))), min((next_virtual_gid), (next_virtual_gid))), (next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)) | ((next_virtual_gid)))))) >> 0u))), next_virtual_gid), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u))) ^ 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY(((next_virtual_gid)), max(((next_virtual_gid)), ((next_virtual_gid)))), clamp(_GLF_IDENTITY(((next_virtual_gid)), (((next_virtual_gid))) | (((next_virtual_gid)))), (_GLF_IDENTITY((next_virtual_gid), max(_GLF_IDENTITY((next_virtual_gid), 0u ^ ((next_virtual_gid))), (next_virtual_gid)))), ((next_virtual_gid))))))), next_virtual_gid))), ((~ (min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ 0u) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((next_virtual_gid)), (((next_virtual_gid))) | ((_GLF_IDENTITY((next_virtual_gid), uint(uvec3(_GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), 0u + ((next_virtual_gid))))), 1u, 0u)))))), ((next_virtual_gid)), (_GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid))))))))), next_virtual_gid)))) >> 0u), (_GLF_IDENTITY((~ (min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ 0u) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((next_virtual_gid)), (((next_virtual_gid))) | (((next_virtual_gid)))), ((next_virtual_gid)), ((next_virtual_gid))))))), next_virtual_gid))), _GLF_IDENTITY(((~ (min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ 0u) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((next_virtual_gid)), _GLF_IDENTITY((((next_virtual_gid))), min((((next_virtual_gid))), (((next_virtual_gid))))) | (((next_virtual_gid)))), ((next_virtual_gid)), (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | (_GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | ((next_virtual_gid)))) >> 0u))))))))), next_virtual_gid)))) >> 0u, _GLF_IDENTITY(uint(uvec4(((~ _GLF_IDENTITY((min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ 0u) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((next_virtual_gid)), (((next_virtual_gid))) | (((next_virtual_gid)))), ((_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 1u * (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u))))))), ((next_virtual_gid))))))), next_virtual_gid)), ((min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ 0u) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((next_virtual_gid)), (((next_virtual_gid))) | (((next_virtual_gid)))), ((next_virtual_gid)), ((next_virtual_gid))))))), next_virtual_gid))) | (_GLF_IDENTITY((min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ 0u) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((next_virtual_gid)), ((_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) | 0u))) | (((next_virtual_gid)))), ((next_virtual_gid)), ((next_virtual_gid))))))), next_virtual_gid)), ((min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((next_virtual_gid)), (((next_virtual_gid))) | (((next_virtual_gid)))), ((next_virtual_gid)), ((next_virtual_gid))))))), next_virtual_gid))) * 1u))))) >> 0u, 0u, 0u, 0u)), uint(uvec3(uint(uvec4(((~ (_GLF_IDENTITY(min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ 0u) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((next_virtual_gid)), (((next_virtual_gid))) | (((next_virtual_gid)))), ((next_virtual_gid)), ((next_virtual_gid))))))), next_virtual_gid), 0u ^ _GLF_IDENTITY((min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ 0u) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), next_virtual_gid, next_virtual_gid)))), (((next_virtual_gid))) | (((next_virtual_gid)))), ((next_virtual_gid)), ((next_virtual_gid))))))), next_virtual_gid)), (_GLF_IDENTITY((min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ 0u) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), next_virtual_gid, next_virtual_gid)))), (((next_virtual_gid))) | (((next_virtual_gid)))), ((next_virtual_gid)), ((next_virtual_gid))))))), next_virtual_gid)), ((min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ 0u) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), next_virtual_gid, next_virtual_gid)))), (((next_virtual_gid))) | (((next_virtual_gid)))), ((next_virtual_gid)), ((next_virtual_gid))))))), next_virtual_gid))) | (_GLF_IDENTITY((min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ 0u) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), next_virtual_gid, next_virtual_gid)))), (((next_virtual_gid))) | (((next_virtual_gid)))), ((next_virtual_gid)), ((next_virtual_gid))))))), next_virtual_gid)), ((min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ 0u) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), next_virtual_gid, next_virtual_gid)))), (((next_virtual_gid))) | (((next_virtual_gid)))), ((next_virtual_gid)), ((next_virtual_gid))))))), next_virtual_gid))) | ((min(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (0u ^ 0u) ^ _GLF_IDENTITY(((next_virtual_gid)), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), next_virtual_gid, next_virtual_gid)))), (((next_virtual_gid))) | (((next_virtual_gid)))), ((next_virtual_gid)), ((next_virtual_gid))))))), next_virtual_gid))))))) - 0u))))) >> 0u, 0u, 0u, 0u)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u), 0u)))))) / 1u)))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (true)), bool(bool((! (true))))))), bool(bvec2(bool(bool(_GLF_IDENTITY((! (true)), bool(bool((! (true))))))), false)))) || false), bool(bvec4(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (true)), bool(bool((! (true))))))), bool(bvec2(bool(bool(_GLF_IDENTITY((! (true)), bool(bool((! (true))))))), false)))) || false), false, true, false))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
}
